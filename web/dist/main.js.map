{"version":3,"file":"main.js","mappings":"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MAAM,qBAACzB,GAAwByB,EAC3BtT,EAAGwU,eAAe3C,IAClB7R,EAAGyU,mBAAmB5C,EAE9B,E,UIxRQ6C,GAgBAC,GA4DAC,GAoBAC,GAcAC,GAaAC,GAKAC,GASAC,GAKAC,GAMAC,GCpJAC,GCSAC,GA8DAC,G,4SFvEZ,SAAYZ,GACR,wBACA,oBACA,sBACA,gCACA,4CACA,4CACA,yCACA,oBACA,mBACA,qCACA,mCACA,qCACA,sCACH,CAdD,CAAYA,KAAAA,GAAkB,KAgB9B,SAAYC,GACR,wBACA,oBACA,sBACA,gCACA,4CACA,iDACA,iDACA,mDACA,+CACA,iDACA,mBACA,+BACA,qBACA,iCACA,uBACA,mCACA,2BACA,yBACA,yBACA,6BACA,qCACA,mCACA,uBACA,yBACA,uCACA,uBACA,2BACA,6BACA,uBACA,yBACA,2BACA,6BACA,2CACA,6BACA,uBACA,uBACA,yBACA,uBACA,yBACA,uBACA,yBACA,yBACA,2BACA,yBACA,2BACA,yBACA,2BACA,2BACA,6BACA,2BACA,6BACA,2BACA,6BACA,6BACA,+BACA,6BACA,8BACH,CA1DD,CAAYA,KAAAA,GAA0B,KA4DtC,SAAYC,GACR,sBACA,wCACA,wBACA,0CACA,oBACA,sCACA,wBACA,kCACA,2DACA,2DACA,uDACA,qEACA,iDACA,uEACA,+DACA,2EACA,kDACH,CAlBD,CAAYA,KAAAA,GAAgB,KAoB5B,SAAYC,GACR,mDACA,mDACA,2CACA,2CACA,mDACA,iDACA,6CACA,6CACA,2CACA,uDACA,sDACH,CAZD,CAAYA,KAAAA,GAAgB,KAc5B,SAAYC,GACR,kCACA,+CACA,mCACA,+CACA,qEACA,qEACA,qEACA,qEACA,qEACA,oEACH,CAXD,CAAYA,KAAAA,GAAa,KAazB,SAAYC,GACR,0BACA,2BACH,CAHD,CAAYA,KAAAA,GAAgB,KAK5B,SAAYC,GACR,0BACA,4BACA,0DACA,wDACA,wDACA,qDACH,CAPD,CAAYA,KAAAA,GAAgB,KAS5B,SAAYC,GACR,2DACA,kBACH,CAHD,CAAYA,KAAAA,GAAkB,KAK9B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","sources":["webpack://main/webpack/bootstrap","webpack://main/webpack/runtime/define property getters","webpack://main/webpack/runtime/hasOwnProperty shorthand","webpack://main/webpack/runtime/make namespace object","webpack://main/./src/engine/libs/patterns/injectors/Injector.ts","webpack://main/./src/engine/libs/maths/MathError.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector2.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector3.ts","webpack://main/./src/engine/core/input/Input.ts","webpack://main/./src/engine/libs/maths/geometry/space/Space.ts","webpack://main/./src/engine/core/controls/FreeCameraControl.ts","webpack://main/./src/engine/libs/patterns/pools/Pool.ts","webpack://main/./src/engine/libs/patterns/pools/StackPool.ts","webpack://main/./src/engine/libs/maths/Snippets.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix3.ts","webpack://main/./src/engine/libs/maths/algebra/quaternions/Quaternion.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix4.ts","webpack://main/./src/engine/libs/maths/extensions/pools/Vector3Pools.ts","webpack://main/./src/engine/libs/maths/statistics/random/UUIDGenerator.ts","webpack://main/./src/engine/core/general/Transform.ts","webpack://main/./src/engine/libs/maths/geometry/primitives/Plane.ts","webpack://main/./src/engine/libs/physics/collisions/Frustum.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLBufferUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLVertexArrayUtilities.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/GeometryBuffer.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/Geometry.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/bounding/BoundingSphere.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/bounding/BoundingBox.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/geometry.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLFramebufferUtilities.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/GeometryBuilder.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/lib/polyhedron/CubeGeometry.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/lib/QuadGeometry.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLTextureUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLProgramUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformBlockUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLRendererUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLPacketUtilities.ts","webpack://main/./src/engine/libs/graphics/colors/Color.ts","webpack://main/./src/samples/scenes/SimpleScene.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/PerspectiveCamera.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/Camera.ts","webpack://main/./src/engine/core/rendering/scenes/objects/Object3D.ts","webpack://main/./main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { Injector };\r\nexport { InjectorBase };\r\nexport { Inject };\r\nexport { Register };\r\n\r\ninterface InjectorConstructor {\r\n    readonly prototype: Injector;\r\n    new<C extends Constructor<any>>(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}): Injector<C>;\r\n}\r\n\r\ninterface Injector<C extends Constructor<any> = Constructor<any>> {\r\n    readonly defaultCtor: C;\r\n    overrideDefaultCtor(constructor: C): void;\r\n    forceQualifier(qualifier: string): void;\r\n    unforceQualifier(): void;\r\n    getConstructor(qualifier?: string): C;\r\n    inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C>;\r\n    register(constructor: C, qualifier: string): void; \r\n}\r\n\r\nclass InjectorBase<C extends Constructor<any> = Constructor<any>> implements Injector<C> {\r\n    private _forcedQualifier?: string;\r\n    private _constructors: Map<string, C>;\r\n    private _defaultCtor: C;\r\n    private _onDefaultOverride: (constructor: C) => void;\r\n\r\n    get defaultCtor(): C {\r\n        return this._defaultCtor;\r\n    }\r\n\r\n    overrideDefaultCtor(constructor: C): void {\r\n        this._defaultCtor = constructor;\r\n        this._onDefaultOverride(constructor);\r\n    }\r\n\r\n    constructor(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}) {\r\n        this._defaultCtor = args.defaultCtor;\r\n        this._onDefaultOverride = args.onDefaultOverride;\r\n        this._constructors = new Map();\r\n    }\r\n\r\n    forceQualifier(qualifier: string): void {\r\n        this._forcedQualifier = qualifier;\r\n    }\r\n\r\n    unforceQualifier(): void {\r\n        delete this._forcedQualifier;\r\n    }\r\n\r\n    getConstructor(qualifier?: string): C {\r\n        const qualifierValue = this._forcedQualifier || qualifier;\r\n        if (typeof qualifierValue === 'undefined') {\r\n            return this._defaultCtor;\r\n        }\r\n        const constructor = this._constructors.get(qualifierValue);\r\n        if (typeof constructor === 'undefined') {\r\n            throw new Error(`No constructor for qualifier ${qualifierValue}`);\r\n        }\r\n        return constructor;\r\n    }\r\n\r\n    inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C> {\r\n        const constructor = this.getConstructor(args?.qualifier);\r\n        if (args?.args) {\r\n            const parameters = Array.from(args.args);\r\n            return new constructor(...parameters);\r\n        }\r\n        return new constructor();\r\n    }\r\n\r\n    register(constructor: C, qualifier: string): void {\r\n        if (!this._constructors.has(qualifier)) {\r\n            this._constructors.set(qualifier, constructor);\r\n        }\r\n    }\r\n}\r\n\r\nconst Injector: InjectorConstructor = InjectorBase;\r\n\r\ntype UnwrappedInjectorConstructor<I> = I extends Injector<infer C> ? C : never;\r\n\r\ninterface RegisterDecorator {\r\n    <I extends Injector>(injector: I, qualifier?: string): <C extends UnwrappedInjectorConstructor<I>>(ctor: C) => C;\r\n}\r\n\r\nconst Register: RegisterDecorator = function<\r\n    I extends Injector\r\n>(injector: I, qualifier?: string): any {\r\n    return <C extends UnwrappedInjectorConstructor<I>>(\r\n        ctor: C\r\n    ) => {\r\n        if (typeof qualifier !== 'undefined') {\r\n            injector.register(ctor, qualifier);\r\n        }\r\n        injector.register(ctor, ctor.name);\r\n        return ctor;\r\n    }\r\n}\r\n\r\nfunction Inject<\r\n    I extends Injector,\r\n    P extends ConstructorParameters<UnwrappedInjectorConstructor<I>>,\r\n>(injector: I, options?: {qualifier?: string, args?: P}): any {\r\n    return (\r\n        target: any,\r\n        propertyKey: string\r\n    ) => {\r\n        const instance = injector.inject(options);\r\n\r\n        Object.defineProperty(target, propertyKey, {\r\n            value: instance\r\n        });\r\n    }\r\n}","export class MathError extends Error {\r\n    name = 'MathError';\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Matrix2 } from \"../matrices/Matrix2\";\r\n\r\nexport { Vector2Injector };\r\nexport { Vector2 };\r\nexport { Vector2Base };\r\n\r\nexport type Vector2Values = [number, ...number[]] & { length: 2 };\r\n\r\ninterface Vector2Constructor {\r\n\treadonly prototype: Vector2;\r\n\tnew(): Vector2;\r\n\tnew(a: number, y: number): Vector2;\r\n  \tnew(array: ArrayLike<number>): Vector2;\r\n}\r\n\r\ninterface Vector2 {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector2Values;\r\n\tx: number;\r\n\ty: number;\r\n\tsetValues(x: number, y: number): this;\r\n\tcopy(vec: Vector2): this;\r\n\tclone(): this;\r\n\tequals(vec: Vector2): boolean;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\tadd(vec: Vector2): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector2): this;\r\n\tlerp(vec: Vector2, t: number): this;\r\n\tclamp(min: Vector2, max: Vector2): this;\r\n\tmultScalar(k: number): this;\r\n\tcross(vec: Vector2): number;\r\n\tdot(vec: Vector2): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdist(vec: Vector2): number;\r\n\tdistSquared(vec: Vector2): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector2): this;\r\n\tmult(mat: Matrix2): this\r\n\taddScaled(vec: Vector2, k: number): this;\r\n\tcopyAndSub(vecA: Vector2, vecB: Vector2): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector2Base {\r\n\treadonly array: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(array: ArrayLike<number>)\r\n\t  constructor(\r\n\t  x: number, y: number\r\n\t)\r\n\tconstructor(\r\n\t  ...args: any[]\r\n\t) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([args[0], args[1]]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tconst array = args[0];\r\n\t\t\tif (array.length < 2) {\r\n\t\t\t\tthrow new MathError(`Array must be of length 2 at least.`);\r\n\t\t\t}\r\n\t\t\tif (array instanceof Float32Array) {\r\n\t\t\t\tthis.array = array;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.array = new Float32Array(array);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([0, 0]);\r\n\t\t}\r\n\t}\r\n\r\n\tget values(): Vector2Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1]\r\n\t\t];\r\n\t}\r\n\r\n\tset values(values: Vector2Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tsetValues(x: number, y: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = x;\r\n\t\to[1] = y;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tequals(vec: Vector2Base): boolean {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\t\t\r\n\t\treturn v[0] === o[0]\r\n\t\t\t&& v[1] === o[1];\r\n\t}\r\n\r\n\tcopy(vec: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\to[0] = v[0];\r\n\t\to[1] = v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new Vector2Base(this.values) as this;\r\n\t}\r\n\r\n\tsetUnit(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 1;\r\n\t\to[1] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetZeros(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 0;\r\n\t\to[1] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0];\r\n\t\to[1] = o[1] + v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + k;\r\n\t\to[1] = o[1] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] - v[0];\r\n\t\to[1] = o[1] - v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(vec: Vector2Base, t: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = t * (v[0] - o[0]);\r\n\t\to[1] = t * (v[1] - o[1]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min: Vector2Base, max: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst l = min.array;\r\n\t\tconst g = max.array;\r\n\r\n\t\to[0] = Math.min(g[0], Math.min(o[0], l[0])),\r\n\t\to[1] = Math.min(g[1], Math.min(o[1], l[1]))\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmultScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] * k;\r\n\t\to[1] = o[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcross(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn a[0] * b[1] - a[1] * b[0];\r\n\t}\r\n\r\n\tdot(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]);\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn v[0] * v[0] + v[1] * v[1];\r\n\t}\r\n\r\n\tdist(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn Math.sqrt(dx * dx + dy * dy);\r\n\t}\r\n\r\n\tdistSquared(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn dx * dx + dy * dy;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\tconst lenSq = o[0] * o[0] + o[1] * o[1];\r\n\t\tconst len = Math.sqrt(lenSq);\r\n\t\tif (len > Number.EPSILON) {\r\n\t\t\to[0] = o[0] / len;\r\n\t\t\to[1] = o[1] / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\to[0] = 0;\r\n\t\t\to[1] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = -o[0];\r\n\t\to[1] = -o[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(mat: Matrix2): this\r\n\tmult(vec: Vector2): this\r\n\tmult(arg0: Matrix2 | Vector2): this {\r\n\t\tif (arg0 instanceof Vector2) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tthis.array[0] = this.array[0] * v[0];\r\n\t\t\tthis.array[1] = this.array[1] * v[1];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst x = this.x;\r\n\t\t\tconst y = this.y;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[2];\r\n\t\t\tthis.y = x * m[1] + y * m[3];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\taddScaled(vec: Vector2Base, k: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0] * k;\r\n\t\to[1] = o[1] + v[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n    }\r\n    \r\n    readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = arr[offset    ];\r\n\t\to[1] = arr[offset + 1];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tcopyAndSub(vecA: Vector2Base, vecB: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\to[0] = a[0] - b[0];\r\n\t\to[1] = a[1] - b[1];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nvar Vector2: Vector2Constructor = Vector2Base;\r\nconst Vector2Injector: Injector<Vector2Constructor> = new Injector({\r\n\tdefaultCtor: Vector2Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector2Constructor) => {\r\n\t\t\tVector2 = ctor;\r\n\t\t}\r\n});","import { Matrix3 } from \"engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\n\r\nexport { Vector3Constructor };\r\nexport { Vector3 };\r\nexport { Vector3Base };\r\nexport { Vector3Injector };\r\n\r\nexport type Vector3Values = [number, ...number[]] & { length: 3 };\r\n\r\ninterface Vector3Constructor {\r\n\treadonly prototype: Vector3;\r\n\tnew(): Vector3;\r\n\tnew(x: number, y: number, z: number): Vector3;\r\n  \tnew(array: ArrayLike<number>): Vector3;\r\n\tangle(vectorA: Vector3, vectorB: Vector3): number;\r\n}\r\n\r\ninterface Vector3 extends Iterable<number> {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector3Values;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\ttoString(): string;\r\n\tsetValues(\r\n\t\tx: number,\r\n\t\ty: number,\r\n\t\tz: number\r\n\t): this;\r\n\tequals(vec: Vector3): boolean;\r\n\tcopy(vec: Vector3): this;\r\n\tclone(): this;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\ttoCartesian(center: Vector3): this;\r\n\ttoSpherical(center: Vector3): this;\r\n\tadd(vec: Vector3): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector3): this;\r\n\tlerp(from: Vector3, to: Vector3, t: number): this;\r\n\tmax(vecB: Vector3): this;\r\n\tmin(vecB: Vector3): this;\r\n\tclamp(min: Vector3, max: Vector3): this;\r\n\tscale(k: number): this;\r\n\tcross(vec: Vector3): this;\r\n\tdot(vec: Vector3): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdistance(vec: Vector3): number;\r\n\tdistanceSquared(vec: Vector3): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector3): this;\r\n\tmult(mat: Matrix3): this;\r\n\taddScaled(vec: Vector3, k: number): this;\r\n\tcopyAndSub(vecA: Vector3, vecB: Vector3): this;\r\n\tcopyAndCross(vecA: Vector3, vecB: Vector3): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector3Base implements Vector3 {\r\n\treadonly array: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(array: ArrayLike<number>)\r\n\t  constructor(\r\n\t  x: number, y: number, z: number\r\n\t)\r\n\tconstructor(\r\n\t  ...args: any[]\r\n\t) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([args[0], args[1], args[2]]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tconst array = args[0];\r\n\t\t\tif (array.length < 3) {\r\n\t\t\t\tthrow new MathError(`Array must be of length 3 at least.`);\r\n\t\t\t}\r\n\t\t\tif (array instanceof Float32Array) {\r\n\t\t\t\tthis.array = array;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.array = new Float32Array(array);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([0, 0, 0]);\r\n\t\t}\r\n\t}\r\n\r\n\ttoString(): string {\r\n\t\treturn `Vector3([${Array.from(this.array).join(\", \")}])`;\r\n\t}\r\n\r\n\tstatic angle(vectorA: Vector3, vectorB: Vector3): number {\r\n\t\tconst temp = new Vector3();\r\n\t\treturn Math.acos(temp.copy(vectorA).dot(vectorB) / (Math.sqrt(temp.copy(vectorA).dot(vectorA)) * Math.sqrt(temp.copy(vectorB).dot(vectorB))));\r\n\t}\r\n\r\n\tget values(): Vector3Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1],\r\n\t\t\tthis.array[2]\r\n\t\t];\r\n\t}\r\n\r\n\tset values(values: Vector3Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t\tthis.array[2] = values[2];\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tget z() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n\tset z(z: number) {\r\n\t\tthis.array[2] = z;\r\n\t}\r\n\r\n\tsetValues(x: number, y: number, z: number): this {\r\n\t\tthis.array[0] = x;\r\n\t\tthis.array[1] = y;\r\n\t\tthis.array[2] = z;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcopy(vec: Vector3): this {\r\n\t\tconst v = vec.array;\r\n\r\n\t\tthis.array[0] = v[0];\r\n\t\tthis.array[1] = v[1];\r\n\t\tthis.array[2] = v[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new Vector3Base(this.values) as this;\r\n\t}\r\n\r\n\tequals(vector: Vector3): boolean {\r\n\t\treturn vector.array[0] === this.array[0]\r\n\t\t\t&& vector.array[1] === this.array[1]\r\n\t\t\t&& vector.array[2] === this.array[2];\r\n\t}\r\n\r\n\tsetZeros(): this {\r\n\t\tthis.array[0] = 0;\r\n\t\tthis.array[1] = 0;\r\n\t\tthis.array[2] = 0;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetUnit(): this {\r\n\t\tthis.array[0] = 1;\r\n\t\tthis.array[1] = 1;\r\n\t\tthis.array[2] = 1;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0];\r\n\t\tthis.array[1] = this.array[1] + vector.array[1];\r\n\t\tthis.array[2] = this.array[2] + vector.array[2];\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(k: number): this {\r\n\t\tthis.array[0] = this.array[0] + k;\r\n\t\tthis.array[1] = this.array[1] + k;\r\n\t\tthis.array[2] = this.array[2] + k;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] - vector.array[0];\r\n\t\tthis.array[1] = this.array[1] - vector.array[1];\r\n\t\tthis.array[2] = this.array[2] - vector.array[2];\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(from: Vector3, to: Vector3, t: number): this {\r\n\t\tthis.array[0] = (1 - t) * from.x + t * (to.x - from.x);\r\n\t\tthis.array[1] = (1 - t) * from.y + t * (to.y - from.y);\r\n\t\tthis.array[2] = (1 - t) * from.z + t * (to.z - from.z);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmax(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.max(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.max(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.max(this.array[2], vectorB.array[2]);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmin(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.min(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.min(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.min(this.array[2], vectorB.array[2]);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min: Vector3, max: Vector3): this {\r\n\t\tthis.array[0] = Math.min(max.array[0], Math.max(this.array[0], min.array[0]));\r\n\t\tthis.array[1] = Math.min(max.array[1], Math.max(this.array[1], min.array[1]));\r\n\t\tthis.array[2] = Math.min(max.array[2], Math.max(this.array[2], min.array[2]));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tscale(k: number): this {\r\n\t\tthis.array[0] = this.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] * k;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcross(vector: Vector3): this {\r\n\t\tconst t0 = this.array[1] * vector.array[2] - this.array[2] * vector.array[1];\r\n\t\tconst t1 = this.array[2] * vector.array[0] - this.array[0] * vector.array[2];\r\n\t\tconst t2 = this.array[0] * vector.array[1] - this.array[1] * vector.array[0];\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdot(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst a = this.array;\r\n\r\n\t\treturn Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst a = this.array;\r\n\t\t\r\n\t\treturn a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\r\n\t}\r\n\r\n\tdistance(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn Math.hypot(dx, dy, dz);\r\n\t}\r\n\r\n\tdistanceSquared(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst {array} = this;\r\n\t\tconst length = this.length();\r\n\t\tif (length > Number.EPSILON) {\r\n\t\t\tarray[0] /= length;\r\n\t\t\tarray[1] /= length;\r\n\t\t\tarray[2] /= length;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tarray[0] = 0;\r\n\t\t\tarray[1] = 0;\r\n\t\t\tarray[2] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate(): this {\r\n\t\tconst {array} = this;\r\n\t\tarray[0] *= -1;\r\n\t\tarray[1] *= -1;\r\n\t\tarray[2] *= -1;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(mat: Matrix3): this\r\n\tmult(vec: Vector3): this\r\n\tmult(arg0: Matrix3 | Vector3): this {\r\n\t\tconst {array} = this;\r\n\t\tif (arg0 instanceof Vector3) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tarray[0] = array[0] * v[0];\r\n\t\t\tarray[1] = array[1] * v[1];\r\n\t\t\tarray[2] = array[2] * v[2];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst [x, y, z] = this;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[3] + z * m[6];\r\n\t\t\tthis.y = x * m[1] + y * m[4] + z * m[7];\r\n\t\t\tthis.z = x * m[2] + y * m[5] + z * m[8];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\ttoSpherical(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const x = thisArray[0] - centerArray[0];\r\n        const y = thisArray[1] - centerArray[1];\r\n        const z = thisArray[2] - centerArray[2];\r\n\r\n        const roh = Math.hypot(x, y, z);\r\n        const theta = Math.acos(y / roh);\r\n        const phi = Math.atan2(z, x);\r\n        thisArray[0] = roh;\r\n        thisArray[1] = theta;\r\n        thisArray[2] = phi;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n    toCartesian(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const roh = thisArray[0];\r\n        const theta = thisArray[1];\r\n        const phi = thisArray[2];\r\n\r\n        const x = roh * Math.sin(theta) * Math.cos(phi) + centerArray[0];\r\n        const y = roh * Math.cos(theta) + centerArray[1];\r\n        const z = roh * Math.sin(theta) * Math.sin(phi) + centerArray[2];\r\n        thisArray[0] = x;\r\n        thisArray[1] = y;\r\n        thisArray[2] = z;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tstatic mult(mat: Matrix3, vec: Vector3): Vector3 {\r\n\t\tconst m = mat.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\treturn new Vector3Base([\r\n\t\t\tm[0] * v[0] + m[1] * v[1] + m[2] * v[2],\r\n\t\t\tm[3] * v[0] + m[4] * v[1] + m[5] * v[2],\r\n\t\t\tm[6] * v[0] + m[7] * v[1] + m[8] * v[2]\r\n\t\t]);\r\n\t}\r\n\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n\t\tout[offset + 2] = v[2];\r\n    }\r\n    \r\n    readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tthis.array[0] = arr[offset    ];\r\n\t\tthis.array[1] = arr[offset + 1];\r\n\t\tthis.array[2] = arr[offset + 2];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\taddScaled(vector: Vector3, k: number): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] + vector.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] + vector.array[2] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcopyAndSub(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\tthis.array[0] = a[0] - b[0];\r\n\t\tthis.array[1] = a[1] - b[1];\r\n\t\tthis.array[2] = a[2] - b[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcopyAndCross(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\t\r\n\t\tconst t0 = a[1] * b[2] - a[2] * b[1];\r\n\t\tconst t1 = a[2] * b[0] - a[0] * b[2];\r\n\t\tconst t2 = a[0] * b[1] - a[1] * b[0];\r\n\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\t[Symbol.iterator] (): Iterator<number> {\r\n\t\tconst {array} = this;\r\n\t\tconst {length} = array;\r\n\t\tlet i = 0;\r\n\t\treturn {\r\n\t\t\tnext() {\r\n\t\t\t\tif (i < length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: array[i++], done: false\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: undefined, done: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar Vector3: Vector3Constructor = Vector3Base;\r\n\r\nconst Vector3Injector: Injector<Vector3Constructor> = new Injector({\r\n\tdefaultCtor: Vector3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector3Constructor) => {\r\n\t\t\tVector3 = ctor;\r\n\t\t}\r\n});","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\n\r\nexport { Key };\r\nexport { KeyModifier };\r\nexport { HotKey };\r\nexport { MouseButton };\r\nexport { Input };\r\n\r\nenum Key {\r\n    A = \"a\",\r\n    B = \"b\",\r\n    C = \"c\",\r\n    D = \"d\",\r\n    E = \"e\",\r\n    F = \"f\",\r\n    G = \"g\",\r\n    H = \"h\",\r\n    I = \"i\",\r\n    J = \"j\",\r\n    K = \"k\",\r\n    L = \"l\",\r\n    M = \"m\",\r\n    O = \"o\",\r\n    P = \"p\",\r\n    Q = \"q\",\r\n    R = \"r\",\r\n    S = \"s\",\r\n    T = \"t\",\r\n    U = \"u\",\r\n    V = \"v\",\r\n    W = \"w\",\r\n    X = \"x\",\r\n    Y = \"y\",\r\n    Z = \"z\",\r\n    ENTER = \"Enter\",\r\n    BACKSPACE = \"Backspace\",\r\n    ARROW_DOWN = \"ArrowDown\",\r\n    ARROW_LEFT = \"ArrowLeft\",\r\n    ARROW_RIGHT = \"ArrowRight\",\r\n    ARROW_UP = \"ArrowUp\",\r\n    SHIFT = \"Shift\"\r\n}\r\n\r\nconst KEYS_COUNT = Object.keys(Key).length;\r\n\r\nenum KeyModifier {\r\n    Alt = \"Alt\",\r\n    Control = \"Control\",\r\n    Shift = \"Shift\",\r\n}\r\n\r\nfunction displayKeyModifier(mode: KeyModifier): string {\r\n    switch (mode) {\r\n        case KeyModifier.Control:\r\n            return \"Ctrl\";\r\n        default:\r\n            return mode;\r\n    }\r\n}\r\n\r\nenum MouseButton {\r\n    LEFT = 0,\r\n    WHEEL = 1,\r\n    RIGHT = 2,\r\n    FORWARD = 3,\r\n    BACK = 4\r\n}\r\n\r\nconst MOUSE_BUTTONS_COUNT = Object.keys(MouseButton).length;\r\n\r\nconst MOUSE_BUTTONS_INDICES = Object.freeze(\r\n    Object.values(MouseButton).reduce(\r\n        (map, button, index) => Object.assign(map, {[button]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst KEYS_INDICES = Object.freeze(\r\n    Object.values(Key).reduce(\r\n        (map, key, index) => Object.assign(map, {[key]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst INPUT_EVENT_UP = 0;\r\nconst INPUT_EVENT_DOWN = 1;\r\nconst INPUT_EVENT_REPEAT = 2;\r\n\r\nconst testKeyModifier = (mod: KeyModifier, event: KeyboardEvent) => {\r\n    switch (mod) {\r\n        case \"Alt\":\r\n            return event.altKey;\r\n        case \"Control\":\r\n            return event.ctrlKey;\r\n        case \"Shift\":\r\n            return event.shiftKey;\r\n        default:\r\n            return () => true;\r\n    }\r\n}\r\n\r\nclass HotKey {\r\n\r\n    readonly key: Key;\r\n    readonly mod1?: KeyModifier;\r\n    readonly mod2?: KeyModifier;\r\n\r\n    constructor(key: Key, mod1?: KeyModifier, mod2?: KeyModifier) {\r\n        this.key = key;\r\n        this.mod1 = mod1;\r\n        this.mod2 = mod2;\r\n    }\r\n\r\n    toString(): string {\r\n        return `${this.mod1 ? `${displayKeyModifier(this.mod1)}+` : ''}${this.mod2 ? `${displayKeyModifier(this.mod2)}+` : ''}${(this.key.length === 1) ? this.key.toUpperCase() : this.key}`;\r\n    }\r\n\r\n    /*static fromString(str: string): HotKey | null {\r\n        const keys = Object.values(Key);\r\n        const keyModifiers = Object.values(KeyModifier);\r\n\r\n        let key: Key;\r\n        let mod1: KeyModifier | undefined;\r\n        let mod2: KeyModifier | undefined;\r\n\r\n        const keysStr = str.split(' + ');\r\n        if (keysStr.length >= 1) {\r\n            key = keysStr[0] as Key;\r\n            if (!keys.indexOf(key)) {\r\n                return null;\r\n            }\r\n            if (keysStr.length >= 2) {\r\n                mod1 = keysStr[1] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod1)) {\r\n                    return null;\r\n                }\r\n            }\r\n            if (keysStr.length >= 3) {\r\n                mod2 = keysStr[2] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod2)) {\r\n                    return null;\r\n                }\r\n            }\r\n            return new HotKey(key, mod1, mod2);\r\n        }\r\n        return null;\r\n    }*/\r\n\r\n    test(event: KeyboardEvent): boolean {\r\n        return ((!this.mod1 || testKeyModifier(this.mod1, event)) && (!this.mod2 || testKeyModifier(this.mod2, event)) && event.key === this.key);\r\n    }\r\n}\r\n\r\ninterface Input {\r\n    initialize(canvas: HTMLCanvasElement): void;\r\n    clear(): void;\r\n    getKey(key: Key): boolean;\r\n    getKeyUp(key: Key): boolean;\r\n    getKeyDown(key: Key): boolean;\r\n    getMouseButton(button: MouseButton): boolean;\r\n    getPointerPosition(): Vector2;\r\n    getPointerScreenPosition(): Vector2;\r\n    getWheelDelta(): number;\r\n    getMouseButtonDown(button: MouseButton): boolean;\r\n    getMouseButtonUp(button: MouseButton): boolean;\r\n}\r\n\r\nclass InputBase implements Input {\r\n    private readonly keyFlags = new Array<boolean>(3 * KEYS_COUNT).fill(false);\r\n    private readonly mouseFlags = new Array<boolean>(3 * MOUSE_BUTTONS_COUNT).fill(false);\r\n    private readonly pointerPosition = new Vector2();\r\n    private wheelDelta = 0;\r\n    private canvas: HTMLCanvasElement | null = null;\r\n    private canvasRectangle: DOMRect | null = null;\r\n\r\n    initialize(canvas: HTMLCanvasElement): void {\r\n        this.canvas = canvas;\r\n        this.canvasRectangle = canvas.getBoundingClientRect();\r\n        canvas.addEventListener(\"pointerdown\", this);\r\n        canvas.addEventListener(\"pointerup\", this);\r\n        canvas.addEventListener(\"contextmenu\", this);\r\n        canvas.addEventListener(\"pointermove\", this);\r\n        canvas.addEventListener(\"wheel\", this);\r\n        canvas.addEventListener(\"keydown\", this);\r\n        canvas.addEventListener(\"keyup\", this);\r\n        canvas.addEventListener(\"focusout\", this);\r\n    }\r\n\r\n    getCanvasRect(): DOMRect {\r\n        const rect = this.canvasRectangle;\r\n        if (rect === null) {\r\n            throw new Error(`Input manager not initialized.`);\r\n        }\r\n        return rect;\r\n    }\r\n\r\n    clear(): void {\r\n        this.keyFlags.fill(false, 0, INPUT_EVENT_REPEAT * KEYS_COUNT);\r\n        this.mouseFlags.fill(false, 0, INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT);\r\n        this.wheelDelta = 0;\r\n    }\r\n    \r\n    handleEvent(event: Event): void {\r\n        let eventIndex = -1;\r\n        switch (event.type) {\r\n            case \"pointerdown\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"pointerup\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"pointermove\":\r\n                const canvasRect = this.getCanvasRect();\r\n                this.pointerPosition.setValues(\r\n                    ((event as MouseEvent).clientX - canvasRect.left),\r\n                    ((event as MouseEvent).clientY - canvasRect.top),\r\n                );\r\n                break;\r\n            case \"wheel\":\r\n                this.wheelDelta = (event as WheelEvent).deltaY / 100;\r\n                break;\r\n            case \"keydown\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"keyup\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"focusout\":\r\n                this.keyFlags.fill(false);\r\n                this.mouseFlags.fill(false);\r\n                this.wheelDelta = 0;\r\n                this.pointerPosition.setZeros();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    /*static getAxis(axisName: string) {\r\n\r\n    }\r\n\r\n    static getButton(buttonName: string) {\r\n\r\n    }\r\n\r\n    static getButtonUp(buttonName: string) {\r\n\r\n    }\r\n\r\n    static getButtonDown(buttonName: string) {\r\n\r\n    }*/\r\n\r\n    getKey(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getKeyUp(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getKeyDown(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getMouseButton(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    getPointerPosition(): Vector2 {\r\n        return this.pointerPosition.clone();\r\n    }\r\n\r\n    getPointerScreenPosition(): Vector2 {\r\n        const positionAray = this.pointerPosition.array;\r\n        const canvasRect = this.getCanvasRect();\r\n        const x = (positionAray[0] / canvasRect.width) * 2 - 1;\r\n        const y = (positionAray[1] / canvasRect.height) * 2 - 1;\r\n        return new Vector2([x, y]);\r\n    }\r\n\r\n    getWheelDelta(): number {\r\n        return this.wheelDelta;\r\n    }\r\n\r\n    getMouseButtonDown(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    getMouseButtonUp(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n}\r\n\r\nvar Input: Input = new InputBase();","import { Vector3 } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport class Space {\r\n\r\n    private constructor () {};\r\n    \r\n    static readonly origin:      Vector3 = new Vector3([ 0,  0,  0]);\r\n    static readonly right:       Vector3 = new Vector3([ 1,  0,  0]);\r\n    static readonly left:        Vector3 = new Vector3([-1,  0,  0]);\r\n    static readonly up:          Vector3 = new Vector3([ 0,  1,  0]);\r\n    static readonly down:        Vector3 = new Vector3([ 0, -1,  0]);\r\n    static readonly forward:     Vector3 = new Vector3([ 0,  0,  1]);\r\n    static readonly backward:    Vector3 = new Vector3([ 0,  0, -1]);\r\n}","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../libs/maths/geometry/space/Space\";\r\nimport { Input, MouseButton, Key } from \"../input/Input\";\r\nimport { Camera } from \"../rendering/scenes/cameras/Camera\";\r\n\r\nexport { FreeCameraControl };\r\n\r\nconst tempVector1 = new Vector3();\r\nconst tempVector2 = new Vector3();\r\nconst tempVector3 = new Vector3();\r\n\r\ninterface FreeCameraControlConstructor {\r\n    readonly prototype: FreeCameraControl;\r\n    new(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}): FreeCameraControl;\r\n}\r\n\r\ninterface FreeCameraControl {\r\n    camera: Camera;\r\n    rotationSpeed: number;\r\n    translationSpeed: number;\r\n    update(deltaTime: number): void;\r\n}\r\n\r\nclass FreeCameraControlBase {\r\n    camera: Camera;\r\n    rotationSpeed: number;\r\n    translationSpeed: number;\r\n\r\n    #lastPointerPosition: Vector2;\r\n\r\n    constructor(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}) {\r\n        this.camera = camera;\r\n        this.rotationSpeed = params?.rotationSpeed ?? 50;\r\n        this.translationSpeed = params?.translationSpeed ?? 8;\r\n        this.#lastPointerPosition = new Vector2();\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        const {camera, rotationSpeed, translationSpeed} = this;\r\n        const lastPointerPosition = this.#lastPointerPosition;\r\n        const {transform: cameraTransform} = camera;\r\n        const cameraPosition = cameraTransform.getTranslation(tempVector1);\r\n        const cameraForward = cameraTransform.getBackward(tempVector2);\r\n        const {array: cameraForwardArray} = cameraForward;\r\n        const {origin, up, down} = Space;\r\n        let cameraUpSign = cameraTransform.getUp(tempVector3).dot(up);\r\n      \r\n        if (Input.getKey(Key.Z) || Input.getKey(Key.ARROW_UP)) {\r\n            const forward = cameraTransform.getBackward(tempVector3).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(forward);\r\n        }\r\n        if (Input.getKey(Key.Q) || Input.getKey(Key.ARROW_LEFT)) {\r\n            const left = cameraTransform.getLeft(tempVector3).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(left);\r\n        }\r\n        if (Input.getKey(Key.S) || Input.getKey(Key.ARROW_DOWN)) {\r\n            const backward = cameraTransform.getForward(tempVector3).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(backward);\r\n        }\r\n        if (Input.getKey(Key.D) || Input.getKey(Key.ARROW_RIGHT)) {\r\n            const right = cameraTransform.getRight(tempVector3).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(right);\r\n        }\r\n\r\n        if (Input.getMouseButtonDown(MouseButton.RIGHT)) {\r\n            lastPointerPosition.copy(Input.getPointerScreenPosition());\r\n        }\r\n        \r\n        if (Input.getMouseButton(MouseButton.RIGHT)) {\r\n            const newPointerPosition = Input.getPointerScreenPosition();\r\n            if (!newPointerPosition.equals(lastPointerPosition)) {\r\n                const dx = (lastPointerPosition.x - newPointerPosition.x) * rotationSpeed * deltaTime;\r\n                const dy = (lastPointerPosition.y - newPointerPosition.y) * rotationSpeed * deltaTime;\r\n                cameraPosition.copy(cameraTransform.getTranslation(tempVector3));\r\n                if (dx !== 0 || dy !== 0) {\r\n                    cameraUpSign = Math.sign(cameraTransform.getUp(tempVector3).dot(up));\r\n                    cameraForward.toSpherical(origin);\r\n                    const theta = cameraForwardArray[1];\r\n                    const phi = cameraForwardArray[2];\r\n                    const newTheta = theta + cameraUpSign * -dy;\r\n                    if (newTheta <= 0 || newTheta >= Math.PI) {\r\n                        cameraForwardArray[2] = (phi - dx + Math.PI) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = newTheta < 0 ? -newTheta : Math.PI - (newTheta - Math.PI);\r\n                        cameraUpSign *= -1;\r\n                    }\r\n                    else {\r\n                        cameraForwardArray[2] = (phi - dx) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = theta + cameraUpSign * -dy;\r\n                    }\r\n                    cameraForward.toCartesian(origin);\r\n                    cameraTransform.lookAt(cameraPosition.add(cameraForward), (cameraUpSign > 0) ? up : down);\r\n                }\r\n                lastPointerPosition.copy(newPointerPosition);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar FreeCameraControl: FreeCameraControlConstructor = FreeCameraControlBase;","export { PoolAutoExtendPolicy };\r\nexport { Pool };\r\nexport { PoolBase };\r\n\r\nenum PoolAutoExtendPolicy {\r\n    NO_AUTO_EXTEND = 0,\r\n    AUTO_EXTEND_ONE = 1,\r\n    AUTO_EXTEND_POW2 = 2\r\n}\r\n\r\ninterface PoolConstructor {\r\n    readonly prototype: Pool;\r\n    new<O extends object>(constructor: Constructor<O>, policy?: PoolAutoExtendPolicy): Pool<O>;\r\n}\r\n\r\ninterface Pool<O extends object = object> {\r\n    readonly ctor: Constructor<O>;\r\n    readonly autoExtendPolicy: PoolAutoExtendPolicy;\r\n    autoExtend(): void;\r\n    acquire(count: number): O[];\r\n    release(...args: any[]): void;\r\n    extend(count: number): void;\r\n    clear(): void;\r\n}\r\n\r\nclass PoolBase<O extends object = object> implements Pool<O> {\r\n    readonly ctor: Constructor<O>;\r\n    autoExtendPolicy: PoolAutoExtendPolicy;\r\n    autoExtendTicks: number;\r\n\r\n    constructor(constructor: Constructor<O>, policy?: PoolAutoExtendPolicy) {\r\n        this.ctor = constructor;\r\n        this.autoExtendPolicy = policy || PoolAutoExtendPolicy.AUTO_EXTEND_ONE;\r\n        this.autoExtendTicks = 0;\r\n    }\r\n\r\n    autoExtend(): void {\r\n        switch (this.autoExtendPolicy) {\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_ONE:\r\n                this.extend(1);\r\n                break;\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_POW2:\r\n                this.extend(Math.pow(2, this.autoExtendTicks));\r\n                break;\r\n        }\r\n        this.autoExtendTicks++;\r\n    }\r\n\r\n    acquire(count: number): O[] {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    release(...args: any[]): void {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    extend(count: number): void {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    clear(): void {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n}\r\n\r\nvar Pool: PoolConstructor = PoolBase;","import { PoolAutoExtendPolicy, PoolBase, Pool } from \"./Pool\";\r\n\r\nexport { StackPool };\r\n\r\ninterface StackPool<O extends object = object> extends Pool<O> {\r\n    release(count: number): void;\r\n}\r\n\r\ninterface StackPoolConstructor {\r\n    readonly prototype: StackPool;\r\n    new<O extends object>(constructor: Constructor<O>, options?: {args?: ConstructorParameters<Constructor<O>>, policy?: PoolAutoExtendPolicy, size?: number}): StackPool<O>;\r\n}\r\n\r\nclass StackPoolBase<O extends object = object> extends PoolBase<O> implements Pool<O> {\r\n    objects: Array<O>;\r\n    top: number;\r\n\r\n    constructor(constructor: Constructor<O>, options?: {args?: any, policy?: PoolAutoExtendPolicy, size?: number}) {\r\n        super(constructor, options?.policy);\r\n        this.objects = new Array(options?.size || 0).fill(0).map(() => {\r\n            return new this.ctor(options?.args);\r\n        });\r\n        this.top = 0;\r\n    }\r\n    \r\n    acquire(count: number): O[] {\r\n        const top = this.top;\r\n        const target = top + count;\r\n\r\n        if (this.autoExtendPolicy) {\r\n            while (this.objects.length < target) {\r\n                this.autoExtend();\r\n            }\r\n        }\r\n        this.top = target;\r\n        \r\n        return this.objects.slice(top, target);\r\n    }\r\n\r\n    release(count: number): void {\r\n        const top = this.top;\r\n        if (count > top) {\r\n            console.warn(\"Releasing under zero.\");\r\n        }\r\n        this.top = Math.max(top - count, 0);\r\n    }\r\n\r\n    extend(count: number): void {\r\n        this.objects.push(...Array(count).fill(0).map(() => {\r\n            return new this.ctor();\r\n        }));\r\n    }\r\n    \r\n    clear(): void {\r\n        this.objects = [];\r\n        this.top = 0;\r\n        this.autoExtendTicks = 0;\r\n    }\r\n}\r\n\r\nvar StackPool: StackPoolConstructor = StackPoolBase;","\r\nexport { deg2Rad };\r\nexport { rad2Deg };\r\nexport { qSqrt };\r\nexport { pow2 };\r\nexport { inRange };\r\nexport { clamp };\r\nexport { lerp };\r\nexport { smoothstep };\r\nexport { smootherstep };\r\nexport { randInt };\r\nexport { randFloat };\r\nexport { randFloatSpread };\r\nexport { degToRad };\r\nexport { radToDeg };\r\nexport { isPowerOfTwo };\r\nexport { ceilPowerOfTwo };\r\nexport { floorPowerOfTwo };\r\n\r\nconst DEG2RAD = Math.PI / 180;\r\nconst RAD2DEG = 180 / Math.PI;\r\n\r\nconst deg2Rad = function(deg: number): number {\r\n\treturn DEG2RAD * deg;\r\n}\r\n\r\nconst rad2Deg = function(rad: number): number {\r\n\treturn RAD2DEG / rad;\r\n}\r\n\r\nconst _bytes = new ArrayBuffer(Float32Array.BYTES_PER_ELEMENT);\r\nconst _floatView = new Float32Array(_bytes);\r\nconst _intView = new Uint32Array(_bytes);\r\n\r\nconst qSqrt = function(x: number) {\r\n\tconst halfx = x * 0.5;\r\n\r\n\t_floatView[0] = x;\r\n\t_intView[0] = 0x5f3759df -(_intView[0] >> 1);\r\n\r\n\tlet y = _floatView[0];\r\n\ty = y * (1.5 - (halfx * y * y));\r\n\r\n\treturn y;\r\n}\r\n\r\nconst pow2 = function(k: number): number {\r\n\treturn 1 << k;\r\n}\r\n\t\r\nconst inRange = function(x: number, min: number, max: number): boolean {\r\n\treturn (min <= x) && (x <= max);\r\n}\r\n\r\nconst clamp = function(value: number, min: number, max: number): number {\r\n\treturn Math.max(min, Math.min(max, value));\r\n}\r\n\r\nconst lerp = function(x: number, y: number, t: number): number {\r\n\treturn (1 - t) * x + t * y;\r\n}\r\n\r\nconst smoothstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * (3 - 2 * x);\r\n}\r\n\r\nconst smootherstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * x * ( x * ( x * 6 - 15) + 10);\r\n}\r\n\r\nconst randInt = function(low: number, high: number): number {\r\n\treturn low + Math.floor(Math.random() * (high - low + 1));\r\n}\r\n\r\nconst randFloat = function(low: number, high: number): number {\r\n\treturn low + Math.random() * (high - low);\r\n}\r\n\r\nconst randFloatSpread = function(range: number): number {\r\n\treturn range * (0.5 - Math.random());\r\n}\r\n\r\nconst degToRad = function(degrees: number): number {\r\n\treturn degrees * DEG2RAD;\r\n}\r\n\r\nconst radToDeg = function(radians: number): number {\r\n\treturn radians * RAD2DEG;\r\n}\r\nconst isPowerOfTwo = function(value: number): boolean {\r\n\treturn (value & (value - 1)) === 0 && value !== 0;\r\n}\r\n\r\nconst ceilPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\r\n}\r\n\r\nconst floorPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3Values, Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { Matrix3Values };\r\nexport { Matrix3 };\r\nexport { Matrix3Injector };\r\nexport { Matrix3Base };\r\n\r\ntype Matrix3Values = [\r\n  number, number, number,\r\n  number, number, number,\r\n  number, number, number\r\n];\r\n\r\ninterface Matrix3Constructor {\r\n\treadonly prototype: Matrix3;\r\n\tnew(): Matrix3;\r\n\tnew(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): Matrix3;\r\n  new(array: ArrayLike<number>): Matrix3;\r\n  rotationX(angle: number): Matrix3;\r\n  rotationY(angle: number): Matrix3;\r\n  rotationZ(angle: number): Matrix3;\r\n}\r\n\r\ninterface Matrix3 {\r\n  readonly array: WritableArrayLike<number>;\r\n  setValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this;\r\n  getValues(): Matrix3Values;\r\n  row1: Vector3Values;\r\n  row2: Vector3Values;\r\n  row3: Vector3Values;\r\n  col1: Vector3Values;\r\n  col2: Vector3Values;\r\n  col3: Vector3Values;\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  setRotationX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n\r\n  equals(mat: Matrix3): boolean;\r\n  copy(mat: Matrix3): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix3): this;\r\n  sub(mat: Matrix3): this;\r\n  mult(mat: Matrix3): this;\r\n  multScalar(k: number): this;\r\n  solve(vecB: Vector3): Vector3Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass Matrix3Base implements Matrix3 {\r\n  readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  )\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[0], args[1], args[2],\r\n        args[3], args[4], args[5],\r\n        args[6], args[7], args[8]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([\r\n        0, 0, 0,\r\n        0, 0, 0,\r\n        0, 0, 0\r\n      ]);\r\n\t\t}\r\n  }\r\n\r\n  get row1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[3],\r\n      this.array[6]\r\n    ];\r\n\t}\r\n\r\n\tset row1(row: Vector3Values) {\r\n    this.array[0] = row[0];\r\n    this.array[3] = row[1];\r\n    this.array[6] = row[2];\r\n  }\r\n\r\n  get row2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[1],\r\n      this.array[4],\r\n      this.array[7]\r\n    ];\r\n\t}\r\n\r\n\tset row2(row: Vector3Values) {\r\n    this.array[1] = row[0];\r\n    this.array[4] = row[1];\r\n    this.array[7] = row[2]\r\n  }\r\n\r\n  get row3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[2],\r\n      this.array[5],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tset row3(row: Vector3Values) {\r\n    this.array[2] = row[0];\r\n    this.array[5] = row[1];\r\n    this.array[8] = row[2]\r\n  }\r\n\r\n  get col1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[1],\r\n      this.array[2]\r\n    ];\r\n\t}\r\n\r\n\tset col1(col: Vector3Values) {\r\n    this.array[0] = col[0];\r\n    this.array[1] = col[1];\r\n    this.array[2] = col[2];\r\n  }\r\n\r\n  get col2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[3],\r\n      this.array[4],\r\n      this.array[5]\r\n    ];\r\n\t}\r\n\r\n\tset col2(col: Vector3Values) {\r\n    this.array[3] = col[0];\r\n    this.array[4] = col[1];\r\n    this.array[5] = col[2]\r\n  }\r\n\r\n  get col3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[6],\r\n      this.array[7],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tset col3(col: Vector3Values) {\r\n    this.array[6] = col[0];\r\n    this.array[7] = col[1];\r\n    this.array[8] = col[2];\r\n  }\r\n\r\n  get m11() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  get m12() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset m12(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  get m13() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tset m13(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  get m22() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tset m22(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  get m23() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tset m23(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  get m32() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tset m32(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  get m33() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n  set m33(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 9) {\r\n\t\t\tthrow new MathError(`Array must be of length 9 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n  getValues(): Matrix3Values {\r\n\t\treturn [\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8],\r\n    ];\r\n\t}\r\n\r\n\tsetValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this {\r\n    this.array[0] = m11;\r\n    this.array[1] = m21;\r\n    this.array[2] = m31;\r\n    this.array[3] = m12;\r\n    this.array[4] = m22;\r\n    this.array[5] = m32;\r\n    this.array[6] = m13;\r\n    this.array[7] = m23;\r\n    this.array[8] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n\tequals(other: Matrix3): boolean {\r\n    const o = other.array;\r\n    return this.array[0] === o[0]\r\n      && this.array[1] === o[1]\r\n      && this.array[2] === o[2]\r\n      && this.array[3] === o[3]\r\n      && this.array[4] === o[4]\r\n      && this.array[5] === o[5]\r\n      && this.array[6] === o[6]\r\n      && this.array[7] === o[7]\r\n      && this.array[8] === o[8];\r\n  }\r\n\r\n  copy(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = m[0];\r\n    o[1] = m[1];\r\n    o[2] = m[2];\r\n    o[3] = m[3];\r\n    o[4] = m[4];\r\n    o[5] = m[5];\r\n    o[6] = m[6];\r\n    o[7] = m[7];\r\n    o[8] = m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  clone(): this {\r\n    return new Matrix3Base(\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8]\r\n    ) as this;\r\n  }\r\n\r\n  setIdentity(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 1;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 1;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  setZeros(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 0;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 0;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  det(): number {\r\n    const o = this.array;\r\n\r\n    const x = o[0] * ((o[4] * o[8]) - (o[5] * o[7]));\r\n    const y = o[1] * ((o[3] * o[8]) - (o[5] * o[6]));\r\n    const z = o[2] * ((o[3] * o[7]) - (o[4] * o[6]));\r\n\r\n    return x - y + z;\r\n  }\r\n\r\n  trace(): number {\r\n    const o = this.array;\r\n    \r\n    return o[0] + o[4] + o[8];\r\n  }\r\n\r\n  negate(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = -o[0];\r\n    o[1] = -o[1];\r\n    o[2] = -o[2];\r\n    o[3] = -o[3];\r\n    o[4] = -o[4];\r\n    o[5] = -o[5];\r\n    o[6] = -o[6];\r\n    o[7] = -o[7];\r\n    o[8] = -o[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  transpose(): this {\r\n    const o = this.array;\r\n\r\n    let t;\r\n\r\n    t = o[1];\r\n    o[1] = o[3];\r\n    o[3] = t;\r\n\r\n    t = o[2];\r\n    o[2] = o[6];\r\n    o[6] = t;\r\n\r\n    t = o[5];\r\n    o[5] = o[7];\r\n    o[7] = t;\r\n    \r\n    return this;\r\n  }\r\n\r\n  invert(): this {\r\n    const o = this.array;\r\n\r\n    const t11 = o[1 * 3 + 1] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 1];\r\n    const t12 = o[0 * 3 + 1] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 1];\r\n    const t13 = o[0 * 3 + 1] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 1];\r\n\r\n    const t21 = o[1 * 3 + 0] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 0];\r\n    const t22 = o[0 * 3 + 0] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 0];\r\n    const t23 = o[0 * 3 + 0] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 0];\r\n\r\n    const t31 = o[1 * 3 + 0] * o[2 * 3 + 1] - o[1 * 3 + 1] * o[2 * 3 + 0];\r\n    const t32 = o[0 * 3 + 0] * o[2 * 3 + 1] - o[0 * 3 + 1] * o[2 * 3 + 0];\r\n    const t33 = o[0 * 3 + 0] * o[1 * 3 + 1] - o[0 * 3 + 1] * o[1 * 3 + 0];\r\n\r\n    const d = 1.0 / (o[0 * 3 + 0] * t11 - o[1 * 3 + 0] * t12 + o[2 * 3 + 0] * t13);\r\n\r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    o[0] = d * t11;\r\n    o[1] = -d * t12;\r\n    o[2] = d * t13;\r\n\r\n    o[3] = -d * t21;\r\n    o[4] = d * t22;\r\n    o[5] = -d * t23;\r\n\r\n    o[6] = d * t31;\r\n    o[7] = -d * t32;\r\n    o[8] = d * t33;\r\n\r\n    return this;\r\n  }\r\n\r\n  add(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] + m[0];\r\n    o[1] = o[1] + m[1];\r\n    o[2] = o[2] + m[2];\r\n    o[3] = o[3] + m[3];\r\n    o[4] = o[4] + m[4];\r\n    o[5] = o[5] + m[5];\r\n    o[6] = o[6] + m[6];\r\n    o[7] = o[7] + m[7];\r\n    o[8] = o[8] + m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  sub(mat: Matrix3Base): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] - m[0];\r\n    o[1] = o[1] - m[1];\r\n    o[2] = o[2] - m[2];\r\n    o[3] = o[3] - m[3];\r\n    o[4] = o[4] - m[4];\r\n    o[5] = o[5] - m[5];\r\n    o[6] = o[6] - m[6];\r\n    o[7] = o[7] - m[7];\r\n    o[8] = o[8] - m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  mult(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    const a11 = o[0 * 3 + 0];\r\n    const a12 = o[0 * 3 + 1];\r\n    const a13 = o[0 * 3 + 2];\r\n    const a21 = o[1 * 3 + 0];\r\n    const a22 = o[1 * 3 + 1];\r\n    const a23 = o[1 * 3 + 2];\r\n    const a31 = o[2 * 3 + 0];\r\n    const a32 = o[2 * 3 + 1];\r\n    const a33 = o[2 * 3 + 2];\r\n    const b11 = m[0 * 3 + 0];\r\n    const b12 = m[0 * 3 + 1];\r\n    const b13 = m[0 * 3 + 2];\r\n    const b21 = m[1 * 3 + 0];\r\n    const b22 = m[1 * 3 + 1];\r\n    const b23 = m[1 * 3 + 2];\r\n    const b31 = m[2 * 3 + 0];\r\n    const b32 = m[2 * 3 + 1];\r\n    const b33 = m[2 * 3 + 2];\r\n\r\n    o[0] = b11 * a11 + b12 * a21 + b13 * a31;\r\n    o[1] = b11 * a12 + b12 * a22 + b13 * a32;\r\n    o[2] = b11 * a13 + b12 * a23 + b13 * a33;\r\n    o[3] = b21 * a11 + b22 * a21 + b23 * a31;\r\n    o[4] = b21 * a12 + b22 * a22 + b23 * a32;\r\n    o[5] = b21 * a13 + b22 * a23 + b23 * a33;\r\n    o[6] = b31 * a11 + b32 * a21 + b33 * a31;\r\n    o[7] = b31 * a12 + b32 * a22 + b33 * a32;\r\n    o[8] = b31 * a13 + b32 * a23 + b33 * a33;\r\n\r\n    return this;\r\n  }\r\n\r\n  multScalar(k: number): this {\r\n    const o = this.array;\r\n\r\n    o[0] = o[0] * k;\r\n    o[1] = o[1] * k;\r\n    o[2] = o[2] * k;\r\n    o[3] = o[3] * k;\r\n    o[4] = o[4] * k;\r\n    o[5] = o[5] * k;\r\n    o[6] = o[6] * k;\r\n    o[7] = o[7] * k;\r\n    o[8] = o[8] * k;\r\n\r\n    return this;\r\n  }\r\n\r\n  writeIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst m = this.array;\r\n\r\n\t\tout[offset     ] = m[ 0];\r\n\t\tout[offset +  1] = m[ 1];\r\n    out[offset +  2] = m[ 2];\r\n    out[offset +  3] = m[ 3];\r\n\t\tout[offset +  4] = m[ 4];\r\n    out[offset +  5] = m[ 5];\r\n    out[offset +  6] = m[ 6];\r\n\t\tout[offset +  7] = m[ 7];\r\n    out[offset +  8] = m[ 8];\r\n  }\r\n    \r\n  readFromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[ 0] = arr[offset     ];\r\n\t\to[ 1] = arr[offset +  1];\r\n    o[ 2] = arr[offset +  2];\r\n    o[ 3] = arr[offset +  3];\r\n    o[ 4] = arr[offset +  4];\r\n    o[ 5] = arr[offset +  5];\r\n    o[ 6] = arr[offset +  6];\r\n\t\to[ 7] = arr[offset +  7];\r\n    o[ 8] = arr[offset +  8];\r\n  }\r\n\r\n  static rotationX(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationX(angle);\r\n  }\r\n\r\n  setRotationX(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = 1;\r\n    this.array[1] = 0;\r\n    this.array[2] = 0;\r\n    this.array[3] = 0;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = sinAngle;\r\n    this.array[6] = 0;\r\n    this.array[7] = -sinAngle;\r\n    this.array[8] = cosAngle;\r\n\r\n    return this;\r\n  }\r\n  \r\n  static rotationY(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationY(angle);\r\n  }\r\n\r\n  setRotationY(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n    \r\n    this.array[0] = cosAngle;\r\n    this.array[1] = 0;\r\n    this.array[2] = -sinAngle;\r\n    this.array[3] = 0;\r\n    this.array[4] = 1;\r\n    this.array[5] = 0;\r\n    this.array[6] = sinAngle;\r\n    this.array[7] = 0;\r\n    this.array[8] = cosAngle;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static rotationZ(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationZ(angle);\r\n  }\r\n\r\n  setRotationZ(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = cosAngle;\r\n    this.array[1] = sinAngle;\r\n    this.array[2] = 0;\r\n    this.array[3] = -sinAngle;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = 0;\r\n    this.array[6] = 0;\r\n    this.array[7] = 0;\r\n    this.array[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  solve(b: Vector3): Vector3Values {\r\n    const a  = this.array;\r\n\r\n    const A0x = a[0];\r\n    const A0y = a[3];\r\n    const A0z = a[6];\r\n    const A1x = a[1];\r\n    const A1y = a[4];\r\n    const A1z = a[7];\r\n    const A2x = a[2];\r\n    const A2y = a[5];\r\n    const A2z = a[8];\r\n    let rx, ry, rz;\r\n    let det;\r\n\r\n    // Column1 cross Column 2\r\n    rx = A1y * A2z - A1z * A2y;\r\n    ry = A1z * A2x - A1x * A2z;\r\n    rz = A1x * A2y - A1y * A2x;\r\n\r\n    // A.getColumn(0).dot(x)\r\n    det = A0x * rx + A0y * ry + A0z * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    // b dot [Column1 cross Column 2]\r\n    const x_ = det * (b.x * rx + b.y * ry + b.z * rz);\r\n\r\n    // Column2 cross b\r\n    rx = -(A2y * b.z - A2z * b.y);\r\n    ry = -(A2z * b.x - A2x * b.z);\r\n    rz = -(A2x * b.y - A2y * b.x);\r\n    // Column0 dot -[Column2 cross b (Column3)]\r\n    const y_ = det * (A0x * rx + A0y * ry + A0z * rz);\r\n\r\n    // b cross Column 1\r\n    rx = -(b.y * A1z - b.z * A1y);\r\n    ry = -(b.z * A1x - b.x * A1z);\r\n    rz = -(b.x * A1y - b.y * A1x);\r\n    // Column0 dot -[b cross Column 1]\r\n    const z_ = det * (A0x * rx + A0y * ry + A0z * rz);\r\n    return [x_, y_, z_];\r\n    /*const a = this.array;\r\n    \r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a13 = a[2];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const a23 = a[5];\r\n    const a31 = a[6];\r\n    const a32 = a[7];\r\n    const a33 = a[8];\r\n    const bx = vecB.x;\r\n    const by = vecB.y;\r\n    const bz = vecB.z;\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n  \r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n    \r\n    return [\r\n      x, y, z\r\n    ];*/\r\n  }\r\n\r\n  solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const bx = vecB.x - a[4];\r\n    const by = vecB.y - a[7];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by)\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n}\r\n\r\nvar Matrix3: Matrix3Constructor = Matrix3Base;\r\nconst Matrix3Injector: Injector<Matrix3Constructor> = new Injector({\r\n\tdefaultCtor: Matrix3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix3Constructor) => {\r\n\t\t\tMatrix3 = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Space } from \"../../geometry/space/Space\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { qSqrt } from \"../../Snippets\";\r\nimport { Matrix3 } from \"../matrices/Matrix3\";\r\nimport { Matrix4 } from \"../matrices/Matrix4\";\r\nimport { Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { QuaternionValues };\r\nexport { Quaternion };\r\nexport { QuaternionInjector };\r\nexport { QuaternionPool };\r\n\r\ntype QuaternionValues = [number, ...number[]] & { length: 4 };\r\n\r\ninterface QuaternionConstructor {\r\n\treadonly prototype: Quaternion;\r\n\tnew(): Quaternion;\r\n\tnew(x: number, y: number, z: number, w: number): Quaternion;\r\n\tnew(array: WritableArrayLike<number>): Quaternion;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tslerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tfromArray(vector: ArrayLike<number>): Quaternion;\r\n\tfromAxisAngle(axis: Vector3, angle?: number): Quaternion;\r\n\tfromEuler(pitch: number, yaw: number, roll: number): Quaternion;\r\n\tfromVector(vector: Vector3): Quaternion;\r\n\tfromMatrix(matrix: Matrix3): Quaternion;\r\n}\r\n// TODO?:\r\n// roll => pitch\r\n// pitch => yaw\r\n// yaw => roll\r\ninterface Quaternion {\r\n\treadonly array: WritableArrayLike<number>;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\tw: number;\r\n\tpitch: number;\r\n\tyaw: number;\r\n\troll: number;\r\n\tgetValues(): QuaternionValues;\r\n\tsetValues(\r\n\t  x: number, y: number,\r\n\t  z: number, w: number\r\n\t): this;\r\n\t//setArray(array: WritableArrayLike<number>): this;\r\n\tlookAt(source: Vector3, dest: Vector3): Quaternion ;\r\n\tsetEuler(pitch: number, yaw: number, roll: number): this;\r\n\r\n\tsetMatrix(matrix: Matrix3): Quaternion;\r\n\tsetMatrix(matrix: Matrix4): Quaternion;\r\n\r\n\tsetAxisAngle(axis: Vector3, angle: number): this;\r\n\tsetVectors(from: Vector3, to: Vector3): this;\r\n\t\r\n\tcopy(quat: Quaternion): this;\r\n\tclone(): this;\r\n\tgetAxis(out: Vector3): Vector3;\r\n\r\n\tgetMatrix3(matrix: Matrix3): Matrix3;\r\n\tgetMatrix4(matrix: Matrix4): Matrix4;\r\n\r\n\trotate(vec: Vector3): Vector3;\r\n\ttoVector(): Vector3;\r\n\r\n\tangleTo(quat: Quaternion): number;\r\n\trotateTowards(quat: Quaternion): this;\r\n\tinvert(): this;\r\n\tconjugate(): this;\r\n\tdot(quat: Quaternion): number;\r\n\tlengthSquared(): number;\r\n\tlength(): number;\r\n\tnormalize(): this;\r\n\tadd(quat: Quaternion): this;\r\n\tsub(quat: Quaternion): this;\r\n\tmult(quat: Quaternion): this;\r\n\tscale(scalar: number): this;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): this;\r\n\tequals(quat: Quaternion): boolean;\r\n\tcopyIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass QuaternionBase {\r\n\tprivate _array: WritableArrayLike<number>;\r\n\r\n\tget array(): WritableArrayLike<number> {\r\n\t\treturn this._array;\r\n\t}\r\n\r\n\tconstructor()\r\n\tconstructor(array: WritableArrayLike<number>)\r\n\tconstructor(x: number, y: number, z: number, w: number)\r\n\tconstructor(...args: any[]) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis._array = [\r\n\t\t\t\targs[0], args[1], args[2], args[3]\r\n\t\t\t];\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tthis._checkArray(args[0]);\r\n\t\t\tthis._array = args[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._array = [0, 0, 0, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tget x(): number {\r\n        return this._array[0];\r\n    }\r\n\r\n    set x(x: number) {\r\n\t\tthis._array[0] = x;\r\n    }\r\n\r\n    get y(): number {\r\n        return this._array[1];\r\n    }\r\n\r\n    set y(y: number) {\r\n\t\tthis._array[1] = y;\r\n    }\r\n\r\n    set z(z: number) {\r\n\t\tthis._array[2] = z;\r\n\t}\r\n\t\r\n    get z(): number {\r\n\t\treturn this._array[2];\r\n    }\r\n\r\n    set w(w: number) {\r\n\t\tthis._array[3] = w;\r\n\t}\r\n\r\n    get w(): number {\r\n\t\treturn this._array[3];\r\n\t}\r\n\t\r\n\tget pitch(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinPitch = 2 * (w * y - z * x);\r\n\t\tif (Math.abs(sinPitch) >= 1) {\r\n            return Math.sign(sinPitch) * (Math.PI / 2);\r\n        }\r\n\t\telse {\r\n            return Math.asin(sinPitch);\r\n        }\r\n\t}\r\n\r\n\tget yaw(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinYawCosPitch = 2 * (w * z + x * y);\r\n\t\tconst cosYawCosPitch = 1 - 2 * (y * y + z * z);\r\n\t\treturn Math.atan2(sinYawCosPitch, cosYawCosPitch);\r\n\t}\r\n\r\n\tget roll(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinRollCosPitch = 2 * (w * x + y * z);\r\n\t\tconst cosRollCosPitch = 1 - 2 * (x * x + y * y);\r\n\t\treturn Math.atan2(sinRollCosPitch, cosRollCosPitch);\r\n\t}\r\n\r\n\tgetValues(): QuaternionValues {\r\n\t\treturn [\r\n\t\t\tthis._array[0],\r\n\t\t\tthis._array[1],\r\n\t\t\tthis._array[2],\r\n\t\t\tthis._array[3]\r\n\t\t];\r\n\t}\r\n\r\n\tsetValues(x: number, y: number, z: number, w: number): this {\r\n\t\tthis._array[0] = x;\r\n\t\tthis._array[1] = y;\r\n\t\tthis._array[2] = z;\r\n\t\tthis._array[3] = w;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate _checkArray(array: WritableArrayLike<number>): void {\r\n\t\tif (array.length < 4) {\r\n\t\t\tthrow new MathError(`Array must be of length 4 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t/*setArray(array: WritableArrayLike<number>): this {\r\n\t\tthis._checkArray(array);\r\n\t\tthis._array = array;\r\n\t\treturn this;\r\n\t}*/\r\n\r\n\tstatic fromArray(array: WritableArrayLike<number>): QuaternionBase {\r\n\t\treturn new QuaternionBase(array);\r\n\t}\r\n\r\n\tstatic fromAxisAngle(axis: Vector3, angle: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setAxisAngle(axis, angle);\r\n\t}\r\n\r\n\tstatic fromVector(vector: Vector3): QuaternionBase {\r\n\t\treturn new QuaternionBase(vector.x, vector.y, vector.z, 1);\r\n\t}\r\n\t\r\n\tstatic fromEuler(yaw: number, pitch: number, roll: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setEuler(yaw, pitch, roll);\r\n\t}\r\n\r\n\tcopy(quat: Quaternion): this {\r\n\t\tconst o = this._array;\r\n\t\tconst q = quat.array;\r\n\r\n\t\to[0] = q[0];\r\n\t\to[1] = q[1];\r\n\t\to[2] = q[2];\r\n\t\to[3] = q[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new QuaternionBase(this.x, this.y, this.z, this.w) as this;\r\n\t}\r\n\r\n\tequals(quat: Quaternion): boolean {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\treturn (thisArray[0] === quatArray[0])\r\n\t\t\t&& (thisArray[1] === quatArray[1])\r\n\t\t\t&& (thisArray[2] === quatArray[2])\r\n\t\t\t&& (thisArray[3] === quatArray[3]);\r\n\t}\r\n\r\n\tgetAxis(out: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst outArray = out.array;\r\n\r\n\t\tconst den = 1 - (thisArray[3] * thisArray[3]);\r\n\r\n\t\tif (den < Number.EPSILON) {\r\n\t\t  return out.setZeros();\r\n\t\t}\r\n\t  \r\n\t\tconst scale = qSqrt(den);\r\n\t\t\r\n\t\toutArray[0] = thisArray[0] * scale;\r\n\t\toutArray[1] = thisArray[1] * scale;\r\n\t\toutArray[2] = thisArray[2] * scale;\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\tgetMatrix3(matrix: Matrix3): Matrix3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst thisLengthSquared = this.lengthSquared();\r\n\t\tconst s = 2.0 / thisLengthSquared;\r\n\r\n\t\tconst x = thisArray[0];\r\n\t\tconst y = thisArray[1];\r\n\t\tconst z = thisArray[2];\r\n\t\tconst w = thisArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n\t\treturn matrix.setValues(\r\n\t\t\t1 - (yy + zz),\txy + wz,\t\txz - wy,\r\n\t\t\txy - wz,\t\t1 - (xx + zz),\tyz + wx,\r\n\t\t\txz + wy,\t\tyz - wx,\t\t1 - (xx + yy)\r\n\t\t);\r\n\t}\r\n\r\n\tgetMatrix4(matrix: Matrix4): Matrix4 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst thisLengthSquared = this.lengthSquared();\r\n\t\tconst s = 2.0 / thisLengthSquared;\r\n\r\n\t\tconst x = thisArray[0];\r\n\t\tconst y = thisArray[1];\r\n\t\tconst z = thisArray[2];\r\n\t\tconst w = thisArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n\t\treturn matrix.setValues(\r\n\t\t\t1 - (yy + zz),\txy + wz,\t\txz - wy, \t\t0,\r\n\t\t\txy - wz,\t\t1 - (xx + zz),\tyz + wx, \t\t0,\r\n\t\t\txz + wy,\t\tyz - wx,\t\t1 - (xx + yy), \t0,\r\n\t\t\t0, \t\t\t\t0, \t\t\t\t0, \t\t\t\t1\r\n\t\t);\r\n\t}\r\n\r\n\trotate(vector: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst vectorArray = vector.array;\r\n\r\n\t\tconst vx = vectorArray[0];\r\n\t\tconst vy = vectorArray[1];\r\n\t\tconst vz = vectorArray[2];\t\t\r\n\t\t\r\n\t\tconst qx = thisArray[0];\r\n\t\tconst qy = thisArray[1];\r\n\t\tconst qz = thisArray[2];\r\n\t\tconst qw = thisArray[3];\r\n\r\n\t\tconst tx = qw * vx + -qx * 0 + -qy * vz + qz * vy;\r\n\t\tconst ty = qw * vy + -qy * 0 + -qz * vx + qx * vz;\r\n\t\tconst tz = qw * vz + -qz * 0 + -qx * vy + qy * vx;\r\n\t\tconst tw = qx * vx + qw * 0 + qy * vy + qz * vz;\r\n\r\n\t\tvectorArray[0] = tw * qz + tz * qw + tx * qy - ty * qx;\r\n\t\tvectorArray[1] = tw * qy + ty * qw + tz * qx - tx * qz;\r\n\t\tvectorArray[2] = tw * qx + tx * qw + ty * qz - tz * qy;\r\n\r\n\t\treturn vector;\r\n\t}\r\n\r\n\ttoVector(): Vector3 {\r\n\t\treturn new Vector3([\r\n\t\t\tthis.x, this.y, this.z\r\n\t\t]);\r\n\t}\r\n\t\r\n\tsetEuler(pitch: number, yaw: number, roll: number): this {\r\n\t\tconst cosYaw = Math.cos(yaw * 0.5);\r\n\t\tconst sinYaw = Math.sin(yaw * 0.5);\r\n\t\tconst cosPitch = Math.cos(pitch * 0.5);\r\n\t\tconst sinPitch = Math.sin(pitch * 0.5);\r\n\t\tconst cosRoll = Math.cos(roll * 0.5);\r\n\t\tconst sinRoll = Math.sin(roll * 0.5);\r\n\t\tconst thisArray = this.array;\r\n\r\n        thisArray[0] = sinRoll * cosPitch * cosYaw - cosRoll * sinPitch * sinYaw;\r\n        thisArray[1] = cosRoll * sinPitch * cosYaw + sinRoll * cosPitch * sinYaw;\r\n        thisArray[2] = cosRoll * cosPitch * sinYaw - sinRoll * sinPitch * cosYaw;\r\n\t\tthisArray[3] = cosRoll * cosPitch * cosYaw + sinRoll * sinPitch * sinYaw;\r\n        \r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetAxisAngle(axis: Vector3, angle: number = 0): this {\r\n\t\tconst axisLength = axis.length();\r\n\t\tif (axisLength === 0) {\r\n\t\t  return this;\r\n\t\t}\r\n\t\tconst halfSin = Math.sin(angle * 0.5) / axisLength;\r\n\t\tconst axisArray = axis.array;\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] = axisArray[0] * halfSin;\r\n\t\tthisArray[1] = axisArray[1] * halfSin;\r\n\t\tthisArray[2] = axisArray[2] * halfSin;\r\n\t\tthisArray[3] = Math.cos(angle * 0.5);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetMatrix(matrix: Matrix3): this\r\n\tsetMatrix(matrix: Matrix4): this\r\n\tsetMatrix(matrix: Matrix3 | Matrix4): this {\r\n\t\tconst matrixArray = matrix.array;\r\n\t\tlet m11 = 0, m12 = 0, m13 = 0,\r\n\t\t\tm21 = 0, m22 = 0, m23 = 0,\r\n\t\t\tm31 = 0, m32 = 0, m33 = 0;\r\n\r\n\t\tif (matrix instanceof Matrix3) {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[3], m13 = matrixArray[6],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[4], m23 = matrixArray[7],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[5], m33 = matrixArray[8];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[4], m13 = matrixArray[ 8],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[5], m23 = matrixArray[ 9],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[6], m33 = matrixArray[10];\r\n\t\t}\r\n\r\n\t\tconst trace = m11 + m22 + m33;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tif (trace > 0) {\r\n\t\t\tconst s = Math.sqrt(trace + 1) * 2;\r\n\t\t\tthisArray[3] = 0.25 * s;\r\n\t\t\tthisArray[0] = (m32 - m23) / s;\r\n\t\t\tthisArray[1] = (m13 - m31) / s;\r\n\t\t\tthisArray[2] = (m21 - m12) / s;\r\n\t\t}\r\n\t\telse if (m11 > m22 && m11 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n\t\t\tthisArray[3] = (m32 - m23) / s;\r\n\t\t\tthisArray[0] = 0.25 * s;\r\n\t\t\tthisArray[1] = (m12 + m21) / s;\r\n\t\t\tthisArray[2] = (m13 + m31) / s;\r\n\t\t}\r\n\t\telse if (m22 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n\t\t\tthisArray[3] = (m13 - m31) / s;\r\n\t\t\tthisArray[0] = (m12 + m21) / s;\r\n\t\t\tthisArray[1] = 0.25 * s;\r\n\t\t\tthisArray[2] = (m23 + m32) / s;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n\t\t\tthisArray[3] = (m21 - m12) / s;\r\n\t\t\tthisArray[0] = (m13 + m31) / s;\r\n\t\t\tthisArray[1] = (m23 + m32) / s;\r\n\t\t\tthisArray[2] = 0.25 * s;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlookAt(source: Vector3, dest: Vector3): Quaternion {\r\n\t\tconst forward = dest.clone().sub(source).normalize();\r\n\r\n\t\tconst axis = Space.forward.clone().cross(forward);\r\n\t\tconst dot = Space.forward.dot(forward);\r\n\r\n\t\treturn new Quaternion(axis.x, axis.y, axis.z, dot + 1).normalize();\r\n\t}\r\n\r\n\tstatic fromMatrix(matrix: Matrix3): QuaternionBase {\r\n\t\treturn new QuaternionBase().setMatrix(matrix);\r\n\t}\r\n\r\n\tsetVectors(from: Vector3, to: Vector3): this {\r\n\t\tconst dot = from.dot(to);\r\n\t\tconst cross = from.cross(to);\r\n\t\tconst crossArray = cross.array;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = crossArray[0];\r\n\t\tthisArray[1] = crossArray[1];\r\n\t\tthisArray[2] = crossArray[2];\r\n\r\n\t\tconst fromLength = from.length();\r\n\t\tconst toLength = from.length();\r\n\r\n\t\tthisArray[3] = Math.sqrt(fromLength * fromLength * toLength * toLength) + dot;\r\n\r\n\t\treturn this.normalize();\r\n\t}\r\n\r\n\tdot(quat: Quaternion): number {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\treturn thisArray[0] * quatArray[0] + thisArray[1] * quatArray[1] + thisArray[2] * quatArray[2] + thisArray[3] * quatArray[3];\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn thisArray[0] ** 2 + thisArray[1] ** 2 + thisArray[2] ** 2 + thisArray[3] ** 2;\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn Math.hypot(thisArray[0], thisArray[1], thisArray[2], thisArray[3]);\r\n\t}\r\n\r\n\tangleTo(rotation: Quaternion): number {\r\n\t\treturn 2 * Math.acos(Math.abs(Math.max(-1, Math.min(1, this.dot(rotation)))));\r\n\t}\r\n\r\n\trotateTowards(rotation: Quaternion): this {\r\n\t\tconst angle = this.angleTo(rotation);\r\n\r\n\t\tif (angle === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconst t = Math.min(1, angle);\r\n\t\tthis.slerp(this, rotation, t);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tinvert(): this {\r\n\t\treturn this.conjugate();\r\n\t}\r\n\t\r\n\tconjugate(): this {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] *= -1;\r\n\t\tthisArray[1] *= -1;\r\n\t\tthisArray[2] *= -1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tlet length = this.length();\r\n\r\n\t\tif (length === 0) {\r\n\t\t\tthisArray[0] = 0;\r\n\t\t\tthisArray[1] = 0;\r\n\t\t\tthisArray[2] = 0;\r\n\t\t\tthisArray[3] = 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlength = 1 / length;\r\n\t\t\tthisArray[0] *= length;\r\n\t\t\tthisArray[1] *= length;\r\n\t\t\tthisArray[2] *= length;\r\n\t\t\tthisArray[3] *= length;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tadd(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] += quatArray[0];\r\n\t\tthisArray[1] += quatArray[1];\r\n\t\tthisArray[2] += quatArray[2];\r\n\t\tthisArray[3] += quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] -= quatArray[0];\r\n\t\tthisArray[1] -= quatArray[1];\r\n\t\tthisArray[2] -= quatArray[2];\r\n\t\tthisArray[3] -= quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\tconst ax = thisArray[0], ay = thisArray[1], az = thisArray[2], aw = thisArray[3];\r\n\t\tconst bx = quatArray[0], by = quatArray[1], bz = quatArray[2], bw = quatArray[3];\r\n\r\n\t\tthisArray[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n\t\tthisArray[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n\t\tthisArray[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n\t\tthisArray[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tscale(scalar: number): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] *= scalar;\r\n\t\tthisArray[1] *= scalar;\r\n\t\tthisArray[2] *= scalar;\r\n\t\tthisArray[3] *= scalar;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number, out?: Quaternion): Quaternion {\r\n\t\tif (!(out instanceof Quaternion)) {\r\n\t\t\tout = new Quaternion();\r\n\t\t}\r\n\t\tif (t === 0) return out.copy(from);\r\n\t\tif (t === 1) return out.copy(to);\r\n\r\n\t\tconst outArray = out.array;\r\n\t\tconst fromArray = from.array;\r\n\t\tconst toArray = to.array;\r\n\r\n\t\tconst cosHalfTheta = fromArray[3] * toArray[3] + fromArray[0] * toArray[0] + fromArray[1] * toArray[1] + fromArray[2] * toArray[2];\r\n\t\t\r\n\t\tif (Math.abs(cosHalfTheta) >= 1) {\r\n\t\t\toutArray[3] = fromArray[3];\r\n\t\t\toutArray[0] = fromArray[0];\r\n\t\t\toutArray[1] = fromArray[1];\r\n\t\t\toutArray[2] = fromArray[2];\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst halfTheta = Math.acos(cosHalfTheta);\r\n\t\tconst sinHalfTheta = Math.sqrt(1 - cosHalfTheta * cosHalfTheta);\r\n\t\t\r\n\t\tif (Math.abs(sinHalfTheta - Math.trunc(sinHalfTheta)) < Number.EPSILON) {\r\n\t\t\toutArray[3] = (fromArray[3] * 0.5 + toArray[3] * 0.5);\r\n\t\t\toutArray[0] = (fromArray[0] * 0.5 + toArray[0] * 0.5);\r\n\t\t\toutArray[1] = (fromArray[1] * 0.5 + toArray[1] * 0.5);\r\n\t\t\toutArray[2] = (fromArray[2] * 0.5 + toArray[2] * 0.5);\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta;\r\n\t\tconst ratioB = Math.sin(t * halfTheta) / sinHalfTheta; \r\n\t\toutArray[3] = (fromArray[3] * ratioA + toArray[3] * ratioB);\r\n\t\toutArray[0] = (fromArray[0] * ratioA + toArray[0] * ratioB);\r\n\t\toutArray[1] = (fromArray[1] * ratioA + toArray[1] * ratioB);\r\n\t\toutArray[2] = (fromArray[2] * ratioA + toArray[2] * ratioB);\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * https://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t */\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): this {\r\n\t\treturn Quaternion.slerp(from, to, t, this) as this;\r\n\t}\r\n\r\n\tcopyIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tarray[offset    ] = thisArray[0];\r\n\t\tarray[offset + 1] = thisArray[1];\r\n\t\tarray[offset + 2] = thisArray[2];\r\n\t\tarray[offset + 3] = thisArray[3];\r\n    }\r\n    \r\n    readFromArray(array: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = array[offset    ];\r\n\t\tthisArray[1] = array[offset + 1];\r\n\t\tthisArray[2] = array[offset + 2];\r\n\t\tthisArray[3] = array[offset + 3];\r\n    }\r\n}\r\n\r\nvar Quaternion: QuaternionConstructor = QuaternionBase;\r\nconst QuaternionPool: StackPool<Quaternion> = new StackPool(QuaternionBase);\r\nconst QuaternionInjector: Injector<QuaternionConstructor> = new Injector({\r\n\tdefaultCtor: QuaternionBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: QuaternionConstructor) => {\r\n\t\t\tQuaternion = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Quaternion } from \"../quaternions/Quaternion\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"../vectors/Vector3\";\r\nimport { Vector4, Vector4Values } from \"../vectors/Vector4\";\r\nimport { Matrix3, Matrix3Values } from \"./Matrix3\";\r\n\r\nexport { Matrix4Values };\r\nexport { Matrix4 };\r\nexport { Matrix4Injector };\r\nexport { Matrix4Base };\r\n\r\ntype Matrix4Values = [\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number\r\n];\r\n\r\ninterface Matrix4Constructor {\r\n\treadonly prototype: Matrix4;\r\n\tnew(): Matrix4;\r\n\tnew(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  new(array: ArrayLike<number>): Matrix4;\r\n\r\n  fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  fromArray(array: ArrayLike<number>): Matrix4;\r\n\r\n  invert(A: Matrix4, out: Matrix4): Matrix4;\r\n  transpose(A: Matrix4, out: Matrix4): Matrix4;\r\n  add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n\r\n  identity(): Matrix4;\r\n  zeros(): Matrix4;\r\n\r\n  translation(vector: Vector3): Matrix4;\r\n  rotationX(angle: number): Matrix4;\r\n  rotationY(angle: number): Matrix4;\r\n  rotationZ(angle: number): Matrix4;\r\n  rotation(matrix: Matrix3): Matrix4;\r\n  scaling(vector: Vector3): Matrix4;\r\n  \r\n  perspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): Matrix4;\r\n  orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n  frustum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n}\r\n\r\n/**\r\n * 4x4 matrix. Values are stored in column major order.\r\n */\r\ninterface Matrix4 {\r\n  readonly array: Float32Array;\r\n  getValues(): Matrix4Values\r\n  setValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this;\r\n  /*row1: Vector4Values;\r\n  row2: Vector4Values;\r\n  row3: Vector4Values;\r\n  row4: Vector4Values;\r\n  col1: Vector4Values;\r\n  col2: Vector4Values;\r\n  col3: Vector4Values;\r\n  col4: Vector4Values;*/\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m14: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m24: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  m34: number;\r\n  m41: number;\r\n  m42: number;\r\n  m43: number;\r\n  m44: number;\r\n  //setArray(array: WritableArrayLike<number>): this;\r\n  getRotation(): Quaternion;\r\n  setRotation(rotation: Quaternion): this;\r\n  setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this;\r\n  equals(mat: Matrix4): boolean;\r\n  copy(mat: Matrix4): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix4): this;\r\n  sub(mat: Matrix4): this;\r\n  mult(mat: Matrix4): this;\r\n\r\n  getMaxScaleOnAxis(): number;\r\n  solve(vecB: Vector4): Vector4Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  solve3(vecB: Vector3): Vector3Values;\r\n\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n\r\n  setTranslation(vector: Vector3): this;\r\n  translate(vector: Vector3): this;\r\n\r\n  setRotationX(angle: number): this;\r\n  rotateX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  rotateY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n  rotateZ(angle: number): this;\r\n\r\n  rotate(vector: Vector3, angle: number): this\r\n  rotation(matrix: Matrix3): this;\r\n\r\n  setScaling(vector: Vector3): this;\r\n  scale(vector: Vector3): this;\r\n\r\n  lookAt(eye: Vector3 | Vector3Values, target: Vector3, up: Vector3): this;\r\n\r\n  transformPoint(point: Vector3): Vector3;\r\n  transformPoint4(point: Vector4): Vector4;\r\n  transformDirection(direction: Vector3): Vector3;\r\n  transformNormal(normal: Vector3): Vector3;\r\n  \r\n  setFrustum(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n  setPerspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): this;\r\n  setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n}\r\n\r\nclass Matrix4Base implements Matrix4 {\r\n  readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  )\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[ 0], args[ 1], args[ 2], args[ 3],\r\n        args[ 4], args[ 5], args[ 6], args[ 7],\r\n        args[ 8], args[ 9], args[10], args[11],\r\n        args[12], args[13], args[14], args[15]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array(16);\r\n\t\t}\r\n  }\r\n\r\n  static fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4Base {\r\n    return new Matrix4Base(\r\n      m11, m21, m31, m41,\r\n      m12, m22, m32, m42,\r\n      m13, m23, m33, m43,\r\n      m14, m24, m34, m44\r\n    );\r\n  }\r\n\r\n  static fromArray(array: ArrayLike<number>): Matrix4Base {\r\n    if (array.length < 16) {\r\n      throw new Error(`Matrix4 needs an array of size 16 at least.`);\r\n    }\r\n    return new Matrix4Base(array);\r\n  }\r\n\r\n  getValues(): Matrix4Values {\r\n    const thisArray = this.array;\r\n\t\treturn [\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ];\r\n\t}\r\n\r\n\tsetValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 3] = m41;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 7] = m42;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n    thisArray[11] = m43;\r\n    thisArray[12] = m14;\r\n    thisArray[13] = m24;\r\n    thisArray[14] = m34;\r\n    thisArray[15] = m44;\r\n\r\n    return this;\r\n  }\r\n  \r\n  get m11(): number {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  get m12() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tset m12(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  get m13() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n\tset m13(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n  \r\n  get m14() {\r\n\t\treturn this.array[12];\r\n\t}\r\n\r\n\tset m14(val: number) {\r\n\t\tthis.array[12] = val;\r\n  }\r\n  \r\n  get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  get m22() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tset m22(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  get m23() {\r\n\t\treturn this.array[9];\r\n\t}\r\n\r\n\tset m23(val: number) {\r\n\t\tthis.array[9] = val;\r\n  }\r\n  \r\n  get m24() {\r\n\t\treturn this.array[13];\r\n\t}\r\n\r\n\tset m24(val: number) {\r\n\t\tthis.array[13] = val;\r\n  }\r\n  \r\n  get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  get m32() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tset m32(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  get m33() {\r\n\t\treturn this.array[10];\r\n\t}\r\n\r\n  set m33(val: number) {\r\n\t\tthis.array[10] = val;\r\n  }\r\n  \r\n  get m34() {\r\n\t\treturn this.array[14];\r\n\t}\r\n\r\n\tset m34(m34: number) {\r\n\t\tthis.array[14] = m34;\r\n  }\r\n  \r\n  get m41() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset m41(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  get m42() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tset m42(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  get m43() {\r\n\t\treturn this.array[11];\r\n\t}\r\n\r\n\tset m43(val: number) {\r\n\t\tthis.array[11] = val;\r\n  }\r\n  \r\n  get m44() {\r\n\t\treturn this.array[15];\r\n\t}\r\n\r\n\tset m44(m44: number) {\r\n\t\tthis.array[15] = m44;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 16) {\r\n\t\t\tthrow new MathError(`Array must be of length 16 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t// setArray(array: WritableArrayLike<number>): this {\r\n\t// \tthis._checkArray(array);\r\n\t// \tthisArray = array;\r\n\t// \treturn this;\r\n\t// }\r\n\r\n  getRotation(): Quaternion {\r\n    const thisArray = this.array;\r\n    const m11 = thisArray[0], m12 = thisArray[4], m13 = thisArray[ 8],\r\n          m21 = thisArray[1], m22 = thisArray[5], m23 = thisArray[ 9],\r\n          m31 = thisArray[2], m32 = thisArray[6], m33 = thisArray[10];\r\n    const trace = m11 + m22 + m33;\r\n    \r\n    let x = 0;\r\n    let y = 0;\r\n    let z = 0;\r\n    let w = 0;\r\n\r\n    if (trace > 0) {\r\n      const s = Math.sqrt(trace + 1) * 2;\r\n      w = 0.25 * s;\r\n      x = (m32 - m23) / s;\r\n      y = (m13 - m31) / s;\r\n      z = (m21 - m12) / s;\r\n    }\r\n    else if (m11 > m22 && m11 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n      w = (m32 - m23) / s;\r\n      x = 0.25 * s;\r\n      y = (m12 + m21) / s;\r\n      z = (m13 + m31) / s;\r\n    }\r\n    else if (m22 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n      w = (m13 - m31) / s;\r\n      x = (m12 + m21) / s;\r\n      y = 0.25 * s;\r\n      z = (m23 + m32) / s;\r\n    }\r\n    else {\r\n      const s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n      w = (m21 - m12) / s;\r\n      x = (m13 + m31) / s;\r\n      y = (m23 + m32) / s;\r\n      z = 0.25 * s;\r\n    }\r\n    \r\n    return new Quaternion(x, y, z, w);\r\n  }\r\n\r\n  setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this {\r\n    const thisArray = this.array;\r\n    const rotationArray = rotation.array;\r\n    const translationArray = translation.array;\r\n    const scalingArray = scaling.array;\r\n\r\n    const x = rotationArray[0];\r\n    const y = rotationArray[1];\r\n    const z = rotationArray[2];\r\n    const w = rotationArray[3];\r\n\r\n    const x2 = x + x;\r\n    const y2 = y + y;\r\n    const z2 = z + z;\r\n\r\n    const xx = x * x2;\r\n    const xy = x * y2;\r\n    const xz = x * z2;\r\n    const yy = y * y2;\r\n    const yz = y * z2;\r\n    const zz = z * z2;\r\n    const wx = w * x2;\r\n    const wy = w * y2;\r\n    const wz = w * z2;\r\n    const sx = scalingArray[0];\r\n    const sy = scalingArray[1];\r\n    const sz = scalingArray[2];\r\n\r\n    thisArray[0] = (1 - (yy + zz)) * sx;\r\n    thisArray[1] = (xy + wz) * sx;\r\n    thisArray[2] = (xz - wy) * sx;\r\n    thisArray[3] = 0;\r\n    thisArray[4] = (xy - wz) * sy;\r\n    thisArray[5] = (1 - (xx + zz)) * sy;\r\n    thisArray[6] = (yz + wx) * sy;\r\n    thisArray[7] = 0;\r\n    thisArray[8] = (xz + wy) * sz;\r\n    thisArray[9] = (yz - wx) * sz;\r\n    thisArray[10] = (1 - (xx + yy)) * sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = translationArray[0];\r\n    thisArray[13] = translationArray[1];\r\n    thisArray[14] = translationArray[2];\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n  \r\n  setRotation(quaternion: Quaternion): this {\r\n    const thisArray = this.array;\r\n    const quaternionArray = quaternion.array;\r\n\t\tconst quaternionLengthSquared = quaternion.lengthSquared();\r\n\t\tconst s = 2.0 / quaternionLengthSquared;\r\n\r\n\t\tconst x = quaternionArray[0];\r\n\t\tconst y = quaternionArray[1];\r\n\t\tconst z = quaternionArray[2];\r\n\t\tconst w = quaternionArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n    const m11 = 1 - (yy + zz);\r\n    const m21 = xy + wz;\r\n    const m31 = xz - wy;\r\n    const m12 = xy - wz;\r\n    const m22 = 1 - (xx + zz);\r\n    const m32 = yz + wx;\r\n    const m13 = xz + wy;\r\n    const m23 = yz - wx;\r\n    const m33 = 1 - (xx + yy);\r\n\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n  equals(mat: Matrix4): boolean {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n    return thisArray[ 0] === matArray[ 0]\r\n      && thisArray[ 1] === matArray[ 1]\r\n      && thisArray[ 2] === matArray[ 2]\r\n      && thisArray[ 3] === matArray[ 3]\r\n      && thisArray[ 4] === matArray[ 4]\r\n      && thisArray[ 5] === matArray[ 5]\r\n      && thisArray[ 6] === matArray[ 6]\r\n      && thisArray[ 7] === matArray[ 7]\r\n      && thisArray[ 8] === matArray[ 8]\r\n      && thisArray[ 9] === matArray[ 9]\r\n      && thisArray[10] === matArray[10]\r\n      && thisArray[11] === matArray[11]\r\n      && thisArray[12] === matArray[12]\r\n      && thisArray[13] === matArray[13]\r\n      && thisArray[14] === matArray[14]\r\n      && thisArray[15] === matArray[15];\r\n  }\r\n\r\n  copy(mat: Matrix4): this {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n\r\n    thisArray[ 0] = matArray[ 0];\r\n    thisArray[ 1] = matArray[ 1];\r\n    thisArray[ 2] = matArray[ 2];\r\n    thisArray[ 3] = matArray[ 3];\r\n    thisArray[ 4] = matArray[ 4];\r\n    thisArray[ 5] = matArray[ 5];\r\n    thisArray[ 6] = matArray[ 6];\r\n    thisArray[ 7] = matArray[ 7];\r\n    thisArray[ 8] = matArray[ 8];\r\n    thisArray[ 9] = matArray[ 9];\r\n    thisArray[10] = matArray[10];\r\n    thisArray[11] = matArray[11];\r\n    thisArray[12] = matArray[12];\r\n    thisArray[13] = matArray[13];\r\n    thisArray[14] = matArray[14];\r\n    thisArray[15] = matArray[15];\r\n\r\n    return this;\r\n  }\r\n\r\n  clone(): this {\r\n    const thisArray = this.array;\r\n    return new Matrix4Base(\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ) as this;\r\n  }\r\n\r\n  static identity(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      1, 0, 0, 0,\r\n      0, 1, 0, 0,\r\n      0, 0, 1, 0,\r\n      0, 0, 0, 1\r\n    );\r\n  }\r\n\r\n  setIdentity(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  static zeros(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0\r\n    );\r\n  }\r\n\r\n  setZeros(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 0;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 0;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 0;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  det(): number {\r\n    const thisArray = this.array;\r\n    const det2_01_01 = thisArray[0] * thisArray[5] - thisArray[1] * thisArray[4];\r\n    const det2_01_02 = thisArray[0] * thisArray[6] - thisArray[2] * thisArray[4];\r\n    const det2_01_03 = thisArray[0] * thisArray[7] - thisArray[3] * thisArray[4];\r\n    const det2_01_12 = thisArray[1] * thisArray[6] - thisArray[2] * thisArray[5];\r\n    const det2_01_13 = thisArray[1] * thisArray[7] - thisArray[3] * thisArray[5];\r\n    const det2_01_23 = thisArray[2] * thisArray[7] - thisArray[3] * thisArray[6];\r\n    const det3_201_012 = thisArray[8] * det2_01_12 - thisArray[ 9] * det2_01_02 + thisArray[10] * det2_01_01;\r\n    const det3_201_013 = thisArray[8] * det2_01_13 - thisArray[ 9] * det2_01_03 + thisArray[11] * det2_01_01;\r\n    const det3_201_023 = thisArray[8] * det2_01_23 - thisArray[10] * det2_01_03 + thisArray[11] * det2_01_02;\r\n    const det3_201_123 = thisArray[9] * det2_01_23 - thisArray[10] * det2_01_13 + thisArray[11] * det2_01_12;\r\n\r\n    return -det3_201_123 * thisArray[12] + det3_201_023 * thisArray[13]\r\n      - det3_201_013 * thisArray[14] + det3_201_012 * thisArray[15];\r\n  }\r\n\r\n  trace(): number {\r\n    const thisArray = this.array;\r\n    return thisArray[0] + thisArray[5] + thisArray[10] + thisArray[15];\r\n  }\r\n\r\n  static negate(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = -a[ 0];\r\n    o[ 1] = -a[ 1];\r\n    o[ 2] = -a[ 2];\r\n    o[ 3] = -a[ 3];\r\n    o[ 4] = -a[ 4];\r\n    o[ 5] = -a[ 5];\r\n    o[ 6] = -a[ 6];\r\n    o[ 7] = -a[ 7];\r\n    o[ 8] = -a[ 8];\r\n    o[ 9] = -a[ 9];\r\n    o[10] = -a[10];\r\n    o[11] = -a[11];\r\n    o[12] = -a[12];\r\n    o[13] = -a[13];\r\n    o[14] = -a[14];\r\n    o[15] = -a[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  negate(): this {\r\n    return Matrix4Base.negate(this, this) as this;\r\n  }\r\n\r\n  static transpose(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    o[ 0] = a11;\r\n    o[ 1] = a12;\r\n    o[ 2] = a13;\r\n    o[ 3] = a14;\r\n    o[ 4] = a21;\r\n    o[ 5] = a22;\r\n    o[ 6] = a23;\r\n    o[ 7] = a24;\r\n    o[ 8] = a31;\r\n    o[ 9] = a32;\r\n    o[10] = a33;\r\n    o[11] = a34;\r\n    o[12] = a41;\r\n    o[13] = a42;\r\n    o[14] = a43;\r\n    o[15] = a44;\r\n    \r\n    return out;\r\n  }\r\n\r\n  transpose(): this {\r\n    return Matrix4Base.transpose(this, this) as this;\r\n  }\r\n\r\n  static invert(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const o00 = a[ 0];\r\n    const o01 = a[ 1];\r\n    const o02 = a[ 2];\r\n    const o03 = a[ 3];\r\n    const o10 = a[ 4];\r\n    const o11 = a[ 5];\r\n    const o12 = a[ 6];\r\n    const o13 = a[ 7];\r\n    const o20 = a[ 8];\r\n    const o21 = a[ 9];\r\n    const o22 = a[10];\r\n    const o23 = a[11];\r\n    const o30 = a[12];\r\n    const o31 = a[13];\r\n    const o32 = a[14];\r\n    const o33 = a[15];\r\n\r\n    const t00 = o00 * o11 - o01 * o10;\r\n    const t01 = o00 * o12 - o02 * o10;\r\n    const t02 = o00 * o13 - o03 * o10;\r\n    const t03 = o01 * o12 - o02 * o11;\r\n    const t04 = o01 * o13 - o03 * o11;\r\n    const t05 = o02 * o13 - o03 * o12;\r\n    const t06 = o20 * o31 - o21 * o30;\r\n    const t07 = o20 * o32 - o22 * o30;\r\n    const t08 = o20 * o33 - o23 * o30;\r\n    const t09 = o21 * o32 - o22 * o31;\r\n    const t10 = o21 * o33 - o23 * o31;\r\n    const t11 = o22 * o33 - o23 * o32;\r\n\r\n    const d = (t00 * t11 - t01 * t10 + t02 * t09 + t03 * t08 - t04 * t07 + t05 * t06);\r\n    \r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    const invDet = 1 / d;\r\n\r\n    o[ 0] = (o11 * t11 - o12 * t10 + o13 * t09) * invDet;\r\n    o[ 1] = (-o01 * t11 + o02 * t10 - o03 * t09) * invDet;\r\n    o[ 2] = (o31 * t05 - o32 * t04 + o33 * t03) * invDet;\r\n    o[ 3] = (-o21 * t05 + o22 * t04 - o23 * t03) * invDet;\r\n    o[ 4] = (-o10 * t11 + o12 * t08 - o13 * t07) * invDet;\r\n    o[ 5] = (o00 * t11 - o02 * t08 + o03 * t07) * invDet;\r\n    o[ 6] = (-o30 * t05 + o32 * t02 - o33 * t01) * invDet;\r\n    o[ 7] = (o20 * t05 - o22 * t02 + o23 * t01) * invDet;\r\n    o[ 8] = (o10 * t10 - o11 * t08 + o13 * t06) * invDet;\r\n    o[ 9] = (-o00 * t10 + o01 * t08 - o03 * t06) * invDet;\r\n    o[10] = (o30 * t04 - o31 * t02 + o33 * t00) * invDet;\r\n    o[11] = (-o20 * t04 + o21 * t02 - o23 * t00) * invDet;\r\n    o[12] = (-o10 * t09 + o11 * t07 - o12 * t06) * invDet;\r\n    o[13] = (o00 * t09 - o01 * t07 + o02 * t06) * invDet;\r\n    o[14] = (-o30 * t03 + o31 * t01 - o32 * t00) * invDet;\r\n    o[15] = (o20 * t03 - o21 * t01 + o22 * t00) * invDet;\r\n\r\n    return out;\r\n  }\r\n\r\n  invert(): this {\r\n    return Matrix4Base.invert(this, this) as this;\r\n  }\r\n\r\n  static add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] + b[ 0];\r\n    o[ 1] = a[ 1] + b[ 1];\r\n    o[ 2] = a[ 2] + b[ 2];\r\n    o[ 3] = a[ 3] + b[ 3];\r\n    o[ 4] = a[ 4] + b[ 4];\r\n    o[ 5] = a[ 5] + b[ 5];\r\n    o[ 6] = a[ 6] + b[ 6];\r\n    o[ 7] = a[ 7] + b[ 7];\r\n    o[ 8] = a[ 8] + b[ 8];\r\n    o[ 9] = a[ 9] + b[ 9];\r\n    o[10] = a[10] + b[10];\r\n    o[11] = a[11] + b[11];\r\n    o[12] = a[12] + b[12];\r\n    o[13] = a[13] + b[13];\r\n    o[14] = a[14] + b[14];\r\n    o[15] = a[15] + b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  add(matrix: Matrix4): this {\r\n    return Matrix4Base.add(this, matrix, this) as this;\r\n  }\r\n\r\n  static sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] - b[ 0];\r\n    o[ 1] = a[ 1] - b[ 1];\r\n    o[ 2] = a[ 2] - b[ 2];\r\n    o[ 3] = a[ 3] - b[ 3];\r\n    o[ 4] = a[ 4] - b[ 4];\r\n    o[ 5] = a[ 5] - b[ 5];\r\n    o[ 6] = a[ 6] - b[ 6];\r\n    o[ 7] = a[ 7] - b[ 7];\r\n    o[ 8] = a[ 8] - b[ 8];\r\n    o[ 9] = a[ 9] - b[ 9];\r\n    o[10] = a[10] - b[10];\r\n    o[11] = a[11] - b[11];\r\n    o[12] = a[12] - b[12];\r\n    o[13] = a[13] - b[13];\r\n    o[14] = a[14] - b[14];\r\n    o[15] = a[15] - b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  sub(matrix: Matrix4): this {\r\n    return Matrix4Base.sub(this, matrix, this) as this;\r\n  }\r\n\r\n  static mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    const b11 = b[ 0];\r\n    const b21 = b[ 1];\r\n    const b31 = b[ 2];\r\n    const b41 = b[ 3];\r\n    const b12 = b[ 4];\r\n    const b22 = b[ 5];\r\n    const b32 = b[ 6];\r\n    const b42 = b[ 7];\r\n    const b13 = b[ 8];\r\n    const b23 = b[ 9];\r\n    const b33 = b[10];\r\n    const b43 = b[11];\r\n    const b14 = b[12];\r\n    const b24 = b[13];\r\n    const b34 = b[14];\r\n    const b44 = b[15];\r\n\r\n    o[ 0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n    o[ 1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n    o[ 2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n    o[ 3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n    o[ 4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n    o[ 5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n    o[ 6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n    o[ 7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n    o[ 8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n    o[ 9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n    o[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n    o[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n    o[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n    o[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n    o[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n    o[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n    return out;\r\n  }\r\n\r\n  mult(matrix: Matrix4): this {\r\n    return Matrix4Base.mult(this, matrix, this) as this;\r\n  }\r\n\r\n\tgetMaxScaleOnAxis(): number {\r\n    const thisArray = this.array;\r\n    const scaleXSq = thisArray[ 0] * thisArray[ 0] + thisArray[ 1] * thisArray[ 1] + thisArray[ 2] * thisArray[ 2];\r\n    const scaleYSq = thisArray[ 4] * thisArray[ 4] + thisArray[ 5] * thisArray[ 5] + thisArray[ 6] * thisArray[ 6];\r\n    const scaleZSq = thisArray[ 8] * thisArray[ 8] + thisArray[ 9] * thisArray[ 9] + thisArray[10] * thisArray[10];\r\n\r\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\r\n  }\r\n\r\n  writeIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n    const thisArray = this.array;\r\n\t\tarray[offset     ] = thisArray[ 0];\r\n\t\tarray[offset +  1] = thisArray[ 1];\r\n    array[offset +  2] = thisArray[ 2];\r\n    array[offset +  3] = thisArray[ 3];\r\n\t\tarray[offset +  4] = thisArray[ 4];\r\n    array[offset +  5] = thisArray[ 5];\r\n    array[offset +  6] = thisArray[ 6];\r\n\t\tarray[offset +  7] = thisArray[ 7];\r\n    array[offset +  8] = thisArray[ 8];\r\n    array[offset +  9] = thisArray[ 9];\r\n\t\tarray[offset + 10] = thisArray[10];\r\n    array[offset + 11] = thisArray[11];\r\n    array[offset + 12] = thisArray[12];\r\n\t\tarray[offset + 13] = thisArray[13];\r\n    array[offset + 14] = thisArray[14];\r\n    array[offset + 15] = thisArray[15];\r\n  }\r\n    \r\n  readFromArray(array: ArrayLike<number>, offset: number = 0): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = array[offset     ];\r\n    thisArray[ 1] = array[offset +  1];\r\n    thisArray[ 2] = array[offset +  2];\r\n    thisArray[ 3] = array[offset +  3];\r\n    thisArray[ 4] = array[offset +  4];\r\n    thisArray[ 5] = array[offset +  5];\r\n    thisArray[ 6] = array[offset +  6];\r\n    thisArray[ 7] = array[offset +  7];\r\n    thisArray[ 8] = array[offset +  8];\r\n    thisArray[ 9] = array[offset +  9];\r\n    thisArray[10] = array[offset + 10];\r\n    thisArray[11] = array[offset + 11];\r\n    thisArray[12] = array[offset + 12];\r\n    thisArray[13] = array[offset + 13];\r\n    thisArray[14] = array[offset + 14];\r\n    thisArray[15] = array[offset + 15];\r\n\r\n    return this;\r\n  }\r\n\r\n  solve(vecB: Vector4): Vector4Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a14 = a[ 3];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a24 = a[ 7];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const a34 = a[11];\r\n    const a41 = a[12];\r\n    const a42 = a[13];\r\n    const a43 = a[14];\r\n    const a44 = a[15];\r\n    const b00 = a11 * a22 - a12 * a21;\r\n    const b01 = a11 * a23 - a13 * a21;\r\n    const b02 = a11 * a24 - a14 * a21;\r\n    const b03 = a12 * a23 - a13 * a22;\r\n    const b04 = a12 * a24 - a14 * a22;\r\n    const b05 = a13 * a24 - a14 * a23;\r\n    const b06 = a31 * a42 - a32 * a41;\r\n    const b07 = a31 * a43 - a33 * a41;\r\n    const b08 = a31 * a44 - a34 * a41;\r\n    const b09 = a32 * a43 - a33 * a42;\r\n    const b10 = a32 * a44 - a34 * a42;\r\n    const b11 = a33 * a44 - a34 * a43;\r\n\r\n    const bX = vecB.x;\r\n    const bY = vecB.y;\r\n    const bZ = vecB.z;\r\n    const bW = vecB.w;\r\n\r\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (det != 0) {\r\n      det = 1 / det;\r\n    }\r\n\r\n    const x = det *\r\n      ((a22 * b11 - a23 * b10 + a24 * b09) * bX -\r\n      (a21 * b11 - a23 * b08 + a24 * b07) * bY +\r\n      (a21 * b10 - a22 * b08 + a24 * b06) * bZ -\r\n      (a21 * b09 - a22 * b07 + a23 * b06) * bW)\r\n    const y = det *\r\n      -((a12 * b11 - a13 * b10 + a14 * b09) * bX -\r\n      (a11 * b11 - a13 * b08 + a14 * b07) * bY +\r\n      (a11 * b10 - a12 * b08 + a14 * b06) * bZ -\r\n      (a11 * b09 - a12 * b07 + a13 * b06) * bW)\r\n    const z = det *\r\n      ((a42 * b05 - a43 * b04 + a44 * b03) * bX -\r\n      (a41 * b05 - a43 * b02 + a44 * b01) * bY +\r\n      (a41 * b04 - a42 * b02 + a44 * b00) * bZ -\r\n      (a41 * b03 - a42 * b01 + a43 * b00) * bW)\r\n    const w = det *\r\n      -((a32 * b05 - a33 * b04 + a34 * b03) * bX -\r\n      (a31 * b05 - a33 * b02 + a34 * b01) * bY +\r\n      (a31 * b04 - a32 * b02 + a34 * b00) * bZ -\r\n      (a31 * b03 - a32 * b01 + a33 * b00) * bW);\r\n    \r\n    return [\r\n      x, y, z, w\r\n    ];\r\n  }\r\n\r\n  solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[4];\r\n    const a22 = a[5];\r\n    const bx = vecB.x - a[8];\r\n    const by = vecB.y - a[9];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by);\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n\r\n  solve3(vecB: Vector3): Vector3Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const bx = vecB.x - a[12];\r\n    const by = vecB.y - a[13];\r\n    const bz = vecB.z - a[14];\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n\r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n\r\n    return [\r\n      x, y, z\r\n    ];\r\n  }\r\n\r\n  static translation(vector: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setTranslation(vector);\r\n  }\r\n\r\n  setTranslation(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n\r\n    const x = vecArray[0];\r\n    const y = vecArray[1];\r\n    const z = vecArray[2];\r\n\r\n    /*thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;*/\r\n    thisArray[12] = x;\r\n    thisArray[13] = y;\r\n    thisArray[14] = z;\r\n    //thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  translate(vector: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vectorArray = vector.array;\r\n\r\n    const tx = vectorArray[0];\r\n    const ty = vectorArray[1];\r\n    const tz = vectorArray[2];\r\n    const tw = 1;\r\n\r\n    const t1 = thisArray[0] * tx + thisArray[4] * ty + thisArray[ 8] * tz + thisArray[12] * tw;\r\n    const t2 = thisArray[1] * tx + thisArray[5] * ty + thisArray[ 9] * tz + thisArray[13] * tw;\r\n    const t3 = thisArray[2] * tx + thisArray[6] * ty + thisArray[10] * tz + thisArray[14] * tw;\r\n    const t4 = thisArray[3] * tx + thisArray[7] * ty + thisArray[11] * tz + thisArray[15] * tw;\r\n\r\n    thisArray[12] = t1;\r\n    thisArray[13] = t2;\r\n    thisArray[14] = t3;\r\n    thisArray[15] = t4;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationX(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationX(angle);\r\n  }\r\n\r\n  setRotationX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = sinAngle;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = -sinAngle;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  rotateX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[4] *  cosAngle + thisArray[ 8] * sinAngle;\r\n    const t2 = thisArray[5] *  cosAngle + thisArray[ 9] * sinAngle;\r\n    const t3 = thisArray[6] *  cosAngle + thisArray[10] * sinAngle;\r\n    const t4 = thisArray[7] *  cosAngle + thisArray[11] * sinAngle;\r\n    const t5 = thisArray[4] * -sinAngle + thisArray[ 8] * cosAngle;\r\n    const t6 = thisArray[5] * -sinAngle + thisArray[ 9] * cosAngle;\r\n    const t7 = thisArray[6] * -sinAngle + thisArray[10] * cosAngle;\r\n    const t8 = thisArray[7] * -sinAngle + thisArray[11] * cosAngle;\r\n\r\n    thisArray[ 4] = t1;\r\n    thisArray[ 5] = t2;\r\n    thisArray[ 6] = t3;\r\n    thisArray[ 7] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationY(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationY(angle);\r\n  }\r\n\r\n  setRotationY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = -sinAngle;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = sinAngle;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  rotateY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[ 0] * cosAngle + thisArray[ 8] * -sinAngle;\r\n    const t2 = thisArray[ 1] * cosAngle + thisArray[ 9] * -sinAngle;\r\n    const t3 = thisArray[ 2] * cosAngle + thisArray[10] * -sinAngle;\r\n    const t4 = thisArray[ 3] * cosAngle + thisArray[11] * -sinAngle;\r\n    const t5 = thisArray[ 0] * sinAngle + thisArray[ 8] *  cosAngle;\r\n    const t6 = thisArray[ 1] * sinAngle + thisArray[ 9] *  cosAngle;\r\n    const t7 = thisArray[ 2] * sinAngle + thisArray[10] *  cosAngle;\r\n    const t8 = thisArray[ 3] * sinAngle + thisArray[11] *  cosAngle;\r\n\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationZ(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationZ(angle);\r\n  }\r\n\r\n  setRotationZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngles = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = sinAngles;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = -sinAngles;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  rotateZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[0] *  cosAngle + thisArray[4] * sinAngle;\r\n    const t2 = thisArray[1] *  cosAngle + thisArray[5] * sinAngle;\r\n    const t3 = thisArray[2] *  cosAngle + thisArray[6] * sinAngle;\r\n    const t4 = thisArray[3] *  cosAngle + thisArray[7] * sinAngle;\r\n    const t5 = thisArray[0] * -sinAngle + thisArray[4] * cosAngle;\r\n    const t6 = thisArray[1] * -sinAngle + thisArray[5] * cosAngle;\r\n    const t7 = thisArray[2] * -sinAngle + thisArray[6] * cosAngle;\r\n    const t8 = thisArray[3] * -sinAngle + thisArray[7] * cosAngle;\r\n    \r\n    thisArray[0] = t1;\r\n    thisArray[1] = t2;\r\n    thisArray[2] = t3;\r\n    thisArray[3] = t4;\r\n    thisArray[4] = t5;\r\n    thisArray[5] = t6;\r\n    thisArray[6] = t7;\r\n    thisArray[7] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotation(matrix: Matrix3): Matrix4Base {\r\n    return new Matrix4Base().rotation(matrix);\r\n  }\r\n\r\n  rotation(matrix: Matrix3): this {\r\n    const thisArray = this.array;\r\n    const matArray = matrix.array;\r\n\r\n    thisArray[ 0] = matArray[0];\r\n    thisArray[ 1] = matArray[1];\r\n    thisArray[ 2] = matArray[2];\r\n    thisArray[ 4] = matArray[3];\r\n    thisArray[ 5] = matArray[4];\r\n    thisArray[ 6] = matArray[5];\r\n    thisArray[ 8] = matArray[6];\r\n    thisArray[ 9] = matArray[7];\r\n    thisArray[10] = matArray[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  rotate(axis: Vector3, angle: number): this {\r\n    const thisArray = this.array;\r\n    const axisArray = axis.array;\r\n    const axisLength = axis.length();\r\n    const x = axisArray[0] / axisLength;\r\n    const y = axisArray[1] / axisLength;\r\n    const z = axisArray[2] / axisLength;\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n    const C = 1.0 - c;\r\n    const m11 = x * x * C + c;\r\n    const m12 = x * y * C - z * s;\r\n    const m13 = x * z * C + y * s;\r\n    const m21 = y * x * C + z * s;\r\n    const m22 = y * y * C + c;\r\n    const m23 = y * z * C - x * s;\r\n    const m31 = z * x * C - y * s;\r\n    const m32 = z * y * C + x * s;\r\n    const m33 = z * z * C + c;\r\n    const t1  = thisArray[0] * m11 + thisArray[4] * m21 + thisArray[8] * m31;\r\n    const t2  = thisArray[1] * m11 + thisArray[5] * m21 + thisArray[9] * m31;\r\n    const t3  = thisArray[2] * m11 + thisArray[6] * m21 + thisArray[10] * m31;\r\n    const t4  = thisArray[3] * m11 + thisArray[7] * m21 + thisArray[11] * m31;\r\n    const t5  = thisArray[0] * m12 + thisArray[4] * m22 + thisArray[8] * m32;\r\n    const t6  = thisArray[1] * m12 + thisArray[5] * m22 + thisArray[9] * m32;\r\n    const t7  = thisArray[2] * m12 + thisArray[6] * m22 + thisArray[10] * m32;\r\n    const t8  = thisArray[3] * m12 + thisArray[7] * m22 + thisArray[11] * m32;\r\n    const t9  = thisArray[0] * m13 + thisArray[4] * m23 + thisArray[8] * m33;\r\n    const t10 = thisArray[1] * m13 + thisArray[5] * m23 + thisArray[9] * m33;\r\n    const t11 = thisArray[2] * m13 + thisArray[6] * m23 + thisArray[10] * m33;\r\n    const t12 = thisArray[3] * m13 + thisArray[7] * m23 + thisArray[11] * m33;\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 4] = t5;\r\n    thisArray[ 5] = t6;\r\n    thisArray[ 6] = t7;\r\n    thisArray[ 7] = t8;\r\n    thisArray[ 8] = t9;\r\n    thisArray[ 9] = t10;\r\n    thisArray[10] = t11;\r\n    thisArray[11] = t12;\r\n\r\n    return this;\r\n  }\r\n\r\n  static scaling(vec: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setScaling(vec);\r\n  }\r\n\r\n  setScaling(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] = sx;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = sy;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  scale(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] *= sx;\r\n    thisArray[ 1] *= sx;\r\n    thisArray[ 2] *= sx;\r\n    thisArray[ 3] *= sx;\r\n    thisArray[ 4] *= sy;\r\n    thisArray[ 5] *= sy;\r\n    thisArray[ 6] *= sy;\r\n    thisArray[ 7] *= sy;\r\n    thisArray[ 8] *= sz;\r\n    thisArray[ 9] *= sz;\r\n    thisArray[10] *= sz;\r\n    thisArray[11] *= sz;\r\n    thisArray[12] *= sw;\r\n    thisArray[13] *= sw;\r\n    thisArray[14] *= sw;\r\n    thisArray[15] *= sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4): Matrix4 {\r\n    const eyeArray = eye.array;\r\n    const upArray = up.array;\r\n    const targetArray = target.array;\r\n    const outArray = out.array;\r\n    const e0 = eyeArray[0];\r\n    const e1 = eyeArray[1];\r\n    const e2 = eyeArray[2];\r\n    const u0 = upArray[0];\r\n    const u1 = upArray[1];\r\n    const u2 = upArray[2];\r\n    const t0 = targetArray[0];\r\n    const t1 = targetArray[1];\r\n    const t2 = targetArray[2];\r\n    let x0, x1, x2, y0, y1, y2, z0, z1, z2, length;\r\n\r\n    z0 = e0 - t0;\r\n    z1 = e1 - t1;\r\n    z2 = e2 - t2;\r\n    length = Math.hypot(z0, z1, z2);\r\n    if (length > 0) {\r\n      length = 1 / Math.hypot(z0, z1, z2);\r\n      z0 *= length;\r\n      z1 *= length;\r\n      z2 *= length;\r\n    }\r\n  \r\n    x0 = u1 * z2 - u2 * z1;\r\n    x1 = u2 * z0 - u0 * z2;\r\n    x2 = u0 * z1 - u1 * z0;\r\n    length = Math.hypot(x0, x1, x2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      x0 *= length;\r\n      x1 *= length;\r\n      x2 *= length;\r\n    }\r\n\r\n    y0 = z1 * x2 - z2 * x1;\r\n    y1 = z2 * x0 - z0 * x2;\r\n    y2 = z0 * x1 - z1 * x0;\r\n    length = Math.hypot(y0, y1, y2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      y0 *= length;\r\n      y1 *= length;\r\n      y2 *= length;\r\n    }\r\n  \r\n    outArray[ 0] = x0;\r\n    outArray[ 1] = x1;\r\n    outArray[ 2] = x2;\r\n    outArray[ 3] = 0;\r\n    outArray[ 4] = y0;\r\n    outArray[ 5] = y1;\r\n    outArray[ 6] = y2;\r\n    outArray[ 7] = 0;\r\n    outArray[ 8] = z0;\r\n    outArray[ 9] = z1;\r\n    outArray[10] = z2;\r\n    outArray[11] = 0;\r\n    outArray[12] = e0;\r\n    outArray[13] = e1;\r\n    outArray[14] = e2;\r\n    outArray[15] = 1;\r\n  \r\n    return out;\r\n  }\r\n\r\n  lookAt(eye: Vector3, target: Vector3, up: Vector3): this {\r\n    return Matrix4Base.lookAt(eye, target, up, this) as this;\r\n  }\r\n\r\n  transformPoint(point: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const pointArray = point.array;\r\n\r\n    const x = pointArray[0];\r\n    const y = pointArray[1];\r\n    const z = pointArray[2];\r\n\r\n    const d = x * thisArray[3] + y * thisArray[7] + z * thisArray[11] + thisArray[15];\r\n\r\n    point.setValues(\r\n      (x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8] + thisArray[12]) / d,\r\n      (x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9] + thisArray[13]) / d,\r\n      (x * thisArray[2] + y * thisArray[6] + z * thisArray[10] + thisArray[14]) / d\r\n    );\r\n\r\n    return point;\r\n  }\r\n\r\n  transformPoint4(point: Vector4): Vector4 {\r\n    const thisArray = this.array;\r\n    const pointArray = point.array;\r\n\r\n    const x = pointArray[0];\r\n    const y = pointArray[1];\r\n    const z = pointArray[2];\r\n    const w = pointArray[3];\r\n\r\n    const d = x * thisArray[3] + y * thisArray[7] + z * thisArray[11] + w * thisArray[15];\r\n\r\n    point.setValues(\r\n      (x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8] + thisArray[12]) / d,\r\n      (x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9] + thisArray[13]) / d,\r\n      (x * thisArray[2] + y * thisArray[6] + z * thisArray[10] + thisArray[14]) / d,\r\n      (x * thisArray[3] + y * thisArray[7] + z * thisArray[11] + thisArray[15]) / d\r\n    );\r\n\r\n    return point;\r\n  }\r\n\r\n  transformDirection(direction: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const directionArray = direction.array;\r\n\r\n    const x = directionArray[0];\r\n    const y = directionArray[1];\r\n    const z = directionArray[2];\r\n\r\n    direction.setValues(\r\n      x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8],\r\n      x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9],\r\n      x * thisArray[2] + y * thisArray[6] + z * thisArray[10]\r\n    );\r\n\r\n    return direction;\r\n  }\r\n\r\n  transformNormal(normal: Vector3): Vector3 {\r\n    const normalArray = normal.array;\r\n\r\n    const thisInvArray = this.invert().array;\r\n\r\n    const x = normalArray[0];\r\n    const y = normalArray[1];\r\n    const z = normalArray[2];\r\n\r\n    normal.setValues(\r\n      x * thisInvArray[0] + y * thisInvArray[4] + z * thisInvArray[ 8],\r\n      x * thisInvArray[1] + y * thisInvArray[5] + z * thisInvArray[ 9],\r\n      x * thisInvArray[2] + y * thisInvArray[6] + z * thisInvArray[10]\r\n    );\r\n\r\n    this.invert();\r\n\r\n    return normal;\r\n  }\r\n\r\n  static perspective(fov: number, aspect: number, zNear: number, zFar: number): Matrix4Base {\r\n    return new Matrix4Base().setPerspective(fov, aspect, zNear, zFar);\r\n  }\r\n\r\n  setPerspective(fov: number, aspect: number, zNear: number, zFar: number): this {\r\n    const thisArray = this.array;\r\n    const width = Math.tan(Math.PI * 0.5 - 0.5 * fov);\r\n    const height = width / aspect;\r\n    const rangeInv = 1 / (zNear - zFar);\r\n\r\n    thisArray[ 0] = height;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = width;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = (zNear + zFar) * rangeInv;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = (2 * zNear * zFar) * rangeInv;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setOrthographic(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 2 / (right - left);\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 2 / (top - bottom);\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 2 / (near - far);\r\n    thisArray[11] = 0;\r\n    thisArray[12] = (right + left) / (left - right);\r\n    thisArray[13] = (top + bottom) / (bottom - top);\r\n    thisArray[14] = (far + near) / (near - far);\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static frustum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setFrustum(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  setFrustum(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    const invWidth = 1 / (right - left);\r\n    const invHeight = 1 / (top - bottom);\r\n    const invDepth = 1 / (near - far);\r\n\r\n    thisArray[ 0] = near * 2 * invWidth;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = near * 2 * invHeight;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = (right + left) * invWidth;\r\n    thisArray [9] = (top + bottom) * invHeight;\r\n    thisArray[10] = (far + near) * invDepth;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = far * near * 2 * invDepth;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n}\r\n\r\nvar Matrix4: Matrix4Constructor = Matrix4Base;\r\n\r\nconst Matrix4Injector: Injector<Matrix4Constructor> = new Injector({\r\n\tdefaultCtor: Matrix4Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix4Constructor) => {\r\n\t\t\tMatrix4 = ctor;\r\n\t\t}\r\n});","import { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Matrix4 } from \"../../algebra/matrices/Matrix4\";\r\nimport { Vector3, Vector3Constructor } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport { Vector3Pool };\r\n\r\nclass Vector3PoolBase extends StackPool<Vector3> implements StackPool<Vector3> {\r\n    private _buffer: Float32Array;\r\n    private _bufferViews: Array<WritableArrayLike<number>>;\r\n    private _extensions: Array<WritableArrayLike<number>>;\r\n\r\n    constructor(ctor: Vector3Constructor, options?: any) {\r\n        super(ctor, options);\r\n        this._buffer = new Float32Array(0);\r\n        this._bufferViews = Array(options?.size || 0).fill(0).map(() => {\r\n            return this._buffer.subarray();\r\n        });\r\n        this._extensions = [];\r\n    }\r\n}\r\n\r\nconst Vector3Pool: StackPool<Vector3> = new Vector3PoolBase(Vector3);","export { UUID };\r\nexport { Identifiable };\r\nexport { UUIDGeneratorBase };\r\nexport { UUIDGenerator };\r\n\r\ntype UUID = string;\r\n\r\ninterface Identifiable {\r\n    readonly uuid: UUID;\r\n}\r\n\r\ninterface UUIDGenerator {\r\n    newUUID(): UUID;\r\n}\r\n\r\nclass UUIDGeneratorBase {\r\n\r\n    private _count: number;\r\n\r\n    constructor() {\r\n        this._count = 0\r\n    }\r\n\r\n    newUUID(): UUID {\r\n        return (++this._count).toString(16);\r\n    }\r\n}\r\n\r\nconst UUIDGenerator: UUIDGenerator = new UUIDGeneratorBase();","import { EulerAngles } from \"../../libs/maths/algebra/angles/EulerAngles\";\r\nimport { Matrix3 } from \"../../libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Quaternion, QuaternionPool } from \"../../libs/maths/algebra/quaternions/Quaternion\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../libs/maths/extensions/pools/Vector3Pools\";\r\nimport { UUID, UUIDGenerator } from \"../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Object3D } from \"../rendering/scenes/objects/Object3D\";\r\n\r\nexport { Transform };\r\nexport { TransformBase };\r\n\r\ninterface TransformConstructor {\r\n    readonly prototype: Transform;\r\n    new(): Transform;\r\n    new(owner: Object3D): Transform;\r\n}\r\n\r\nconst tempMatrix = new Matrix4();\r\n\r\ninterface Transform {\r\n    hasChanged: boolean;\r\n\r\n    readonly localArray: Float32Array;\r\n    readonly array: Float32Array;\r\n    readonly uuid: UUID;\r\n    readonly owner: Object3D | null;\r\n\r\n    localMatrix: Matrix4;\r\n    matrix: Matrix4;\r\n\r\n    getMatrix(matrix: Matrix4): Matrix4;\r\n    setMatrix(matrix: Matrix4): this;\r\n    getLocalMatrix(matrix: Matrix4): Matrix4;\r\n    setLocalMatrix(matrix: Matrix4): this;\r\n\r\n    getRight(vector: Vector3): Vector3;\r\n    getLeft(vector: Vector3): Vector3;\r\n    getUp(vector: Vector3): Vector3;\r\n    getDown(vector: Vector3): Vector3;\r\n    getForward(vector: Vector3): Vector3;\r\n    getBackward(vector: Vector3): Vector3;\r\n\r\n    getTranslation(vector: Vector3): Vector3;\r\n    setTranslation(vector: Vector3): this;\r\n    translate(vector: Vector3): this;\r\n\r\n    getRotation(rotation: Quaternion): Quaternion;\r\n    setRotation(rotation: Quaternion): this;\r\n    rotate(rotation: Quaternion): this;\r\n\r\n    getScaling(scaling: Vector3): Vector3;\r\n    setScaling(scaling: Vector3): this;\r\n    scale(scaling: Vector3): this;\r\n    \r\n    lookAt(target: Vector3, up: Vector3): this;\r\n}\r\n\r\nclass TransformBase implements Transform {\r\n    readonly localArray: Float32Array;\r\n    readonly array: Float32Array;\r\n    readonly uuid: UUID;\r\n    readonly owner: Object3D | null;\r\n\r\n    readonly matrix: Matrix4;\r\n    readonly localMatrix: Matrix4;;\r\n\r\n    hasChanged: boolean;\r\n    readonly isStatic: boolean;\r\n\r\n    constructor(owner?: Object3D, isStatic?: boolean) {\r\n        this.uuid = UUIDGenerator.newUUID();\r\n        this.owner = owner || null;\r\n\r\n        this.isStatic = isStatic ?? false;\r\n        \r\n        this.array = new Float32Array(16);\r\n        this.localArray = new Float32Array(16);\r\n\r\n        this.matrix = new Matrix4(this.array).setIdentity();\r\n        this.localMatrix = new Matrix4(this.localArray).setIdentity();\r\n\r\n        this.hasChanged = false;\r\n    }\r\n\r\n    getMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisArray[ 0];\r\n        matrixArray[ 1] = thisArray[ 1];\r\n        matrixArray[ 2] = thisArray[ 2];\r\n        matrixArray[ 3] = thisArray[ 3];\r\n        matrixArray[ 4] = thisArray[ 4];\r\n        matrixArray[ 5] = thisArray[ 5];\r\n        matrixArray[ 6] = thisArray[ 6];\r\n        matrixArray[ 7] = thisArray[ 7];\r\n        matrixArray[ 8] = thisArray[ 8];\r\n        matrixArray[ 9] = thisArray[ 9];\r\n        matrixArray[10] = thisArray[10];\r\n        matrixArray[11] = thisArray[11];\r\n        matrixArray[12] = thisArray[12];\r\n        matrixArray[13] = thisArray[13];\r\n        matrixArray[14] = thisArray[14];\r\n        matrixArray[15] = thisArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    setMatrix(matrix: Matrix4): this {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        thisArray[ 0] = matrixArray[ 0];\r\n        thisArray[ 1] = matrixArray[ 1];\r\n        thisArray[ 2] = matrixArray[ 2];\r\n        thisArray[ 3] = matrixArray[ 3];\r\n        thisArray[ 4] = matrixArray[ 4];\r\n        thisArray[ 5] = matrixArray[ 5];\r\n        thisArray[ 6] = matrixArray[ 6];\r\n        thisArray[ 7] = matrixArray[ 7];\r\n        thisArray[ 8] = matrixArray[ 8];\r\n        thisArray[ 9] = matrixArray[ 9];\r\n        thisArray[10] = matrixArray[10];\r\n        thisArray[11] = matrixArray[11];\r\n        thisArray[12] = matrixArray[12];\r\n        thisArray[13] = matrixArray[13];\r\n        thisArray[14] = matrixArray[14];\r\n        thisArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    getLocalMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisLocalArray[ 0];\r\n        matrixArray[ 1] = thisLocalArray[ 1];\r\n        matrixArray[ 2] = thisLocalArray[ 2];\r\n        matrixArray[ 3] = thisLocalArray[ 3];\r\n        matrixArray[ 4] = thisLocalArray[ 4];\r\n        matrixArray[ 5] = thisLocalArray[ 5];\r\n        matrixArray[ 6] = thisLocalArray[ 6];\r\n        matrixArray[ 7] = thisLocalArray[ 7];\r\n        matrixArray[ 8] = thisLocalArray[ 8];\r\n        matrixArray[ 9] = thisLocalArray[ 9];\r\n        matrixArray[10] = thisLocalArray[10];\r\n        matrixArray[11] = thisLocalArray[11];\r\n        matrixArray[12] = thisLocalArray[12];\r\n        matrixArray[13] = thisLocalArray[13];\r\n        matrixArray[14] = thisLocalArray[14];\r\n        matrixArray[15] = thisLocalArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    setLocalMatrix(matrix: Matrix4): this {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        thisLocalArray[ 0] = matrixArray[ 0];\r\n        thisLocalArray[ 1] = matrixArray[ 1];\r\n        thisLocalArray[ 2] = matrixArray[ 2];\r\n        thisLocalArray[ 3] = matrixArray[ 3];\r\n        thisLocalArray[ 4] = matrixArray[ 4];\r\n        thisLocalArray[ 5] = matrixArray[ 5];\r\n        thisLocalArray[ 6] = matrixArray[ 6];\r\n        thisLocalArray[ 7] = matrixArray[ 7];\r\n        thisLocalArray[ 8] = matrixArray[ 8];\r\n        thisLocalArray[ 9] = matrixArray[ 9];\r\n        thisLocalArray[10] = matrixArray[10];\r\n        thisLocalArray[11] = matrixArray[11];\r\n        thisLocalArray[12] = matrixArray[12];\r\n        thisLocalArray[13] = matrixArray[13];\r\n        thisLocalArray[14] = matrixArray[14];\r\n        thisLocalArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    getRight(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[0];\r\n        vectorArray[1] = thisArray[1];\r\n        vectorArray[2] = thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    getLeft(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[0];\r\n        vectorArray[1] = -thisArray[1];\r\n        vectorArray[2] = -thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    getUp(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[4];\r\n        vectorArray[1] = thisArray[5];\r\n        vectorArray[2] = thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    getDown(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[4];\r\n        vectorArray[1] = -thisArray[5];\r\n        vectorArray[2] = -thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    getForward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 8];\r\n        vectorArray[1] = thisArray[ 9];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    getBackward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[ 8];\r\n        vectorArray[1] = -thisArray[ 9];\r\n        vectorArray[2] = -thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    getTranslation(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[12];\r\n        vectorArray[1] = thisArray[13];\r\n        vectorArray[2] = thisArray[14];\r\n        return vector;\r\n    }\r\n\r\n    setTranslation(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] = vectorArray[0];\r\n        thisArray[13] = vectorArray[1];\r\n        thisArray[14] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    translate(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] += vectorArray[0];\r\n        thisArray[13] += vectorArray[1];\r\n        thisArray[14] += vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    getScaling(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 0];\r\n        vectorArray[1] = thisArray[ 5];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    setScaling(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] = vectorArray[0];\r\n        thisArray[ 5] = vectorArray[1];\r\n        thisArray[10] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    scale(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] *= vectorArray[0];\r\n        thisArray[ 5] *= vectorArray[1];\r\n        thisArray[10] *= vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    getRotation(rotation: Quaternion): Quaternion {\r\n        rotation.setMatrix(this.matrix);\r\n        return rotation;\r\n    }\r\n    \r\n    setRotation(rotation: Quaternion): this {\r\n        this.matrix.setRotation(rotation);\r\n        return this;\r\n    }\r\n\r\n    rotate(rotation: Quaternion): this {\r\n        this.matrix.mult(\r\n            rotation.getMatrix4(tempMatrix)\r\n        );\r\n        return this;\r\n    }\r\n\r\n    transformPoint(point: Vector3): Vector3 {\r\n        return point;\r\n    }\r\n\r\n    transformDirection(direction: Vector3): Vector3 {\r\n        return direction;\r\n    }\r\n\r\n    transformVector(vector: Vector3): Vector3 {\r\n        return vector;\r\n    }\r\n\r\n    lookAt(target: Vector3, up: Vector3): this {\r\n        const thisPosition = this.getTranslation(Vector3Pool.acquire(1)[0]);\r\n        this.matrix.lookAt(thisPosition, target, up);\r\n        Vector3Pool.release(1);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Transform: TransformConstructor = TransformBase;","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3 } from \"../../algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\n\r\nexport { Plane };\r\nexport { PlaneInjector };\r\nexport { PlaneBase };\r\n\r\ninterface Plane {\r\n    readonly normal: Vector3;\r\n    constant: number;\r\n    copy(plane: Plane): Plane;\r\n    set(x: number, y: number, z: number, constant: number): Plane;\r\n    setFromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n\tsetFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n\tsetFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): Plane;\r\n\tdistanceToPoint(point: Vector3): number;\r\n    normalized(): Plane;\r\n}\r\n\r\ninterface PlaneConstructor {\r\n    readonly prototype: Plane;\r\n    new(): Plane;\r\n    new(normal: Vector3, constant: number): Plane;\r\n    new(normal?: Vector3, constant?: number): Plane;\r\n    fromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n    fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n    fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane;\r\n    intersection(a: Plane, b: Plane, c: Plane, result: Vector3): Vector3;\r\n}\r\n\r\nclass PlaneBase implements Plane {\r\n\r\n    readonly normal: Vector3;\r\n    constant: number;\r\n\r\n    constructor()\r\n    constructor(normal: Vector3, constant: number)\r\n    constructor(normal?: Vector3, constant?: number) {\r\n        this.normal = normal ?? new Vector3();\r\n        this.constant = constant ?? 0;\r\n    }\r\n\r\n    static fromNormalAndConstant(normal: Vector3, constant: number): Plane {\r\n        return new PlaneBase().setFromNormalAndConstant(normal, constant);\r\n    }\r\n\r\n\tstatic fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane {\r\n\t\treturn new PlaneBase().setFromNormalAndCoplanarPoint(normal, point);\r\n\t}\r\n\r\n\tstatic fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane {\r\n        return new PlaneBase().setFromCoplanarPoints(a, b, c);\r\n    }\r\n\r\n    copy(plane: PlaneBase): PlaneBase {\r\n        this.normal.copy(plane.normal);\r\n        this.constant = plane.constant;\r\n        return this;\r\n    }\r\n\r\n    set(x: number, y: number, z: number, constant: number): PlaneBase {\r\n        this.normal.setValues(x, y, z);\r\n        this.constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n    setFromNormalAndConstant(normal: Vector3, constant: number): PlaneBase {\r\n        this.normal.copy(normal);\r\n        this.constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n\tsetFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): PlaneBase {\r\n\t\tthis.normal.copy(normal);\r\n        this.constant = -point.dot(this.normal);\r\n        \r\n        return this;\r\n\t}\r\n\r\n\tsetFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): PlaneBase {\r\n        const normal = point3.clone();\r\n        const [temp] = Vector3Pool.acquire(1);\r\n        temp.copy(point1);\r\n        normal.sub(point2).cross(temp.sub(point2)).normalize();\r\n        this.setFromNormalAndCoplanarPoint(normal, point1);\r\n        Vector3Pool.release(1);\r\n\t\treturn this;\r\n    }\r\n\r\n\tdistanceToPoint(point: Vector3): number {\r\n\t\treturn this.normal.dot(point) + this.constant;\r\n\t}\r\n    \r\n    normalized(): PlaneBase {\r\n        const inverseNormalLength = 1.0 / this.normal.length();\r\n        this.normal.scale(inverseNormalLength);\r\n\t\tthis.constant *= inverseNormalLength;\r\n\t\treturn this;\r\n\t}\r\n\r\n    static intersection(a: Plane, b: Plane, c: Plane, result: Vector3): Vector3 {\r\n        const {normal: aNormal, constant: aConstant} = a;\r\n        const {normal: bNormal, constant: bConstant} = b;\r\n        const {normal: cNormal, constant: cConstant} = c;\r\n        result.copy(bNormal).cross(cNormal);\r\n        const f = -aNormal.dot(result);\r\n        const [v1x, v1y, v1z] = result.scale(aConstant).array;\r\n        result.copy(cNormal).cross(aNormal);\r\n        const [v2x, v2y, v2z] = result.scale(bConstant).array;\r\n        result.copy(aNormal).cross(bNormal);\r\n        const [v3x, v3y, v3z] = result.scale(cConstant).array;\r\n        result.setValues(\r\n          (v1x + v2x + v3x) / f,\r\n          (v1y + v2y + v3y) / f,\r\n          (v1z + v2z + v3z) / f\r\n        );\r\n        return result;\r\n    }\r\n}\r\n\r\nvar Plane: PlaneConstructor = PlaneBase;\r\nconst PlaneInjector: Injector<PlaneConstructor> = new Injector({\r\n\tdefaultCtor: PlaneBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: PlaneConstructor) => {\r\n\t\t\tPlane = ctor;\r\n\t\t}\r\n});","import { BoundingBox } from \"../../../core/rendering/scenes/geometries/bounding/BoundingBox\";\r\nimport { Matrix4 } from \"../../maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../maths/algebra/vectors/Vector3\";\r\nimport { Plane } from \"../../maths/geometry/primitives/Plane\";\r\nimport { BoundingSphere } from \"./BoundingSphere\";\r\n\r\nexport { Frustum };\r\n\r\nconst tempVector = new Vector3();\r\n\r\ninterface Frustum {\r\n    readonly nearPlane: Plane;\r\n    readonly farPlane: Plane;\r\n    readonly topPlane: Plane;\r\n    readonly bottomPlane: Plane;\r\n    readonly leftPlane: Plane;\r\n    readonly rightPlane: Plane;\r\n    readonly extents: Vector3[];\r\n    copy(Frustum: Frustum): Frustum;\r\n\tclone(): Frustum;\r\n\tsetFromMatrix(matrix: Matrix4): Frustum;\r\n\tset(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane\r\n    ): Frustum;\r\n\tintersectsSphere(sphere: BoundingSphere): boolean;\r\n\tintersectsBox(box: BoundingBox): boolean;\r\n\tcontainsPoint(point: Vector3): boolean;\r\n    getEdges(edges: Vector3[]): Vector3[];\r\n    getExtents(extents: Vector3[]): Vector3[];\r\n}\r\n\r\ninterface FrustumConstructor {\r\n    readonly prototype: Frustum;\r\n    new(): Frustum;\r\n}\r\n\r\nclass FrustumBase implements Frustum {\r\n    readonly nearPlane: Plane;\r\n    readonly farPlane: Plane;\r\n    readonly topPlane: Plane;\r\n    readonly bottomPlane: Plane;\r\n    readonly leftPlane: Plane;\r\n    readonly rightPlane: Plane;\r\n    readonly extents: Vector3[];\r\n\r\n    constructor() {\r\n\t\tthis.nearPlane = new Plane();\r\n        this.farPlane = new Plane();\r\n        this.topPlane = new Plane();\r\n        this.bottomPlane = new Plane();\r\n        this.leftPlane = new Plane();\r\n        this.rightPlane = new Plane();\r\n        this.extents = new Array(8).fill(0).map(_ => new Vector3());\r\n    }\r\n\r\n    set(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane): Frustum {\r\n        const {nearPlane: _nearPlane, farPlane: _farPlane, bottomPlane: _bottomPlane, topPlane: _topPlane, leftPlane: _leftPlane, rightPlane: _rightPlane} = this;\r\n\t\t_nearPlane.copy(nearPlane);\r\n\t\t_farPlane.copy(farPlane);\r\n        _topPlane.copy(topPlane);\r\n        _bottomPlane.copy(bottomPlane);\r\n        _leftPlane.copy(leftPlane);\r\n        _rightPlane.copy(rightPlane);\r\n\t\treturn this;\r\n\t}\r\n\r\n    copy(Frustum: FrustumBase): Frustum {\r\n        const {nearPlane, farPlane, bottomPlane, topPlane, leftPlane, rightPlane} = Frustum;\r\n        this.set(\r\n            nearPlane,\r\n            farPlane,\r\n            topPlane,\r\n            bottomPlane,\r\n            leftPlane,\r\n            rightPlane\r\n        );\r\n        return this;\r\n    }\r\n\r\n\tclone(): Frustum {\r\n\t\treturn new FrustumBase().copy(this);\r\n    }\r\n    \r\n\tsetFromMatrix(matrix: Matrix4): Frustum {\r\n        const {nearPlane, farPlane, bottomPlane, topPlane, leftPlane, rightPlane, extents} = this;\r\n        const [m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15] = matrix.array;\r\n        rightPlane.set(m3 - m0, m7 - m4, m11 - m8, m15 - m12).normalized();\r\n        leftPlane.set(m3 + m0, m7 + m4, m11 + m8, m15 + m12).normalized();\r\n        bottomPlane.set(m3 + m1, m7 + m5, m11 + m9, m15 + m13).normalized();\r\n        topPlane.set(m3 - m1, m7 - m5, m11 - m9, m15 - m13).normalized();\r\n        farPlane.set(m3 - m2, m7 - m6, m11 - m10, m15 - m14).normalized();\r\n        nearPlane.set(m3 + m2, m7 + m6, m11 + m10, m15 + m14).normalized();\r\n\r\n        Plane.intersection(leftPlane, bottomPlane, nearPlane, extents[0]);\r\n        Plane.intersection(leftPlane, topPlane, nearPlane, extents[1]);\r\n        Plane.intersection(rightPlane, bottomPlane, nearPlane, extents[2]);\r\n        Plane.intersection(rightPlane, topPlane, nearPlane, extents[3]);\r\n        Plane.intersection(leftPlane, bottomPlane, farPlane, extents[4]);\r\n        Plane.intersection(leftPlane, topPlane, farPlane, extents[5]);\r\n        Plane.intersection(rightPlane, bottomPlane, farPlane, extents[6]);\r\n        Plane.intersection(rightPlane, topPlane, farPlane, extents[7]);\r\n        \r\n\t\treturn this;\r\n    }\r\n    \r\n\tintersectsSphere(sphere: BoundingSphere): boolean {\r\n        const {nearPlane, farPlane, bottomPlane, topPlane, leftPlane, rightPlane} = this;\r\n        const {center, radius} = sphere;\r\n        return center.dot(nearPlane.normal) + nearPlane.constant + radius <= 0 ||\r\n            center.dot(farPlane.normal) + farPlane.constant + radius <= 0 ||\r\n            center.dot(bottomPlane.normal) + bottomPlane.constant + radius <= 0 ||\r\n            center.dot(topPlane.normal) + topPlane.constant + radius <= 0 ||\r\n            center.dot(leftPlane.normal) + leftPlane.constant + radius <= 0 ||\r\n            center.dot(rightPlane.normal) + rightPlane.constant + radius <= 0;\r\n\t}\r\n    \r\n\tintersectsBox(box: BoundingBox): boolean {\r\n        const {max: boxMax, min: boxMin} = box;\r\n        const {nearPlane, farPlane, bottomPlane, topPlane, leftPlane, rightPlane} = this;\r\n        let intersects = \r\n            nearPlane.distanceToPoint(tempVector.setValues(\r\n                nearPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                nearPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                nearPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            farPlane.distanceToPoint(tempVector.setValues(\r\n                farPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                farPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                farPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            bottomPlane.distanceToPoint(tempVector.setValues(\r\n                bottomPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                bottomPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                bottomPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            topPlane.distanceToPoint(tempVector.setValues(\r\n                topPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                topPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                topPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            leftPlane.distanceToPoint(tempVector.setValues(\r\n                leftPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                leftPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                leftPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            rightPlane.distanceToPoint(tempVector.setValues(\r\n                rightPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                rightPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                rightPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0;\r\n\t\treturn intersects;\r\n\t}\r\n\r\n    getEdges(edges: Vector3[]): Vector3[] {\r\n        const {extents} = this;\r\n        const leftBottomNear = extents[0];\r\n        const leftTopNear = extents[1];\r\n        const rightBottomNear = extents[2];\r\n        const rightTopNear = extents[3];\r\n        const leftBottomFar = extents[4];\r\n        const leftTopFar = extents[5];\r\n        const rightBottomFar = extents[6];\r\n        const rightTopFar = extents[7];\r\n        edges[0].copy(leftTopFar).sub(leftTopNear);\r\n        edges[1].copy(rightTopFar).sub(rightTopNear);\r\n        edges[2].copy(leftBottomFar).sub(leftBottomNear);\r\n        edges[3].copy(rightBottomFar).sub(rightBottomNear);\r\n        edges[4].copy(rightTopFar).sub(leftTopFar);\r\n        edges[5].copy(rightTopNear).sub(rightBottomNear);\r\n        return edges;\r\n    }\r\n\r\n    getExtents(extents: Vector3[]): Vector3[] {\r\n        const {extents: _extents} = this;\r\n        extents[0].copy(_extents[0]);\r\n        extents[1].copy(_extents[1]);\r\n        extents[2].copy(_extents[2]);\r\n        extents[3].copy(_extents[3]);\r\n        extents[4].copy(_extents[4]);\r\n        extents[5].copy(_extents[5]);\r\n        extents[6].copy(_extents[6]);\r\n        extents[7].copy(_extents[7]);\r\n        return extents;\r\n    }\r\n\r\n\tcontainsPoint(point: Vector3): boolean {\r\n        const {nearPlane, farPlane, bottomPlane, topPlane, leftPlane, rightPlane} = this;\r\n        return nearPlane.distanceToPoint(point) >= 0 &&\r\n            farPlane.distanceToPoint(point) >= 0 &&\r\n            bottomPlane.distanceToPoint(point) >= 0 &&\r\n            topPlane.distanceToPoint(point) >= 0 &&\r\n            leftPlane.distanceToPoint(point) >= 0 &&\r\n            rightPlane.distanceToPoint(point) >= 0;\r\n    }\r\n}\r\n\r\nvar Frustum: FrustumConstructor = FrustumBase;","export { Buffer };\r\n\r\nexport enum BufferDataUsage {\r\n    STATIC_DRAW = 0x88E4,\r\n    DYNAMIC_DRAW = 0x88E8,\r\n    STREAM_DRAW = 0x88E0,\r\n    STATIC_READ = 0x88E5,\r\n    DYNAMIC_READ = 0x88E9,\r\n    STREAM_READ = 0x88E1,\r\n    STATIC_COPY = 0x88E6,\r\n    DYNAMIC_COPY = 0x88EA,\r\n    STREAM_COPY = 0x88E2\r\n}\r\n\r\nexport enum BufferTarget {\r\n    ARRAY_BUFFER = 0x8892,\r\n    ELEMENT_ARRAY_BUFFER = 0x8893,\r\n    TRANSFORM_FEEDBACK_BUFFER = 0x8C8E,\r\n    UNIFORM_BUFFER = 0x8A11,\r\n}\r\n\r\ntype Buffer = {\r\n    internalBuffer: WebGLBuffer;\r\n    target: BufferTarget;\r\n    usage: BufferDataUsage;\r\n    byteLength: number;\r\n}","import { BufferDataUsage, Buffer } from \"./WebGLBufferUtilities\";\r\nimport { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\n\r\nexport { VertexAttributeValue };\r\nexport { VertexAttributeProperties };\r\nexport { VertexArrayProperties };\r\nexport { VertexArrayValues };\r\nexport { VertexArray };\r\nexport { WebGLVertexArrayUtilities };\r\n\r\nexport enum DrawMode {\r\n    POINTS = 0x0000,\r\n    LINES = 0x0001,\r\n    LINE_LOOP = 0x0002,\r\n    LINE_STRIP = 0x0003,\r\n    TRIANGLES = 0x0004,\r\n    TRIANGLE_STRIP = 0x0005,\r\n    TRIANGLE_FAN = 0x0006\r\n}\r\n\r\nexport enum DataComponentType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406\r\n}\r\n\r\nexport enum AttributeDataType {\r\n    VEC2 = \"VEC2\",\r\n    VEC3 = \"VEC3\",\r\n    VEC4 = \"VEC4\",\r\n}\r\n\r\nexport enum ElementArrayDataType {\r\n    UNSIGNED_BYTE = 0x1401,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    UNSIGNED_INT = 0x1405\r\n}\r\n\r\nexport type AttributeArray =\r\n    Float32Array | Int32Array | Uint32Array |\r\n    Int16Array | Uint16Array |\r\n    Int8Array | Uint8Array;\r\n\r\ntype VertexAttributeProperties = {\r\n    type: AttributeDataType;\r\n    array?: AttributeArray;\r\n    componentType?: DataComponentType;\r\n    byteLength?: number;\r\n    buffer?: number;\r\n    divisor?: number;\r\n    normalize?: boolean;\r\n    constant?: boolean;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n}\r\n\r\ntype VertexAttributeValue = {\r\n    array: AttributeArray;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n    constant?: boolean;\r\n}\r\n\r\ntype VertexAttribute = {\r\n    divisor: number;\r\n    componentType: DataComponentType;\r\n    numComponents: number;\r\n    constant: boolean;\r\n    constantValue?: AttributeArray;\r\n    byteOffset: number;\r\n    bytesPerElement: number;\r\n    type: AttributeDataType;\r\n    normalize: boolean;\r\n}\r\n\r\ntype VertexArrayProperties = {\r\n    vertexBuffers?: (VertexArrayBuffer | VertexArrayBufferProperties)[];\r\n    vertexAttributes?: Record<string, VertexAttributeProperties>;\r\n    elementBuffer?: VertexElementArrayBuffer | VertexElementArrayBufferProperties;\r\n    elementIndices?: Uint8Array | Uint16Array | Uint32Array;\r\n}\r\n\r\ntype VertexArrayValues = {\r\n    attributes: Record<string, VertexAttributeValue>;\r\n    drawMode?: DrawMode;\r\n    elementsCount?: number;\r\n    instanceCount?: number;\r\n}\r\n\r\ntype VertexArray = {\r\n    internalVertexArray: WebGLVertexArrayObject;\r\n    program: Program;\r\n    verticesBuffers: VertexArrayBuffer[];\r\n    elementBuffer?: VertexElementArrayBuffer;\r\n}\r\n\r\nexport type VertexArrayBuffer = Buffer & {\r\n    vertexAttributes: Record<string, VertexAttribute>;\r\n    byteLength: number;\r\n    byteStride: number;\r\n    interleaved: boolean;\r\n}\r\n\r\nexport type VertexArrayBufferProperties = {\r\n    usage?: BufferDataUsage;\r\n    interleaved?: boolean;\r\n}\r\n\r\nexport type VertexElementArrayBuffer = Buffer & {\r\n    indexType: ElementArrayDataType;\r\n};\r\n\r\nexport type VertexElementArrayBufferProperties = {\r\n    usage?: BufferDataUsage;\r\n}\r\n\r\nexport type VertexArrayBufferLayout = Record<string, {\r\n    byteOffset: number;\r\n    bytesPerElement: number;\r\n}>;\r\n\r\nclass WebGLVertexArrayUtilities {\r\n\r\n    static getDataTypeNumComponents(type: AttributeDataType): number {\r\n        switch (type) {\r\n            case AttributeDataType.VEC2:\r\n                return 2;\r\n            case AttributeDataType.VEC3:\r\n                return 3;\r\n            case AttributeDataType.VEC4:\r\n                return 4;\r\n        }\r\n    }\r\n\r\n    static getComponentTypeArrayConstructor(type: DataComponentType):\r\n        Float32ArrayConstructor | Int32ArrayConstructor | Uint32ArrayConstructor |\r\n        Int16ArrayConstructor | Uint16ArrayConstructor |\r\n        Int8ArrayConstructor | Uint8ArrayConstructor {\r\n        switch (type) {\r\n            case DataComponentType.FLOAT:\r\n                return Float32Array;\r\n            case DataComponentType.BYTE:\r\n                return Uint8Array;\r\n            case DataComponentType.UNSIGNED_BYTE:\r\n                return Uint8Array;\r\n            case DataComponentType.SHORT:\r\n                return Int16Array;\r\n            case DataComponentType.UNSIGNED_SHORT:\r\n                return Uint16Array;\r\n            case DataComponentType.INT:\r\n                return Int32Array;\r\n            case DataComponentType.UNSIGNED_INT:\r\n                return Uint32Array;\r\n        }\r\n    }\r\n\r\n    static getArrayComponentType(array: AttributeArray): DataComponentType {\r\n        if (array instanceof Float32Array) {\r\n            return DataComponentType.FLOAT;\r\n        }\r\n        else if (array instanceof Int32Array) {\r\n            return DataComponentType.INT;\r\n        }\r\n        else if (array instanceof Uint32Array) {\r\n            return DataComponentType.UNSIGNED_INT;\r\n        }\r\n        else if (array instanceof Int16Array) {\r\n            return DataComponentType.SHORT;\r\n        }\r\n        else if (array instanceof Uint16Array) {\r\n            return DataComponentType.UNSIGNED_SHORT;\r\n        }\r\n        else if (array instanceof Int8Array) {\r\n            return DataComponentType.BYTE;\r\n        }\r\n        else {\r\n            return DataComponentType.UNSIGNED_BYTE;\r\n        }\r\n    }\r\n\r\n    static createVertexElementArrayBuffer(gl: WebGL2RenderingContext, indices: Uint8Array | Uint16Array | Uint32Array): VertexElementArrayBuffer | null {\r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n        const usage = BufferDataUsage.STATIC_READ;\r\n        const target = gl.ELEMENT_ARRAY_BUFFER;\r\n        const {byteLength} = indices;\r\n        const indexType = this.getElementArrayBufferType(indices);\r\n\r\n        gl.bindBuffer(target, internalBuffer);\r\n        gl.bufferData(target, indices, usage);\r\n\r\n        return {\r\n            internalBuffer,\r\n            target,\r\n            usage,\r\n            byteLength,\r\n            indexType\r\n        };\r\n    }\r\n    \r\n    static createVertexArrayBuffer(gl: WebGL2RenderingContext, program: Program, attributes: Record<string, VertexAttributeProperties>, usage?: BufferDataUsage, interleaved?: boolean): VertexArrayBuffer | null {\r\n        const {internalProgram} = program;\r\n\r\n        const DEFAULT_USAGE = BufferDataUsage.STATIC_READ;\r\n        const DEFAULT_INTERLEAVED = false;\r\n        interleaved = interleaved ?? DEFAULT_INTERLEAVED;\r\n        usage = usage ?? DEFAULT_USAGE;\r\n\r\n        const attributesEntries = attributes ? Object.entries(attributes) : null;\r\n        const byteLength = (attributesEntries !== null) ? attributesEntries.reduce(\r\n            (byteLength, [_, attribute]) => byteLength + (attribute.array?.byteLength ?? attribute.byteLength ?? 0), 0\r\n        ) : 0;\r\n        \r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n\r\n        const target = gl.ARRAY_BUFFER;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        const dataBuffer = new ArrayBuffer(byteLength);\r\n        let byteStride = 0;\r\n\r\n        const vertexAttributes: Record<string, VertexAttribute> = {};\r\n        if (attributesEntries !== null) {\r\n\r\n            attributesEntries.forEach(([_, attribute]) => {\r\n                const {array, componentType, byteLength} = attribute;\r\n                if (!array && !(componentType && byteLength)) {\r\n                    throw new Error(\"Every attribute requires either an array or a componentType and a byteLength\");\r\n                }\r\n            });\r\n\r\n            byteStride = interleaved ? attributesEntries.reduce(\r\n                (stride, [_, attribute]) => {\r\n                    const {constant} = attribute;\r\n                    if (!constant) {\r\n                        const {array, type, componentType} = attribute;\r\n                        const {BYTES_PER_ELEMENT} = array ?? this.getComponentTypeArrayConstructor(componentType!);\r\n                        const numComponents = this.getDataTypeNumComponents(type);\r\n                        return stride + BYTES_PER_ELEMENT * numComponents;\r\n                    }\r\n                    return stride;\r\n                }, 0\r\n            ) : 0;\r\n            const bufferSlices = interleaved ? Math.trunc(byteLength / byteStride) : 0;\r\n            let byteOffset = 0;\r\n            let constantValue: AttributeArray | undefined;\r\n    \r\n            attributesEntries.forEach(([attributeName, attribute]) => {\r\n                const {array, type} = attribute;\r\n                let {constant = false, divisor, normalize, componentType} = attribute;\r\n                componentType = array?this.getArrayComponentType(array) : componentType!;\r\n\r\n                const location = gl.getAttribLocation(internalProgram, attributeName);\r\n                if (location === -1) {\r\n                    console.warn(`Attribute ${attributeName} could not be located.`);\r\n                    return;\r\n                }\r\n\r\n                const numComponents = this.getDataTypeNumComponents(type);\r\n                divisor = divisor ?? 0;\r\n                normalize = normalize ?? false;\r\n                \r\n                gl.vertexAttribPointer(location, numComponents, componentType, normalize, byteStride, byteOffset);\r\n                if (divisor > 0) {\r\n                    gl.vertexAttribDivisor(location, divisor);\r\n                }\r\n                if (constant) {\r\n                    if (!array) {\r\n                        throw new Error(\"constant flag requires an array parameter\");\r\n                    }\r\n                    constantValue = array;\r\n                    switch (numComponents) {\r\n                        case 1:\r\n                            gl.vertexAttrib1fv(location, constantValue);\r\n                            break;\r\n                        case 2:\r\n                            gl.vertexAttrib2fv(location, constantValue);\r\n                            break;\r\n                        case 3:\r\n                            gl.vertexAttrib3fv(location, constantValue);\r\n                            break;\r\n                        case 4:\r\n                            gl.vertexAttrib4fv(location, constantValue);\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    if (!constant) {\r\n                        const {array, type} = attribute;\r\n                        const numComponents = this.getDataTypeNumComponents(type);\r\n                        let byteLength = 0;\r\n                        let bytesPerElement = 0;\r\n                        if (interleaved) {\r\n                            if (array) {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement, byteLength} = array);\r\n                                const bufferArrayConstructor = this.getComponentTypeArrayConstructor(\r\n                                    this.getArrayComponentType(array)\r\n                                );\r\n                                const bufferArray = new bufferArrayConstructor(dataBuffer, byteOffset);\r\n                                const arrayStrideOffset = byteStride / bytesPerElement;\r\n                                for (let i = 0; i < bufferSlices; i++) {\r\n                                    let arraySliceIndex = i * numComponents;\r\n                                    bufferArray.set(\r\n                                        array.slice(\r\n                                            arraySliceIndex,\r\n                                            arraySliceIndex + numComponents\r\n                                        ),\r\n                                        i * arrayStrideOffset\r\n                                    );\r\n                                }\r\n                            }\r\n                            else {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement} = this.getComponentTypeArrayConstructor(componentType!));\r\n                                byteLength = attribute.byteLength!;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (array) {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement, byteLength} = array);\r\n                                const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                                    WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                                );\r\n                                const bufferArray = new bufferArrayConstructor(dataBuffer, byteOffset);\r\n                                bufferArray.set(array);\r\n                            }\r\n                            else {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement} = this.getComponentTypeArrayConstructor(componentType!));\r\n                                byteLength = attribute.byteLength!;\r\n                            }\r\n                        }\r\n                        vertexAttributes[attributeName] = {\r\n                            constantValue,\r\n                            numComponents,\r\n                            divisor,\r\n                            componentType,\r\n                            constant,\r\n                            byteOffset,\r\n                            bytesPerElement,\r\n                            type,\r\n                            normalize\r\n                        };\r\n                        byteOffset += interleaved ? bytesPerElement * numComponents : byteLength;\r\n                    }\r\n                    gl.enableVertexAttribArray(location);\r\n                }\r\n            });\r\n        }\r\n        gl.bufferData(target, dataBuffer, usage);\r\n        return {\r\n            internalBuffer,\r\n            target,\r\n            usage,\r\n            byteLength,\r\n            interleaved,\r\n            byteStride,\r\n            vertexAttributes\r\n        };\r\n    }\r\n\r\n    static setVertexArrayValues(gl: WebGL2RenderingContext, vertexArray: VertexArray, values: VertexArrayValues): void {\r\n        const {attributes, elementsCount} = values;\r\n        \r\n        const attributesRecords = Object.keys(attributes);\r\n        attributesRecords.forEach((attributeRecord) => {\r\n            const {verticesBuffers} = vertexArray;\r\n            const verticesBuffer = verticesBuffers.find(\r\n                (verticesBuffer) => attributeRecord in verticesBuffer.vertexAttributes\r\n            );\r\n            if (verticesBuffer) {\r\n                const {internalBuffer, target, byteStride, interleaved, vertexAttributes} = verticesBuffer;\r\n                const currentArrayBufferBinding = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\r\n                if (currentArrayBufferBinding !== internalBuffer) {\r\n                    gl.bindBuffer(target, internalBuffer);\r\n                }\r\n                const attribute = attributes[attributeRecord];\r\n                const {byteOffset, numComponents} = vertexAttributes[attributeRecord];\r\n                let {array, srcOffset, srcLength} = attribute;\r\n                const {length} = array;\r\n                let dstOffset = byteOffset;\r\n                if (interleaved) {\r\n                    if (srcOffset || srcLength) {\r\n                        array = array.slice(srcOffset ?? 0, srcLength);\r\n                    }\r\n                    const slices = interleaved ? Math.trunc(length / numComponents) : 0;\r\n                    let sliceOffset = 0;\r\n                    for (let i = 0; i < slices; i++) {\r\n                        gl.bufferSubData(target, dstOffset, array, sliceOffset, numComponents);\r\n                        sliceOffset += numComponents;\r\n                        dstOffset += byteStride;\r\n                    }\r\n                }\r\n                else {\r\n                    srcOffset = srcOffset ?? 0;\r\n                    srcLength = srcLength ?? length;\r\n                    gl.bufferSubData(target, 0, array, srcOffset, srcLength);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static setVertexArrayBufferData(gl: WebGL2RenderingContext, buffer: VertexArrayBuffer | VertexElementArrayBuffer, data: ArrayBufferView, dstByteOffset?: number, srcOffset?: number, length?: number): void {\r\n        const {internalBuffer, target} = buffer;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        dstByteOffset = dstByteOffset ?? 0;\r\n        srcOffset = srcOffset ?? 0;\r\n        gl.bufferSubData(target, dstByteOffset, data, srcOffset, length);\r\n    }\r\n\r\n    static createVertexArray(gl: WebGL2RenderingContext, program: Program, vertexArray: VertexArrayProperties): VertexArray | null {\r\n        const {vertexAttributes, vertexBuffers, elementIndices, elementBuffer: elementBufferOrBufferProperties} = vertexArray;\r\n        \r\n        const internalVertexArray = gl.createVertexArray();\r\n        if (internalVertexArray === null) {\r\n            return null;\r\n        }\r\n        gl.bindVertexArray(internalVertexArray);\r\n\r\n        const attributesEntries = vertexAttributes ? Object.entries(vertexAttributes) : [];\r\n        \r\n        const {internalProgram} = program;\r\n        const verticesBuffers: VertexArray[\"verticesBuffers\"] = [];\r\n        if (vertexBuffers) {\r\n            vertexBuffers.forEach((buffer_i, i) => {\r\n                const attributes = Object.fromEntries(attributesEntries.filter(\r\n                    ([_, attribute_i]) => attribute_i.buffer == i \r\n                ));\r\n                let buffer: VertexArrayBuffer | null = null;\r\n                if (buffer_i !== undefined) {\r\n                    if (\"internalBuffer\" in buffer_i) {\r\n                        const {target, internalBuffer} = buffer_i;\r\n                        buffer = buffer_i;\r\n                        gl.bindBuffer(target, internalBuffer);\r\n                        const {byteStride, vertexAttributes} = buffer;\r\n                        Object.entries(vertexAttributes).forEach(([attributeName, setter]) => {\r\n                            const {numComponents, componentType, normalize, byteOffset, divisor, constant, constantValue} = setter;\r\n                            const location = gl.getAttribLocation(internalProgram, attributeName);\r\n                            if (location > -1) {\r\n                                gl.vertexAttribPointer(location, numComponents, componentType, normalize, byteStride, byteOffset);\r\n                                if (divisor > 0) {\r\n                                    gl.vertexAttribDivisor(location, divisor);\r\n                                }\r\n                                if (constant && constantValue) {\r\n                                    switch (numComponents) {\r\n                                        case 1:\r\n                                            gl.vertexAttrib1fv(location, constantValue);\r\n                                            break;\r\n                                        case 2:\r\n                                            gl.vertexAttrib2fv(location, constantValue);\r\n                                            break;\r\n                                        case 3:\r\n                                            gl.vertexAttrib3fv(location, constantValue);\r\n                                            break;\r\n                                        case 4:\r\n                                            gl.vertexAttrib4fv(location, constantValue);\r\n                                            break;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    gl.enableVertexAttribArray(location);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (attributes) {\r\n                        const {usage, interleaved} = buffer_i;\r\n                        buffer = this.createVertexArrayBuffer(gl, program, attributes, usage, interleaved);\r\n                    }\r\n                }\r\n                else if (attributes) {\r\n                    buffer = this.createVertexArrayBuffer(gl, program, attributes);\r\n                }\r\n                if (buffer === null) {\r\n                    return null;\r\n                }\r\n                verticesBuffers.push(buffer);\r\n            });\r\n        }\r\n        else if (vertexAttributes) {\r\n            let buffer: VertexArrayBuffer | null = null;\r\n            buffer = this.createVertexArrayBuffer(gl, program, vertexAttributes);\r\n            if (buffer === null) {\r\n                return null;\r\n            }\r\n            verticesBuffers.push(buffer);\r\n        }\r\n        \r\n        let elementBuffer: VertexElementArrayBuffer | null | undefined = undefined;\r\n        if (elementBufferOrBufferProperties !== undefined) {\r\n            if (\"internalBuffer\" in elementBufferOrBufferProperties) {\r\n                const {target, internalBuffer} = elementBufferOrBufferProperties;\r\n                elementBuffer = elementBufferOrBufferProperties;\r\n                gl.bindBuffer(target, internalBuffer);\r\n            }\r\n            else if (elementIndices) {\r\n                elementBuffer = this.createVertexElementArrayBuffer(gl, elementIndices);\r\n            }\r\n        }\r\n        else if (elementIndices) {\r\n            elementBuffer = this.createVertexElementArrayBuffer(gl, elementIndices);\r\n        }\r\n        if (elementBuffer === null) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            verticesBuffers,\r\n            elementBuffer,\r\n            program,\r\n            internalVertexArray\r\n        };\r\n    }\r\n\r\n    static deleteVertexArray(gl: WebGL2RenderingContext, vertexArray: VertexArray): void {\r\n        const {internalVertexArray} = vertexArray;\r\n        if (gl.isVertexArray(internalVertexArray)) {\r\n            gl.deleteVertexArray(internalVertexArray);\r\n        }\r\n    }\r\n\r\n    static getElementArrayBufferType(indices: Uint8Array | Uint16Array | Uint32Array): ElementArrayDataType {\r\n        if (indices instanceof Uint8Array) {\r\n            return ElementArrayDataType.UNSIGNED_BYTE;\r\n        }\r\n        else if (indices instanceof Uint16Array) {\r\n            return ElementArrayDataType.UNSIGNED_SHORT;\r\n        }\r\n        else {\r\n            return ElementArrayDataType.UNSIGNED_INT;\r\n        }\r\n    }\r\n}","import { AttributeArray, AttributeDataType, DataComponentType, WebGLVertexArrayUtilities } from \"../../webgl/WebGLVertexArrayUtilities\";\r\n\r\nexport { GeometryBuffer };\r\n\r\ninterface GeometryBufferConstructor {\r\n    readonly prototype: GeometryBuffer;\r\n    new(): GeometryBuffer;\r\n    new(\r\n        attributes: Record<string, GeometryBufferAttribute>,\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    ): GeometryBuffer;\r\n    fromBlob(blob: Blob): Promise<GeometryBuffer>;\r\n}\r\n\r\ninterface GeometryBuffer {\r\n    interleaved: boolean;\r\n    buffer: ArrayBuffer;\r\n    stride: number;\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    attributes: Record<string, {\r\n        type: AttributeDataType;\r\n        componentType: DataComponentType;\r\n        byteOffset: number;\r\n        byteLength: number;\r\n        constant?: boolean;\r\n        normalize?: boolean;\r\n    }>;\r\n    getAttribute(name: string): GeometryBufferAttribute | null;\r\n    toBlob(): Blob;\r\n}\r\n\r\ninterface GeometryBufferAttribute {\r\n    array: AttributeArray,\r\n    type: AttributeDataType;\r\n    constant?: boolean;\r\n    normalize?: boolean;\r\n}\r\n\r\nclass GeometryBufferBase implements GeometryBuffer {\r\n    buffer: ArrayBuffer;\r\n    attributes: Record<string, {\r\n        type: AttributeDataType;\r\n        componentType: DataComponentType;\r\n        byteOffset: number;\r\n        byteLength: number;\r\n        constant?: boolean;\r\n        normalize?: boolean;\r\n    }>;\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    interleaved: boolean;\r\n    stride: number;\r\n\r\n    constructor()\r\n    constructor(\r\n        attributes: Record<string, GeometryBufferAttribute>,\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    )\r\n    constructor(\r\n        attributes: Record<string, GeometryBufferAttribute> = {},\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    ) {\r\n        if (attributes) {\r\n            const attributesEntries = Object.entries(attributes);\r\n            const bufferByteLength = attributesEntries.reduce(\r\n                (byteLength, [_, attribute]) => byteLength + attribute.array.byteLength, 0\r\n            );\r\n            const buffer = new ArrayBuffer(bufferByteLength);\r\n            const stride = (interleaved) ? attributesEntries.reduce(\r\n                (stride, [_, attribute]) => {\r\n                    const {array, type} = attribute;\r\n                    return stride + array.BYTES_PER_ELEMENT * WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n                }, 0\r\n            ) : 0;\r\n            const bufferSlices = Math.trunc(bufferByteLength / stride);\r\n            \r\n            this.attributes = {};\r\n            this.indices = indices;\r\n            this.interleaved = interleaved ?? false;\r\n            this.stride = stride;\r\n            this.buffer = buffer;\r\n            \r\n            let byteOffset = 0;\r\n            if (interleaved) {\r\n                Object.entries(attributes).forEach(([name, attribute]) => {\r\n                    const {array, type, constant, normalize} = attribute;\r\n                    const componentType = WebGLVertexArrayUtilities.getArrayComponentType(array);\r\n                    const numComponents = WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n                    const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                        WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                    );\r\n                    const {byteLength, BYTES_PER_ELEMENT} = array;\r\n                    const bufferArray = new bufferArrayConstructor(buffer, byteOffset);\r\n                    const arrayStrideOffset = stride / BYTES_PER_ELEMENT;\r\n                    for (let i = 0; i < bufferSlices; i++) {\r\n                        let arraySliceIndex = i * numComponents;\r\n                        bufferArray.set(\r\n                            array.slice(\r\n                                arraySliceIndex,\r\n                                arraySliceIndex + numComponents\r\n                            ),\r\n                            i * arrayStrideOffset\r\n                        );\r\n                    }\r\n                    this.attributes[name] = {\r\n                        type,\r\n                        byteOffset,\r\n                        byteLength,\r\n                        componentType,\r\n                        constant,\r\n                        normalize\r\n                    };\r\n                    byteOffset += numComponents * BYTES_PER_ELEMENT;\r\n                });\r\n            }\r\n            else {\r\n                Object.entries(attributes).forEach(([name, attribute]) => {\r\n                    const {array, type} = attribute;\r\n                    const {byteLength} = array;\r\n                    const componentType = WebGLVertexArrayUtilities.getArrayComponentType(array);\r\n                    const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                        WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                    );\r\n                    const bufferArray = new bufferArrayConstructor(buffer, byteOffset);\r\n                    bufferArray.set(array);\r\n                    this.attributes[name] = {\r\n                        byteOffset,\r\n                        byteLength,\r\n                        type,\r\n                        componentType\r\n                    };\r\n                    byteOffset += byteLength;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.attributes = {};\r\n            this.indices = undefined;\r\n            this.interleaved = false;\r\n            this.stride = 0;\r\n            this.buffer = new ArrayBuffer(0);\r\n        }\r\n    }\r\n\r\n    toBlob(): Blob {\r\n        const {attributes, buffer, stride, interleaved, indices} = this;\r\n        const bufferData = new Uint8Array(buffer);\r\n        const {length: bufferLength} = bufferData;\r\n        const indicesData = Uint8Array.from(indices ?? []);\r\n        const indicesLength = indices?.length ?? 0;\r\n        const headerData = new TextEncoder().encode(JSON.stringify({attributes, stride, interleaved}));\r\n        const {length: headerLength} = headerData;\r\n\r\n        const blobDataView = new Uint8Array(4 + headerLength + indicesLength + bufferLength);\r\n        const {buffer: blobDataViewBuffer} = blobDataView;\r\n        const blobDataHeaderView = new Uint16Array(blobDataViewBuffer, 0, 2);\r\n        const blobDataHeaderLength = blobDataHeaderView.length * (Uint16Array.BYTES_PER_ELEMENT / Uint8Array.BYTES_PER_ELEMENT);\r\n        blobDataHeaderView[0] = headerLength;\r\n        blobDataHeaderView[1] = indicesLength;\r\n        blobDataView.set(headerData, blobDataHeaderLength);\r\n        blobDataView.set(indicesData, blobDataHeaderLength + headerLength);\r\n        blobDataView.set(bufferData, blobDataHeaderLength + headerLength + indicesLength);\r\n\r\n        return new Blob([blobDataView], {type: \"application/octet-stream\"});\r\n    }\r\n\r\n    static async fromBlob(blob: Blob): Promise<GeometryBuffer> {\r\n        const arrayBuffer = await blob.arrayBuffer();\r\n        const blobDataHeaderView = new Uint16Array(arrayBuffer, 0, 2);\r\n        const {byteLength: blobDataHeaderByteLength} = blobDataHeaderView;\r\n        const headerLength = blobDataHeaderView[0];\r\n        const indicesLength = blobDataHeaderView[1];\r\n        const headerData = new Uint8Array(arrayBuffer, blobDataHeaderByteLength, headerLength);\r\n        const arrayConstructor = (indicesLength < Math.pow(2, 8)) ? Uint8Array : (indicesLength < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        const indices = new arrayConstructor(arrayBuffer.slice(blobDataHeaderByteLength + headerLength * Uint8Array.BYTES_PER_ELEMENT, indicesLength * arrayConstructor.BYTES_PER_ELEMENT));\r\n        const buffer = arrayBuffer.slice(blobDataHeaderByteLength + (indicesLength + headerLength) * Uint8Array.BYTES_PER_ELEMENT);\r\n        const header = <Pick<GeometryBuffer, \"attributes\" | \"stride\" | \"interleaved\">>JSON.parse(new TextDecoder().decode(headerData));\r\n        const {attributes, interleaved, stride} = header;\r\n        const geometryBuffer = new GeometryBuffer();\r\n        geometryBuffer.buffer = buffer;\r\n        geometryBuffer.attributes = attributes;\r\n        geometryBuffer.interleaved = interleaved;\r\n        geometryBuffer.stride = stride;\r\n        geometryBuffer.indices = indices;\r\n        return geometryBuffer;\r\n    }\r\n\r\n    getAttribute(name: string): GeometryBufferAttribute | null {\r\n        const {attributes} = this;\r\n        const attribute = attributes[name];\r\n        if (attribute) {\r\n            const {buffer, interleaved, stride} = this;\r\n            const {type, byteOffset, byteLength, componentType} = attribute;\r\n            const attributeArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(componentType);\r\n            const bytesPerElement = attributeArrayConstructor.BYTES_PER_ELEMENT;\r\n            const length = byteLength / bytesPerElement;\r\n            const numComponents = WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n            const {byteLength: bufferByteLength} = buffer;\r\n            const {BYTES_PER_ELEMENT} = attributeArrayConstructor;\r\n            const attributeArray = new attributeArrayConstructor(length);\r\n            if (interleaved) {\r\n                const bufferArray = new attributeArrayConstructor(buffer, byteOffset);\r\n                const bufferStride = stride;\r\n                const bufferSlices = Math.trunc(bufferByteLength / bufferStride);\r\n                const arrayStrideOffset = bufferStride / BYTES_PER_ELEMENT;\r\n                for (let i = 0; i < bufferSlices; i++) {\r\n                    let bufferArraySliceIndex = arrayStrideOffset * i;\r\n                    attributeArray.set(\r\n                        bufferArray.slice(\r\n                            bufferArraySliceIndex,\r\n                            bufferArraySliceIndex + numComponents\r\n                        ),\r\n                        numComponents * i\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                const bufferArray = new attributeArrayConstructor(buffer, byteOffset, length);\r\n                attributeArray.set(bufferArray);\r\n            }\r\n            return {\r\n                array: attributeArray,\r\n                type: type\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nvar GeometryBuffer: GeometryBufferConstructor = GeometryBufferBase;","\r\n\r\n// Vertices : counter clock-wise ordered\r\n\r\nimport { TriangleList } from \"../../../../libs/maths/extensions/lists/TriangleList\";\r\nimport { Vector2List } from \"../../../../libs/maths/extensions/lists/Vector2List\";\r\nimport { Vector3List } from \"../../../../libs/maths/extensions/lists/Vector3List\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { BoundingBox } from \"../../../../libs/physics/collisions/AxisAlignedBoundingBox\";\r\nimport { BoundingSphere } from \"../../../../libs/physics/collisions/BoundingSphere\";\r\nimport { GeometryBuffer } from \"./GeometryBuffer\";\r\nimport { GeometryBuilder } from \"./GeometryBuilder\";\r\nimport { GeometryUtils } from \"./GeometryUtils\";\r\n\r\n// FaceIndices : 3 vertices indices\r\n// FaceArea : triangle.getArea()\r\n// FaceNormal : triangle.getNormal()\r\n// FaceUV / FaceColor ?\r\n\r\n// VertexNormal => Weighted (by area) average of the normals of the faces containing the vertex (=> Varying)\r\n// - Clone the vertex array, read the face indices array\r\n\r\n// VertexIndices\r\n\r\n// PerVertex Animation / MorphTargets\r\n\r\n// SkeletalAnimation\r\n\r\n// Bones are a hierarchical tree\r\n\r\n// bonesWeights\r\n// bonesIndices\r\n\r\n// MorphTarget Animation\r\n\r\n// MorphTargets are a copy of each face, being transformed over time\r\n\r\n// morphIndices\r\n// morphTargets = []; MorphTargets are a transformed copy of faces\r\n// morphNormals = [];\r\n\r\nexport { Geometry };\r\nexport { GeometryBase };\r\n\r\nenum GeometryAttributes {\r\n    VERTICES,\r\n    UVS,\r\n    NORMALS,\r\n    TANGENTS\r\n}\r\n\r\ninterface GeometryConstructor {\r\n    \r\n}\r\n\r\ninterface Geometry {\r\n\r\n}\r\n\r\nclass GeometryBase implements Geometry {\r\n\r\n    toBuilder(): GeometryBuilder {\r\n        throw new Error(\"No builder defined.\");\r\n    }\r\n}\r\n\r\nvar Geometry: GeometryConstructor = GeometryBase;","import { Matrix4 } from \"../../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../../../../libs/maths/algebra/vectors/Vector3\";\r\nimport { BoundingBox } from \"./BoundingBox\";\r\n\r\nexport class BoundingSphere {\r\n    center: Vector3;\r\n    radius: number;\r\n\r\n    constructor(\r\n        center: Vector3,\r\n        radius: number\r\n    ) {\r\n        this.center = center;\r\n        this.radius = radius;\r\n    }\r\n\r\n    transform(matrix: Matrix4): void {\r\n        const {center} = this;\r\n        matrix.transformPoint(center);\r\n    }\r\n    \r\n    containsPoint(point: Vector3): boolean {\r\n        const {center, radius} = this;\r\n        return center.distance(point) < radius;\r\n    }\r\n\r\n    hitsSphere(other: BoundingSphere) {\r\n        const {center, radius} = this;\r\n        const {center: otherCenter, radius: otherRadius} = other;\r\n        return center.distance(otherCenter) < radius + otherRadius;\r\n    }\r\n\r\n    hitsBox(other: BoundingBox) {\r\n        const {center, radius} = this;\r\n        const {x: sphereX, y: sphereY, z: sphereZ} = center;\r\n        const {min, max} = other;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        // get box closest point to sphere center by clamping\r\n        const x = Math.max(minX, Math.min(sphereX, maxX));\r\n        const y = Math.max(minY, Math.min(sphereY, maxY));\r\n        const z = Math.max(minZ, Math.min(sphereZ, maxZ));\r\n\r\n        // this is the same as isPointInsideSphere\r\n        const distance = Math.sqrt((x - sphereX) * (x - sphereX) + (y - sphereY) * (y - sphereY) + (z - sphereZ) * (z - sphereZ));\r\n        return distance < radius;\r\n    }\r\n}","import { Matrix4 } from \"../../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../../../../libs/maths/algebra/vectors/Vector3\";\r\n\r\nexport { BoundingBox };\r\n\r\nconst corners = new Array(8).fill(0).map(_ => new Vector3());\r\n\r\ninterface BoundingBoxConstructor {\r\n    prototype: BoundingBox;\r\n    new(\r\n        min: Vector3,\r\n        max: Vector3\r\n    ): BoundingBox;\r\n}\r\n\r\ninterface BoundingBox {\r\n    readonly min: Vector3;\r\n    readonly max: Vector3;\r\n    hits(other: BoundingBox): boolean;\r\n    transform(matrix: Matrix4): BoundingBox;\r\n    transformed(matrix: Matrix4): BoundingBox;\r\n    getExtents(extents: Vector3[]): Vector3[];\r\n    getEdges(edges: Vector3[]): Vector3[];\r\n}\r\n\r\nclass BoundingBoxBase {\r\n    readonly min: Vector3;\r\n    readonly max: Vector3;\r\n\r\n    constructor(\r\n        min: Vector3,\r\n        max: Vector3\r\n    ) {\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n\r\n    static fromBoxes(...boxes: BoundingBox[]) {\r\n        const positiveInfinity = Number.POSITIVE_INFINITY;\r\n        const negativeInfinity = Number.NEGATIVE_INFINITY;\r\n        let minX = positiveInfinity;\r\n        let minY = positiveInfinity;\r\n        let minZ = positiveInfinity;\r\n        let maxX = negativeInfinity;\r\n        let maxY = negativeInfinity;\r\n        let maxZ = negativeInfinity;\r\n        boxes.forEach((box_i) => {\r\n            const {min: boxMin, max: boxMax} = box_i;\r\n            const {x: boxMinX, y: boxMinY, z: boxMinZ} = boxMin;\r\n            const {x: boxMaxX, y: boxMaxY, z: boxMaxZ} = boxMax;\r\n            if (boxMinX < minX) minX = boxMinX;\r\n            else if (boxMaxX > maxX) maxX = boxMaxX;\r\n            if (boxMinY < minY) minY = boxMinY;\r\n            else if (boxMaxY > maxY) maxY = boxMaxY;\r\n            if (boxMinZ < minZ) minZ = boxMinZ;\r\n            else if (boxMaxZ > maxZ) maxZ = boxMaxZ;\r\n        });\r\n        return new BoundingBox(\r\n            new Vector3(minX, minY, minZ),\r\n            new Vector3(maxX, maxY, maxZ)\r\n        );\r\n    }\r\n\r\n    hits(other: BoundingBox): boolean {\r\n        const {min, max} = this;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        const {min: otherMin, max: otherMax} = other;\r\n        const {x: otherMinX, y: otherMinY, z: otherMinZ} = otherMin;\r\n        const {x: otherMaxX, y: otherMaxY, z: otherMaxZ} = otherMax;\r\n        return (minX <= otherMaxX && maxX >= otherMinX) &&\r\n            (minY <= otherMaxY && maxY >= otherMinY) &&\r\n            (minZ <= otherMaxZ && maxZ >= otherMinZ);\r\n    }\r\n\r\n    transform(matrix: Matrix4): BoundingBox {\r\n        const {min, max} = this;\r\n        let {x: minX, y: minY, z: minZ} = min;\r\n        let {x: maxX, y: maxY, z: maxZ} = max;\r\n        corners[0].setValues(minX, minY, minZ);\r\n        corners[1].setValues(minX, minY, maxZ);\r\n        corners[2].setValues(minX, maxY, minZ);\r\n        corners[3].setValues(maxX, minY, minZ);\r\n        corners[4].setValues(minX, maxY, maxZ);\r\n        corners[5].setValues(maxX, minY, maxZ);\r\n        corners[6].setValues(maxX, maxY, minZ);\r\n        corners[7].setValues(maxX, maxY, maxZ);\r\n        const {POSITIVE_INFINITY, NEGATIVE_INFINITY} = Number;\r\n        minX = minY = minZ = POSITIVE_INFINITY;\r\n        maxX = maxY = maxZ = NEGATIVE_INFINITY;\r\n        corners.forEach((corner_i) => {\r\n            matrix.transformPoint(corner_i);\r\n            const [x, y, z] = corner_i;\r\n            if (x < minX) minX = x;\r\n            else if (x > maxX) maxX = x;\r\n            if (y < minY) minY = y;\r\n            else if (y > maxY) maxY = y;\r\n            if (z < minZ) minZ = z;\r\n            else if (z > maxZ) maxZ = z;\r\n        });\r\n        min.setValues(minX, minY, minZ);\r\n        max.setValues(maxX, maxY, maxZ);\r\n        return this;\r\n    }\r\n\r\n    getEdges(edges: Vector3[]): Vector3[] {\r\n        const {min, max} = this;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        edges[0].setValues(maxX - minX, 0, 0);\r\n        edges[1].setValues(0, maxY - minY, 0);\r\n        edges[2].setValues(0, 0, maxZ - minZ);\r\n        return edges;\r\n    }\r\n\r\n    getExtents(extents: Vector3[]): Vector3[] {\r\n        const {min, max} = this;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        extents[0].setValues(minX, minY, minZ);\r\n        extents[1].setValues(minX, minY, maxZ);\r\n        extents[2].setValues(minX, maxY, minZ);\r\n        extents[3].setValues(maxX, minY, minZ);\r\n        extents[4].setValues(minX, maxY, maxZ);\r\n        extents[5].setValues(maxX, minY, maxZ);\r\n        extents[6].setValues(maxX, maxY, minZ);\r\n        extents[7].setValues(maxX, maxY, maxZ);\r\n        return extents;\r\n    }\r\n\r\n    transformed(matrix: Matrix4): BoundingBox {\r\n        const {min, max} = this;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        return new BoundingBox(\r\n            new Vector3(minX, minY, minZ),\r\n            new Vector3(maxX, maxY, maxZ)\r\n        ).transform(matrix);\r\n    }\r\n}\r\n\r\nvar BoundingBox: BoundingBoxConstructor = BoundingBoxBase;","\r\n\r\n// Vertices : counter clock-wise ordered\r\n\r\nimport { TriangleList } from \"../../../../libs/maths/extensions/lists/TriangleList\";\r\nimport { Vector2List } from \"../../../../libs/maths/extensions/lists/Vector2List\";\r\nimport { Vector3List } from \"../../../../libs/maths/extensions/lists/Vector3List\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { BoundingBox } from \"../../../../libs/physics/collisions/AxisAlignedBoundingBox\";\r\nimport { BoundingSphere } from \"../../../../libs/physics/collisions/BoundingSphere\";\r\nimport { GeometryBuffer } from \"./GeometryBuffer\";\r\nimport { GeometryBuilder } from \"./GeometryBuilder\";\r\nimport { GeometryUtils } from \"./GeometryUtils\";\r\n\r\n// FaceIndices : 3 vertices indices\r\n// FaceArea : triangle.getArea()\r\n// FaceNormal : triangle.getNormal()\r\n// FaceUV / FaceColor ?\r\n\r\n// VertexNormal => Weighted (by area) average of the normals of the faces containing the vertex (=> Varying)\r\n// - Clone the vertex array, read the face indices array\r\n\r\n// VertexIndices\r\n\r\n// PerVertex Animation / MorphTargets\r\n\r\n// SkeletalAnimation\r\n\r\n// Bones are a hierarchical tree\r\n\r\n// bonesWeights\r\n// bonesIndices\r\n\r\n// MorphTarget Animation\r\n\r\n// MorphTargets are a copy of each face, being transformed over time\r\n\r\n// morphIndices\r\n// morphTargets = []; MorphTargets are a transformed copy of faces\r\n// morphNormals = [];\r\n\r\nexport { Geometry };\r\nexport { GeometryBase };\r\n\r\nenum GeometryAttributes {\r\n    VERTICES,\r\n    UVS,\r\n    NORMALS,\r\n    TANGENTS\r\n}\r\n\r\ninterface GeometryConstructor {\r\n    \r\n}\r\n\r\ninterface Geometry {\r\n\r\n}\r\n\r\nclass GeometryBase implements Geometry {\r\n\r\n    toBuilder(): GeometryBuilder {\r\n        throw new Error(\"No builder defined.\");\r\n    }\r\n}\r\n\r\nvar Geometry: GeometryConstructor = GeometryBase;","import { BufferMask } from \"./WebGLRendererUtilities\";\r\nimport { Texture, TextureMagFilter, TexturePixelFormat, TexturePixelType } from \"./WebGLTextureUtilities\";\r\n\r\nexport enum FramebufferStatus {\r\n    FRAMEBUFFER_COMPLETE = 0x8CD5,\r\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6,\r\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7,\r\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9,\r\n    FRAMEBUFFER_UNSUPPORTED = 0x8CDD\r\n}\r\n\r\nexport enum FramebufferTextureTarget {\r\n    TEXTURE_2D = 0x0DE1,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A\r\n}\r\n\r\nexport enum FramebufferAttachment {\r\n    COLOR_ATTACHMENT0 = 0x8CE0,\r\n    COLOR_ATTACHMENT1 = 0x8CE1,\r\n    COLOR_ATTACHMENT2 = 0x8CE2,\r\n    COLOR_ATTACHMENT3 = 0x8CE3,\r\n    COLOR_ATTACHMENT4 = 0x8CE4,\r\n    COLOR_ATTACHMENT5 = 0x8CE5,\r\n    COLOR_ATTACHMENT6 = 0x8CE6,\r\n    COLOR_ATTACHMENT7 = 0x8CE7,\r\n    COLOR_ATTACHMENT8 = 0x8CE8,\r\n    COLOR_ATTACHMENT9 = 0x8CE9,\r\n    COLOR_ATTACHMENT10 = 0x8CEA,\r\n    COLOR_ATTACHMENT11 = 0x8CEB,\r\n    COLOR_ATTACHMENT12 = 0x8CEC,\r\n    COLOR_ATTACHMENT13 = 0x8CED,\r\n    COLOR_ATTACHMENT14 = 0x8CEE,\r\n    COLOR_ATTACHMENT15 = 0x8CEF,\r\n    DEPTH_ATTACHMENT = 0x8D00,\r\n    STENCIL_ATTACHMENT = 0x8D20,\r\n    DEPTH_STENCIL_ATTACHMENT = 0x821A\r\n}\r\n\r\nexport enum RenderbufferPixelFormat {\r\n    R8 = 0x8229,\r\n    R8UI = 0x8232,\r\n    R8I = 0x8231,\r\n    R16UI = 0x8234,\r\n    R16I = 0x8233,\r\n    R32UI = 0x8236,\r\n    R32I = 0x8235,\r\n    RG8 = 0x822B,\r\n    RG8UI = 0x8238,\r\n    RG8I = 0x8237,\r\n    RG16UI = 0x823A,\r\n    RG16I = 0x8239,\r\n    RG32UI = 0x823C,\r\n    RG32I = 0x823B,\r\n    RGB8 = 0x8051,\r\n    RGBA8 = 0x8058,\r\n    SRGB8_ALPHA8 = 0x8C43,\r\n    RGBA4 = 0x8056,\r\n    RGB565 = 0x8D62,\r\n    RGB5_A1 = 0x8057,\r\n    RGB10_A2 = 0x8059,\r\n    RGBA8UI = 0x8D7C,\r\n    RGBA8I = 0x8D8E,\r\n    RGB10_A2UI = 0x906F,\r\n    RGBA16UI = 0x8D76,\r\n    RGBA16I = 0x8D88,\r\n    RGBA32I = 0x8D82,\r\n    RGBA32UI = 0x8D70,\r\n    DEPTH_COMPONENT16 = 0x81A5,\r\n    DEPTH_COMPONENT24 = 0x81A6,\r\n    DEPTH_COMPONENT32F = 0x8CAC,\r\n    DEPTH24_STENCIL8 = 0x88F0,\r\n    DEPTH32F_STENCIL8 = 0x8CAD,\r\n    STENCIL_INDEX8 = 0x8D48\r\n}\r\n\r\nexport enum DrawBuffer {\r\n    NONE = 0x0000,\r\n    BACK = 0x0405,\r\n    COLOR_ATTACHMENT0 = 0x8CE0,\r\n    COLOR_ATTACHMENT1 = 0x8CE1,\r\n    COLOR_ATTACHMENT2 = 0x8CE2,\r\n    COLOR_ATTACHMENT3 = 0x8CE3,\r\n    COLOR_ATTACHMENT4 = 0x8CE4,\r\n    COLOR_ATTACHMENT5 = 0x8CE5,\r\n    COLOR_ATTACHMENT6 = 0x8CE6,\r\n    COLOR_ATTACHMENT7 = 0x8CE7,\r\n    COLOR_ATTACHMENT8 = 0x8CE8,\r\n    COLOR_ATTACHMENT9 = 0x8CE9,\r\n    COLOR_ATTACHMENT10 = 0x8CEA,\r\n    COLOR_ATTACHMENT11 = 0x8CEB,\r\n    COLOR_ATTACHMENT12 = 0x8CEC,\r\n    COLOR_ATTACHMENT13 = 0x8CED,\r\n    COLOR_ATTACHMENT14 = 0x8CEE,\r\n    COLOR_ATTACHMENT15 = 0x8CEF,\r\n\r\n}\r\nexport type Renderbuffer = {\r\n    internalRenderbuffer: WebGLRenderbuffer;\r\n}\r\n\r\nexport type RenderbufferProperties = {\r\n    internalFormat: RenderbufferPixelFormat;\r\n    width: number;\r\n    height: number;\r\n    samples?: number;\r\n}\r\n\r\ntype Framebuffer = {\r\n    internalFramebuffer: WebGLFramebuffer;\r\n};\r\n\r\ntype FramebufferTextureAttachmentProperties = {\r\n    attachment: FramebufferAttachment;\r\n    textureTarget: FramebufferTextureTarget;\r\n    texture: Texture;\r\n}\r\n\r\ntype FramebufferTextureAttachment = FramebufferTextureAttachmentProperties & Framebuffer;\r\n\r\ntype FramebufferRenderbufferAttachmentProperties = {\r\n    attachment: FramebufferAttachment;\r\n    renderbuffer: Renderbuffer;\r\n}\r\n\r\ntype FramebufferRenderbufferAttachment = FramebufferRenderbufferAttachmentProperties & Framebuffer;\r\n\r\nexport class WebGLFramebufferUtilities {\r\n\r\n    static createFramebuffer(gl: WebGL2RenderingContext): Framebuffer | null {\r\n        const internalFramebuffer = gl.createFramebuffer();\r\n    \r\n        if (internalFramebuffer === null) {\r\n            return null;\r\n        }\r\n        \r\n        return {\r\n            internalFramebuffer\r\n        };\r\n    }\r\n\r\n    static createRenderbuffer(gl: WebGL2RenderingContext, properties: RenderbufferProperties): Renderbuffer | null {\r\n        const internalRenderbuffer = gl.createRenderbuffer();\r\n        if (internalRenderbuffer === null) {\r\n            return null;\r\n        }\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, internalRenderbuffer);\r\n        \r\n        const {samples, internalFormat, width, height} = properties;\r\n        if (typeof samples !== \"undefined\") {\r\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, samples, internalFormat, width, height);\r\n        }\r\n        else {\r\n            gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\r\n        }\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n        return {\r\n            ...properties,\r\n            internalRenderbuffer\r\n        };\r\n    }\r\n\r\n    static attachTexture(gl: WebGL2RenderingContext, framebuffer: Framebuffer, ...properties: FramebufferTextureAttachmentProperties[]): FramebufferTextureAttachment[] {\r\n        const {internalFramebuffer} = framebuffer;\r\n        const currentFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\r\n        if (currentFramebuffer !== internalFramebuffer) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, internalFramebuffer);\r\n        }\r\n        \r\n        const attachments = properties.map((properties) => {\r\n            const {attachment, textureTarget, texture} = properties;\r\n            const {internalTexture} = texture;\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, textureTarget, internalTexture, 0);\r\n            return {\r\n                ...properties,\r\n                ...framebuffer\r\n            };\r\n        });\r\n\r\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        if (status !== FramebufferStatus.FRAMEBUFFER_COMPLETE) {\r\n            console.warn(`Incomplete framebuffer status: ${FramebufferStatus[status]}`);\r\n        }\r\n\r\n        this.unbindFramebuffer(gl);\r\n\r\n        return attachments;\r\n    }\r\n\r\n    static drawBuffers(gl: WebGL2RenderingContext, framebuffer: Framebuffer, drawBuffers: DrawBuffer[]): void {\r\n        const {internalFramebuffer} = framebuffer;\r\n        const currentFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\r\n        if (currentFramebuffer !== internalFramebuffer) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, internalFramebuffer);\r\n        }\r\n        \r\n        gl.drawBuffers(drawBuffers);\r\n\r\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        if (status !== FramebufferStatus.FRAMEBUFFER_COMPLETE) {\r\n            console.warn(`Incomplete framebuffer status: ${FramebufferStatus[status]}`);\r\n        }\r\n\r\n        this.unbindFramebuffer(gl);\r\n    }\r\n\r\n    static attachRenderbuffer(gl: WebGL2RenderingContext, framebuffer: Framebuffer, ...props: FramebufferRenderbufferAttachmentProperties[]): FramebufferRenderbufferAttachment[] {\r\n        const {internalFramebuffer} = framebuffer;\r\n        const currentFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\r\n        if (currentFramebuffer !== internalFramebuffer) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, internalFramebuffer);\r\n        }\r\n\r\n        const attachments = props.map((props) => {\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, props.attachment, gl.RENDERBUFFER, props.renderbuffer.internalRenderbuffer);\r\n            return {\r\n                ...props,\r\n                ...framebuffer\r\n            };\r\n        });\r\n\r\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        if (status !== FramebufferStatus.FRAMEBUFFER_COMPLETE) {\r\n            console.warn(`Incomplete framebuffer status: ${FramebufferStatus[status]}`);\r\n        }\r\n\r\n        this.unbindFramebuffer(gl);\r\n\r\n        return attachments;\r\n    }\r\n\r\n    static blit(gl: WebGL2RenderingContext, readFramebuffer: Framebuffer | null, drawFramebuffer: Framebuffer | null, readRectangle: number[], drawRectangle: number[], mask: BufferMask, filter: TextureMagFilter): void {\r\n        const currentReadFramebuffer = gl.getParameter(gl.READ_FRAMEBUFFER_BINDING);\r\n        if (currentReadFramebuffer !== readFramebuffer) {\r\n            const internalReadFramebuffer = readFramebuffer?.internalFramebuffer ?? null;\r\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, internalReadFramebuffer);\r\n        }\r\n        \r\n        const currentDrawFramebuffer = gl.getParameter(gl.DRAW_FRAMEBUFFER_BINDING);\r\n        if (currentDrawFramebuffer !== drawFramebuffer) {\r\n            const internalDrawFramebuffer = drawFramebuffer?.internalFramebuffer ?? null;\r\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, internalDrawFramebuffer);\r\n        }\r\n        \r\n        gl.blitFramebuffer(readRectangle[0], readRectangle[1], readRectangle[2], readRectangle[3], drawRectangle[0], drawRectangle[1], drawRectangle[2], drawRectangle[3], mask, filter);\r\n\r\n        this.unbindFramebuffer(gl);\r\n    }\r\n\r\n    static readPixels(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number, format: TexturePixelFormat, type: TexturePixelType, pixels: ArrayBufferView): void {\r\n        gl.readPixels(x, y, width, height, format, type, pixels);\r\n    }\r\n\r\n    static bindFramebuffer(gl: WebGL2RenderingContext, framebuffer: Framebuffer): void {\r\n        const {internalFramebuffer} = framebuffer;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, internalFramebuffer);\r\n    }\r\n\r\n    static unbindFramebuffer(gl: WebGL2RenderingContext): void {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    static deleteFramebuffer(gl: WebGL2RenderingContext, framebuffer: Framebuffer): void {\r\n        const {internalFramebuffer} = framebuffer;\r\n        if (gl.isFramebuffer(internalFramebuffer)) {\r\n            gl.deleteFramebuffer(internalFramebuffer);\r\n        }\r\n    }\r\n\r\n    static deleteRenderbuffer(gl: WebGL2RenderingContext, renderbuffer: Renderbuffer): void {\r\n        const {internalRenderbuffer} = renderbuffer;\r\n        if (gl.isRenderbuffer(internalRenderbuffer)) {\r\n            gl.deleteRenderbuffer(internalRenderbuffer);\r\n        }\r\n    }\r\n}","import { Vector3 } from \"../../../../libs/maths/algebra/vectors/Vector3\"\r\nimport { BoundingSphere } from \"./bounding/BoundingSphere\";\r\nimport { BoundingBox } from \"./bounding/BoundingBox\";\r\n\r\nexport { GeometryBuilder };\r\n\r\ninterface GeometryBuilder {\r\n    readonly halfEdges: Array<HalfEdge>;\r\n    readonly vertices: Array<Vertex>;\r\n    readonly faces: Array<Face>;\r\n    clone(): GeometryBuilder;\r\n    addTriangleFace(v0: VertexID, v1: VertexID, v2: VertexID, properties?: {[key: string]: any;}): void;\r\n    addQuadFace(v0: VertexID, v1: VertexID, v2: VertexID, v3: VertexID, properties?: {[key: string]: any;}): void;\r\n    addVertex(vertex: number[] | Float32Array | Float64Array): VertexID;\r\n    addFace(vertices: VertexID[], properties?: {[key: string]: any;}[]): void;\r\n    verticesArray(): Float32Array;\r\n    uvsArray(): Float32Array;\r\n    trianglesIndicesArray(): Uint8Array | Uint16Array | Uint32Array;\r\n    linesIndicesArray(): Uint8Array | Uint16Array | Uint32Array;\r\n    normalsArray(): Float32Array;\r\n    tangentsArray(): Float32Array;\r\n    boundingBox(): BoundingBox;\r\n    faceHalfEdgesIterator(face: FaceID): FaceHalfEdgesIterator;\r\n    faceVerticesIterator(face: FaceID): FaceHalfEdgesIterator;\r\n    vertexFacesIterator(vertex: VertexID): VertexFacesIterator;\r\n}\r\n\r\ninterface GeometryBuilderConstructor {\r\n    readonly prototype: GeometryBuilder;\r\n    new(): GeometryBuilder;\r\n}\r\n\r\nclass GeometryBuilderBase implements GeometryBuilder {\r\n    readonly halfEdges: Array<HalfEdge>;\r\n    readonly vertices: Array<Vertex>;\r\n    readonly faces: Array<Face>;\r\n\r\n    constructor() {\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n    }\r\n\r\n    clone(): GeometryBuilder {\r\n        return Object.assign(Object.create(this.constructor.prototype), structuredClone(this));\r\n    }\r\n\r\n    addTriangleFace(v0: VertexID, v1: VertexID, v2: VertexID, properties?: {[key: string]: any;}): void {\r\n        this.addFace([v0, v1, v2], properties);\r\n    }\r\n\r\n    addQuadFace(v0: VertexID, v1: VertexID, v2: VertexID, v3: VertexID, properties?: {[key: string]: any;}): void {\r\n        this.addFace([v0, v1, v2, v3], properties);\r\n    }\r\n    \r\n    addVertex(position: number[] | Float32Array | Float64Array): VertexID {\r\n        const {vertices} = this;\r\n        const vertex: Vertex = {\r\n            position: position,\r\n            halfEdgeID: null\r\n        };\r\n        return vertices.push(vertex) - 1;\r\n    }\r\n\r\n    addFace(vertices: VertexID[], properties?: {[key: string]: any;}): void {\r\n        const {halfEdges: _halfEdges, vertices: _vertices, faces: _faces} = this;\r\n        const {length: faceVerticesCount} = vertices;\r\n        if (faceVerticesCount < 2) {\r\n            console.error(`At least 2 vertices are required to create a face.`);\r\n            return;\r\n        }\r\n        const face: Face = {\r\n            halfEdgeID: null,\r\n            ...properties\r\n        };\r\n        const faceID = _faces.length;\r\n        let sourceID: VertexID | null = null;\r\n        let targetID: VertexID | null = null;\r\n        let firstHalfEdgeID: HalfEdgeID | null = null;\r\n        let halfEdge: HalfEdge | null = null;\r\n        let halfEdgeID: HalfEdgeID | null = null;\r\n        let previousHalfEdgeID: HalfEdgeID | null = null;\r\n        for (let i = 0; i < faceVerticesCount; i++) {\r\n            sourceID = vertices[i];\r\n            targetID = (i < faceVerticesCount - 1) ? vertices[i + 1] : vertices[0];\r\n            const existingHalfEdge = Array.from(this.vertexFacesIterator(sourceID)).find(\r\n                (face_i) => {\r\n                    if (face_i === null) return false;\r\n                    return Array.from(this.faceHalfEdgesIterator(face_i)).find(\r\n                        (halfEdge_i) => {\r\n                            const {targetID: targetID_i, prevID: prevID_i} = _halfEdges[halfEdge_i];\r\n                            return targetID_i === targetID && _halfEdges[prevID_i ?? -1]?.targetID === sourceID;\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n            if (existingHalfEdge) {\r\n                continue;\r\n            }\r\n            halfEdge = {\r\n                targetID: targetID,\r\n                twinID: null,\r\n                nextID: null,\r\n                prevID: null,\r\n                faceID: faceID\r\n            };\r\n            halfEdgeID = _halfEdges.length;\r\n            if (previousHalfEdgeID === null) {\r\n                face.halfEdge = halfEdgeID;\r\n                firstHalfEdgeID = halfEdgeID;\r\n            }\r\n            else {\r\n                halfEdge.prevID = previousHalfEdgeID;\r\n                _halfEdges[previousHalfEdgeID].nextID = halfEdgeID;\r\n            }\r\n            const source = _vertices[sourceID]!;\r\n            if (source.halfEdgeID === null) {\r\n                source.halfEdgeID = halfEdgeID;\r\n            }\r\n            const twinHalfEdge = _halfEdges.find(\r\n                (halfEdge_i) => {\r\n                    const {targetID: targetID_i, prevID: prevID_i} = halfEdge_i;\r\n                    return targetID_i === sourceID && _halfEdges[prevID_i ?? -1]?.targetID === targetID;\r\n                }\r\n            ) ?? null;\r\n            if (twinHalfEdge !== null) {\r\n                halfEdge.twinID = _halfEdges.indexOf(twinHalfEdge);\r\n                twinHalfEdge.twinID = halfEdgeID;\r\n            }\r\n            previousHalfEdgeID = halfEdgeID;\r\n            _halfEdges.push(halfEdge);\r\n        }\r\n        if (halfEdge !== null && firstHalfEdgeID !== null) {\r\n            _halfEdges[firstHalfEdgeID].prevID = halfEdgeID;\r\n            halfEdge.nextID = firstHalfEdgeID;\r\n        }\r\n        _faces.push(face);\r\n    }\r\n\r\n    linesArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((_, i) => {\r\n            const faceVertices = Array.from(this.faceVerticesIterator(i));\r\n            if (faceVertices.length === 4) {\r\n                const [v0, v1, v2, v3] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n                return [\r\n                    ...v0, ...v1,\r\n                    ...v1, ...v2,\r\n                    ...v2, ...v3,\r\n                    ...v3, ...v0\r\n                ];\r\n            }\r\n            else {\r\n                const [v0, v1, v2] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n                return [\r\n                    ...v0, ...v1,\r\n                    ...v1, ...v2,\r\n                    ...v2, ...v0\r\n                ];\r\n            }\r\n        }));\r\n    }\r\n\r\n    verticesArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((_, i) => {\r\n            return Array.from(this.faceVerticesIterator(i)).flatMap((vertex) => {\r\n                return Array.from(vertices[vertex].position);\r\n            });\r\n        }));\r\n    }\r\n\r\n    tangentsArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((face_i, i) => {\r\n            const faceVertices = Array.from(this.faceVerticesIterator(i));\r\n            const faceUvs = face_i.uv as Array<Array<number>>;\r\n            const [v0, v1, v2] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n            const [uv0, uv1, uv2] = faceUvs;\r\n            const edge1 = v1.map((v1_i, i) => v0[i] - v1_i);\r\n            const edge2 = v1.map((v1_i, i) => v2[i] - v1_i);\r\n            const deltaUV1 = uv1.map((uv1_i, i) => uv0[i] - uv1_i);\r\n            const deltaUV2 = uv1.map((uv1_i, i) => uv2[i] - uv1_i);\r\n            const f = 1.0 / (deltaUV1[0] * deltaUV2[1] - deltaUV1[1] * deltaUV2[0]);\r\n            const tangent = edge1.map((edge1_i, i) => -(edge1_i * deltaUV2[1] - edge2[i] * deltaUV1[1]) * f);\r\n            const length = Math.hypot(...tangent);\r\n            face_i.tangent = tangent.map(tangent_i => tangent_i / length);\r\n\r\n            return faceVertices.flatMap(() => {\r\n                return Array.from(face_i.tangent);\r\n            });\r\n        }));\r\n    }\r\n\r\n    normalsArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((face_i, i) => {\r\n            const faceVertices = Array.from(this.faceVerticesIterator(i));\r\n            const [v0, v1, v2] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n            const edge1 = v1.map((v1_i, i) => v0[i] - v1_i);\r\n            const edge2 = v1.map((v1_i, i) => v2[i] - v1_i);\r\n            const normal = edge1.map((_, i) => {\r\n                const ni = (i + 1) % 3;\r\n                const pi = ((i - 1) + 3) % 3;\r\n                return -(edge1[ni] * edge2[pi] - edge1[pi] * edge2[ni]);\r\n            });\r\n            const length = Math.hypot(...normal);\r\n            face_i.normal = normal.map(normal_i => normal_i / length);\r\n            \r\n            return faceVertices.flatMap(() => {\r\n                return Array.from(face_i.normal);\r\n            });\r\n        }));\r\n    }\r\n\r\n    uvsArray(): Float32Array {\r\n        const {faces} = this;\r\n        return new Float32Array(faces.flatMap((face) => {\r\n            return face.uv.flat(1);\r\n        }));\r\n    }\r\n\r\n    trianglesIndicesArray(): Uint8Array | Uint16Array | Uint32Array {\r\n        const {faces} = this;\r\n        const count = faces.reduce((verticesCount, _, i) => {\r\n            return verticesCount + Array.from(this.faceVerticesIterator(i)).length;\r\n        }, 0);\r\n        const arrayConstructor = (count < Math.pow(2, 8)) ? Uint8Array : (count < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        return new arrayConstructor(faces.reduce(([indices, index], face_i, i) => {\r\n            const vertices = Array.from(this.faceVerticesIterator(i));\r\n            if (vertices.length === 4) {\r\n                return [indices.concat([index, index + 1, index + 2, index + 1, index + 3, index + 2]), index + 4] as [number[], number];\r\n            }\r\n            return [indices.concat([index, index + 1, index + 2]), index + 3] as [number[], number];\r\n        }, [[], 0] as [number[], number])[0]);\r\n    }\r\n\r\n    linesIndicesArray(): Uint8Array | Uint16Array | Uint32Array {\r\n        const {faces} = this;\r\n        const count = faces.reduce((verticesCount, _, i) => {\r\n            return verticesCount + Array.from(this.faceVerticesIterator(i)).length * 2;\r\n        }, 0);\r\n        const arrayConstructor = (count < Math.pow(2, 8)) ? Uint8Array : (count < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        return new arrayConstructor(faces.reduce(([indices, index], face_i, i) => {\r\n            const vertices = Array.from(this.faceVerticesIterator(i));\r\n            if (vertices.length === 4) {\r\n                return [indices.concat([index, index + 1, index + 1, index + 3, index + 3, index + 2, index + 2, index]), index + 4] as [number[], number];\r\n            }\r\n            return [indices.concat([index, index + 1, index + 1, index + 2, index + 2, index]), index + 3] as [number[], number];\r\n        }, [[], 0] as [number[], number])[0]);\r\n    }\r\n\r\n    boundingBox(): BoundingBox {\r\n        const positiveInfinity = Number.POSITIVE_INFINITY;\r\n        const negativeInfinity = Number.NEGATIVE_INFINITY;\r\n        let minX = positiveInfinity;\r\n        let minY = positiveInfinity;\r\n        let minZ = positiveInfinity;\r\n        let maxX = negativeInfinity;\r\n        let maxY = negativeInfinity;\r\n        let maxZ = negativeInfinity;\r\n        const {vertices} = this;\r\n        if (vertices.length > 0) {\r\n            vertices.forEach((vertex_i) => {\r\n                const [x, y, z] = vertex_i.position;\r\n                if (x < minX) minX = x;\r\n                else if (x > maxX) maxX = x;\r\n                if (y < minY) minY = y;\r\n                else if (y > maxY) maxY = y;\r\n                if (z < minZ) minZ = z;\r\n                else if (z > maxZ) maxZ = z;\r\n            });\r\n        }\r\n        const min = new Vector3([minX, minY, minZ]);\r\n        const max = new Vector3([maxX, maxY, maxZ]);\r\n        return new BoundingBox(min, max);\r\n    }\r\n\r\n    boundingSphere(): BoundingSphere {\r\n        const positiveInfinity = Number.POSITIVE_INFINITY;\r\n        const negativeInfinity = Number.NEGATIVE_INFINITY;\r\n        let minX = positiveInfinity;\r\n        let minY = positiveInfinity;\r\n        let minZ = positiveInfinity;\r\n        let maxX = negativeInfinity;\r\n        let maxY = negativeInfinity;\r\n        let maxZ = negativeInfinity;\r\n        const {vertices} = this;\r\n        if (vertices.length > 0) {\r\n            vertices.forEach((vertex_i) => {\r\n                const [x, y, z] = vertex_i.position;\r\n                if (x < minX) minX = x;\r\n                else if (x > maxX) maxX = x;\r\n                if (y < minY) minY = y;\r\n                else if (y > maxY) maxY = y;\r\n                if (z < minZ) minZ = z;\r\n                else if (z > maxZ) maxZ = z;\r\n            });\r\n        }\r\n        const min = new Vector3([minX, minY, minZ]);\r\n        const max = new Vector3([maxX, maxY, maxZ]);\r\n        return new BoundingSphere(\r\n            new Vector3(), Math.max(min.length(), max.length())\r\n        );\r\n    }\r\n    \r\n    faceHalfEdgesIterator(face: FaceID): FaceHalfEdgesIterator {\r\n        return new FaceHalfEdgesIterator(this, face);\r\n    }\r\n\r\n    faceVerticesIterator(face: FaceID): FaceHalfEdgesIterator {\r\n        return new FaceVerticesIterator(this, face);\r\n    }\r\n\r\n    vertexFacesIterator(vertex: VertexID): VertexFacesIterator {\r\n        return new VertexFacesIterator(this, vertex);\r\n    }\r\n}\r\n\r\nvar GeometryBuilder: GeometryBuilderConstructor = GeometryBuilderBase;\r\n\r\nexport type HalfEdgeID = number;\r\nexport type FaceID = number;\r\nexport type VertexID = number;\r\n\r\nexport type HalfEdge = {\r\n    targetID: VertexID | null;\r\n    twinID: HalfEdgeID | null;\r\n    prevID: HalfEdgeID | null;\r\n    nextID: HalfEdgeID | null;\r\n    faceID: FaceID | null;\r\n}\r\n\r\nexport type Face = {\r\n    halfEdgeID: HalfEdgeID | null;\r\n    [key: string]: any;\r\n}\r\n\r\nexport type Vertex = {\r\n    position: number[] | Float32Array | Float64Array;\r\n    halfEdgeID: HalfEdgeID | null;\r\n    properties?: {\r\n        [key: string]: any;\r\n    }\r\n}\r\n\r\nexport class FaceHalfEdgesIterator {\r\n    geometry: GeometryBuilder;\r\n    faceID: FaceID;\r\n    halfEdgeID: HalfEdgeID | null;\r\n\r\n    constructor(geometry: GeometryBuilder, face: FaceID) {\r\n        this.geometry = geometry;\r\n        this.faceID = face;\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    reset(): void {\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    current(): HalfEdgeID | null {\r\n        return this.halfEdgeID;\r\n    }\r\n\r\n    next(): IteratorResult<HalfEdgeID> {\r\n        const {halfEdgeID, faceID, geometry} = this;\r\n        const {faces, halfEdges} = geometry;\r\n        const face = faces[faceID];\r\n        if (face !== null) {\r\n            if (halfEdgeID === null) {\r\n                const firstHalfEdgeID = face.halfEdgeID ?? null;\r\n                const nextHalfEdgeID = faces[firstHalfEdgeID ?? -1]?.nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (firstHalfEdgeID !== null) {\r\n                    return {\r\n                        value: firstHalfEdgeID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n            else if (halfEdgeID !== face.halfEdge) {\r\n                const nextHalfEdgeID = halfEdges[halfEdgeID].nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (halfEdgeID !== null) {\r\n                    return {\r\n                        value: halfEdgeID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: undefined, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<HalfEdgeID> {\r\n        this.halfEdgeID = null;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class FaceVerticesIterator {\r\n    geometry: GeometryBuilder;\r\n    faceID: FaceID;\r\n    halfEdgeID: HalfEdgeID | null;\r\n\r\n    constructor(geometry: GeometryBuilder, face: FaceID) {\r\n        this.geometry = geometry;\r\n        this.faceID = face;\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    reset(): void {\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    current(): VertexID | null {\r\n        const {halfEdgeID, geometry} = this;\r\n        const {halfEdges} = geometry;\r\n        return halfEdges[halfEdges[halfEdgeID ?? -1]?.prevID ?? -1]?.targetID ?? null;\r\n    }\r\n\r\n    next(): IteratorResult<VertexID> {\r\n        const {halfEdgeID, geometry, faceID} = this;\r\n        const {faces, halfEdges} = geometry;\r\n        const face = faces[faceID ?? -1];\r\n        if (face !== null) {\r\n            const {halfEdge: faceHalfEdgeID} = face;\r\n            if (halfEdgeID === null) {\r\n                const firstVertexID = halfEdges[halfEdges[faceHalfEdgeID ?? -1].prevID ?? -1].targetID ?? null;\r\n                const nextHalfEdgeID = halfEdges[faceHalfEdgeID ?? -1].nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (firstVertexID !== null) {\r\n                    return {\r\n                        value: firstVertexID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n            else if (halfEdgeID !== face.halfEdge) {\r\n                const vertex = halfEdges[halfEdges[halfEdgeID].prevID ?? -1].targetID ?? null;\r\n                const nextHalfEdgeID = halfEdges[halfEdgeID].nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (vertex !== null) {\r\n                    return {\r\n                        value: vertex, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: undefined, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<VertexID> {\r\n        this.halfEdgeID = null;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class VertexFacesIterator {\r\n    geometry: GeometryBuilder;\r\n    halfEdgeID: HalfEdgeID | null;\r\n    vertexID: VertexID;\r\n    \r\n    constructor(geometry: GeometryBuilder, vertex: VertexID) {\r\n        this.geometry = geometry;\r\n        this.vertexID = vertex;\r\n        this.halfEdgeID = null;\r\n    }\r\n    \r\n    reset(): void {\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    current(): FaceID | null {\r\n        const {geometry, halfEdgeID} = this;\r\n        const {halfEdges} = geometry;\r\n        return halfEdges[halfEdgeID ?? -1].faceID ?? null;\r\n    }\r\n\r\n    next(): IteratorResult<FaceID>  {\r\n        const {halfEdgeID, vertexID, geometry} = this;\r\n        const {halfEdges, vertices} = geometry;\r\n        const vertex = vertices[vertexID ?? -1];\r\n        if (vertex) {\r\n            const {halfEdgeID: vertexHalfEdgeID} = vertex;\r\n            if (halfEdgeID === null) {\r\n                const faceID = halfEdges[vertexHalfEdgeID ?? -1]?.faceID ?? null;\r\n                const nextHalfEdgeID = halfEdges[halfEdges[vertexHalfEdgeID ?? -1]?.prevID ?? -1]?.twinID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (faceID !== null) {\r\n                    return {\r\n                        value: faceID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n            else if (halfEdgeID !== vertex.halfEdgeID) {\r\n                const faceID = halfEdges[halfEdgeID]?.faceID ?? null;\r\n                const nextHalfEdgeID = halfEdges[halfEdges[halfEdgeID].prevID ?? -1].twinID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (faceID !== null) {\r\n                    return {\r\n                        value: faceID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: undefined, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<FaceID> {\r\n        this.halfEdgeID = null;\r\n        return this;\r\n    }\r\n}","import { GeometryBase } from \"../../Geometry\";\r\nimport { GeometryBuilder } from \"../../GeometryBuilder\";\r\n\r\nexport class CubeGeometry extends GeometryBase {\r\n\twidth: number;\r\n\theight: number;\r\n\tdepth: number;\r\n\twidthSegments: number;\r\n\theightSegments: number;\r\n\tdepthSegments: number;\r\n\r\n\tconstructor(properties?: {width?: number, height?: number, depth?: number, widthSegments?: number, heightSegments?: number, depthSegments?: number}) {\r\n\t\tsuper();\r\n\t\tconst {width, height, depth, widthSegments, heightSegments, depthSegments} = properties ?? {};\r\n\t\tthis.width = width ?? 1;\r\n\t\tthis.height = height ?? 1;\r\n\t\tthis.depth = depth ?? 1;\r\n\t\tthis.widthSegments = widthSegments ?? 1;\r\n\t\tthis.heightSegments = heightSegments ?? 1;\r\n\t\tthis.depthSegments = depthSegments ?? 1;\r\n\t}\r\n\t\r\n\ttoBuilder(): GeometryBuilder {\r\n\t\tconst builder = new GeometryBuilder();\r\n\t\tconst {width, height, depth} = this;\r\n\t\tlet {widthSegments, heightSegments, depthSegments} = this;\r\n\t\twidthSegments = Math.floor(widthSegments);\r\n\t\theightSegments = Math.floor(heightSegments);\r\n\t\tdepthSegments = Math.floor(depthSegments);\r\n\r\n\t\tconst indices: number[] = [];\r\n\t\tconst vertices: number[] = [];\r\n\t\tconst uvs: number[] = [];\r\n\t\tlet verticesCount = 0;\r\n\r\n\t\t[\r\n\t\t\t[2, 1, 0, -1, -1, depth, height, width, depthSegments, heightSegments],\r\n\t\t\t[2, 1, 0, +1, -1, depth, height, -width, depthSegments, heightSegments],\r\n\t\t\t[0, 2, 1, +1, +1, width, depth, height, widthSegments, depthSegments],\r\n\t\t\t[0, 2, 1, +1, -1, width, depth, -height, widthSegments, depthSegments],\r\n\t\t\t[0, 1, 2, +1, -1, width, height, depth, widthSegments, heightSegments],\r\n\t\t\t[0, 1, 2, -1, -1, width, height, -depth, widthSegments, heightSegments]\r\n\t\t].forEach(([u, v, w, udir, vdir, width, height, depth, gridX, gridY]) => {\r\n\t\t\tconst segmentWidth = width / gridX;\r\n\t\t\tconst segmentHeight = height / gridY;\r\n\t\t\tconst widthHalf = width / 2;\r\n\t\t\tconst heightHalf = height / 2;\r\n\t\t\tconst depthHalf = depth / 2;\r\n\t\t\tconst gridX1 = gridX + 1;\r\n\t\t\tconst gridY1 = gridY + 1;\r\n\t\t\tlet index = 0;\r\n\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\r\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\r\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\r\n\t\t\t\t\tconst vertex = new Array(3);\r\n\t\t\t\t\tvertex[u] = x * udir;\r\n\t\t\t\t\tvertex[v] = y * vdir;\r\n\t\t\t\t\tvertex[w] = depthHalf;\r\n\t\t\t\t\tvertices.push(\r\n\t\t\t\t\t\t...vertex\r\n\t\t\t\t\t);\r\n\t\t\t\t\tuvs.push(ix / gridX, 1 - (iy / gridY));\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let iy = 0; iy < gridY; iy++) {\r\n\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\r\n\t\t\t\t\tconst a = verticesCount + ix + gridX1 * iy;\r\n\t\t\t\t\tconst b = verticesCount + ix + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst c = verticesCount + (ix + 1) + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst d = verticesCount + (ix + 1) + gridX1 * iy;\r\n\t\t\t\t\t// indices.push(a, b, d);\r\n\t\t\t\t\t// indices.push(b, c, d);\r\n\t\t\t\t\tindices.push(a, b, d, c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tverticesCount += index;\r\n\t\t});\r\n\t\t\r\n\t\tconst {length: indicesCount} = indices;\r\n\t\tconst verticesArray: number[] = [];\r\n\t\tconst uvsArray: number[][] = [];\r\n\t\tfor (let i = 0; i < indicesCount; i += 4) {\r\n\t\t\tconst vi1 = 3 * indices[i], vi2 = 3 * indices[i + 1], vi3 = 3 * indices[i + 2], vi4 = 3 * indices[i + 3];\r\n\t\t\tconst ui1 = 2 * indices[i], ui2 = 2 * indices[i + 1], ui3 = 2 * indices[i + 2], ui4 = 2 * indices[i + 3];\r\n\t\t\tlet v1 = verticesArray[vi1], v2 = verticesArray[vi2], v3 = verticesArray[vi3], v4 = verticesArray[vi4];\r\n\t\t\tif (v1 === undefined) {\r\n\t\t\t\tv1 = builder.addVertex([vertices[vi1], vertices[vi1 + 1], vertices[vi1 + 2]]), verticesArray[vi1] = v1;\r\n\t\t\t}\r\n\t\t\tif (v2 === undefined) {\r\n\t\t\t\tv2 = builder.addVertex([vertices[vi2], vertices[vi2 + 1], vertices[vi2 + 2]]), verticesArray[vi2] = v2;\r\n\t\t\t}\r\n\t\t\tif (v3 === undefined) {\r\n\t\t\t\tv3 = builder.addVertex([vertices[vi3], vertices[vi3 + 1], vertices[vi3 + 2]]), verticesArray[vi3] = v3;\r\n\t\t\t}\r\n\t\t\t//\r\n\t\t\tif (v4 === undefined) {\r\n\t\t\t\tv4 = builder.addVertex([vertices[vi4], vertices[vi4 + 1], vertices[vi4 + 2]]), verticesArray[vi4] = v4;\r\n\t\t\t}\r\n\t\t\tlet uv1 = uvsArray[ui1], uv2 = uvsArray[ui2], uv3 = uvsArray[ui3], uv4 = uvsArray[ui4];\r\n\t\t\tif (uv1 === undefined) {\r\n\t\t\t\tuv1 = [uvs[ui1], uvs[ui1 + 1]], uvsArray[ui1] = uv1;\r\n\t\t\t}\r\n\t\t\tif (uv2 === undefined) {\r\n\t\t\t\tuv2 = [uvs[ui2], uvs[ui2 + 1]], uvsArray[ui2] = uv2;\r\n\t\t\t}\r\n\t\t\tif (uv3 === undefined) {\r\n\t\t\t\tuv3 = [uvs[ui3], uvs[ui3 + 1]], uvsArray[ui3] = uv3;\r\n\t\t\t}\r\n\t\t\t//\r\n\t\t\tif (uv4 === undefined) {\r\n\t\t\t\tuv4 = [uvs[ui4], uvs[ui4 + 1]], uvsArray[ui4] = uv4;\r\n\t\t\t}\r\n\t\t\t/*builder.addTriangleFace(v1, v2, v3, {\r\n\t\t\t\tuv: [uv1, uv2, uv3]\r\n\t\t\t});*/\r\n\t\t\tbuilder.addQuadFace(v1, v2, v3, v4, {\r\n\t\t\t\tuv: [uv1, uv2, uv3, uv4]\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn builder;\r\n\t}\r\n}","import { GeometryBase } from \"../geometry\";\r\nimport { GeometryBuilder } from \"../GeometryBuilder\";\r\n\r\nexport { QuadGeometry };\r\n\r\nclass QuadGeometry extends GeometryBase {\r\n\twidth: number;\r\n\theight: number;\r\n\twidthSegments: number;\r\n\theightSegments: number;\r\n\r\n\tconstructor(properties?: {width?: number, height?: number, widthSegments?: number, heightSegments?: number}) {\r\n\t\tsuper();\r\n\t\tthis.width = properties?.width ?? 1;\r\n\t\tthis.height = properties?.height ?? 1;\r\n\t\tthis.widthSegments = properties?.widthSegments ?? 1;\r\n\t\tthis.heightSegments = properties?.heightSegments ?? 1;\r\n\t}\r\n\t\r\n\ttoBuilder(): GeometryBuilder {\r\n\t\tconst builder = new GeometryBuilder();\r\n\t\tconst {heightSegments, widthSegments, width, height} = this;\r\n\t\tconst widthHalf = width / 2;\r\n\t\tconst heightHalf = height / 2;\r\n\r\n\t\tconst gridX = Math.floor(widthSegments);\r\n\t\tconst gridY = Math.floor(heightSegments);\r\n\r\n\t\tconst gridX1 = gridX + 1;\r\n\t\tconst gridY1 = gridY + 1;\r\n\r\n\t\tconst segmentWidth = width / gridX;\r\n\t\tconst segmentHeight = height / gridY;\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\tfor (let iy = 0; iy < gridY1; iy++) {\r\n\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\r\n\t\t\t\tconst x = ix * segmentWidth - widthHalf;\r\n\t\t\t\tvertices.push(x, - y, 0);\r\n\t\t\t\tuvs.push(ix / gridX);\r\n\t\t\t\tuvs.push(1 - (iy / gridY));\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let iy = 0; iy < gridY; iy++) {\r\n\t\t\tfor (let ix = 0; ix < gridX; ix++) {\r\n\t\t\t\tconst a = ix + gridX1 * iy;\r\n\t\t\t\tconst b = ix + gridX1 * (iy + 1);\r\n\t\t\t\tconst c = (ix + 1) + gridX1 * (iy + 1);\r\n\t\t\t\tconst d = (ix + 1) + gridX1 * iy;\r\n\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\tindices.push(b, c, d);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst {length: indicesCount} = indices;\r\n\t\tconst verticesArray: number[] = [];\r\n\t\tconst uvsArray: number[][] = [];\r\n\t\tfor (let i = 0; i < indicesCount; i += 3) {\r\n\t\t\tconst vi1 = 3 * indices[i], vi2 = 3 * indices[i + 1], vi3 = 3 * indices[i + 2];\r\n\t\t\tconst ui1 = 2 * indices[i], ui2 = 2 * indices[i + 1], ui3 = 2 * indices[i + 2];\r\n\t\t\tlet v1 = verticesArray[vi1], v2 = verticesArray[vi2], v3 = verticesArray[vi3];\r\n\t\t\tif (v1 == undefined) {\r\n\t\t\t\tv1 = builder.addVertex([vertices[vi1], vertices[vi1 + 1], vertices[vi1 + 2]]), verticesArray[vi1] = v1;\r\n\t\t\t}\r\n\t\t\tif (v2 == undefined) {\r\n\t\t\t\tv2 = builder.addVertex([vertices[vi2], vertices[vi2 + 1], vertices[vi2 + 2]]), verticesArray[vi2] = v2;\r\n\t\t\t}\r\n\t\t\tif (v3 == undefined) {\r\n\t\t\t\tv3 = builder.addVertex([vertices[vi3], vertices[vi3 + 1], vertices[vi3 + 2]]), verticesArray[vi3] = v3;\r\n\t\t\t}\r\n\t\t\tlet uv1 = uvsArray[ui1], uv2 = uvsArray[ui2], uv3 = uvsArray[ui3];\r\n\t\t\tif (uv1 == undefined) {\r\n\t\t\t\tuv1 = [uvs[ui1], uvs[ui1 + 1]], uvsArray[ui1] = uv1;\r\n\t\t\t}\r\n\t\t\tif (uv2 == undefined) {\r\n\t\t\t\tuv2 = [uvs[ui2], uvs[ui2 + 1]], uvsArray[ui2] = uv2;\r\n\t\t\t}\r\n\t\t\tif (uv3 == undefined) {\r\n\t\t\t\tuv3 = [uvs[ui3], uvs[ui3 + 1]], uvsArray[ui3] = uv3;\r\n\t\t\t}\r\n\t\t\tbuilder.addTriangleFace(v1, v2, v3, {\r\n\t\t\t\tuv: [uv1, uv2, uv3]\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn builder;\r\n\t}\r\n}","export enum TexturePixelFormat {\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    DEPTH_COMPONENT = 0x1902,\r\n    DEPTH_STENCIL = 0x84F9,\r\n    RED = 0x1903,\r\n    RG = 0x8227,\r\n    RED_INTEGER = 0x8D94,\r\n    RG_INTEGER = 0x8228,\r\n    RGB_INTEGER = 0x8D98,\r\n    RGBA_INTEGER = 0x8D99\r\n}\r\n\r\nexport enum TextureInternalPixelFormat {\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    DEPTH_COMPONENT16 = 0x81A5,\r\n    DEPTH_COMPONENT24 = 0x81A6,\r\n    DEPTH_COMPONENT32F = 0x8CAC,\r\n    DEPTH24_STENCIL8 = 0x88F0,\r\n    DEPTH32F_STENCIL8 = 0x8CAD,\r\n    R8 = 0x8229,\r\n    R8_SNORM = 0x8F94,\r\n    RG8 = 0x822B,\r\n    RG8_SNORM = 0x8F95,\r\n    RGB8 = 0x8051,\r\n    RGB8_SNORM = 0x8F96,\r\n    RGB565 = 0x8D62,\r\n    RGBA8 = 0x8058,\r\n    RGBA4 = 0x8056,\r\n    RGB5_A1 = 0x8057,\r\n    RGBA8_SNORM = 0x8F97,\r\n    RGB10_A2UI = 0x906F,\r\n    SRGB = 0x8C40,\r\n    SRGB8 = 0x8C41,\r\n    SRGB8_ALPHA8 = 0x8C43,\r\n    R16F = 0x822D,\r\n    RGB16F = 0x881B,\r\n    RGBA16F = 0x881A,\r\n    R32F = 0x822E,\r\n    RG32F = 0x8230,\r\n    RGB32F = 0x8815,\r\n    RGBA32F\t= 0x8814,\r\n    R11F_G11F_B10F = 0x8C3A,\r\n    RGB9_E5 = 0x8C3D,\r\n    R8UI = 0x8232,\r\n    R16I = 0x8233,\r\n    R16UI = 0x8234,\r\n    R32I = 0x8235,\r\n    R32UI = 0x8236,\r\n    RG8I = 0x8237,\r\n    RG8UI = 0x8238,\r\n    RG16I = 0x8239,\r\n    RG16UI = 0x823A,\r\n    RG32I = 0x823B,\r\n    RG32UI = 0x823C,\r\n    RGB8I = 0x8D8F,\r\n    RGB8UI = 0x8D7D,\r\n    RGB16I = 0x8D89,\r\n    RGB16UI = 0x8D77,\r\n    RGB32I = 0x8D83,\r\n    RGB32UI = 0x8D71,\r\n    RGBA8I = 0x8D8E,\r\n    RGBA8UI = 0x8D7C,\r\n    RGBA16I = 0x8D88,\r\n    RGBA16UI = 0x8D76,\r\n    RGBA32I = 0x8D82,\r\n    RGBA32UI = 0x8D70,\r\n}\r\n\r\nexport enum TexturePixelType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406,\r\n    HALF_FLOAT = 0x140B,\r\n    UNSIGNED_SHORT_4_4_4_4 = 0x8033,\r\n    UNSIGNED_SHORT_5_5_5_1 = 0x8034,\r\n    UNSIGNED_SHORT_5_6_5 = 0x8363,\r\n    UNSIGNED_INT_2_10_10_10_REV = 0x8368,\r\n    UNSIGNED_INT_24_8 = 0x84FA,\r\n    UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B,\r\n    UNSIGNED_INT_5_9_9_9_REV = 0x8C3E,\r\n    FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD,\r\n    INT_2_10_10_10_REV = 0x8D9F\r\n}\r\n\r\nexport enum TextureParameter {\r\n    TEXTURE_MAG_FILTER = 0x2800,\r\n    TEXTURE_MIN_FILTER = 0x2801,\r\n    TEXTURE_WRAP_S = 0x2802,\r\n    TEXTURE_WRAP_T = 0x2803,\r\n    TEXTURE_BASE_LEVEL = 0x813C,\r\n    TEXTURE_MAX_LEVEL = 0x813D,\r\n    TEXTURE_MAX_LOD = 0x813B,\r\n    TEXTURE_MIN_LOD = 0x813A,\r\n    TEXTURE_WRAP_R = 0x8072,\r\n    TEXTURE_COMPARE_FUNC = 0x884D,\r\n    TEXTURE_COMPARE_MODE = 0x884C\r\n}\r\n\r\nexport enum TextureTarget {\r\n    TEXTURE_2D = 0x0DE1,\r\n    TEXTURE_CUBE_MAP = 0x8513,\r\n    TEXTURE_3D = 0x806F,\r\n    TEXTURE_2D_ARRAY = 0x8C1A,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A\r\n}\r\n\r\nexport enum TextureMagFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600\r\n}\r\n\r\nexport enum TextureMinFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600,\r\n    NEAREST_MIPMAP_NEAREST = 0x2700, \r\n    LINEAR_MIPMAP_NEAREST = 0x2701, \r\n    NEAREST_MIPMAP_LINEAR = 0x2702,\r\n    LINEAR_MIPMAP_LINEAR = 0x2703\r\n}\r\n\r\nexport enum TextureCompareMode {\r\n    COMPARE_REF_TO_TEXTURE = 0x884E,\r\n    NONE = 0\r\n}\r\n\r\nexport enum TextureWrapMode {\r\n    REPEAT = 0x2901,\r\n    CLAMP_TO_EDGE = 0x812F, \r\n    MIRRORED_REPEAT = 0x8370\r\n}\r\n\r\nexport enum TextureCompareFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207\r\n}\r\n\r\nexport type Texture2DPixels = Uint32Array |  Uint16Array | Uint8Array | TexImageSource;\r\n\r\nexport type TextureCubeMapPixels = {\r\n    xPos: TexImageSource;\r\n    xNeg: TexImageSource;\r\n    yPos: TexImageSource;\r\n    yNeg: TexImageSource;\r\n    zPos: TexImageSource;\r\n    zNeg: TexImageSource;\r\n}\r\n\r\nexport type TextureProperties = {\r\n    target: TextureTarget;\r\n    pixels: Texture2DPixels | TextureCubeMapPixels | null;\r\n    width: number;\r\n    height: number;\r\n    format: TexturePixelFormat;\r\n    internalFormat: TextureInternalPixelFormat;\r\n    type: TexturePixelType;\r\n\r\n    depth?: number;\r\n    lod?: number;\r\n    border?: number;\r\n\r\n    subimages?: {\r\n        pixels: Texture2DPixels;\r\n        xoffset: number;\r\n        yoffset: number;\r\n        zoffset?: number;\r\n        width: number;\r\n        height: number;\r\n        depth?: number;\r\n    }[];\r\n\r\n    mipmap?: boolean;\r\n    min?: TextureMinFilter;\r\n    mag?: TextureMagFilter;\r\n\r\n    wrapS?: TextureWrapMode;\r\n    wrapT?: TextureWrapMode;\r\n    wrapR?: TextureWrapMode;\r\n\r\n    baseMipmapLevel?: number;\r\n    maxMipmapLevel?: number;\r\n\r\n    minLod?: number;\r\n    maxLod?: number;\r\n\r\n    compareFunction?: TextureCompareFunction;\r\n    compareMode?: TextureCompareMode;\r\n}\r\n\r\nexport type Texture = {\r\n    name: string;\r\n    unit: number;\r\n    internalTexture: WebGLTexture;\r\n    properties?: TextureProperties;\r\n}\r\n\r\nexport class WebGLTextureUtilities {\r\n\r\n    static #textureUnits: Map<string, number> = new Map();\r\n\r\n\r\n    static getTexturesUnitsEntries(): IterableIterator<[string, number]> {\r\n        return this.#textureUnits.entries();\r\n    }\r\n\r\n    static createTexture(gl: WebGL2RenderingContext, name: string, properties: TextureProperties): Texture | null {\r\n        const internalTexture = gl.createTexture();\r\n        if (internalTexture === null) {\r\n            return null;\r\n        }\r\n\r\n        let unit = this.#textureUnits.get(name);\r\n        if (unit == undefined) {\r\n            unit = Math.max(-1, ...this.#textureUnits.values()) + 1;\r\n            this.#textureUnits.set(name, unit);\r\n        }\r\n\r\n        const {pixels, target, subimages, width, height, format, internalFormat, type} = properties;\r\n        let {lod, border, depth, mipmap} = properties;\r\n\r\n        lod = lod ?? 0;\r\n        border = border ?? 0;\r\n        depth = depth ?? 0;\r\n        mipmap = mipmap ?? true;\r\n\r\n        const activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE);\r\n        if (activeTexture !== unit) {\r\n            gl.activeTexture(gl.TEXTURE0 + unit);\r\n            gl.bindTexture(target, internalTexture);\r\n        }\r\n        \r\n        switch (target) {\r\n            case TextureTarget.TEXTURE_2D: {\r\n                gl.texImage2D(target, lod, internalFormat, width, height, border, format, type, <ArrayBufferView | null>pixels);\r\n                if (subimages) {\r\n                    subimages.forEach((subimage_i) => {\r\n                        const {xoffset, yoffset, width, height, pixels} = subimage_i;\r\n                        gl.texSubImage2D(target, lod!, xoffset, yoffset, width, height, format, type, pixels as ArrayBufferView);\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case TextureTarget.TEXTURE_CUBE_MAP: {\r\n                if (pixels === null) {\r\n                    gl.texImage2D(target, lod, internalFormat, width, height, border, format, type, null);  \r\n                }\r\n                else {\r\n                    if (\"xPos\" in pixels) {\r\n                        const {xPos, xNeg, yPos, yNeg, zPos, zNeg} = pixels;\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_X, lod, internalFormat, width, height, border, format, type, xPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_X, lod, internalFormat, width, height, border, format, type, xNeg);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Y, lod, internalFormat, width, height, border, format, type, yPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Y, lod, internalFormat, width, height, border, format, type, yNeg);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Z, lod, internalFormat, width, height, border, format, type, zPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Z, lod, internalFormat, width, height, border, format, type, zNeg);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case TextureTarget.TEXTURE_2D_ARRAY: {\r\n                gl.texImage3D(target, lod, internalFormat, width, height,  depth, border, format, type, <ArrayBufferView | null>pixels);\r\n                if (subimages) {\r\n                    subimages.forEach((subimage_i, i) => {\r\n                        const {xoffset, yoffset, zoffset, width, height, depth, pixels} = subimage_i;\r\n                        gl.texSubImage3D(target, lod!, xoffset, yoffset, zoffset!, width, height, depth!, format, type, pixels as ArrayBufferView);\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (mipmap) {\r\n            gl.generateMipmap(target);\r\n        }\r\n\r\n        const {min, mag, wrapS, wrapT, wrapR, baseMipmapLevel, maxMipmapLevel, compareFunction, compareMode, minLod, maxLod} = properties;\r\n\r\n        if (min !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MIN_FILTER, min);\r\n        if (mag !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MAG_FILTER, mag);\r\n        if (wrapS  !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_S, wrapS);\r\n        if (wrapT !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_T, wrapT);\r\n        if (wrapR !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_R, wrapR);\r\n        if (baseMipmapLevel !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_BASE_LEVEL, baseMipmapLevel);\r\n        if (maxMipmapLevel !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MAX_LEVEL, maxMipmapLevel);\r\n        if (compareFunction !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_COMPARE_FUNC, compareFunction);\r\n        if (compareMode !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_COMPARE_MODE, compareMode);\r\n        if (minLod !== undefined)\r\n            gl.texParameterf(target, TextureParameter.TEXTURE_MIN_LOD, minLod);\r\n        if (maxLod !== undefined)\r\n            gl.texParameterf(target, TextureParameter.TEXTURE_MAX_LOD, maxLod);\r\n        \r\n        return {\r\n            unit,\r\n            internalTexture,\r\n            name,\r\n            properties: {\r\n                pixels,\r\n                target,\r\n                subimages,\r\n                lod,\r\n                width,\r\n                height,\r\n                format,\r\n                internalFormat,\r\n                type,\r\n                min,\r\n                mag,\r\n                wrapS,\r\n                wrapT,\r\n                wrapR,\r\n                baseMipmapLevel,\r\n                maxMipmapLevel,\r\n                compareFunction,\r\n                compareMode,\r\n                minLod,\r\n                maxLod\r\n            }\r\n        };\r\n    }\r\n\r\n    static setUnpackAlignment(gl: WebGL2RenderingContext, alignment: number): void {\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, alignment);\r\n    }\r\n\r\n    static deleteTexture(gl: WebGL2RenderingContext, texture: Texture): void {\r\n        const {internalTexture, name} = texture;\r\n        if (gl.isTexture(internalTexture)) {\r\n            gl.deleteTexture(internalTexture);\r\n            this.#textureUnits.delete(name);\r\n        }\r\n    }\r\n}","export enum ShaderType {\r\n    FRAGMENT_SHADER = 0x8B30,\r\n    VERTEX_SHADER = 0x8B31,\r\n}\r\n\r\nexport type Program = {\r\n    internalProgram: WebGLProgram;\r\n    vertexShader: Shader;\r\n    fragmentShader: Shader;\r\n}\r\n\r\nexport type Shader = {\r\n    internalShader: WebGLShader;\r\n    type: ShaderType;\r\n    source: string;\r\n}\r\n\r\nexport type ProgramProperties = {\r\n    vertexSource: string;\r\n    vertexFlags?: string[];\r\n    fragmentSource: string;\r\n    fragmentFlags?: string[];\r\n}\r\n\r\nexport class WebGLProgramUtilities {\r\n\r\n    static createShader(gl: WebGL2RenderingContext, type: ShaderType, source: string): Shader | null {\r\n        const internalShader = gl.createShader(type);\r\n        if (internalShader === null) {\r\n            return null;\r\n        }\r\n        gl.shaderSource(internalShader, source);\r\n        gl.compileShader(internalShader);\r\n        \r\n        const success = gl.getShaderParameter(internalShader, gl.COMPILE_STATUS);\r\n        if (success) {\r\n            return {\r\n                type,\r\n                internalShader,\r\n                source\r\n            };\r\n        }\r\n\r\n        const shaderInfoLog = gl.getShaderInfoLog(internalShader);\r\n        if (shaderInfoLog !== null) {\r\n            console.warn(shaderInfoLog);\r\n        }\r\n\r\n        gl.deleteShader(internalShader);\r\n        return null;\r\n    }\r\n    \r\n    static createProgram(gl: WebGL2RenderingContext, properties: ProgramProperties): Program | null {\r\n        const {vertexSource, fragmentSource} = properties;\r\n\r\n        const vertexShader = this.createShader(gl, ShaderType.VERTEX_SHADER, vertexSource);\r\n        if (vertexShader === null) {\r\n            return null;\r\n        }\r\n\r\n        const fragmentShader = this.createShader(gl, ShaderType.FRAGMENT_SHADER, fragmentSource);\r\n        if (fragmentShader === null) {\r\n            return null;\r\n        }\r\n        \r\n        const internalProgram = gl.createProgram();\r\n        if (internalProgram === null) {\r\n            return null;\r\n        }\r\n\r\n        const program: Program = {\r\n            internalProgram,\r\n            vertexShader,\r\n            fragmentShader\r\n        };\r\n        \r\n        gl.attachShader(internalProgram, vertexShader.internalShader);\r\n        gl.attachShader(internalProgram, fragmentShader.internalShader);\r\n        gl.linkProgram(internalProgram);\r\n\r\n        const success = gl.getProgramParameter(internalProgram, gl.LINK_STATUS);\r\n        if (success) {\r\n            return program;\r\n        }\r\n\r\n        const programInfoLog = gl.getProgramInfoLog(internalProgram);\r\n        if (programInfoLog !== null) {\r\n            const vertexInfoLog = gl.getShaderInfoLog(vertexShader.internalShader);\r\n            const fragmentInfoLog = gl.getShaderInfoLog(fragmentShader.internalShader);\r\n            console.warn(programInfoLog);\r\n            console.warn(vertexInfoLog);\r\n            console.warn(fragmentInfoLog);\r\n        }\r\n        this.deleteProgram(gl, program);\r\n\r\n        return null;\r\n    }\r\n\r\n    static recompileProgram(gl: WebGL2RenderingContext, program: Program, properties: Partial<ProgramProperties>) {\r\n        const {internalProgram, vertexShader, fragmentShader} = program;\r\n        let {vertexSource, fragmentSource} = properties;\r\n        if (typeof vertexSource === \"string\") {\r\n            const {internalShader} = vertexShader;\r\n            gl.shaderSource(internalShader, vertexSource);\r\n            gl.compileShader(internalShader);\r\n            vertexShader.source = vertexSource;\r\n        }\r\n        if (typeof fragmentSource === \"string\") {\r\n            const {internalShader} = fragmentShader;\r\n            gl.shaderSource(internalShader, fragmentSource);\r\n            gl.compileShader(internalShader);\r\n            fragmentShader.source = fragmentSource;\r\n        }\r\n        gl.linkProgram(internalProgram);\r\n\r\n        const success = gl.getProgramParameter(internalProgram, gl.LINK_STATUS);\r\n        if (success) {\r\n            return program;\r\n        }\r\n\r\n        const programInfoLog = gl.getProgramInfoLog(internalProgram);\r\n        if (programInfoLog !== null) {\r\n            const vertexInfoLog = gl.getShaderInfoLog(vertexShader.internalShader);\r\n            const fragmentInfoLog = gl.getShaderInfoLog(fragmentShader.internalShader);\r\n            console.warn(programInfoLog);\r\n            console.warn(vertexInfoLog);\r\n            console.warn(fragmentInfoLog);\r\n        }\r\n        return program;\r\n    }\r\n    \r\n    static deleteProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        const {vertexShader, fragmentShader, internalProgram} = program;\r\n        gl.deleteShader(vertexShader.internalShader);\r\n        gl.deleteShader(fragmentShader.internalShader);\r\n        gl.deleteProgram(internalProgram);\r\n    }\r\n\r\n    static useProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        const {internalProgram} = program;\r\n        const currentProgram = gl.getParameter(gl.CURRENT_PROGRAM);\r\n        if (currentProgram !== internalProgram) {\r\n            gl.useProgram(internalProgram);\r\n        }\r\n    }\r\n}","import { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\nimport { Texture } from \"./WebGLTextureUtilities\";\r\n\r\nexport { UniformValue };\r\nexport { Uniform };\r\nexport { UniformSetter };\r\nexport { UniformsListSetter };\r\nexport { WebGLUniformUtilities };\r\n\r\nexport enum UniformType {\r\n    BOOL = 0x8B56,\r\n    BOOL_VEC2 = 0x8B57,\t \r\n    BOOL_VEC3 = 0x8B58,\t \r\n    BOOL_VEC4 = 0x8B59,\r\n    INT = 0x1404,\r\n    INT_VEC2 = 0x8B53,\t \r\n    INT_VEC3 = 0x8B54,\t \r\n    INT_VEC4 = 0x8B55,\t \r\n    INT_SAMPLER_2D = 0x8DCA,\r\n    INT_SAMPLER_3D = 0x8DCB,\r\n    INT_SAMPLER_CUBE = 0x8DCC,\r\n    INT_SAMPLER_2D_ARRAY = 0x8DCF,\r\n    UNSIGNED_INT_SAMPLER_2D = 0x8DD2,\r\n    UNSIGNED_INT_SAMPLER_3D = 0x8DD3,\r\n    UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4,\r\n    UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7,\r\n    UNSIGNED_INT = 0x1405,\r\n    UNSIGNED_INT_VEC2 = 0x8DC6,\r\n    UNSIGNED_INT_VEC3 = 0x8DC7,\r\n    UNSIGNED_INT_VEC4 = 0x8DC8,\r\n    FLOAT = 0x1406,\r\n    FLOAT_VEC2 = 0x8B50,\t \r\n    FLOAT_VEC3 = 0x8B51,\t \r\n    FLOAT_VEC4 = 0x8B52,\r\n    FLOAT_MAT2 = 0x8B5A,\t \r\n    FLOAT_MAT3 = 0x8B5B,\t \r\n    FLOAT_MAT4 = 0x8B5C,\t \r\n    FLOAT_MAT2x3 = 0x8B65,\r\n    FLOAT_MAT2x4 = 0x8B66,\r\n    FLOAT_MAT3x2 = 0x8B67,\r\n    FLOAT_MAT3x4 = 0x8B68,\r\n    FLOAT_MAT4x2 = 0x8B69,\r\n    FLOAT_MAT4x3 = 0x8B6A,\r\n    SAMPLER_2D = 0x8B5E,\t \r\n    SAMPLER_3D = 0x8B5F,\r\n    SAMPLER_CUBE = 0x8B60,\r\n    SAMPLER_2D_SHADOW = 0x8B62,\r\n    SAMPLER_2D_ARRAY = 0x8DC1,\r\n    SAMPLER_2D_ARRAY_SHADOW = 0x8DC4,\r\n    SAMPLER_CUBE_SHADOW = 0x8DC5\r\n}\r\n\r\ntype UniformValue = number | Float32List | Uint32List | Int32List | Texture;\r\n\r\ntype Uniform = {\r\n    value: UniformValue;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n    transpose?: boolean;\r\n}\r\n\r\ntype UniformSetter = {\r\n    type: UniformType;\r\n    set: (value: any) => void;\r\n}\r\n\r\ntype UniformsListSetter = {\r\n    setters: Record<string, UniformSetter>;\r\n    program: Program;\r\n}\r\n\r\nexport enum UniformDataType {\r\n    SCALAR = \"SCALAR\",\r\n    VEC2 = \"VEC2\",\r\n    VEC3 = \"VEC3\",\r\n    VEC4 = \"VEC4\",\r\n    MAT2 = \"MAT2\",\r\n    MAT3 = \"MAT3\",\r\n    MAT4 = \"MAT4\"\r\n}\r\n\r\nclass WebGLUniformUtilities {\r\n\r\n    static asArrayBufferView(uniformValue: UniformValue): ArrayBufferView {\r\n        if (typeof uniformValue === \"object\") {\r\n            if (\"buffer\" in uniformValue) {\r\n                return uniformValue;\r\n            }\r\n            else if (\"unit\" in uniformValue) {\r\n                return Float32Array.of(uniformValue.unit);\r\n            }\r\n            else {\r\n                return Float32Array.from(uniformValue);\r\n            }\r\n        }\r\n        else {\r\n            return Float32Array.of(uniformValue);\r\n        }\r\n    }\r\n\r\n    static getUniformSetter(gl: WebGL2RenderingContext, uniform: Uniform, location: WebGLUniformLocation , uniformType: UniformType): UniformSetter | null { \r\n        const {value, srcOffset, srcLength} = uniform;\r\n        let {transpose = false} = uniform;\r\n\r\n        switch (uniformType) {\r\n            case UniformType.FLOAT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1f(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1ui(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL:\r\n            case UniformType.INT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1i(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.INT_SAMPLER_2D:\r\n            case UniformType.INT_SAMPLER_2D_ARRAY:\r\n            case UniformType.INT_SAMPLER_3D:\r\n            case UniformType.INT_SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D:\r\n            case UniformType.SAMPLER_3D:\r\n            case UniformType.SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D_SHADOW:\r\n            case UniformType.SAMPLER_2D_ARRAY:\r\n            case UniformType.SAMPLER_2D_ARRAY_SHADOW:\r\n            case UniformType.SAMPLER_CUBE_SHADOW:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_3D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_CUBE:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D_ARRAY:\r\n                if (typeof value == \"object\" && \"unit\" in value) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (tex: Texture) => {\r\n                            const {unit} = tex;\r\n                            gl.uniform1i(location, unit);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform2fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC2:\r\n            case UniformType.INT_VEC2:\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform2iv(location, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC2:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform2uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform3fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC3:\r\n            case UniformType.INT_VEC3:\t\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform3iv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC3:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform3uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform4fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC4:\r\n            case UniformType.INT_VEC4:\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform4iv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC4:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform4uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4:\t\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4fv(location, transpose!, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x4fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x4fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static getUniformsListSetter(gl: WebGL2RenderingContext, program: Program, list: Record<string, Uniform>): UniformsListSetter | null {\r\n        const {internalProgram} = program;\r\n        \r\n        const uniformsNames = Object.keys(list);\r\n        let uniformIndices = gl.getUniformIndices(internalProgram, uniformsNames);\r\n        if (uniformIndices === null) {\r\n            console.error(`No uniform indices found.`);\r\n            return null;\r\n        }\r\n\r\n        const activeUniforms = gl.getProgramParameter(internalProgram, gl.ACTIVE_UNIFORMS);\r\n        const validUniformIndices = Array.from(uniformIndices).filter((index_i, i) => {\r\n            const isValid = index_i >= 0 && index_i < activeUniforms;\r\n            if (!isValid) {\r\n                console.warn(`Uniform ${uniformsNames[i]} could not be located.`);\r\n            }\r\n            return isValid;\r\n        });\r\n        \r\n        const setters: Record<string, UniformSetter> = {};\r\n\r\n        const activeUniformsInfo: WebGLActiveInfo[] = validUniformIndices.map(index => gl.getActiveUniform(internalProgram, index)!);\r\n        activeUniformsInfo.forEach(({name, type}) => {\r\n            const uniform = list[name];\r\n            const location = gl.getUniformLocation(internalProgram, name);\r\n            if (location === null) {\r\n                console.warn(`Uniform ${name} could not be located.`);\r\n                return null;\r\n            }\r\n            const setter = this.getUniformSetter(gl, uniform, location, type);\r\n            if (setter) {\r\n                setters[name] = setter;\r\n            }\r\n        });\r\n        \r\n        return {\r\n            setters,\r\n            program\r\n        };\r\n    }\r\n\r\n    static setUniformsListValues(gl: WebGL2RenderingContext, setter: UniformsListSetter, list: Record<string, Uniform>): void {\r\n        const {program, setters} = setter;\r\n        WebGLProgramUtilities.useProgram(gl, program);\r\n        \r\n        Object.entries(list).forEach(([uniformName, uniform]) => {\r\n            if (uniformName in setters) {\r\n                const setter = setters[uniformName];\r\n                const {value} = uniform;\r\n                setter.set(value);\r\n            }\r\n            else {\r\n                console.error(`Uniform ${uniformName} does not match any of the given setters.`);\r\n            }\r\n        });\r\n    }\r\n}","import { Uniform, WebGLUniformUtilities } from \"./WebGLUniformUtilities\";\r\nimport { Buffer, BufferDataUsage } from \"./WebGLBufferUtilities\";\r\nimport { Program } from \"./WebGLProgramUtilities\";\r\n\r\nexport type UniformBlock = {\r\n    name: string;\r\n    blockIndex: number;\r\n    program: Program;\r\n    layout: Record<string, {\r\n        byteOffset: number;\r\n    }>;\r\n    blockSize: number;\r\n    bindingPoint?: number;\r\n    buffer?: UniformBuffer;\r\n}\r\n\r\nexport type UniformBlockProperties = {\r\n    buffer?: number;\r\n    uniforms?: Record<string, Uniform>;\r\n}\r\n\r\nexport type UniformBuffer = Buffer & {\r\n    bindingPoint?: number;\r\n    rangeOffset?: number;\r\n    rangeSize?: number;\r\n}\r\n\r\nexport type UniformBufferProperties = {\r\n    usage: BufferDataUsage;\r\n    data?: ArrayBuffer;\r\n}\r\n\r\nexport type UniformBlocksProperties = {\r\n    buffers: (UniformBuffer | UniformBufferProperties)[];\r\n    blocks: Record<string, {\r\n        buffer: number;\r\n        uniforms: Record<string, Uniform>;\r\n    }>;\r\n}\r\n\r\nexport class WebGLUniformBlockUtilities {\r\n\r\n    static #bindingPoints: Map<string, number> = new Map();\r\n\r\n    static getBindingPointsEntries(): IterableIterator<[string, number]> {\r\n        const bindingPoints = this.#bindingPoints;\r\n        return bindingPoints.entries();\r\n    }\r\n\r\n    static createUniformBlock(gl: WebGL2RenderingContext, program: Program, name: string): UniformBlock | null {\r\n        const {internalProgram} = program;\r\n\r\n        const blockIndex = gl.getUniformBlockIndex(internalProgram, name);\r\n        if (blockIndex === gl.INVALID_INDEX) {\r\n            console.error(`Block '${name}' does not identify a valid uniform block.`);\r\n            return null;\r\n        }\r\n\r\n        const blockSize = gl.getActiveUniformBlockParameter(internalProgram, blockIndex, gl.UNIFORM_BLOCK_DATA_SIZE);\r\n        const layout: UniformBlock[\"layout\"] = {};\r\n        const blockUniformsIndices = gl.getActiveUniformBlockParameter(internalProgram, blockIndex, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES);\r\n        const activeUniformsOffsets = gl.getActiveUniforms(internalProgram, blockUniformsIndices, gl.UNIFORM_OFFSET);\r\n        activeUniformsOffsets.forEach((uniformOffset_i: number, i: number) => {\r\n            const uniformIndex = blockUniformsIndices[i];\r\n            const uniformInfo = gl.getActiveUniform(internalProgram, uniformIndex);\r\n            if (uniformInfo !== null) {\r\n                const {name} = uniformInfo;\r\n                layout[name] = {\r\n                    byteOffset: uniformOffset_i\r\n                };\r\n            }\r\n        });\r\n\r\n        return {\r\n            name,\r\n            blockIndex,\r\n            blockSize,\r\n            layout,\r\n            program\r\n        };\r\n    }\r\n\r\n    static createUniformBuffer(gl: WebGL2RenderingContext, byteLength: number, bind?: boolean, usage?: BufferDataUsage): UniformBuffer | null {\r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n        \r\n        const target = gl.UNIFORM_BUFFER;\r\n        gl.bindBuffer(target, internalBuffer);\r\n\r\n        usage = usage ?? BufferDataUsage.STATIC_READ;\r\n        bind = bind ?? false;\r\n\r\n        const bindingPoint = bind ? this.lastBindingPoint++ : undefined;\r\n        \r\n        gl.bufferData(target, byteLength, usage);\r\n        \r\n        return {\r\n            internalBuffer,\r\n            byteLength,\r\n            bindingPoint,\r\n            target,\r\n            usage\r\n        };\r\n    }\r\n\r\n    static createRangedUniformBuffers(gl: WebGL2RenderingContext, blocks: UniformBlock[], bind?: boolean, usage?: BufferDataUsage): UniformBuffer[] | null {\r\n\r\n        const offsetAlignment = gl.getParameter(gl.UNIFORM_BUFFER_OFFSET_ALIGNMENT);\r\n        const bufferByteLength = blocks.reduce(\r\n            (size, block) => size + Math.max(Math.ceil(block.blockSize / offsetAlignment), 1) * offsetAlignment, 0\r\n        );\r\n        \r\n        const buffer = this.createUniformBuffer(gl, bufferByteLength, false, usage);\r\n        if (buffer === null) {\r\n            return null;\r\n        }\r\n        \r\n        bind = bind ?? false;\r\n\r\n        let rangeOffset = 0;\r\n        const rangedUniformBuffers = blocks.map((block) => {\r\n            const {blockSize: rangeSize} = block;\r\n            const bindingPoint = bind ? this.lastBindingPoint++ : undefined;\r\n            const rangedUniformBuffer = {\r\n                ...buffer,\r\n                bindingPoint,\r\n                rangeOffset,\r\n                rangeSize\r\n            };\r\n            rangeOffset += Math.max(Math.ceil(rangeSize / offsetAlignment), 1) * offsetAlignment;\r\n            return rangedUniformBuffer;\r\n        });\r\n\r\n        return rangedUniformBuffers;\r\n    }\r\n\r\n    static setUniformBufferValues(gl: WebGL2RenderingContext, block: UniformBlock, buffer: UniformBuffer, uniforms: Record<string, Uniform>): void {\r\n        const {internalBuffer, target} = buffer;\r\n        const currentUniformBuffer = gl.getParameter(gl.UNIFORM_BUFFER_BINDING);\r\n        if (currentUniformBuffer !== internalBuffer) {\r\n            gl.bindBuffer(target, internalBuffer);\r\n        }\r\n        \r\n        const {layout, name} = block;\r\n        const {rangeOffset} = buffer;\r\n        Object.entries(uniforms).forEach(([uniformName, uniform]) => {\r\n            const {value} = uniform;\r\n            if (!(uniformName in layout)) {\r\n                console.warn(`${uniformName} does not exist in block ${name}.`);\r\n            }\r\n            const {byteOffset} = layout[uniformName];\r\n            gl.bufferSubData(target, byteOffset + (rangeOffset ?? 0), WebGLUniformUtilities.asArrayBufferView(value));\r\n        });\r\n    }\r\n\r\n    static setUniformBufferData(gl: WebGL2RenderingContext, buffer: UniformBuffer, data: ArrayBuffer | ArrayBufferView, dstByteOffset?: number, srcOffset?: number, length?: number): void {\r\n        const {internalBuffer, target} = buffer;\r\n        let {rangeOffset} = buffer;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        const byteOffset = (rangeOffset ?? 0) + (dstByteOffset ?? 0);\r\n        if (data instanceof ArrayBuffer) {\r\n            gl.bufferSubData(target, byteOffset, data);\r\n        }\r\n        else {\r\n            srcOffset = srcOffset ?? 0;\r\n            gl.bufferSubData(target, byteOffset, data, srcOffset, length);\r\n        }\r\n    }\r\n\r\n    static lastBindingPoint = 0;\r\n\r\n    static bindUniformBuffer(gl: WebGL2RenderingContext, block: UniformBlock, buffer: UniformBuffer): void {\r\n        const {internalBuffer, target} = buffer;\r\n        let {rangeOffset, rangeSize} = buffer;\r\n        const {bindingPoint} = buffer;\r\n        const {program, blockIndex} = block;\r\n        const {internalProgram} = program;\r\n\r\n        if (bindingPoint !== undefined) {\r\n            block.buffer = buffer;\r\n            gl.uniformBlockBinding(internalProgram, blockIndex, bindingPoint);\r\n            \r\n            if (bindingPoint !== undefined) {\r\n                if (rangeOffset !== undefined && rangeSize !== undefined) {\r\n                    gl.bindBufferRange(target, bindingPoint, internalBuffer, rangeOffset, rangeSize);\r\n                }\r\n                else {\r\n                    gl.bindBufferBase(target, bindingPoint, internalBuffer);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","export enum StencilAction {\r\n    KEEP = 0x1E00,\r\n    REPLACE\t= 0x1E01,\r\n    INCR = 0x1E02,\r\n    DECR = 0x1E03,\r\n    INVERT = 0x150A,\r\n    INCR_WRAP = 0x8507,\r\n    DECR_WRAP = 0x8508\r\n}\r\n\r\nexport enum BufferMask {\r\n    DEPTH_BUFFER_BIT = 0x00000100,\r\n    STENCIL_BUFFER_BIT = 0x00000400,\r\n    COLOR_BUFFER_BIT = 0x00004000\r\n}\r\n\r\nexport enum Buffer {\r\n    COLOR = 0x1800,\r\n    DEPTH = 0x1801,\r\n    STENCIL = 0x1802,\r\n    DEPTH_STENCIL = 0x84F9\r\n}\r\n\r\nexport enum TestFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207,\r\n}\r\n\r\nexport enum BlendingMode {\r\n    ZERO = 0,\r\n    ONE = 1,\r\n    SRC_COLOR = 0x0300,\r\n    ONE_MINUS_SRC_COLOR = 0x0301,\r\n    SRC_ALPHA = 0x0302,\r\n    ONE_MINUS_SRC_ALPHA\t= 0x0303,\r\n    DST_ALPHA = 0x0304,\r\n    ONE_MINUS_DST_ALPHA = 0x0305,\r\n    DST_COLOR = 0x0306,\r\n    ONE_MINUS_DST_COLOR = 0x0307,\r\n    SRC_ALPHA_SATURATE = 0x0308,\r\n    CONSTANT_COLOR = 0x8001,\r\n    ONE_MINUS_CONSTANT_COLOR = 0x8002,\r\n    CONSTANT_ALPHA = 0x8003,\r\n    ONE_MINUS_CONSTANT_ALPHA = 0x8004\r\n}\r\n\r\nexport enum BlendingEquation {\r\n    FUNC_ADD = 0x8006,\r\n    FUNC_SUBTRACT = 0x800A,\r\n    FUNC_REVERSE_SUBTRACT = 0x800B,\r\n    MIN = 0x8007,\r\n    MAX = 0x8008,\r\n}\r\n\r\nexport enum Capabilities {\r\n    BLEND = 0x0BE2,\r\n    CULL_FACE = 0x0B44,\r\n    DEPTH_TEST = 0x0B71,\r\n    DITHER = 0x0BD0,\r\n    POLYGON_OFFSET_FILL = 0x8037,\r\n    SAMPLE_ALPHA_TO_COVERAGE = 0x809E,\r\n    SAMPLE_COVERAGE = 0x80A0,\r\n    SCISSOR_TEST = 0x0C11,\r\n    STENCIL_TEST= 0x0B90,\r\n    RASTERIZER_DISCARD = 0x8C89\r\n}\r\n\r\nexport enum Face {\r\n    FRONT = 0x0404,\r\n    BACK = 0x0405,\r\n    FRONT_AND_BACK = 0x0408\r\n}\r\n\r\nexport enum WindingOrder {\r\n    CW = 0x0900,\r\n    CCW = 0x0901\r\n}\r\n\r\nexport enum HintTarget {\r\n    GENERATE_MIPMAP_HINT = 0x8192,\r\n    FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B\r\n}\r\n\r\nexport enum HintMode {\r\n    DONT_CARE = 0x1100,\r\n    FASTEST\t= 0x1101,\r\n    NICEST = 0x1102\r\n}\r\n\r\nexport class WebGLRendererUtilities {\r\n\r\n    static hint(gl: WebGL2RenderingContext, target: HintTarget, mode: HintMode) {\r\n        gl.hint(target, mode);\r\n    }\r\n\r\n    static frontFace(gl: WebGL2RenderingContext, winding: WindingOrder): void {\r\n        gl.frontFace(winding);\r\n    }\r\n\r\n    static scissor(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.scissor(x, y, width, height);\r\n    }\r\n\r\n    static viewport(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.viewport(x, y, width, height);\r\n    }\r\n\r\n    static clearColor(gl: WebGL2RenderingContext, color: ArrayLike<number>): void {\r\n        gl.clearColor(color[0], color[1], color[2], color[3]);\r\n    }\r\n\r\n    static depthFunction(gl: WebGL2RenderingContext, func: TestFunction): void {\r\n        gl.depthFunc(func);\r\n    }\r\n\r\n    static blendEquation(gl: WebGL2RenderingContext, equ: BlendingEquation): void {\r\n        gl.blendEquation(equ);\r\n    }\r\n\r\n    static blendFunction(gl: WebGL2RenderingContext, srcFunc: BlendingMode, dstFunc: BlendingMode): void {\r\n        gl.blendFunc(srcFunc, dstFunc);\r\n    }\r\n\r\n    static blendFunctionSeparate(gl: WebGL2RenderingContext, srcFunc: BlendingMode, dstFunc: BlendingMode, srcAlpha: number, dstAlpha: number): void {\r\n        gl.blendFuncSeparate(srcFunc, dstFunc, srcAlpha, dstAlpha);\r\n    }\r\n\r\n    static stencilFunction(gl: WebGL2RenderingContext, func: TestFunction, ref: number, mask: number, face: Face): void {\r\n        gl.stencilFuncSeparate(face, func, ref, mask);\r\n    }\r\n\r\n    static stencilOperations(gl: WebGL2RenderingContext, fail: StencilAction, zFail: StencilAction, zPass: StencilAction, face: Face) {\r\n        gl.stencilOpSeparate(face, fail, zFail, zPass);\r\n    }\r\n\r\n    static stencilMask(gl: WebGL2RenderingContext, mask: number, face: Face) {\r\n        gl.stencilMaskSeparate(face, mask);\r\n    }\r\n\r\n    static colorMask(gl: WebGL2RenderingContext, red: boolean, green: boolean, blue: boolean, alpha: boolean) {\r\n        gl.colorMask(red, green, blue, alpha);\r\n    }\r\n\r\n    static depthMask(gl: WebGL2RenderingContext, flag: boolean) {\r\n        gl.depthMask(flag);\r\n    }\r\n\r\n    static enable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.enable(capability);\r\n    }\r\n\r\n    static disable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.disable(capability);\r\n    }\r\n\r\n    static clear(gl: WebGL2RenderingContext, buffer: BufferMask): void {\r\n        gl.clear(buffer);\r\n    }\r\n\r\n    static getViewport(gl: WebGL2RenderingContext): Int32Array {\r\n        return gl.getParameter(gl.VIEWPORT) as Int32Array;\r\n    }\r\n\r\n    static getMaxSamples(gl: WebGL2RenderingContext): number {\r\n        return gl.getParameter(gl.MAX_SAMPLES) as number;\r\n    }\r\n\r\n    static drawBuffers(gl: WebGL2RenderingContext, buffers: Iterable<number>): void {\r\n        gl.drawBuffers(buffers);\r\n    }\r\n\r\n    static clearBuffers(gl: WebGL2RenderingContext, buffer: Buffer, index: number, values: Float32Array | Int32Array | Uint32Array, srcOffset?: number): void {\r\n        if (values instanceof Float32Array) {\r\n            gl.clearBufferfv(buffer, index, values, srcOffset);\r\n        }\r\n        else if (values instanceof Int32Array) {\r\n            gl.clearBufferiv(buffer, index, values, srcOffset);\r\n        }\r\n        else if (values instanceof Uint32Array) {\r\n            gl.clearBufferuiv(buffer, index, values, srcOffset);\r\n        }\r\n    }\r\n}","import { VertexArray, VertexArrayValues, VertexArrayProperties, WebGLVertexArrayUtilities, DrawMode } from \"./WebGLVertexArrayUtilities\"\r\nimport { Texture, TextureProperties, WebGLTextureUtilities } from \"./WebGLTextureUtilities\"\r\nimport { UniformBlock, UniformBlockProperties, UniformBuffer, UniformBufferProperties, WebGLUniformBlockUtilities } from \"./WebGLUniformBlockUtilities\"\r\nimport { Uniform, UniformsListSetter, WebGLUniformUtilities } from \"./WebGLUniformUtilities\"\r\nimport { Program, ProgramProperties, WebGLProgramUtilities } from \"./WebGLProgramUtilities\"\r\n\r\nexport type PacketProperties = {\r\n    program: ProgramProperties | Program;\r\n    vertexArray: VertexArrayProperties;\r\n    uniformBuffers?: (UniformBufferProperties | UniformBuffer)[];\r\n    uniformBlocks?: Record<string, UniformBlockProperties>;\r\n    uniforms?: Record<string, Uniform>;\r\n    drawCommand: {\r\n        mode: DrawMode;\r\n        elementsCount?: number;\r\n        instanceCount?: number;\r\n        multiDraw?: {\r\n            firstsList?: Iterable<number> | Int32Array;\r\n            firstsOffset?: number;\r\n            countsList?: Iterable<number> | Int32Array;\r\n            countsOffset?: number;\r\n            offsetsList?: Iterable<number> | Int32Array;\r\n            offsetsOffset?: number;\r\n            instanceCountsList?: Iterable<number> | Int32Array;\r\n            instanceCountsOffset?: number;\r\n            drawCount?: number;\r\n        }\r\n    }\r\n}\r\n\r\nexport type PacketValues = {\r\n    vertexArray?: VertexArrayValues;\r\n    uniforms?: Record<string, Uniform>;\r\n    uniformBlocks?: Record<string, {\r\n        uniforms: Record<string, Uniform>;\r\n    }>;\r\n}\r\n\r\nexport type Packet = {\r\n    program: Program;\r\n    vertexArray: VertexArray;\r\n    uniforms?: UniformsListSetter;\r\n    uniformBlocks?: Record<string, UniformBlock>;\r\n    drawCommand: PacketDrawCommand;\r\n}\r\n\r\nexport interface PacketDrawCommand {\r\n    mode: DrawMode;\r\n    elementsCount?: number;\r\n    instanceCount?: number;\r\n    multiDraw?: {\r\n        firstsList?: Iterable<number> | Int32Array;\r\n        firstsOffset?: number;\r\n        countsList?: Iterable<number> | Int32Array;\r\n        countsOffset?: number;\r\n        offsetsList?: Iterable<number> | Int32Array;\r\n        offsetsOffset?: number;\r\n        instanceCountsList?: Iterable<number> | Int32Array;\r\n        instanceCountsOffset?: number;\r\n        drawCount?: number;\r\n    };\r\n}\r\n\r\nexport class WebGLPacketUtilities {\r\n\r\n    static createTextures(gl: WebGL2RenderingContext, textures: Record<string, TextureProperties>): Record<string, Texture> {\r\n        const _textures: {\r\n            [key: string]: Texture\r\n        } = {};\r\n        Object.entries(textures).forEach(([name, properties]) => {\r\n            const texture = WebGLTextureUtilities.createTexture(gl, name, properties);\r\n            if (texture !== null) {\r\n                _textures[name] = texture;\r\n            }\r\n        });\r\n        return _textures;\r\n    }\r\n    \r\n    static createPacket(gl: WebGL2RenderingContext, packet: PacketProperties): Packet | null {\r\n        const {program: programProperties, vertexArray: vertexArrayProperties, uniforms: uniformsProperties, uniformBlocks: uniformBlocksProperties, uniformBuffers: uniformBuffersProperties} = packet;\r\n        const {drawCommand} = packet;\r\n\r\n        let program: Program | null = null;\r\n        if (\"internalProgram\" in programProperties) {\r\n            program = programProperties;\r\n        }\r\n        else {\r\n            program = WebGLProgramUtilities.createProgram(gl, programProperties);\r\n        }\r\n        if (program === null) {\r\n            return null;\r\n        }\r\n        \r\n        let vertexArray: VertexArray | null = null;\r\n        vertexArray = WebGLVertexArrayUtilities.createVertexArray(gl, program, vertexArrayProperties);\r\n        if (vertexArray === null) {\r\n            return null;\r\n        }\r\n      \r\n        let uniforms: UniformsListSetter | null | undefined = undefined;\r\n        if (uniformsProperties !== undefined) {\r\n            uniforms = WebGLUniformUtilities.getUniformsListSetter(gl, program, uniformsProperties);\r\n            if (uniforms === null) {\r\n                return null;\r\n            }\r\n            WebGLUniformUtilities.setUniformsListValues(gl, uniforms, uniformsProperties);\r\n        }\r\n\r\n        let uniformBlocks: Record<string, UniformBlock> = {};\r\n        const uniformBlocksPropertiesEntries = uniformBlocksProperties ? Object.entries(uniformBlocksProperties) : [];\r\n        const uniformBuffersMaxIndex = (uniformBuffersProperties?.length ?? 0) - 1;\r\n        uniformBlocksPropertiesEntries.forEach(([_, uniformBlockProperty]) => {\r\n            const {buffer} = uniformBlockProperty;\r\n            if (buffer !== undefined && buffer > uniformBuffersMaxIndex) {\r\n                console.error(`Uniform buffer with index ${buffer} does not exist.`);\r\n            }\r\n        });\r\n        if (uniformBuffersProperties) {\r\n            uniformBuffersProperties.forEach(\r\n                (uniformBuffersProperty_i, i) => {\r\n                    const relatedBlockProperties = uniformBlocksPropertiesEntries.filter(\r\n                        ([_, uniformBlockProperty]) => uniformBlockProperty.buffer === i\r\n                    );\r\n                    const relatedBlocks = <UniformBlock[]>relatedBlockProperties.map(\r\n                        ([blockName, _]) => WebGLUniformBlockUtilities.createUniformBlock(gl, program!, blockName)\r\n                    );\r\n                    const {length: relatedBlocksCount} = relatedBlocks;        \r\n                    if (\"internalBuffer\" in uniformBuffersProperty_i) {\r\n                        relatedBlocks.forEach((block_i) => {\r\n                            const {name} = block_i!;\r\n                            WebGLUniformBlockUtilities.bindUniformBuffer(gl, block_i!, uniformBuffersProperty_i);\r\n                            uniformBlocks[name] = block_i!;\r\n                        });\r\n                    }\r\n                    else {\r\n                        if (relatedBlocksCount > 0) {\r\n                            const {usage, data} = uniformBuffersProperty_i;\r\n                            if (relatedBlocksCount > 1) {\r\n                                const rangedBuffers = WebGLUniformBlockUtilities.createRangedUniformBuffers(gl, <UniformBlock[]>relatedBlocks, true, usage)!;\r\n                                if (data) {\r\n                                    WebGLUniformBlockUtilities.setUniformBufferData(gl, rangedBuffers[0], data);\r\n                                }\r\n                                relatedBlocks.forEach((block_i, i) => {\r\n                                    const {name} = block_i!;\r\n                                    const rangedBuffer = rangedBuffers[i];\r\n                                    WebGLUniformBlockUtilities.bindUniformBuffer(gl, block_i!, rangedBuffer);\r\n                                    const {uniforms} = relatedBlockProperties[i][1];\r\n                                    if (uniforms) {\r\n                                        WebGLUniformBlockUtilities.setUniformBufferValues(gl, block_i, rangedBuffer, uniforms);\r\n                                    }\r\n                                    uniformBlocks[name] = block_i!;\r\n                                });\r\n                            }\r\n                            else {\r\n                                const relatedBlock = relatedBlocks[0];\r\n                                const {blockSize, name} = relatedBlock;\r\n                                const buffer = WebGLUniformBlockUtilities.createUniformBuffer(gl, blockSize, true, usage);\r\n                                if (buffer === null) {\r\n                                    return null;\r\n                                }\r\n                                if (data) {\r\n                                    WebGLUniformBlockUtilities.setUniformBufferData(gl, buffer, data);\r\n                                }\r\n                                WebGLUniformBlockUtilities.bindUniformBuffer(gl, relatedBlock!, buffer!);\r\n                                const {uniforms} = relatedBlockProperties[0][1];\r\n                                if (uniforms) {\r\n                                    WebGLUniformBlockUtilities.setUniformBufferValues(gl, relatedBlock, buffer, uniforms);\r\n                                }\r\n                                uniformBlocks[name] = relatedBlock!;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        const remainingBlockProperties = uniformBlocksPropertiesEntries.filter(\r\n            ([_, uniformBlockProperty]) => uniformBlockProperty.buffer === undefined\r\n        );\r\n        remainingBlockProperties.forEach(([blockName, uniformBlockProperties]) => {\r\n            const {uniforms} = uniformBlockProperties;\r\n            const block = WebGLUniformBlockUtilities.createUniformBlock(gl, program!, blockName);\r\n            if (block === null) {\r\n                return null;\r\n            }\r\n            const {blockSize} = block;\r\n            const buffer = WebGLUniformBlockUtilities.createUniformBuffer(gl, blockSize, true);\r\n            if (buffer === null) {\r\n                return null;\r\n            }\r\n            WebGLUniformBlockUtilities.bindUniformBuffer(gl, block, buffer);\r\n            if (uniforms !== undefined) {\r\n                WebGLUniformBlockUtilities.setUniformBufferValues(gl, block, buffer, uniforms);\r\n            }\r\n            uniformBlocks[blockName] = block;\r\n        });\r\n\r\n        return {\r\n            program,\r\n            vertexArray,\r\n            uniforms,\r\n            uniformBlocks,\r\n            drawCommand\r\n        };\r\n    }\r\n\r\n    static setPacketValues(gl: WebGL2RenderingContext, packet: Packet, values: PacketValues): void {\r\n        const {vertexArray: vertexArrayValues, uniforms: uniformsValues, uniformBlocks: uniformsBlocksValues} = values;\r\n        const {vertexArray, uniforms, uniformBlocks} = packet;\r\n\r\n        if (vertexArrayValues !== undefined) {\r\n            WebGLVertexArrayUtilities.setVertexArrayValues(gl, vertexArray, vertexArrayValues);\r\n        }\r\n        if (uniforms !== undefined && uniformsValues !== undefined) {\r\n            WebGLUniformUtilities.setUniformsListValues(gl, uniforms, uniformsValues);\r\n        }\r\n        if (uniformBlocks !== undefined && uniformsBlocksValues !== undefined) {\r\n            const uniformBlocksValuesEntries = uniformsBlocksValues ? Object.entries(uniformsBlocksValues) : [];\r\n            uniformBlocksValuesEntries.forEach(([blockName, uniformBlock]) => {\r\n                const {uniforms} = uniformBlock;\r\n                const block = uniformBlocks[blockName];\r\n                const {buffer} = block;\r\n                if (buffer) {\r\n                    WebGLUniformBlockUtilities.setUniformBufferValues(gl, block, buffer, uniforms);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    static #multiDrawExtension: WEBGL_multi_draw | null = null;\r\n\r\n    static enableMultidrawExtension(gl: WebGL2RenderingContext) {\r\n        this.#multiDrawExtension = gl.getExtension(\"WEBGL_multi_draw\");\r\n    }\r\n\r\n    static drawPacket(gl: WebGL2RenderingContext, packet: Packet, drawCommand: PacketDrawCommand = packet.drawCommand): void {\r\n        const {vertexArray} = packet;\r\n        const {program, internalVertexArray, elementBuffer} = vertexArray;\r\n        const {mode, elementsCount, instanceCount, multiDraw} = drawCommand;\r\n\r\n        WebGLProgramUtilities.useProgram(gl, program);\r\n        \r\n        const currentVertexArray = gl.getParameter(gl.VERTEX_ARRAY_BINDING);\r\n        if (currentVertexArray !== internalVertexArray) {\r\n            gl.bindVertexArray(internalVertexArray);\r\n        }\r\n        \r\n        if (elementBuffer) {\r\n            const {indexType} = elementBuffer;\r\n            if (instanceCount !== undefined && elementsCount !== undefined) {\r\n                gl.drawElementsInstanced(mode, elementsCount, indexType, 0, instanceCount);\r\n            }\r\n            else if (multiDraw) {\r\n                const multiDrawExtension = this.#multiDrawExtension!;\r\n                const {countsList, countsOffset, offsetsList, offsetsOffset, drawCount, instanceCountsList, instanceCountsOffset} = multiDraw;\r\n                if (instanceCountsList !== undefined && instanceCountsOffset !== undefined) {\r\n                    multiDrawExtension.multiDrawElementsInstancedWEBGL(\r\n                        mode, countsList!, countsOffset!, indexType!,\r\n                        offsetsList!, offsetsOffset!, instanceCountsList, instanceCountsOffset, drawCount!\r\n                    );\r\n                }\r\n                else {\r\n                    multiDrawExtension.multiDrawElementsWEBGL(\r\n                        mode, countsList!, countsOffset!, indexType!,\r\n                        offsetsList!, offsetsOffset!, drawCount!\r\n                    );\r\n                }\r\n            }\r\n            else if (elementsCount !== undefined) {\r\n                gl.drawElements(mode, elementsCount, indexType, 0);\r\n            }\r\n        }\r\n        else {\r\n            if (instanceCount !== undefined && elementsCount !== undefined) {\r\n                gl.drawArraysInstanced(mode, 0, elementsCount, instanceCount);\r\n            }\r\n            else if (multiDraw) {\r\n                const multiDrawExtension = this.#multiDrawExtension!;\r\n                const {countsList, countsOffset, firstsList, firstsOffset, drawCount, instanceCountsList, instanceCountsOffset} = multiDraw;\r\n                if (instanceCountsList !== undefined && instanceCountsOffset !== undefined) {\r\n                    multiDrawExtension.multiDrawArraysInstancedWEBGL(\r\n                        mode, firstsList!, firstsOffset!,\r\n                        countsList!, countsOffset!, instanceCountsList, instanceCountsOffset, drawCount!\r\n                    );\r\n                }\r\n                else {\r\n                    multiDrawExtension.multiDrawArraysWEBGL(\r\n                        mode, firstsList!, firstsOffset!, \r\n                        countsList!, countsOffset!, drawCount!\r\n                    );\r\n                }\r\n            }\r\n            else if (elementsCount !== undefined) {\r\n                gl.drawArrays(mode, 0, elementsCount);\r\n            }\r\n        }\r\n    }\r\n}","export { ColorValues };\r\nexport { Color };\r\n\r\ntype ColorValues = [number, number, number];\r\n\r\ninterface ColorConstructor {\r\n    readonly prototype: Color;\r\n    new(): Color;\r\n    new(r: number, g: number, b: number): Color;\r\n    new(r: number, g: number, b: number, a: number): Color;\r\n    readonly YELLOW: Color;\r\n    readonly BLACK: Color;\r\n    readonly RED: Color;\r\n    readonly GREEN: Color;\r\n    readonly BLUE: Color;\r\n    readonly WHITE: Color;\r\n    array(...colors: Color[]): number[];\r\n    lerp(a: Color, b: Color, t: number): Color;\r\n    rgb(r: number, g: number, b: number): Color;\r\n    rgba(rgb: Color): Color;\r\n    rgba(rgb: Color, a: number): Color;\r\n    rgba(r: number, g: number, b: number, a: number): Color;\r\n}\r\n\r\ninterface Color extends ArrayLike<number>, Iterable<number> {\r\n    readonly array: Float32Array;\r\n    readonly length: number;\r\n    0: number;\r\n    1: number;\r\n    2: number;\r\n    3: number;\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n    a: number;\r\n    copy(color: Color): Color;\r\n    clone(): Color;\r\n    getValues(): ColorValues;\r\n    setValues(\r\n        r: number,\r\n        g: number,\r\n        b: number,\r\n        a?: number\r\n    ): Color;\r\n    lerp(color: Color, t: number): Color;\r\n    normalize(): Color;\r\n}\r\n\r\nclass ColorBase implements Color {\r\n    [index: number]: number;\r\n    readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n    constructor(r: number, g: number, b: number)\r\n    constructor(r: number, g: number, b: number, a: number)\r\n    constructor(r?: number, g?: number, b?: number, a?: number) {\r\n\t\tthis.array = a !== undefined ? new Float32Array([\r\n            r ?? 0, g ?? 0, b ?? 0, a\r\n        ]) : new Float32Array([\r\n            r ?? 0, g ?? 0, b ?? 0\r\n        ]);\r\n    }\r\n    \r\n    static readonly BLACK = new ColorBase(0, 0, 0);\r\n    static readonly RED = new ColorBase(1, 0, 0);\r\n    static readonly YELLOW = new ColorBase(1, 1, 0);\r\n    static readonly GREEN = new ColorBase(0, 1, 0);\r\n    static readonly BLUE = new ColorBase(0, 0, 1);\r\n    static readonly WHITE = new ColorBase(1, 1, 1);\r\n\r\n    static rgb(r: number, g: number, b: number): Color {\r\n        return new Color(r, g, b);\r\n    }\r\n\r\n    static rgba(rgb: Color): Color;\r\n    static rgba(rgb: Color, a: number): Color;\r\n    static rgba(r: number, g: number, b: number, a: number): Color;\r\n    static rgba(rgbOrR: any, aOrG?: number, b?: number, a?: number): Color {\r\n        if (rgbOrR instanceof Color) {\r\n            const {r, g, b} = rgbOrR;\r\n            return aOrG !== undefined ?\r\n                new Color(r, g, b, aOrG) :\r\n                new Color(r, g, b, 1.0);\r\n        }\r\n        else {\r\n            return new Color(rgbOrR, aOrG!, b!, a!);\r\n        }\r\n    }\r\n\r\n    static array(...colors: Color[]): number[] {\r\n        const a = new Array<number>(colors.length * 4);\r\n        let c;\r\n        let i = 0;\r\n        for (const color of colors) {\r\n            c = color.array;\r\n            a[i + 0] = c[0];\r\n            a[i + 1] = c[1];\r\n            a[i + 2] = c[2];\r\n            i += 3;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    get length(): number {\r\n        return 3;\r\n    }\r\n\r\n    get r(): number {\r\n        return this.array[0];\r\n    }\r\n\r\n    set r(r: number) {\r\n        this.array[0] = r;\r\n    }\r\n\r\n    get g(): number {\r\n        return this.array[1];\r\n    }\r\n\r\n    set g(g: number) {\r\n        this.array[1] = g;\r\n    }\r\n\r\n    get b(): number {\r\n        return this.array[2];\r\n    }\r\n\r\n    set b(b: number) {\r\n        this.array[2] = b;\r\n    }\r\n\r\n    get a(): number {\r\n        return this.array[3];\r\n    }\r\n\r\n    set a(a: number) {\r\n        this.array[3] = a;\r\n    }\r\n\r\n    get 0(): number {\r\n        return this.array[0];\r\n    }\r\n\r\n    set 0(r: number) {\r\n        this.array[0] = r;\r\n    }\r\n\r\n    get 1(): number {\r\n        return this.array[1];\r\n    }\r\n\r\n    set 1(g: number) {\r\n        this.array[1] = g;\r\n    }\r\n\r\n    get 2(): number {\r\n        return this.array[2];\r\n    }\r\n\r\n    set 2(b: number) {\r\n        this.array[2] = b;\r\n    }\r\n\r\n    get 3(): number {\r\n        return this.array[3];\r\n    }\r\n\r\n    set 3(a: number) {\r\n        this.array[3] = a;\r\n    }\r\n\r\n    setValues(r: number, g: number, b: number): this {\r\n\t\tconst {array} = this;\r\n\r\n\t\tarray[0] = r;\r\n\t\tarray[1] = g;\r\n\t\tarray[2] = b;\r\n\r\n\t\treturn this;\r\n    }\r\n    \r\n    getValues(): ColorValues {\r\n\t\tconst {array} = this;\r\n\t\t\r\n\t\treturn [\r\n\t\t\tarray[0], array[1], array[2]\r\n\t\t];\r\n\t}\r\n    \r\n    copy(color: Color): this {\r\n        const {array} = this;\r\n        const {r, g, b} = color;\r\n\r\n        array[0] = r;\r\n        array[1] = g;\r\n        array[2] = b;\r\n\r\n        return this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn <this>(new ColorBase()).copy(this);\r\n    }\r\n\r\n    static lerp(a: Color, b: Color, t: number): Color {\r\n\t\treturn a.lerp(b, t);\r\n\t}\r\n    \r\n    lerp(color: Color, t: number): this {\r\n        const {array} = this;\r\n        const {r, g, b} = color;\r\n\r\n\t\tarray[0] = t * (r - array[0]);\r\n\t\tarray[1] = t * (g - array[1]);\r\n\t\tarray[2] = t * (b - array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n    \r\n\tnormalize(): this {\r\n\t\tconst {array} = this;\r\n\t\tconst length = 255;\r\n        array[0] /= length;\r\n        array[1] /= length;\r\n        array[2] /= length;\r\n\t\treturn this;\r\n\t}\r\n\r\n    [Symbol.iterator] (): Iterator<number> {\r\n\t\tconst {array} = this;\r\n\t\tconst {length} = array;\r\n\t\tlet i = 0;\r\n\t\treturn {\r\n\t\t\tnext() {\r\n\t\t\t\tif (i < length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: array[i++], done: false\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: undefined, done: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst Color: ColorConstructor = ColorBase;","import { IcosahedronGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/IcosahedronGeometry\";\r\nimport { ArcballCameraControl } from \"../../engine/core/controls/ArcballCameraControl\";\r\nimport { FreeCameraControl } from \"../../engine/core/controls/FreeCameraControl\";\r\nimport { Transform } from \"../../engine/core/general/Transform\";\r\nimport { Input } from \"../../engine/core/input/Input\";\r\nimport { PerspectiveCamera } from \"../../engine/core/rendering/scenes/cameras/PerspectiveCamera\";\r\nimport { GeometryBuffer } from \"../../engine/core/rendering/scenes/geometries/GeometryBuffer\";\r\nimport { CubeGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/CubeGeometry\";\r\nimport { QuadGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/QuadGeometry\";\r\nimport { BufferDataUsage } from \"../../engine/core/rendering/webgl/WebGLBufferUtilities\";\r\nimport { FramebufferAttachment, FramebufferTextureTarget, RenderbufferPixelFormat, WebGLFramebufferUtilities } from \"../../engine/core/rendering/webgl/WebGLFramebufferUtilities\";\r\nimport { WebGLPacketUtilities, PacketProperties, PacketValues } from \"../../engine/core/rendering/webgl/WebGLPacketUtilities\";\r\nimport { WebGLProgramUtilities } from \"../../engine/core/rendering/webgl/WebGLProgramUtilities\";\r\nimport { BlendingEquation, BlendingMode, BufferMask, Capabilities, TestFunction, WebGLRendererUtilities, WindingOrder } from \"../../engine/core/rendering/webgl/WebGLRendererUtilities\";\r\nimport { TexturePixelFormat, TexturePixelType, TextureMagFilter, TextureMinFilter, TextureTarget, TextureWrapMode, WebGLTextureUtilities, TextureInternalPixelFormat } from \"../../engine/core/rendering/webgl/WebGLTextureUtilities\";\r\nimport { WebGLUniformBlockUtilities } from \"../../engine/core/rendering/webgl/WebGLUniformBlockUtilities\";\r\nimport { AttributeDataType, DataComponentType, DrawMode, WebGLVertexArrayUtilities } from \"../../engine/core/rendering/webgl/WebGLVertexArrayUtilities\";\r\nimport { Color } from \"../../engine/libs/graphics/colors/Color\";\r\nimport { Matrix4 } from \"../../engine/libs/maths/algebra/matrices/Matrix4\";\r\nimport { Quaternion } from \"../../engine/libs/maths/algebra/quaternions/Quaternion\";\r\nimport { Vector3, Vector3Values } from \"../../engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../engine/libs/maths/geometry/space/Space\";\r\nimport { addWidgets, createPositionWidgets, createRelativePositionWidgets, createRotationWidgets } from \"./Common\";\r\nimport { SphereGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/SphereGeometry\";\r\nimport { CylinderGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/CylinderGeometry\";\r\nimport { DodecahedronGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/DodecahedronGeometry\";\r\n\r\nconst simpleSceneDOM = /*template*/`\r\n<!--<link rel=\"stylesheet\" href=\"./css/main.css\"/>-->\r\n  <div class=\"flex-auto flex-cols\">\r\n    <main class=\"flex-rows flex-auto\">\r\n        <section class=\"centered padded\">\r\n          <div id=\"ui\" class=\"flex-cols\">\r\n            <div class=\"flex-none\">FPS: <span id=\"canvas-fps\">-.-</span><button id=\"playpause\">Pause</button></div>\r\n          </div>\r\n          <div id=\"widgets\"></div>\r\n          <canvas id=\"canvas\" tabindex=\"0\" tooltip=\"mon-canvas\" oncontextmenu=\"return false;\"></canvas>\r\n          <style>\r\n            circle:hover {\r\n              fill: rgb(255, 0, 0);\r\n            }\r\n          </style>\r\n          <!--<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" width=\"100\" height=\"100\">\r\n            <circle cx=\"10\" cy=\"10\" r=\"4\"/>\r\n          </svg>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\" width=\"200\" height=\"200\" id=\"save\" fill=\"none\">\r\n            <g>\r\n              <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"red\"></rect>\r\n              <text text-anchor=\"middle\" alignment-baseline=\"middle\" x=\"50\" y=\"50\" font-family=\"Verdana\" fill=\"blue\">Hello,World!</text>\r\n            </g>\r\n          </svg>-->\r\n        </section>\r\n    </main>\r\n  </div>`;\r\n\r\nexport async function start() {\r\n  const template = document.createElement(\"template\");\r\n  template.innerHTML = simpleSceneDOM;\r\n  document.body.insertBefore(template.content, document.body.firstChild);\r\n\r\n  /*let onCapture = false;\r\n  const handlePointerUpEvent = (event: PointerEvent) => {\r\n    const {target, pointerId} = event;\r\n    if (target instanceof Element && target.tagName == \"circle\") {\r\n      (<Element>target).releasePointerCapture(pointerId);\r\n      onCapture = false;\r\n    }\r\n  }\r\n  const handlePointerDownEvent = (event: PointerEvent) => {\r\n    const {target, pointerId} = event;\r\n    if (target instanceof Element && target.tagName == \"circle\") {\r\n      (<Element>target).setPointerCapture(pointerId);\r\n      onCapture = true;\r\n    }\r\n  }\r\n  const handlePointerOutEvent = (event: PointerEvent) => {\r\n    const {target, pointerId} = event;\r\n    if (target instanceof Element && target.tagName == \"circle\") {\r\n      (<Element>target).releasePointerCapture(pointerId);\r\n      onCapture = false;\r\n    }\r\n  }\r\n  const handlePointerMoveEvent = (event: PointerEvent) => {\r\n    if (onCapture) {\r\n      const {currentTarget, clientX, clientY} = event;\r\n      const svg = <Element>currentTarget;\r\n      const {\r\n        right: svgRight, left: svgLeft, width: svgWidth,\r\n        bottom: svgBottom, top: svgTop, height: svgHeight\r\n      } = svg.getBoundingClientRect();\r\n      const {target} = event;\r\n      const targetElement = <Element>target;\r\n      const [viewMinX, viewMinY, viewMaxX, viewMaxY] = svg.getAttribute(\"viewBox\")!.split(\" \").map(value => parseFloat(value));\r\n      const offsetX = (Math.min(svgRight, Math.max(clientX, svgLeft)) - svgLeft) / svgWidth;\r\n      const offsetY = (Math.min(svgBottom, Math.max(clientY, svgTop)) - svgTop) / svgHeight;\r\n      const newTargetX = Math.round(offsetX * (viewMaxX - viewMinX));\r\n      const newTargetY = Math.round(offsetY * (viewMaxY - viewMinY));\r\n      targetElement.setAttribute(\"cx\", `${newTargetX}`);\r\n      targetElement.setAttribute(\"cy\", `${newTargetY}`);\r\n    }\r\n  }\r\n  const svg = document.querySelector(\"svg\");\r\n  svg!.addEventListener(\"pointerdown\", handlePointerDownEvent);\r\n  svg!.addEventListener(\"pointermove\", handlePointerMoveEvent);\r\n  svg!.addEventListener(\"pointerup\", handlePointerUpEvent);\r\n  svg!.addEventListener(\"pointerout\", handlePointerOutEvent);*/\r\n\r\n  try {\r\n    launchScene();\r\n  }\r\n  catch (e) {\r\n    console.trace(e);\r\n  }\r\n}\r\n/*\r\nlet file: File | undefined;\r\nconst input = document.createElement(\"input\");\r\ninput.type = \"file\";\r\ndocument.body.append(input);\r\ninput.addEventListener(\"input\", () => {\r\n  file = input.files![0];\r\n  launchScene();\r\n});\r\n*/\r\nexport async function launchScene() {\r\n  let render: (time: number) => void;\r\n  let fps: number = 0;\r\n  let paused = false;\r\n\r\n  const playPause = document.getElementById('playpause') as HTMLButtonElement;\r\n  if (playPause !== null) {\r\n    playPause.onclick = () => {\r\n      paused = !paused;\r\n      playPause.textContent = paused ? \"Play\" : \"Pause\";\r\n      if (!paused) {\r\n        requestAnimationFrame(render);\r\n      }\r\n    };\r\n  }\r\n\r\n  const fpsElement = document.getElementById('canvas-fps') as HTMLSpanElement;\r\n  if (!fpsElement) {\r\n    return;\r\n  }\r\n\r\n  const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n  if (!canvas) {\r\n    return;\r\n  }\r\n  \r\n  const CANVAS_WIDTH = 1400;\r\n  const CANVAS_HEIGHT = 800;\r\n  const supersamplingRatio = 1;\r\n  canvas.width = CANVAS_WIDTH * supersamplingRatio;\r\n  canvas.height = CANVAS_HEIGHT * supersamplingRatio;\r\n  canvas.style.width = `${CANVAS_WIDTH}px`;\r\n  canvas.style.height = `${CANVAS_HEIGHT}px`;\r\n  \r\n  const gl = canvas.getContext(\"webgl2\");\r\n  if (!gl) {\r\n    return;\r\n  }\r\n\r\n  WebGLTextureUtilities.setUnpackAlignment(gl, 1);\r\n\r\n  // Shaders\r\n  const phongVert = await fetch(\"assets/engine/shaders/common/phong.vert.glsl\").then(resp => resp.text());\r\n  const phongFrag = await fetch(\"assets/engine/shaders/common/phong.frag.glsl\").then(resp => resp.text());\r\n  const phongProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: phongVert, fragmentSource: phongFrag});\r\n  if (phongProgram === null) return;\r\n\r\n  const skyboxVert = await fetch(\"assets/engine/shaders/common/skybox.vert\").then(resp => resp.text());\r\n  const skyboxFrag = await fetch(\"assets/engine/shaders/common/skybox.frag\").then(resp => resp.text());\r\n  const skyboxProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: skyboxVert, fragmentSource: skyboxFrag});\r\n  if (skyboxProgram === null) return;\r\n  \r\n  const textureVert = await fetch(\"assets/engine/shaders/common/texture.vert\").then(resp => resp.text());\r\n  const textureFrag = await fetch(\"assets/engine/shaders/common/texture.frag\").then(resp => resp.text());\r\n  const texProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: textureVert, fragmentSource: textureFrag});\r\n  if (texProgram === null) return;\r\n\r\n  const basicVert = await fetch(\"assets/engine/shaders/common/basic.vert.glsl\").then(resp => resp.text());\r\n  const basicFrag = await fetch(\"assets/engine/shaders/common/basic.frag.glsl\").then(resp => resp.text());\r\n  const basicProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: basicVert, fragmentSource: basicFrag});\r\n  if (basicProgram === null) return;\r\n  \r\n  const depthVert = await fetch(\"assets/engine/shaders/common/depth.vert.glsl\").then(resp => resp.text());\r\n  const depthFrag = await fetch(\"assets/engine/shaders/common/depth.frag.glsl\").then(resp => resp.text());\r\n  const depthProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: depthVert, fragmentSource: depthFrag});\r\n  if (depthProgram === null) return;\r\n\r\n  const linesVertex = await fetch(\"assets/engine/shaders/common/lines.vert.glsl\").then(resp => resp.text());\r\n  const linesFragment = await fetch(\"assets/engine/shaders/common/lines.frag.glsl\").then(resp => resp.text());\r\n  const linesProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: linesVertex, fragmentSource: linesFragment});\r\n  if (linesProgram === null) return;\r\n\r\n  async function fetchImage(url: string) {\r\n    return fetch(url).then((resp) => {\r\n      if (resp.ok) {\r\n        return new Promise<HTMLImageElement>((resolve) => {\r\n          const img = new Image();\r\n          img.onload = () => {\r\n            resolve(img);\r\n          };\r\n          img.src = url;\r\n        })\r\n      }\r\n      else {\r\n        throw new Error(`Image '${url}' not found.`);\r\n      }\r\n    });\r\n  }\r\n  // Images\r\n  const albedoMapImg = await fetchImage(\"assets/engine/img/NormalMap.png\");\r\n  const brickwallImg = await fetchImage(\"assets/engine/img/brickwall.jpg\");\r\n  const normalMapImg = await fetchImage(\"assets/engine/img/NormalMap_0.png\");\r\n  const normalMap2Img = await fetchImage(\"assets/engine/img/Normal_Map_1024.png\");\r\n  const displacementMapImg = await fetchImage(\"assets/engine/img/DisplacementMap.png\");\r\n  const skyboxXPosImg = await fetchImage(\"assets/engine/img/skybox_x_pos.png\");\r\n  const skyboxXNegImg = await fetchImage(\"assets/engine/img/skybox_x_neg.png\");\r\n  const skyboxYPosImg = await fetchImage(\"assets/engine/img/skybox_y_pos.png\");\r\n  const skyboxYNegImg = await fetchImage(\"assets/engine/img/skybox_y_neg.png\");\r\n  const skyboxZPosImg = await fetchImage(\"assets/engine/img/skybox_z_pos.png\");\r\n  const skyboxZNegImg = await fetchImage(\"assets/engine/img/skybox_z_neg.png\");\r\n  const colorsImg = await fetchImage(\"assets/engine/img/colors.png\");\r\n\r\n  const PADDING = 1;\r\n\r\n  const paddedImage = function(image: HTMLImageElement) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const {width, height} = image;\r\n    const paddedWidth = width + PADDING * 2;\r\n    const paddedHeight = height + PADDING * 2;\r\n    canvas.width = paddedWidth;\r\n    canvas.height = paddedHeight;\r\n    const ctx = canvas.getContext(\"2d\")!;\r\n    // Draws upper and lower extensions\r\n    /*ctx.drawImage(image, 0, 0, width, 1, 0, 0, paddedWidth, 1);\r\n    ctx.drawImage(image, 0, height - 1, width, 1, 0, height + 1, paddedWidth, 1);\r\n    // Draws left and right extensions\r\n    ctx.drawImage(image, 0, 0, 1, height, 0, 0, 1, paddedHeight);\r\n    ctx.drawImage(image, width - 1, 0, 1, height, width + 1, 0, 1, paddedHeight);*/\r\n    \r\n    // Draws original image\r\n    ctx.drawImage(image, 0, 0, paddedWidth, paddedHeight);\r\n    ctx.drawImage(image, PADDING, PADDING, width, height);\r\n    const data = ctx.getImageData(0, 0, paddedWidth, paddedHeight);\r\n    /*document.body.append(image);\r\n    const img = new Image();\r\n    img.src = canvas.toDataURL();\r\n    document.body.append(img);*/\r\n    return {\r\n      width,\r\n      height,\r\n      paddedWidth,\r\n      paddedHeight, \r\n      data\r\n    };\r\n  }\r\n\r\n  const paddedBrickwallImg = paddedImage(brickwallImg);\r\n  const paddedAlbedoMapImg = paddedImage(albedoMapImg);\r\n  const paddedNormalMap2 = paddedImage(normalMap2Img);\r\n  const paddedColorsImg = paddedImage(colorsImg);\r\n  /*const norm16Extension = gl.getExtension(\"EXT_texture_norm16\");\r\n  if (norm16Extension) {\r\n    console.log(`Extension EXT_texture_norm16 activated.`);\r\n  }*/\r\n\r\n  const textures = WebGLPacketUtilities.createTextures(gl, {\r\n    // albedoMap: {\r\n    //   pixels: albedoMapImg,\r\n    //   width: albedoMapImg.width, height: albedoMapImg.height,\r\n    //   target: TextureTarget.TEXTURE_2D,\r\n    //   type: TexturePixelType.UNSIGNED_BYTE,\r\n    //   format: TexturePixelFormat.RGB,\r\n    //   internalFormat: TextureInternalPixelFormat.RGB,\r\n\r\n    //   min: TextureMinFilter.NEAREST,\r\n    //   mag: TextureMagFilter.NEAREST,\r\n    // },\r\n    albedoMap: {\r\n      pixels: null,\r\n      width: 8, height: 8, depth: 2,\r\n      // pixels: albedoMapImg,\r\n      // width: albedoMapImg.width, height: albedoMapImg.height,\r\n      target: TextureTarget.TEXTURE_2D_ARRAY,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n\r\n      /*wrapS: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapT: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapR: TextureWrapMode.CLAMP_TO_EDGE,*/\r\n\r\n      format: TexturePixelFormat.LUMINANCE,\r\n      internalFormat: TextureInternalPixelFormat.LUMINANCE,\r\n\r\n      // format: TexturePixelFormat.RGB,\r\n      // internalFormat: TextureInternalPixelFormat.RGB\r\n\r\n      min: TextureMinFilter.NEAREST,\r\n      mag: TextureMagFilter.NEAREST,\r\n\r\n      subimages: [\r\n        {\r\n          pixels: new Uint8Array([\r\n            0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC,\r\n            0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF,\r\n            0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC,\r\n            0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF,\r\n            0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC,\r\n            0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF,\r\n            0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC,\r\n            0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF,\r\n          ]),\r\n          xoffset: 0,\r\n          yoffset: 0,\r\n          zoffset: 0,\r\n          width: 8,\r\n          height: 8,\r\n          depth: 1\r\n        },\r\n        {\r\n          pixels: new Uint8Array([\r\n            0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n            0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n            0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n            0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n            0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n            0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n            0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n            0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n          ]),\r\n          xoffset: 0,\r\n          yoffset: 0,\r\n          zoffset: 1,\r\n          width: 8,\r\n          height: 8,\r\n          depth: 1\r\n        }\r\n      ]\r\n    },\r\n    albedoMaps: {\r\n      pixels: null,\r\n      width: paddedBrickwallImg.paddedWidth, height: paddedBrickwallImg.paddedHeight, depth: 4,\r\n      target: TextureTarget.TEXTURE_2D_ARRAY,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGB,\r\n      internalFormat: TextureInternalPixelFormat.RGB,\r\n      subimages: [\r\n        {\r\n          pixels: paddedBrickwallImg.data,\r\n          xoffset: 0,\r\n          yoffset: 0,\r\n          zoffset: 0,\r\n          width: paddedBrickwallImg.paddedWidth,\r\n          height: paddedBrickwallImg.paddedHeight,\r\n          depth: 1\r\n        },\r\n        {\r\n          pixels: paddedAlbedoMapImg.data,\r\n          xoffset: 0,\r\n          yoffset: 0,\r\n          zoffset: 1,\r\n          width: paddedAlbedoMapImg.paddedWidth,\r\n          height: paddedAlbedoMapImg.paddedHeight,\r\n          depth: 1\r\n        },\r\n        {\r\n          pixels: paddedNormalMap2.data,\r\n          xoffset: 0,\r\n          yoffset: 0,\r\n          zoffset: 2,\r\n          width: paddedNormalMap2.paddedWidth,\r\n          height: paddedNormalMap2.paddedHeight,\r\n          depth: 1\r\n        },\r\n        {\r\n          pixels: paddedColorsImg.data,\r\n          xoffset: 0,\r\n          yoffset: 0,\r\n          zoffset: 3,\r\n          width: paddedColorsImg.paddedWidth,\r\n          height: paddedColorsImg.paddedHeight,\r\n          depth: 1\r\n        },\r\n      ],\r\n      // wrapS: TextureWrapMode.CLAMP_TO_EDGE,\r\n      // wrapT: TextureWrapMode.CLAMP_TO_EDGE,\r\n      // wrapR: TextureWrapMode.CLAMP_TO_EDGE,\r\n      min: TextureMinFilter.LINEAR,\r\n      mag: TextureMagFilter.LINEAR,\r\n      // mipmap: false\r\n    },\r\n    normalMap: {\r\n      pixels: normalMapImg,\r\n      width: normalMapImg.width, height: normalMapImg.height,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGB,\r\n      internalFormat: TextureInternalPixelFormat.RGB,\r\n      min: TextureMinFilter.LINEAR_MIPMAP_LINEAR,\r\n      mag: TextureMagFilter.LINEAR\r\n    },\r\n    displacementMap: {\r\n      pixels: displacementMapImg,\r\n      width: displacementMapImg.width, height: displacementMapImg.height,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGBA,\r\n      internalFormat: TextureInternalPixelFormat.RGBA\r\n    },\r\n    skybox: {\r\n      pixels: {\r\n        xPos: skyboxXPosImg, xNeg: skyboxXNegImg,\r\n        yPos: skyboxYPosImg, yNeg: skyboxYNegImg,\r\n        zPos: skyboxZPosImg, zNeg: skyboxZNegImg\r\n      },\r\n      width: skyboxXPosImg.width, height: skyboxXPosImg.height,\r\n      target: TextureTarget.TEXTURE_CUBE_MAP,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGBA,\r\n      internalFormat: TextureInternalPixelFormat.RGBA\r\n    },\r\n    fbColorTex: {\r\n      width: canvas.width, height: canvas.height,\r\n      pixels: null,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGBA,\r\n      internalFormat: TextureInternalPixelFormat.RGBA,\r\n      mag: TextureMagFilter.LINEAR,\r\n      min: TextureMinFilter.LINEAR,\r\n      wrapS: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapT: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapR: TextureWrapMode.CLAMP_TO_EDGE,\r\n    },\r\n    depthTex: {\r\n      width: canvas.width, height: canvas.height,\r\n      pixels: null,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_INT,\r\n      format: TexturePixelFormat.DEPTH_COMPONENT,\r\n      internalFormat: TextureInternalPixelFormat.DEPTH_COMPONENT24,\r\n      wrapS: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapT: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapR: TextureWrapMode.CLAMP_TO_EDGE,\r\n      mag: TextureMagFilter.NEAREST,\r\n      min: TextureMinFilter.NEAREST,\r\n    }\r\n  })!;\r\n\r\n  const {albedoMap, albedoMaps, normalMap, displacementMap, skybox, fbColorTex, depthTex} = textures;\r\n\r\n  const anisotropicTargetTextures = [albedoMaps];\r\n  const anisotropicExtension = gl.getExtension(\"EXT_texture_filter_anisotropic\");\r\n  if (anisotropicExtension) {\r\n    console.log(`Extension EXT_texture_filter_anisotropic activated.`);\r\n    const maxFiltering = gl.getParameter(anisotropicExtension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n    anisotropicTargetTextures.forEach((texture) => {\r\n      const {properties, internalTexture} = texture;\r\n      const {target} = properties!;\r\n      gl.bindTexture(target, internalTexture);\r\n      gl.texParameterf(target, anisotropicExtension.TEXTURE_MAX_ANISOTROPY_EXT, maxFiltering);\r\n    });\r\n  }\r\n\r\n  const cubeGeometry =\r\n    // new QuadGeometry({heightSegments: 64, widthSegments: 64});\r\n    new CubeGeometry({height: 4, width: 4, depth: 4, heightSegments: 32, widthSegments: 32, depthSegments: 32});\r\n    // new SphereGeometry({widthSegments: 64, heightSegments: 64});\r\n    // new CylinderGeometry();\r\n    // new DodecahedronGeometry();\r\n  \r\n  const quad = new QuadGeometry({height: 2, width: 2});\r\n  const quadGeometryBuilder = quad.toBuilder();\r\n  const cube = new Transform();\r\n  cube.setScaling(new Vector3([1, 1, 1]));\r\n  \r\n  const fov = (1 / 3) * Math.PI;\r\n  const aspect = gl.canvas.width / gl.canvas.height;\r\n  const zNear = 0.1;\r\n  const zFar = 100;\r\n\r\n  const camera = new PerspectiveCamera(fov, aspect, zNear, zFar);\r\n  camera.transform.setTranslation(new Vector3([0, 8, 8]));\r\n  camera.transform.lookAt(new Vector3([0, 0, 0]), Space.up);\r\n\r\n  const lightTransform = new Transform();\r\n  lightTransform.setTranslation(new Vector3([0, 2, 2]));\r\n  lightTransform.setScaling(new Vector3([0.2, 0.2, 0.2]));\r\n\r\n  camera.transform.setTranslation(lightTransform.getTranslation(new Vector3()).scale(2));\r\n  camera.transform.lookAt(new Vector3([0, 0, 0]), Space.up);\r\n\r\n  const viewDirectionProjectionInverse = camera.projection.clone().mult(Matrix4.identity().setRotation(camera.view.getRotation())).invert();\r\n/*\r\n  addWidgets([\r\n    ...createRotationWidgets(cube, \"Cube\"),\r\n    ...createPositionWidgets(cube, \"Cube\"),\r\n    ...createRelativePositionWidgets(cube, \"Cube\"),\r\n    ...createRelativePositionWidgets(camera.transform, \"Camera\"),\r\n  ]);*/\r\n\r\n  const cubeGeometryBuilder = cubeGeometry.toBuilder();\r\n  const cubeVerticesArray = cubeGeometryBuilder.verticesArray();\r\n  const cubeIndicesArray = cubeGeometryBuilder.trianglesIndicesArray();\r\n  const cubeNormalsArray = cubeGeometryBuilder.normalsArray();\r\n  const cubeUVsArray= cubeGeometryBuilder.uvsArray();\r\n  const cubeTangentsArray = cubeGeometryBuilder.tangentsArray();\r\n  const cubeLinesArray = cubeGeometryBuilder.verticesArray();\r\n\r\n  const cubeGeometryBuffer = new GeometryBuffer({\r\n    a_position: { array: cubeVerticesArray, type: AttributeDataType.VEC3 },\r\n    a_tangent: { array: cubeTangentsArray, type: AttributeDataType.VEC3 },\r\n    a_normal: { array: cubeNormalsArray, type: AttributeDataType.VEC3 },\r\n    a_uv: { array: cubeUVsArray, type: AttributeDataType.VEC2 },\r\n  }, cubeIndicesArray, false);\r\n\r\n  const cubeVertices = cubeGeometryBuffer.getAttribute(\"a_position\")!;\r\n  const cubeIndices = cubeGeometryBuffer.indices!;\r\n  const cubeNormals = cubeGeometryBuffer.getAttribute(\"a_normal\")!;\r\n  const cubeUVs = cubeGeometryBuffer.getAttribute(\"a_uv\")!;\r\n  const cubeTangents = cubeGeometryBuffer.getAttribute(\"a_tangent\")!;\r\n  const cubeColors = cubeGeometryBuffer.getAttribute(\"a_normal\")!;\r\n  \r\n  //const cubeLines = cubeGeometryBuffer.getAttribute(\"a_lines\")!;\r\n\r\n  // const blob = cubeGeometryBuffer.toBlob();\r\n  // const anchor = document.createElement(\"a\");\r\n  // anchor.download = \"dat.bin\";\r\n  // anchor.href = URL.createObjectURL(blob);\r\n  // anchor.click();\r\n\r\n  // console.log(cubeGeometryBuffer);\r\n\r\n  // const cubeGeometryBuffer = await GeometryBuffer.fromBlob(file!);\r\n\r\n  // const cubeVertices = cubeGeometryBuffer.getAttribute(\"a_position\")!;\r\n  // const cubeIndices = cubeGeometryBuffer.indices!;\r\n  // const cubeNormals = cubeGeometryBuffer.getAttribute(\"a_normal\")!;\r\n  // const cubeUVs = cubeGeometryBuffer.getAttribute(\"a_uv\")!;\r\n  // const cubeTangents = cubeGeometryBuffer.getAttribute(\"a_tangent\")!;\r\n\r\n  const phongCubePacketProperties: PacketProperties = {\r\n    program: phongProgram,\r\n    vertexArray: {\r\n      vertexBuffers: [\r\n        {\r\n          interleaved: false\r\n        },\r\n        {\r\n          usage: BufferDataUsage.DYNAMIC_READ\r\n        },\r\n      ],\r\n      vertexAttributes: {\r\n        a_position: { buffer: 0, type: AttributeDataType.VEC3, componentType: DataComponentType.FLOAT, byteLength: cubeNormals.array.byteLength },\r\n        a_tangent: { buffer: 0, type: AttributeDataType.VEC3, componentType: DataComponentType.FLOAT, byteLength: cubeTangents.array.byteLength },\r\n        a_normal: { ...cubeNormals, buffer: 0 },\r\n        a_uv: { ...cubeUVs, buffer: 0 },\r\n        a_color: { buffer: 1, type: AttributeDataType.VEC3, componentType: DataComponentType.FLOAT, byteLength: cubeColors.array.byteLength },\r\n      },\r\n      elementIndices: cubeGeometryBuffer.indices\r\n    },\r\n    uniformBuffers: [\r\n      {\r\n        usage: BufferDataUsage.DYNAMIC_READ\r\n      },\r\n      {\r\n        usage: BufferDataUsage.DYNAMIC_READ\r\n      }\r\n    ],\r\n    uniformBlocks: {\r\n      subTexture: {\r\n        uniforms: {\r\n          u_xOffset: { value: PADDING / paddedBrickwallImg.paddedWidth },\r\n          u_yOffset: { value: PADDING / paddedBrickwallImg.paddedHeight },\r\n          u_zOffset: { value: 1 },\r\n          u_xScaling: { value: paddedAlbedoMapImg.width / paddedBrickwallImg.paddedWidth },\r\n          u_yScaling: { value: paddedAlbedoMapImg.height / paddedBrickwallImg.paddedHeight }\r\n        }\r\n      },\r\n      viewBlock: {\r\n        buffer: 0,\r\n        /*uniforms: {\r\n          u_view: { value: camera.view.array },\r\n          u_projection: { value: camera.projection.array },\r\n        }*/\r\n      },\r\n      modelBlock: {\r\n        buffer: 0,\r\n        /*uniforms: {\r\n          \"models[0].u_model\": { value: cube.matrix.array },\r\n          \"models[0].u_modelView\": { value: camera.view.mult(cube.matrix).array },\r\n          \"models[0].u_normal\": { value: camera.view.mult(cube.matrix).invert().transpose().array }\r\n        }*/\r\n      },\r\n      lightsBlock: {\r\n        buffer: 0,\r\n        /*uniforms: {\r\n          \"lights[0].u_lightWorldPos\": { value: Array.from(lightTransform.getTranslation(new Vector3())) },\r\n          \"lights[0].u_lightDirection\": { value: Array.from(lightTransform.getBackward(new Vector3())) },\r\n          \"lights[0].u_cutOff\": { value: (2 / 360) * Math.PI },\r\n          \"lights[0].u_lightColor\": { value: Array.from(Color.RED) }\r\n        }*/\r\n      },\r\n      phongBlock: {\r\n        buffer: 1,\r\n        /*uniforms: {\r\n          \"phong.u_ambientColor\": { value: [0.1, 0.1, 0.1] },\r\n          \"phong.u_diffuseColor\": { value: [0.8, 0, 0] },\r\n          \"phong.u_specularColor\": { value: [1, 1, 1] },\r\n          \"phong.u_ambientFactor\": { value: 0.0008 },\r\n          \"phong.u_diffuseFactor\": { value: 1 },\r\n          \"phong.u_specularFactor\": { value: 1 },\r\n          \"phong.u_shininess\": { value: 36 },\r\n          \"phong.u_constant\": { value: 1 }, \r\n          \"phong.u_linear\": { value: 0.09 },\r\n          \"phong.u_quadratic\": { value: 0.032 }\r\n        }*/\r\n      }\r\n    },\r\n    uniforms: {\r\n      u_albedoMap: { value: albedoMap },\r\n      u_normalMap: { value: normalMap },\r\n      u_displacementMap: { value: displacementMap },\r\n      u_albedoMaps: { value: albedoMaps }\r\n    },\r\n    drawCommand: {\r\n      mode: DrawMode.TRIANGLES,\r\n      elementsCount: cubeGeometryBuffer.indices!.length,\r\n    }\r\n  };\r\n\r\n  const phongPacketInitValues = <PacketValues>{\r\n    program: phongProgram,\r\n    uniformBlocks: {\r\n      viewBlock: {\r\n        uniforms: {\r\n          u_view: { value: camera.view.array },\r\n          u_projection: { value: camera.projection.array },\r\n        }\r\n      },\r\n      modelBlock: {\r\n        uniforms: {\r\n          \"models[0].u_model\": { value: cube.matrix.array },\r\n          \"models[0].u_modelView\": { value: camera.view.mult(cube.matrix).array },\r\n          \"models[0].u_normal\": { value: camera.view.mult(cube.matrix).invert().transpose().array }\r\n        }\r\n      },\r\n      lightsBlock: {\r\n        uniforms: {\r\n          \"lights[0].u_lightWorldPos\": { value: Array.from(lightTransform.getTranslation(new Vector3())) },\r\n          \"lights[0].u_lightDirection\": { value: Array.from(lightTransform.getBackward(new Vector3())) },\r\n          \"lights[0].u_cutOff\": { value: (2 / 360) * Math.PI },\r\n          \"lights[0].u_lightColor\": { value: /*[1, 0.8, 0.8]*/Array.from(Color.RED) }\r\n        }\r\n      },\r\n      phongBlock: {\r\n        uniforms: {\r\n          \"phong.u_ambientColor\": { value: [0.1, 0.1, 0.1] },\r\n          \"phong.u_diffuseColor\": { value: [0.8, 0, 0] },\r\n          \"phong.u_specularColor\": { value: [1, 1, 1] },\r\n          \"phong.u_ambientFactor\": { value: 0.0008 },\r\n          \"phong.u_diffuseFactor\": { value: 1 },\r\n          \"phong.u_specularFactor\": { value: 1 },\r\n          \"phong.u_shininess\": { value: 36 },\r\n          \"phong.u_constant\": { value: 1 }, \r\n          \"phong.u_linear\": { value: 0.09 },\r\n          \"phong.u_quadratic\": { value: 0.032 }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let phongCubePacket = WebGLPacketUtilities.createPacket(gl, phongCubePacketProperties)!;\r\n  \r\n  WebGLVertexArrayUtilities.setVertexArrayBufferData(gl, phongCubePacket.vertexArray.verticesBuffers[1]!, cubeColors.array);\r\n  WebGLVertexArrayUtilities.setVertexArrayBufferData(gl, phongCubePacket.vertexArray.verticesBuffers[0]!, new Uint8Array(cubeGeometryBuffer.buffer));\r\n  WebGLVertexArrayUtilities.setVertexArrayValues(gl, phongCubePacket.vertexArray, {\r\n    attributes: {\r\n      a_position: {\r\n        array: cubeVertices.array\r\n      }\r\n    }\r\n  });\r\n\r\n  WebGLUniformBlockUtilities.setUniformBufferData(gl,\r\n    phongCubePacket.uniformBlocks!.phongBlock!.buffer!,\r\n    Color.lerp(Color.WHITE, Color.GREEN, 0.5).array,\r\n    phongCubePacket.uniformBlocks!.phongBlock!.layout[\"phong.u_ambientColor\"]!.byteOffset!,\r\n  );\r\n\r\n  const linesProperties: PacketProperties = {\r\n    program: linesProgram,\r\n    vertexArray: {\r\n      vertexAttributes: {\r\n        a_position: {\r\n          array: cubeLinesArray,\r\n          type: AttributeDataType.VEC3\r\n        }\r\n      }\r\n    },\r\n    uniformBuffers: [\r\n      phongCubePacket.uniformBlocks!.modelBlock.buffer!,\r\n      phongCubePacket.uniformBlocks!.viewBlock.buffer!\r\n    ],\r\n    uniformBlocks: {\r\n      modelBlock: { buffer: 0 },\r\n      viewBlock: { buffer: 1 }\r\n    },\r\n    uniforms: {\r\n      u_color: {\r\n        value: new Float32Array([1, 0, 0])\r\n      }\r\n    },\r\n    drawCommand: {\r\n      mode: DrawMode.LINES,\r\n      elementsCount: cubeLinesArray.length / 2\r\n    }\r\n  };\r\n\r\n  const basicPacketProperties: PacketProperties = {\r\n    program: basicProgram,\r\n    vertexArray: {\r\n      vertexBuffers: [\r\n        phongCubePacket.vertexArray.verticesBuffers[0]\r\n      ],\r\n      elementBuffer: phongCubePacket.vertexArray.elementBuffer\r\n    },\r\n    uniformBuffers: [\r\n      phongCubePacket.uniformBlocks!.viewBlock.buffer!\r\n    ],\r\n    uniformBlocks: {\r\n      basicModelBlock: {\r\n        uniforms: {\r\n          u_model: { value: lightTransform.matrix.array },\r\n          u_color: { value: [1, 1, 0] }\r\n        }\r\n      },\r\n      viewBlock: {\r\n        buffer: 0\r\n      }\r\n    },\r\n    drawCommand: {\r\n      mode: DrawMode.TRIANGLES,\r\n      elementsCount: phongCubePacket.drawCommand.elementsCount\r\n    }\r\n  };\r\n\r\n  const quadIndices = quadGeometryBuilder.trianglesIndicesArray();\r\n  const quadVertices = quadGeometryBuilder.verticesArray();\r\n  const quadUVs = quadGeometryBuilder.uvsArray();\r\n  const quadWorld = new Matrix4().setIdentity();\r\n\r\n  const skyboxPacketProperties: PacketProperties = {\r\n    program: skyboxProgram,\r\n    vertexArray: {\r\n      vertexAttributes: {\r\n        a_position: { array: quadVertices, type: AttributeDataType.VEC3 },\r\n      },\r\n      elementIndices: quadIndices\r\n    },\r\n    uniforms: {\r\n      u_world: { value: quadWorld.array },\r\n      u_viewDirectionProjectionInverse: { value: viewDirectionProjectionInverse.array }, \r\n      u_skybox: { value: skybox },\r\n    },\r\n    drawCommand: {\r\n      mode: DrawMode.TRIANGLES,\r\n      elementsCount: quadIndices.length\r\n    }\r\n  };\r\n\r\n  const depthPacketProperties: PacketProperties = {\r\n    program: depthProgram,\r\n    vertexArray: {\r\n      vertexAttributes: {\r\n        a_position: { array: quadVertices, type: AttributeDataType.VEC3 },\r\n        a_uv: { array: quadUVs, type: AttributeDataType.VEC2 },\r\n      },\r\n      elementIndices: quadIndices\r\n    },\r\n    uniforms: {\r\n      u_depthWorld: { value: quadWorld.array },\r\n      u_depthTex: { value: depthTex }\r\n    },\r\n    drawCommand: {\r\n      mode: DrawMode.TRIANGLES,\r\n      elementsCount: quadIndices.length\r\n    }\r\n  };\r\n\r\n  const texPacketProperties: PacketProperties = {\r\n    program: texProgram,\r\n    vertexArray: {\r\n      vertexAttributes: {\r\n        a_position: { array: quadVertices, type: AttributeDataType.VEC3 },\r\n        a_uv: { array: quadUVs, type: AttributeDataType.VEC2 },\r\n      },\r\n      elementIndices: quadIndices\r\n    },\r\n    uniforms: {\r\n      u_world: { value: quadWorld.array },\r\n      u_tex: { value: fbColorTex }\r\n    },\r\n    drawCommand: {\r\n      mode: DrawMode.TRIANGLES,\r\n      elementsCount: quadIndices.length\r\n    }\r\n  };\r\n\r\n  const linesPacket = WebGLPacketUtilities.createPacket(gl, linesProperties)!;\r\n  const basicPacket = WebGLPacketUtilities.createPacket(gl, basicPacketProperties)!;\r\n  const skyboxPacket = WebGLPacketUtilities.createPacket(gl, skyboxPacketProperties)!;\r\n  const depthPacket = WebGLPacketUtilities.createPacket(gl, depthPacketProperties)!;\r\n  const texPacket = WebGLPacketUtilities.createPacket(gl, texPacketProperties)!;\r\n\r\n  const framebuffer = WebGLFramebufferUtilities.createFramebuffer(gl)!;\r\n  const maxSamples = WebGLRendererUtilities.getMaxSamples(gl);\r\n  \r\n  WebGLFramebufferUtilities.attachRenderbuffer(\r\n    gl, framebuffer,\r\n    {\r\n      renderbuffer: WebGLFramebufferUtilities.createRenderbuffer(gl, {\r\n        internalFormat: RenderbufferPixelFormat.DEPTH_COMPONENT24,\r\n        width: canvas.width,\r\n        height: canvas.height,\r\n        samples: maxSamples\r\n      })!,\r\n      attachment: FramebufferAttachment.DEPTH_ATTACHMENT\r\n    },\r\n    {\r\n      renderbuffer: WebGLFramebufferUtilities.createRenderbuffer(gl, {\r\n        internalFormat: RenderbufferPixelFormat.RGBA8,\r\n        width: canvas.width,\r\n        height: canvas.height,\r\n        samples: maxSamples\r\n      })!,\r\n      attachment: FramebufferAttachment.COLOR_ATTACHMENT0,\r\n    }\r\n  );\r\n\r\n  const postFramebuffer = WebGLFramebufferUtilities.createFramebuffer(gl)!;\r\n\r\n  WebGLFramebufferUtilities.attachTexture(\r\n    gl, postFramebuffer, \r\n    {\r\n      textureTarget: FramebufferTextureTarget.TEXTURE_2D,\r\n      texture: fbColorTex,\r\n      attachment: FramebufferAttachment.COLOR_ATTACHMENT0\r\n    },\r\n    {\r\n      textureTarget: FramebufferTextureTarget.TEXTURE_2D,\r\n      texture: depthTex,\r\n      attachment: FramebufferAttachment.DEPTH_ATTACHMENT\r\n    }\r\n  );\r\n\r\n  WebGLRendererUtilities.viewport(gl, 0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n  // WebGLRendererUtilities.frontFace(gl, WindingOrder.CW);\r\n  WebGLRendererUtilities.enable(gl, Capabilities.DEPTH_TEST);\r\n  WebGLRendererUtilities.enable(gl, Capabilities.CULL_FACE);\r\n  WebGLRendererUtilities.enable(gl, Capabilities.BLEND);\r\n  WebGLRendererUtilities.blendFunction(gl, BlendingMode.SRC_ALPHA, BlendingMode.ONE_MINUS_SRC_ALPHA);\r\n  \r\n  let lastFrameTime = 0;\r\n  let deltaTime = 0;\r\n\r\n  let t = 0;\r\n  let direction = 1;\r\n  \r\n  let initRotation = cube.getRotation(new Quaternion());\r\n  let initPosition = cube.getTranslation(new Vector3());\r\n\r\n  const targetPosition = new Vector3([2, -2, -2]);\r\n  const targetRotation = Quaternion.fromAxisAngle(Space.down, Math.PI / 3);\r\n\r\n  Input.initialize(canvas);\r\n  \r\n  WebGLFramebufferUtilities.unbindFramebuffer(gl);\r\n\r\n  const cameraControl = new FreeCameraControl(camera);\r\n\r\n  // WebGLProgramUtilities.recompileProgram(gl, phongProgram, {fragmentSource: phong2Frag});\r\n  // phongCubePacket = WebGLPacketUtilities.createPacket(gl, phongCubePacketProperties)!;\r\n  \r\n  WebGLPacketUtilities.setPacketValues(gl, phongCubePacket, phongPacketInitValues);\r\n  WebGLRendererUtilities.clearColor(gl, Color.BLACK.normalize());\r\n  \r\n  render = function(frameTime: number) {\r\n    if (paused) {\r\n      return;\r\n    }\r\n    \r\n    frameTime *= 0.001;\r\n    deltaTime = frameTime - lastFrameTime;\r\n    lastFrameTime = frameTime;\r\n    fps = 1 / deltaTime;\r\n\r\n    fpsElement.textContent = fps.toFixed(1);\r\n\r\n    cameraControl.update(deltaTime);\r\n    lightTransform.setMatrix(camera.transform.matrix);\r\n\r\n    cube.rotate(Quaternion.fromAxisAngle(Space.down, Math.PI / 128));\r\n    \r\n    t += deltaTime * direction * 0.5;\r\n    if (t > 1 || t < 0) {\r\n      direction *= -1;\r\n    }\r\n    \r\n    \r\n    WebGLRendererUtilities.clear(gl, BufferMask.COLOR_BUFFER_BIT | BufferMask.DEPTH_BUFFER_BIT);\r\n    \r\n    viewDirectionProjectionInverse.copy(camera.projection).mult(new Matrix4().setIdentity().setRotation(camera.view.getRotation())).invert();\r\n\r\n    // Framebuffer\r\n\r\n    WebGLRendererUtilities.viewport(gl, 0, 0, canvas.width, canvas.height);\r\n\r\n    WebGLFramebufferUtilities.bindFramebuffer(gl, framebuffer);\r\n\r\n    WebGLRendererUtilities.clear(gl, BufferMask.COLOR_BUFFER_BIT | BufferMask.DEPTH_BUFFER_BIT);\r\n    \r\n    WebGLRendererUtilities.depthFunction(gl, TestFunction.LEQUAL);\r\n\r\n    WebGLPacketUtilities.drawPacket(gl, skyboxPacket);\r\n\r\n    WebGLRendererUtilities.depthFunction(gl, TestFunction.LESS);\r\n\r\n    WebGLPacketUtilities.setPacketValues(gl, phongCubePacket, {\r\n      uniformBlocks: {\r\n        modelBlock: {\r\n          uniforms: {\r\n            \"models[0].u_model\": { value: cube.matrix.array },\r\n            \"models[0].u_modelView\": { value: camera.view.mult(cube.matrix).array },\r\n            \"models[0].u_normal\": { value: camera.view.mult(cube.matrix).invert().transpose().array },\r\n          }\r\n        },\r\n        viewBlock: {\r\n          uniforms: {\r\n            u_view: { value: camera.view.array },\r\n            u_projection: { value: camera.projection.array },\r\n          }\r\n        },\r\n        lightsBlock: {\r\n          uniforms: {\r\n            \"lights[0].u_lightWorldPos\": { value: Array.from(lightTransform.getTranslation(new Vector3())) },\r\n            \"lights[0].u_lightDirection\": { value: Array.from(lightTransform.getBackward(new Vector3())) },\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // WebGLPacketUtilities.drawPacket(gl, basicPacket);\r\n    // WebGLPacketUtilities.drawPacket(gl, linesPacket);\r\n    WebGLPacketUtilities.drawPacket(gl, phongCubePacket);\r\n    \r\n    WebGLPacketUtilities.setPacketValues(gl, skyboxPacket, {\r\n      uniforms: {\r\n        u_viewDirectionProjectionInverse: { value: viewDirectionProjectionInverse.array }\r\n      }\r\n    });\r\n    \r\n    // WebGLRendererUtilities.depthFunction(gl, TestFunction.LEQUAL);\r\n    // WebGLPacketUtilities.drawPacket(gl, skyboxPacket);\r\n    \r\n    // Framebuffer\r\n    WebGLFramebufferUtilities.blit(gl, framebuffer, postFramebuffer,\r\n      [0, 0, canvas.width, canvas.height],\r\n      [0, 0, canvas.width, canvas.height],\r\n      BufferMask.COLOR_BUFFER_BIT,\r\n      TextureMagFilter.LINEAR\r\n    );\r\n    \r\n    WebGLFramebufferUtilities.blit(gl, framebuffer, postFramebuffer,\r\n      [0, 0, canvas.width, canvas.height],\r\n      [0, 0, canvas.width, canvas.height],\r\n      BufferMask.DEPTH_BUFFER_BIT,\r\n      TextureMagFilter.NEAREST\r\n    );\r\n\r\n    WebGLFramebufferUtilities.unbindFramebuffer(gl);\r\n    \r\n    WebGLPacketUtilities.drawPacket(gl, texPacket);\r\n\r\n    const newWidth = canvas.width / 4;\r\n    const newHeight = canvas.height / 4;\r\n    WebGLRendererUtilities.viewport(gl, 0, canvas.height - newHeight, newWidth, newHeight);\r\n\r\n    WebGLRendererUtilities.depthFunction(gl, TestFunction.ALWAYS);\r\n\r\n    WebGLPacketUtilities.drawPacket(gl, depthPacket);\r\n\r\n    Input.clear();\r\n\r\n    requestAnimationFrame(render);\r\n  }\r\n\r\n  /*const stream = gl.canvas.captureStream(60);\r\n  const rec = new MediaRecorder(stream, {\r\n    mimeType: \"video/webm; codecs=vp9\",\r\n    audioBitsPerSecond: 0,\r\n    videoBitsPerSecond: canvas.width * canvas.height * 24 * 60\r\n  });\r\n\r\n  const chunks: BlobPart[] = [];\r\n  rec.addEventListener(\"dataavailable\", (event) => {\r\n    chunks.push(event.data);\r\n  });\r\n  rec.addEventListener(\"stop\", () => {\r\n    const blob = new Blob(chunks, {type: \"video/webm; codecs=vp9\"});\r\n    const anchor = document.createElement(\"a\");\r\n    anchor.download = \"recorded.webm\";\r\n    anchor.href = URL.createObjectURL(blob);\r\n    anchor.click();\r\n  });\r\n  rec.start();\r\n\r\n  setTimeout(() => {\r\n    rec.stop();\r\n  }, 5_000);*/\r\n  \r\n  requestAnimationFrame(render);\r\n  \r\n  // const saveSVG = document.querySelector<SVGSVGElement>(\"svg#save\")!;\r\n  // const getSVGImageData = (svg: SVGSVGElement) => new Promise((resolve: (value: string) => void) => {\r\n  //   const url = URL.createObjectURL(new Blob([svg.outerHTML], {\r\n  //     type: \"image/svg+xml\"\r\n  //   }));\r\n  //   const svgImage = document.createElement(\"img\");\r\n  //   document.body.appendChild(svgImage);\r\n  //   svgImage.onload = () => {\r\n  //     const canvas = document.createElement(\"canvas\");\r\n  //     const ctx = canvas.getContext(\"2d\", {alpha: true})!;\r\n  //     canvas.width = svgImage.clientWidth;\r\n  //     canvas.height = svgImage.clientHeight;\r\n  //     ctx.drawImage(svgImage, 0, 0);\r\n  //     const imgData = canvas.toDataURL(\"image/png\");\r\n  //     resolve(imgData);\r\n  //     URL.revokeObjectURL(url);\r\n  //     svgImage.remove();\r\n  //   };\r\n  //   svgImage.src = url;\r\n  // });\r\n\r\n  // getSVGImageData(saveSVG).then(\r\n  //   (data: string) => {\r\n  //     const img = new Image();\r\n  //     img.src = data;\r\n  //     document.body.append(img);\r\n  //   }\r\n  // )\r\n}","import { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Camera } from \"./Camera\";\r\n\r\nexport { PerspectiveCamera };\r\n\r\ninterface PerspectiveCameraConstructor {\r\n    prototype: PerspectiveCamera;\r\n    new(fov: number, aspect: number, zNear: number, zFar: number): PerspectiveCamera;\r\n}\r\n\r\ninterface PerspectiveCamera extends Camera {\r\n    setValues(fov: number, aspect: number, zNear: number, zFar: number): PerspectiveCamera\r\n}\r\n\r\nclass PerspectiveCameraBase extends Camera {\r\n    \r\n    constructor(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number) {\r\n        super(Matrix4.perspective(fov, aspect, zNear, zFar));\r\n    }\r\n\r\n    setValues(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number): PerspectiveCamera\r\n    {\r\n        this.projection.setPerspective(fov, aspect, zNear, zFar);\r\n        this.updateFrustum();\r\n        return this;\r\n    }\r\n}\r\n\r\nvar PerspectiveCamera: PerspectiveCameraConstructor = PerspectiveCameraBase;","import { Vector3 } from \"engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Space } from \"../../../../libs/maths/geometry/space/Space\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Frustum } from \"../../../../libs/physics/collisions/Frustum\";\r\nimport { Mesh } from \"../objects/meshes/Mesh\";\r\nimport { Object3D, Object3DBase } from \"../objects/Object3D\";\r\n\r\nexport { Camera };\r\n\r\ninterface CameraConstructor {\r\n  prototype: Camera;\r\n  new(): Camera;\r\n  new(projection: Matrix4): Camera;\r\n}\r\n\r\ninterface Camera extends Object3D {\r\n  readonly uuid: UUID;\r\n  readonly viewProjection: Matrix4;\r\n  readonly projection: Matrix4;\r\n  readonly view: Matrix4;\r\n  readonly frustum: Frustum;\r\n  isViewing(mesh: Mesh): boolean;\r\n  updateFrustum(): void;\r\n  getFront(vector: Vector3): Vector3;\r\n}\r\n\r\nclass CameraBase extends Object3DBase {\r\n    readonly uuid: UUID;\r\n    readonly projection: Matrix4;\r\n    readonly frustum: Frustum;\r\n  \r\n    constructor()\r\n    constructor(projection: Matrix4)\r\n    constructor(projection?: Matrix4) {\r\n      super();\r\n      this.uuid = UUIDGenerator.newUUID();\r\n      this.projection = projection || new Matrix4();\r\n      this.frustum = new Frustum().setFromMatrix(this.viewProjection);\r\n    }\r\n\r\n    getFront(vector: Vector3): Vector3 {\r\n      return this.transform.getBackward(vector);\r\n    }\r\n\r\n    get view(): Matrix4 {\r\n      return this.transform.matrix.clone().invert();\r\n    }\r\n\r\n    get viewProjection(): Matrix4 {\r\n      return this.projection.clone().mult(this.view);\r\n    }\r\n\r\n    isViewing(mesh: Mesh): boolean {\r\n      return true;\r\n    }\r\n\r\n    updateFrustum(): void {\r\n      this.frustum.setFromMatrix(this.viewProjection);\r\n    }\r\n}\r\n\r\nvar Camera: CameraConstructor = CameraBase;","import { Transform } from \"../../../general/Transform\";\r\n\r\nexport { Object3D };\r\nexport { Object3DBase };\r\n\r\ninterface Object3D {\r\n    transform: Transform;\r\n}\r\n\r\nclass Object3DBase implements Object3D {\r\n    readonly transform: Transform;\r\n\r\n    constructor() {\r\n        this.transform = new Transform(this);\r\n    }\r\n}","import { multiDraw } from \"./src/samples/scenes/MultiDraw\";\r\nimport { Entity } from \"./src/engine/core/general/Entity\";\r\nimport { Scene } from \"./src/engine/core/general/Scene\";\r\nimport { FaceHalfEdgesIterator, FaceVerticesIterator, Vertex, VertexFacesIterator } from \"./src/engine/core/rendering/scenes/geometries/GeometryBuilder\";\r\nimport { QuadGeometry } from \"./src/engine/core/rendering/scenes/geometries/lib/QuadGeometry\";\r\nimport { Matrix3 } from \"./src/engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"./src/engine/libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector2 } from \"./src/engine/libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"./src/engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector4 } from \"./src/engine/libs/maths/algebra/vectors/Vector4\";\r\nimport { GOLDEN_RATIO } from \"./src/engine/libs/maths/geometry/GeometryConstants\";\r\nimport { Triangle } from \"./src/engine/libs/maths/geometry/primitives/Triangle\";\r\nimport { Space } from \"./src/engine/libs/maths/geometry/space/Space\";\r\nimport { buildArrayFromIndexedArrays } from \"./src/engine/utils/Snippets\";\r\nimport { start } from \"./src/samples/scenes/SimpleScene\";\r\nimport { octree } from \"./src/samples/scenes/Octree\";\r\nimport { deferred } from \"./src/samples/scenes/Deferred\";\r\nimport { helpers } from \"./src/samples/scenes/Helpers\";\r\n/*\r\nfunction windingOrder(v0: Vector3, v1: Vector3, v2: Vector3) {\r\n    const triangle = new Triangle(v0, v1, v2);\r\n    const centroid = triangle.getMidpoint(new Vector3());\r\n    const normal = triangle.getNormal(new Vector3());\r\n    \r\n    const e1 = v1.clone().sub(v0);\r\n    const e2 = e1.clone().cross(normal);\r\n\r\n    e1.normalize();\r\n    e2.normalize();\r\n\r\n    const v0_centered = v0.clone().sub(centroid);\r\n    const v1_centered = v1.clone().sub(centroid);\r\n    const v2_centered = v2.clone().sub(centroid);\r\n\r\n    const v0_t1 = e1.dot(v0_centered);\r\n    const v0_t2 = e2.dot(v0_centered);\r\n\r\n    const v1_t1 = e1.dot(v1_centered);\r\n    const v1_t2 = e2.dot(v1_centered);\r\n\r\n    const v2_t1 = e1.dot(v2_centered);\r\n    const v2_t2 = e2.dot(v2_centered);\r\n\r\n    const det = (v1_t1 - v0_t1) * (v2_t2 - v0_t2) - (v1_t2 - v0_t2) * (v2_t1 - v0_t1);\r\n    console.log(det < 0 ? \"CW\" : \"CCW\");\r\n\r\n    // const v0_out = new Vector2([v0_t1, v0_t2]);\r\n    // const v1_out = new Vector2([v1_t1, v1_t2]);\r\n    // const v2_out = new Vector2([v2_t1, v2_t2]);\r\n    // const v0_angle = Math.atan2(v0_out.y, v0_out.x);\r\n    // const v1_angle = Math.atan2(v1_out.y, v1_out.x);\r\n    // const v2_angle = Math.atan2(v2_out.y, v2_out.x);\r\n    \r\n    // const angles = [v0_angle, v1_angle, v2_angle];\r\n}*/\r\n\r\nexport async function main() {\r\n    //instanced();\r\n    //wireframe();\r\n\r\n    /*const myWorker = new Worker(\"./worker.js\");\r\n    const sab = new SharedArrayBuffer(1024);\r\n    const array = new Uint32Array(sab);\r\n    myWorker.addEventListener(\"message\", (event) => {\r\n        console.log(`Received back: ${array[10]}`);\r\n    });\r\n\r\n    myWorker.postMessage(sab);*/\r\n\r\n    //helpers();\r\n    //deferred();\r\n    //octree();\r\n    start();\r\n    //multiDraw();\r\n\r\n    //startMaps();\r\n\r\n    // const button = document.createElement(\"button\");\r\n    // button.textContent = \"Get bin\";\r\n    // document.body.insertAdjacentElement(\"beforebegin\", button);\r\n    // button.onclick = () => {\r\n    //     const anchor = document.createElement(\"a\");\r\n    //     const myData = new Float32Array([32.20, 1]);\r\n    //     const myBlob = new Blob([myData]);\r\n    //     anchor.download = \"dat.bin\";\r\n    //     anchor.href = URL.createObjectURL(myBlob);\r\n    //     anchor.click();\r\n    // };\r\n    \r\n    // const input = document.createElement(\"input\");\r\n    // input.type = \"file\";\r\n    // input.oninput = () => {\r\n    //     if (input.files) {\r\n    //         Array.from(input.files).forEach((file) => {\r\n    //             file.arrayBuffer().then((arr) => {\r\n    //                 console.log(Array.from(new Float32Array(arr)).map(val => val.toFixed(3)));\r\n    //             });\r\n    //         });\r\n    //     }\r\n    // };\r\n    // document.body.insertAdjacentElement(\"beforebegin\", input);\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Injector","constructor","args","this","_defaultCtor","defaultCtor","_onDefaultOverride","onDefaultOverride","_constructors","Map","overrideDefaultCtor","forceQualifier","qualifier","_forcedQualifier","unforceQualifier","getConstructor","qualifierValue","Error","inject","Array","from","register","has","set","MathError","name","Vector2Base","array","Float32Array","length","values","x","y","setValues","equals","vec","v","copy","clone","setUnit","setZeros","add","addScalar","k","sub","lerp","t","clamp","min","max","l","g","Math","multScalar","cross","a","b","dot","sqrt","lengthSquared","dist","dx","dy","distSquared","normalize","lenSq","len","Number","EPSILON","negate","mult","arg0","Vector2","m","addScaled","writeIntoArray","out","offset","readFromArray","arr","copyAndSub","vecA","vecB","ctor","Vector3Base","toString","join","static","vectorA","vectorB","temp","Vector3","acos","z","vector","to","scale","t0","t1","t2","distance","dz","hypot","distanceSquared","toSpherical","center","thisArray","centerArray","roh","theta","phi","atan2","toCartesian","sin","cos","mat","copyAndCross","iterator","i","next","done","undefined","Key","Space","origin","right","left","up","down","forward","backward","KEYS_COUNT","keys","KeyModifier","MouseButton","MOUSE_BUTTONS_COUNT","MOUSE_BUTTONS_INDICES","freeze","reduce","map","button","index","assign","KEYS_INDICES","Input","keyFlags","fill","mouseFlags","pointerPosition","wheelDelta","canvas","canvasRectangle","initialize","getBoundingClientRect","addEventListener","getCanvasRect","rect","clear","handleEvent","event","eventIndex","type","canvasRect","clientX","clientY","top","deltaY","getKey","getKeyUp","getKeyDown","getMouseButton","getPointerPosition","getPointerScreenPosition","positionAray","width","height","getWheelDelta","getMouseButtonDown","getMouseButtonUp","tempVector1","tempVector2","tempVector3","PoolAutoExtendPolicy","StackPool","policy","autoExtendPolicy","AUTO_EXTEND_ONE","autoExtendTicks","autoExtend","extend","AUTO_EXTEND_POW2","pow","acquire","count","release","options","super","objects","size","target","slice","console","warn","push","PI","_bytes","ArrayBuffer","BYTES_PER_ELEMENT","_floatView","_intView","Uint32Array","Matrix3Base","checkArray","row1","row","row2","row3","col1","col","col2","col3","m11","val","m12","m13","m21","m22","m23","m31","m32","m33","getValues","other","setIdentity","det","trace","transpose","invert","t11","t12","t13","t21","t22","t23","t31","t32","t33","d","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","angle","setRotationX","cosAngle","sinAngle","setRotationY","setRotationZ","solve","A0x","A0y","A0z","A1x","A1y","A1z","A2x","A2y","A2z","rx","ry","rz","x_","y_","solve2","bx","by","Matrix3","QuaternionBase","_array","_checkArray","w","pitch","sinPitch","abs","sign","asin","yaw","sinYawCosPitch","cosYawCosPitch","roll","sinRollCosPitch","cosRollCosPitch","axis","setAxisAngle","setEuler","quat","q","quatArray","getAxis","outArray","den","halfx","qSqrt","getMatrix3","matrix","s","xs","ys","zs","wx","wy","wz","xx","xy","xz","yy","yz","zz","getMatrix4","rotate","vectorArray","vx","vy","vz","qx","qy","qz","qw","tx","ty","tz","tw","toVector","cosYaw","sinYaw","cosPitch","cosRoll","sinRoll","axisLength","halfSin","axisArray","setMatrix","matrixArray","lookAt","source","dest","Quaternion","setVectors","crossArray","fromLength","toLength","angleTo","rotation","rotateTowards","slerp","conjugate","ax","ay","az","aw","bz","bw","scalar","fromArray","toArray","cosHalfTheta","halfTheta","sinHalfTheta","trunc","ratioA","ratioB","copyIntoArray","Matrix4Base","m41","m42","m43","m14","m24","m34","m44","getRotation","setTRS","translation","scaling","rotationArray","translationArray","scalingArray","x2","y2","z2","sx","sy","sz","setRotation","quaternion","quaternionArray","matArray","det2_01_01","det2_01_02","det2_01_03","det2_01_12","det2_01_13","det2_01_23","det3_201_012","det3_201_013","det3_201_023","A","a41","a42","a43","a14","a24","a34","a44","o00","o01","o02","o03","o10","o11","o12","o13","o20","o21","o22","o23","o30","o31","o32","o33","t00","t01","t02","t03","t04","t05","t06","t07","t08","t09","t10","invDet","B","b41","b42","b43","b14","b24","b34","b44","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","bX","bY","bZ","bW","solve3","setTranslation","vecArray","translate","t3","t4","rotateX","t5","t6","t7","t8","rotateY","sinAngles","rotateZ","c","C","t9","setScaling","eye","eyeArray","upArray","targetArray","e0","e1","e2","u0","u1","u2","x0","x1","y0","y1","z0","z1","transformPoint","point","pointArray","transformPoint4","transformDirection","direction","directionArray","transformNormal","normal","normalArray","thisInvArray","fov","aspect","zNear","zFar","setPerspective","tan","rangeInv","bottom","near","far","setOrthographic","setFrustum","invWidth","invHeight","invDepth","Matrix4","Vector3Pool","_buffer","_bufferViews","subarray","_extensions","UUIDGenerator","_count","newUUID","tempMatrix","Transform","owner","isStatic","uuid","localArray","localMatrix","hasChanged","getMatrix","getLocalMatrix","thisLocalArray","setLocalMatrix","getRight","getLeft","getUp","getDown","getForward","getBackward","getTranslation","getScaling","transformVector","thisPosition","PlaneBase","constant","setFromNormalAndConstant","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","plane","point1","point2","point3","distanceToPoint","normalized","inverseNormalLength","result","aNormal","aConstant","bNormal","bConstant","cNormal","cConstant","f","v1x","v1y","v1z","v2x","v2y","v2z","v3x","v3y","v3z","Plane","tempVector","FrustumBase","nearPlane","farPlane","topPlane","bottomPlane","leftPlane","rightPlane","extents","_","_nearPlane","_farPlane","_bottomPlane","_topPlane","_leftPlane","_rightPlane","Frustum","setFromMatrix","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m15","intersection","intersectsSphere","sphere","radius","intersectsBox","box","boxMax","boxMin","getEdges","edges","leftBottomNear","leftTopNear","rightBottomNear","rightTopNear","leftBottomFar","leftTopFar","rightBottomFar","rightTopFar","getExtents","_extents","containsPoint","BufferDataUsage","BufferTarget","DrawMode","DataComponentType","AttributeDataType","ElementArrayDataType","WebGLVertexArrayUtilities","VEC2","VEC3","VEC4","FLOAT","BYTE","UNSIGNED_BYTE","Uint8Array","SHORT","Int16Array","UNSIGNED_SHORT","Uint16Array","INT","Int32Array","UNSIGNED_INT","Int8Array","gl","indices","internalBuffer","createBuffer","usage","STATIC_READ","ELEMENT_ARRAY_BUFFER","byteLength","indexType","getElementArrayBufferType","bindBuffer","bufferData","program","attributes","interleaved","internalProgram","DEFAULT_USAGE","attributesEntries","entries","attribute","ARRAY_BUFFER","dataBuffer","byteStride","vertexAttributes","forEach","componentType","stride","getComponentTypeArrayConstructor","getDataTypeNumComponents","bufferSlices","constantValue","byteOffset","attributeName","divisor","getArrayComponentType","location","getAttribLocation","numComponents","vertexAttribPointer","vertexAttribDivisor","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","bytesPerElement","bufferArray","arrayStrideOffset","arraySliceIndex","enableVertexAttribArray","vertexArray","elementsCount","attributeRecord","verticesBuffers","verticesBuffer","find","getParameter","ARRAY_BUFFER_BINDING","srcOffset","srcLength","dstOffset","slices","sliceOffset","bufferSubData","buffer","data","dstByteOffset","vertexBuffers","elementIndices","elementBuffer","elementBufferOrBufferProperties","internalVertexArray","createVertexArray","bindVertexArray","buffer_i","fromEntries","filter","attribute_i","setter","createVertexArrayBuffer","createVertexElementArrayBuffer","isVertexArray","deleteVertexArray","GeometryAttributes","GeometryBuffer","bufferByteLength","bufferArrayConstructor","toBlob","bufferLength","indicesData","indicesLength","headerData","TextEncoder","encode","JSON","stringify","headerLength","blobDataView","blobDataViewBuffer","blobDataHeaderView","blobDataHeaderLength","Blob","blob","arrayBuffer","blobDataHeaderByteLength","arrayConstructor","header","parse","TextDecoder","decode","geometryBuffer","getAttribute","attributeArrayConstructor","attributeArray","bufferStride","bufferArraySliceIndex","BoundingSphere","transform","hitsSphere","otherCenter","otherRadius","hitsBox","sphereX","sphereY","sphereZ","minX","minY","minZ","maxX","maxY","maxZ","corners","FramebufferStatus","FramebufferTextureTarget","FramebufferAttachment","RenderbufferPixelFormat","DrawBuffer","BoundingBox","boxes","positiveInfinity","POSITIVE_INFINITY","negativeInfinity","NEGATIVE_INFINITY","box_i","boxMinX","boxMinY","boxMinZ","boxMaxX","boxMaxZ","boxMaxY","hits","otherMin","otherMax","otherMinX","otherMinY","otherMinZ","otherMaxX","otherMaxY","otherMaxZ","corner_i","transformed","GeometryBuilder","halfEdges","vertices","faces","create","structuredClone","addTriangleFace","v0","v1","v2","properties","addFace","addQuadFace","v3","addVertex","position","vertex","halfEdgeID","_halfEdges","_vertices","_faces","faceVerticesCount","error","face","faceID","sourceID","targetID","firstHalfEdgeID","halfEdge","previousHalfEdgeID","existingHalfEdge","vertexFacesIterator","face_i","faceHalfEdgesIterator","halfEdge_i","targetID_i","prevID","prevID_i","twinID","nextID","twinHalfEdge","indexOf","linesArray","flatMap","faceVertices","faceVerticesIterator","vertex_i","verticesArray","tangentsArray","faceUvs","uv","uv0","uv1","uv2","edge1","v1_i","edge2","deltaUV1","uv1_i","deltaUV2","tangent","edge1_i","tangent_i","normalsArray","ni","pi","normal_i","uvsArray","flat","trianglesIndicesArray","verticesCount","concat","linesIndicesArray","boundingBox","boundingSphere","FaceHalfEdgesIterator","FaceVerticesIterator","VertexFacesIterator","geometry","reset","current","nextHalfEdgeID","faceHalfEdgeID","firstVertexID","vertexID","vertexHalfEdgeID","CubeGeometry","toBuilder","depth","widthSegments","heightSegments","depthSegments","builder","floor","uvs","u","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","iy","ix","indicesCount","vi1","vi2","vi3","vi4","ui1","ui2","ui3","ui4","v4","uv3","uv4","QuadGeometry","WebGLFramebufferUtilities","internalFramebuffer","createFramebuffer","internalRenderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","samples","internalFormat","renderbufferStorageMultisample","renderbufferStorage","framebuffer","FRAMEBUFFER_BINDING","bindFramebuffer","FRAMEBUFFER","attachments","attachment","textureTarget","texture","internalTexture","framebufferTexture2D","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","unbindFramebuffer","drawBuffers","props","framebufferRenderbuffer","renderbuffer","readFramebuffer","drawFramebuffer","readRectangle","drawRectangle","mask","READ_FRAMEBUFFER_BINDING","internalReadFramebuffer","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER_BINDING","internalDrawFramebuffer","DRAW_FRAMEBUFFER","blitFramebuffer","format","pixels","readPixels","isFramebuffer","deleteFramebuffer","isRenderbuffer","deleteRenderbuffer","TexturePixelFormat","TextureInternalPixelFormat","TexturePixelType","TextureParameter","TextureTarget","TextureMagFilter","TextureMinFilter","TextureCompareMode","TextureWrapMode","TextureCompareFunction","ShaderType","UniformType","UniformDataType","WebGLTextureUtilities","createTexture","unit","subimages","lod","border","mipmap","ACTIVE_TEXTURE","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texImage2D","subimage_i","xoffset","yoffset","texSubImage2D","TEXTURE_CUBE_MAP","xPos","xNeg","yPos","yNeg","zPos","zNeg","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_2D_ARRAY","texImage3D","zoffset","texSubImage3D","generateMipmap","mag","wrapS","wrapT","wrapR","baseMipmapLevel","maxMipmapLevel","compareFunction","compareMode","minLod","maxLod","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","texParameterf","TEXTURE_MIN_LOD","TEXTURE_MAX_LOD","alignment","pixelStorei","UNPACK_ALIGNMENT","isTexture","deleteTexture","delete","WebGLProgramUtilities","internalShader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","shaderInfoLog","getShaderInfoLog","deleteShader","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","programInfoLog","getProgramInfoLog","vertexInfoLog","fragmentInfoLog","deleteProgram","CURRENT_PROGRAM","useProgram","WebGLUniformUtilities","uniformValue","of","uniform","uniformType","num","uniform1f","uniform1ui","BOOL","uniform1i","INT_SAMPLER_2D","INT_SAMPLER_2D_ARRAY","INT_SAMPLER_3D","INT_SAMPLER_CUBE","SAMPLER_2D","SAMPLER_3D","SAMPLER_CUBE","SAMPLER_2D_SHADOW","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","tex","FLOAT_VEC2","isArray","list","uniform2fv","BOOL_VEC2","INT_VEC2","uniform2iv","UNSIGNED_INT_VEC2","uniform2uiv","FLOAT_VEC3","uniform3fv","BOOL_VEC3","INT_VEC3","uniform3iv","UNSIGNED_INT_VEC3","uniform3uiv","FLOAT_VEC4","uniform4fv","BOOL_VEC4","INT_VEC4","uniform4iv","UNSIGNED_INT_VEC4","uniform4uiv","FLOAT_MAT2","uniformMatrix2fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","FLOAT_MAT2x3","uniformMatrix2x3fv","FLOAT_MAT2x4","uniformMatrix2x4fv","FLOAT_MAT3x2","uniformMatrix3x2fv","FLOAT_MAT3x4","uniformMatrix3x4fv","FLOAT_MAT4x2","uniformMatrix4x2fv","FLOAT_MAT4x3","uniformMatrix4x3fv","uniformsNames","uniformIndices","getUniformIndices","activeUniforms","ACTIVE_UNIFORMS","validUniformIndices","index_i","isValid","setters","getActiveUniform","getUniformLocation","getUniformSetter","uniformName","WebGLUniformBlockUtilities","blockIndex","getUniformBlockIndex","INVALID_INDEX","blockSize","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","layout","blockUniformsIndices","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","getActiveUniforms","UNIFORM_OFFSET","uniformOffset_i","uniformIndex","uniformInfo","bind","UNIFORM_BUFFER","bindingPoint","lastBindingPoint","blocks","offsetAlignment","UNIFORM_BUFFER_OFFSET_ALIGNMENT","block","ceil","createUniformBuffer","rangeOffset","rangeSize","rangedUniformBuffer","uniforms","UNIFORM_BUFFER_BINDING","asArrayBufferView","uniformBlockBinding","bindBufferRange","bindBufferBase","StencilAction","BufferMask","Buffer","TestFunction","BlendingMode","BlendingEquation","Capabilities","Face","WindingOrder","HintTarget","HintMode","WebGLPacketUtilities","textures","_textures","packet","programProperties","vertexArrayProperties","uniformsProperties","uniformBlocks","uniformBlocksProperties","uniformBuffers","uniformBuffersProperties","drawCommand","getUniformsListSetter","setUniformsListValues","uniformBlocksPropertiesEntries","uniformBuffersMaxIndex","uniformBlockProperty","uniformBuffersProperty_i","relatedBlockProperties","relatedBlocks","blockName","createUniformBlock","relatedBlocksCount","block_i","bindUniformBuffer","rangedBuffers","createRangedUniformBuffers","setUniformBufferData","rangedBuffer","setUniformBufferValues","relatedBlock","uniformBlockProperties","vertexArrayValues","uniformsValues","uniformsBlocksValues","setVertexArrayValues","uniformBlock","getExtension","mode","instanceCount","multiDraw","VERTEX_ARRAY_BINDING","drawElementsInstanced","multiDrawExtension","countsList","countsOffset","offsetsList","offsetsOffset","drawCount","instanceCountsList","instanceCountsOffset","multiDrawElementsInstancedWEBGL","multiDrawElementsWEBGL","drawElements","drawArraysInstanced","firstsList","firstsOffset","multiDrawArraysInstancedWEBGL","multiDrawArraysWEBGL","drawArrays","WebGLRendererUtilities","hint","winding","frontFace","scissor","viewport","color","clearColor","func","depthFunc","equ","blendEquation","srcFunc","dstFunc","blendFunc","srcAlpha","dstAlpha","blendFuncSeparate","ref","stencilFuncSeparate","fail","zFail","zPass","stencilOpSeparate","stencilMaskSeparate","red","green","blue","alpha","colorMask","flag","depthMask","capability","enable","disable","VIEWPORT","MAX_SAMPLES","buffers","clearBufferfv","clearBufferiv","clearBufferuiv","ColorBase","r","Color","rgbOrR","aOrG","colors","BLACK","RED","YELLOW","GREEN","BLUE","WHITE","async","start","template","document","createElement","innerHTML","body","insertBefore","content","firstChild","render","fps","paused","playPause","getElementById","onclick","textContent","requestAnimationFrame","fpsElement","CANVAS_WIDTH","CANVAS_HEIGHT","style","getContext","setUnpackAlignment","phongVert","fetch","then","resp","text","phongFrag","phongProgram","skyboxVert","skyboxFrag","skyboxProgram","textureVert","textureFrag","texProgram","basicVert","basicFrag","basicProgram","depthVert","depthFrag","depthProgram","linesVertex","linesFragment","linesProgram","fetchImage","url","ok","Promise","resolve","img","Image","onload","src","albedoMapImg","brickwallImg","normalMapImg","normalMap2Img","displacementMapImg","skyboxXPosImg","skyboxXNegImg","skyboxYPosImg","skyboxYNegImg","skyboxZPosImg","skyboxZNegImg","colorsImg","paddedImage","image","paddedWidth","PADDING","paddedHeight","ctx","drawImage","getImageData","paddedBrickwallImg","paddedAlbedoMapImg","paddedNormalMap2","paddedColorsImg","createTextures","albedoMap","LUMINANCE","NEAREST","albedoMaps","RGB","LINEAR","normalMap","LINEAR_MIPMAP_LINEAR","displacementMap","RGBA","skybox","fbColorTex","CLAMP_TO_EDGE","depthTex","DEPTH_COMPONENT","DEPTH_COMPONENT24","anisotropicTargetTextures","anisotropicExtension","log","maxFiltering","MAX_TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_MAX_ANISOTROPY_EXT","cubeGeometry","quadGeometryBuilder","cube","camera","projection","frustum","viewProjection","getFront","view","isViewing","mesh","updateFrustum","perspective","lightTransform","viewDirectionProjectionInverse","identity","cubeGeometryBuilder","cubeVerticesArray","cubeIndicesArray","cubeNormalsArray","cubeUVsArray","cubeTangentsArray","cubeLinesArray","cubeGeometryBuffer","a_position","a_tangent","a_normal","a_uv","cubeVertices","cubeNormals","cubeUVs","cubeTangents","cubeColors","phongCubePacketProperties","DYNAMIC_READ","a_color","subTexture","u_xOffset","u_yOffset","u_zOffset","u_xScaling","u_yScaling","viewBlock","modelBlock","lightsBlock","phongBlock","u_albedoMap","u_normalMap","u_displacementMap","u_albedoMaps","TRIANGLES","phongPacketInitValues","u_view","u_projection","phongCubePacket","createPacket","setVertexArrayBufferData","linesProperties","u_color","LINES","basicPacketProperties","basicModelBlock","u_model","quadIndices","quadVertices","quadUVs","quadWorld","skyboxPacketProperties","u_world","u_viewDirectionProjectionInverse","u_skybox","depthPacketProperties","u_depthWorld","u_depthTex","texPacketProperties","u_tex","skyboxPacket","depthPacket","texPacket","maxSamples","getMaxSamples","attachRenderbuffer","DEPTH_ATTACHMENT","RGBA8","COLOR_ATTACHMENT0","postFramebuffer","attachTexture","DEPTH_TEST","CULL_FACE","BLEND","blendFunction","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","lastFrameTime","deltaTime","fromAxisAngle","cameraControl","params","rotationSpeed","translationSpeed","update","lastPointerPosition","cameraTransform","cameraPosition","cameraForward","cameraForwardArray","cameraUpSign","Z","ARROW_UP","Q","ARROW_LEFT","S","ARROW_DOWN","D","ARROW_RIGHT","RIGHT","newPointerPosition","newTheta","setPacketValues","frameTime","toFixed","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","depthFunction","LEQUAL","drawPacket","LESS","blit","newWidth","newHeight","ALWAYS","launchScene","e","main"],"sourceRoot":""}