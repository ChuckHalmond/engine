{"version":3,"file":"main.js","mappings":"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","sources":["webpack://main/webpack/bootstrap","webpack://main/webpack/runtime/define property getters","webpack://main/webpack/runtime/hasOwnProperty shorthand","webpack://main/webpack/runtime/make namespace object","webpack://main/./src/engine/libs/patterns/injectors/Injector.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector2.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector3.ts","webpack://main/./src/engine/core/input/Input.ts","webpack://main/./src/engine/libs/maths/geometry/space/Space.ts","webpack://main/./src/engine/libs/patterns/pools/Pool.ts","webpack://main/./src/engine/libs/maths/MathError.ts","webpack://main/./src/engine/libs/patterns/pools/StackPool.ts","webpack://main/./src/engine/libs/maths/Snippets.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix3.ts","webpack://main/./src/engine/libs/maths/algebra/quaternions/Quaternion.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix4.ts","webpack://main/./src/engine/libs/maths/extensions/pools/Vector3Pools.ts","webpack://main/./src/engine/libs/maths/statistics/random/UUIDGenerator.ts","webpack://main/./src/engine/core/general/Transform.ts","webpack://main/./src/engine/libs/maths/geometry/primitives/Plane.ts","webpack://main/./src/engine/libs/physics/collisions/Frustrum.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/geometry.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/PerspectiveCamera.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/Camera.ts","webpack://main/./src/engine/core/rendering/scenes/objects/Object3D.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/GeometryBuilder.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLFramebufferUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLBufferUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLProgramUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLVertexArrayUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLTextureUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLRendererUtilities.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/lib/QuadGeometry.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformBlockUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLPacketUtilities.ts","webpack://main/./src/engine/libs/graphics/colors/Color.ts","webpack://main/./src/samples/scenes/Common.ts","webpack://main/./src/samples/scenes/Maps.ts","webpack://main/./src/engine/core/controls/FreeCameraControl.ts","webpack://main/./main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { Injector };\r\nexport { InjectorBase };\r\nexport { Inject };\r\nexport { Register };\r\n\r\ninterface InjectorConstructor {\r\n    readonly prototype: Injector;\r\n    new<C extends Constructor<any>>(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}): Injector<C>;\r\n}\r\n\r\ninterface Injector<C extends Constructor<any> = Constructor<any>> {\r\n    readonly defaultCtor: C;\r\n    overrideDefaultCtor(constructor: C): void;\r\n    forceQualifier(qualifier: string): void;\r\n    unforceQualifier(): void;\r\n    getConstructor(qualifier?: string): C;\r\n    inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C>;\r\n    register(constructor: C, qualifier: string): void; \r\n}\r\n\r\nclass InjectorBase<C extends Constructor<any> = Constructor<any>> implements Injector<C> {\r\n    private _forcedQualifier?: string;\r\n    private _constructors: Map<string, C>;\r\n    private _defaultCtor: C;\r\n    private _onDefaultOverride: (constructor: C) => void;\r\n\r\n    public get defaultCtor(): C {\r\n        return this._defaultCtor;\r\n    }\r\n\r\n    public overrideDefaultCtor(constructor: C): void {\r\n        this._defaultCtor = constructor;\r\n        this._onDefaultOverride(constructor);\r\n    }\r\n\r\n    constructor(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}) {\r\n        this._defaultCtor = args.defaultCtor;\r\n        this._onDefaultOverride = args.onDefaultOverride;\r\n        this._constructors = new Map();\r\n    }\r\n\r\n    public forceQualifier(qualifier: string): void {\r\n        this._forcedQualifier = qualifier;\r\n    }\r\n\r\n    public unforceQualifier(): void {\r\n        delete this._forcedQualifier;\r\n    }\r\n\r\n    public getConstructor(qualifier?: string): C {\r\n        const qualifierValue = this._forcedQualifier || qualifier;\r\n        if (typeof qualifierValue === 'undefined') {\r\n            return this._defaultCtor;\r\n        }\r\n        const constructor = this._constructors.get(qualifierValue);\r\n        if (typeof constructor === 'undefined') {\r\n            throw new Error(`No constructor for qualifier ${qualifierValue}`);\r\n        }\r\n        return constructor;\r\n    }\r\n\r\n    public inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C> {\r\n        const constructor = this.getConstructor(args?.qualifier);\r\n        if (args?.args) {\r\n            const parameters = Array.from(args.args);\r\n            return new constructor(...parameters);\r\n        }\r\n        return new constructor();\r\n    }\r\n\r\n    public register(constructor: C, qualifier: string): void {\r\n        if (!this._constructors.has(qualifier)) {\r\n            this._constructors.set(qualifier, constructor);\r\n        }\r\n    }\r\n}\r\n\r\nconst Injector: InjectorConstructor = InjectorBase;\r\n\r\ntype UnwrappedInjectorConstructor<I> = I extends Injector<infer C> ? C : never;\r\n\r\ninterface RegisterDecorator {\r\n    <I extends Injector>(injector: I, qualifier?: string): <C extends UnwrappedInjectorConstructor<I>>(ctor: C) => C;\r\n}\r\n\r\nconst Register: RegisterDecorator = function<\r\n    I extends Injector\r\n>(injector: I, qualifier?: string): any {\r\n    return <C extends UnwrappedInjectorConstructor<I>>(\r\n        ctor: C\r\n    ) => {\r\n        if (typeof qualifier !== 'undefined') {\r\n            injector.register(ctor, qualifier);\r\n        }\r\n        injector.register(ctor, ctor.name);\r\n        return ctor;\r\n    }\r\n}\r\n\r\nfunction Inject<\r\n    I extends Injector,\r\n    P extends ConstructorParameters<UnwrappedInjectorConstructor<I>>,\r\n>(injector: I, options?: {qualifier?: string, args?: P}): any {\r\n    return (\r\n        target: any,\r\n        propertyKey: string\r\n    ) => {\r\n        const instance = injector.inject(options);\r\n\r\n        Object.defineProperty(target, propertyKey, {\r\n            value: instance\r\n        });\r\n    }\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Matrix2 } from \"../matrices/Matrix2\";\r\n\r\nexport { Vector2Injector };\r\nexport { Vector2 };\r\nexport { Vector2Base };\r\n\r\nexport type Vector2Values = [number, ...number[]] & { length: 2 };\r\n\r\ninterface Vector2Constructor {\r\n\treadonly prototype: Vector2;\r\n\tnew(): Vector2;\r\n\tnew(values: Vector2Values): Vector2;\r\n\tnew(values?: Vector2Values): Vector2;\r\n}\r\n\r\ninterface Vector2 {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector2Values;\r\n\tx: number;\r\n\ty: number;\r\n\tsetValues(v: Vector2Values): this;\r\n\tcopy(vec: Vector2): this;\r\n\tclone(): this;\r\n\tequals(vec: Vector2): boolean;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\tadd(vec: Vector2): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector2): this;\r\n\tlerp(vec: Vector2, t: number): this;\r\n\tclamp(min: Vector2, max: Vector2): this;\r\n\tmultScalar(k: number): this;\r\n\tcross(vec: Vector2): number;\r\n\tdot(vec: Vector2): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdist(vec: Vector2): number;\r\n\tdistSquared(vec: Vector2): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector2): this;\r\n\tmult(mat: Matrix2): this\r\n\taddScaled(vec: Vector2, k: number): this;\r\n\tcopyAndSub(vecA: Vector2, vecB: Vector2): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector2Base {\r\n\tpublic array: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(values: Vector2Values)\r\n\tconstructor(values?: Vector2Values) {\r\n\t\tthis.array = (values) ? new Float32Array([\r\n\t\t\tvalues[0], values[1]\r\n\t\t]) : new Float32Array([0, 0]);\r\n\t}\r\n\r\n\tpublic get values(): Vector2Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1]\r\n\t\t];\r\n\t}\r\n\r\n\tpublic set values(values: Vector2Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t}\r\n\r\n\tpublic get x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tpublic set x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tpublic get y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tpublic set y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tpublic setValues(v: Vector2Values): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = v[0];\r\n\t\to[1] = v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic equals(vec: Vector2Base): boolean {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\t\t\r\n\t\treturn v[0] === o[0]\r\n\t\t\t&& v[1] === o[1];\r\n\t}\r\n\r\n\tpublic copy(vec: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\to[0] = v[0];\r\n\t\to[1] = v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic clone(): this {\r\n\t\treturn new Vector2Base(this.values) as this;\r\n\t}\r\n\r\n\tpublic setUnit(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 1;\r\n\t\to[1] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic setZeros(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 0;\r\n\t\to[1] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic add(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0];\r\n\t\to[1] = o[1] + v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic addScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + k;\r\n\t\to[1] = o[1] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic sub(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] - v[0];\r\n\t\to[1] = o[1] - v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic lerp(vec: Vector2Base, t: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = t * (v[0] - o[0]);\r\n\t\to[1] = t * (v[1] - o[1]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic clamp(min: Vector2Base, max: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst l = min.array;\r\n\t\tconst g = max.array;\r\n\r\n\t\to[0] = Math.min(g[0], Math.min(o[0], l[0])),\r\n\t\to[1] = Math.min(g[1], Math.min(o[1], l[1]))\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic multScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] * k;\r\n\t\to[1] = o[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic cross(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn a[0] * b[1] - a[1] * b[0];\r\n\t}\r\n\r\n\tpublic dot(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]);\r\n\t}\r\n\r\n\tpublic length(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n\t}\r\n\r\n\tpublic lengthSquared(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn v[0] * v[0] + v[1] * v[1];\r\n\t}\r\n\r\n\tpublic dist(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn Math.sqrt(dx * dx + dy * dy);\r\n\t}\r\n\r\n\tpublic distSquared(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn dx * dx + dy * dy;\r\n\t}\r\n\r\n\tpublic normalize(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\tconst lenSq = o[0] * o[0] + o[1] * o[1];\r\n\t\tconst len = Math.sqrt(lenSq);\r\n\t\tif (len > Number.EPSILON) {\r\n\t\t\to[0] = o[0] / len;\r\n\t\t\to[1] = o[1] / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\to[0] = 0;\r\n\t\t\to[1] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic negate(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = -o[0];\r\n\t\to[1] = -o[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic mult(mat: Matrix2): this\r\n\tpublic mult(vec: Vector2): this\r\n\tpublic mult(arg0: Matrix2 | Vector2): this {\r\n\t\tif (arg0 instanceof Vector2) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tthis.array[0] = this.array[0] * v[0];\r\n\t\t\tthis.array[1] = this.array[1] * v[1];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst x = this.x;\r\n\t\t\tconst y = this.y;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[2];\r\n\t\t\tthis.y = x * m[1] + y * m[3];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic addScaled(vec: Vector2Base, k: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0] * k;\r\n\t\to[1] = o[1] + v[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic writeIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n    }\r\n    \r\n    public readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = arr[offset    ];\r\n\t\to[1] = arr[offset + 1];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tpublic copyAndSub(vecA: Vector2Base, vecB: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\to[0] = a[0] - b[0];\r\n\t\to[1] = a[1] - b[1];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nvar Vector2: Vector2Constructor = Vector2Base;\r\nconst Vector2Injector: Injector<Vector2Constructor> = new Injector({\r\n\tdefaultCtor: Vector2Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector2Constructor) => {\r\n\t\t\tVector2 = ctor;\r\n\t\t}\r\n});","import { Matrix3 } from \"engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\n\r\nexport { Vector3Constructor };\r\nexport { Vector3 };\r\nexport { Vector3Base };\r\nexport { Vector3Injector };\r\n\r\nexport type Vector3Values = [number, ...number[]] & { length: 3 };\r\n\r\ninterface Vector3Constructor {\r\n\treadonly prototype: Vector3;\r\n\tnew(): Vector3;\r\n\tnew(values: Vector3Values): Vector3;\r\n\tangle(vectorA: Vector3, vectorB: Vector3): number;\r\n}\r\n\r\ninterface Vector3 extends Iterable<number> {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector3Values;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\ttoString(): string;\r\n\tsetValues(v: Vector3Values): this;\r\n\tequals(vec: Vector3): boolean;\r\n\tcopy(vec: Vector3): this;\r\n\tclone(): this;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\ttoCartesian(center: Vector3): this;\r\n\ttoSpherical(center: Vector3): this;\r\n\tadd(vec: Vector3): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector3): this;\r\n\tlerp(from: Vector3, to: Vector3, t: number): this;\r\n\tmax(vecB: Vector3): this;\r\n\tmin(vecB: Vector3): this;\r\n\tclamp(min: Vector3, max: Vector3): this;\r\n\tscale(k: number): this;\r\n\tcross(vec: Vector3): this;\r\n\tdot(vec: Vector3): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdistance(vec: Vector3): number;\r\n\tdistanceSquared(vec: Vector3): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector3): this;\r\n\tmult(mat: Matrix3): this;\r\n\taddScaled(vec: Vector3, k: number): this;\r\n\tcopyAndSub(vecA: Vector3, vecB: Vector3): this;\r\n\tcopyAndCross(vecA: Vector3, vecB: Vector3): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector3Base {\r\n\tpublic readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(values: Vector3Values)\r\n\tconstructor(values?: Vector3Values) {\r\n\t\tthis.array = (values) ? new Float32Array([\r\n\t\t\tvalues[0], values[1], values[2]\r\n\t\t]) : new Float32Array([0, 0, 0]);\r\n\t}\r\n\r\n\tpublic toString(): string {\r\n\t\treturn `Vector3([${Array.from(this.array).join(\", \")}])`;\r\n\t}\r\n\r\n\tpublic static angle(vectorA: Vector3, vectorB: Vector3): number {\r\n\t\tconst temp = new Vector3();\r\n\t\treturn Math.acos(temp.copy(vectorA).dot(vectorB) / (Math.sqrt(temp.copy(vectorA).dot(vectorA)) * Math.sqrt(temp.copy(vectorB).dot(vectorB))));\r\n\t}\r\n\r\n\tpublic get values(): Vector3Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1],\r\n\t\t\tthis.array[2]\r\n\t\t];\r\n\t}\r\n\r\n\tpublic set values(values: Vector3Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t\tthis.array[2] = values[2];\r\n\t}\r\n\r\n\tpublic get x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tpublic set x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tpublic get y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tpublic set y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tpublic get z() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n\tpublic set z(z: number) {\r\n\t\tthis.array[2] = z;\r\n\t}\r\n\r\n\tpublic setValues(v: Vector3Values): this {\r\n\t\tthis.array[0] = v[0];\r\n\t\tthis.array[1] = v[1];\r\n\t\tthis.array[2] = v[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tpublic copy(vec: Vector3): this {\r\n\t\tconst v = vec.array;\r\n\r\n\t\tthis.array[0] = v[0];\r\n\t\tthis.array[1] = v[1];\r\n\t\tthis.array[2] = v[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic clone(): this {\r\n\t\treturn new Vector3Base(this.values) as this;\r\n\t}\r\n\r\n\tpublic equals(vector: Vector3): boolean {\r\n\t\treturn vector.array[0] === this.array[0]\r\n\t\t\t&& vector.array[1] === this.array[1]\r\n\t\t\t&& vector.array[2] === this.array[2];\r\n\t}\r\n\r\n\tpublic setZeros(): this {\r\n\t\tthis.array[0] = 0;\r\n\t\tthis.array[1] = 0;\r\n\t\tthis.array[2] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic setUnit(): this {\r\n\t\tthis.array[0] = 1;\r\n\t\tthis.array[1] = 1;\r\n\t\tthis.array[2] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic add(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0];\r\n\t\tthis.array[1] = this.array[1] + vector.array[1];\r\n\t\tthis.array[2] = this.array[2] + vector.array[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic addScalar(k: number): this {\r\n\t\tthis.array[0] = this.array[0] + k;\r\n\t\tthis.array[1] = this.array[1] + k;\r\n\t\tthis.array[2] = this.array[2] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic sub(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] - vector.array[0];\r\n\t\tthis.array[1] = this.array[1] - vector.array[1];\r\n\t\tthis.array[2] = this.array[2] - vector.array[2];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic lerp(from: Vector3, to: Vector3, t: number): this {\r\n\t\t\r\n\t\tthis.array[0] = (1 - t) * from.x + t * (to.x - from.x);\r\n\t\tthis.array[1] = (1 - t) * from.y + t * (to.y - from.y);\r\n\t\tthis.array[2] = (1 - t) * from.z + t * (to.z - from.z);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic max(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.max(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.max(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.max(this.array[2], vectorB.array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic min(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.min(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.min(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.min(this.array[2], vectorB.array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic clamp(min: Vector3, max: Vector3): this {\r\n\t\tthis.array[0] = Math.min(max.array[0], Math.max(this.array[0], min.array[0]));\r\n\t\tthis.array[1] = Math.min(max.array[1], Math.max(this.array[1], min.array[1]));\r\n\t\tthis.array[2] = Math.min(max.array[2], Math.max(this.array[2], min.array[2]));\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic scale(k: number): this {\r\n\t\tthis.array[0] = this.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic cross(vector: Vector3): this {\r\n\t\tconst t0 = this.array[1] * vector.array[2] - this.array[2] * vector.array[1];\r\n\t\tconst t1 = this.array[2] * vector.array[0] - this.array[0] * vector.array[2];\r\n\t\tconst t2 = this.array[0] * vector.array[1] - this.array[1] * vector.array[0];\r\n\t\t\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic dot(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\r\n\t}\r\n\r\n\tpublic length(): number {\r\n\t\tconst a = this.array;\r\n\r\n\t\treturn Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\r\n\t}\r\n\r\n\tpublic lengthSquared(): number {\r\n\t\tconst a = this.array;\r\n\t\t\r\n\t\treturn a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\r\n\t}\r\n\r\n\tpublic distance(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn Math.hypot(dx, dy, dz);\r\n\t}\r\n\r\n\tpublic distanceSquared(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t}\r\n\r\n\tpublic normalize(): this {\r\n\t\tconst length = this.length();\r\n\t\tif (length > Number.EPSILON) {\r\n\t\t\tthis.array[0] /= length;\r\n\t\t\tthis.array[1] /= length;\r\n\t\t\tthis.array[2] /= length;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array[0] = 0;\r\n\t\t\tthis.array[1] = 0;\r\n\t\t\tthis.array[2] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic negate(): this {\r\n\t\tthis.array[0] *= -1;\r\n\t\tthis.array[1] *= -1;\r\n\t\tthis.array[2] *= -1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic mult(mat: Matrix3): this\r\n\tpublic mult(vec: Vector3): this\r\n\tpublic mult(arg0: Matrix3 | Vector3): this {\r\n\t\tif (arg0 instanceof Vector3) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tthis.array[0] = this.array[0] * v[0];\r\n\t\t\tthis.array[1] = this.array[1] * v[1];\r\n\t\t\tthis.array[2] = this.array[2] * v[2];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst x = this.x;\r\n\t\t\tconst y = this.y;\r\n\t\t\tconst z = this.z;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[3] + z * m[6];\r\n\t\t\tthis.y = x * m[1] + y * m[4] + z * m[7];\r\n\t\t\tthis.z = x * m[2] + y * m[5] + z * m[8];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toSpherical(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const x = thisArray[0] - centerArray[0];\r\n        const y = thisArray[1] - centerArray[1];\r\n        const z = thisArray[2] - centerArray[2];\r\n\r\n        const roh = Math.hypot(x, y, z);\r\n        const theta = Math.acos(y / roh);\r\n        const phi = Math.atan2(z, x);\r\n        thisArray[0] = roh;\r\n        thisArray[1] = theta;\r\n        thisArray[2] = phi;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n    public toCartesian(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const roh = thisArray[0];\r\n        const theta = thisArray[1];\r\n        const phi = thisArray[2];\r\n\r\n        const x = roh * Math.sin(theta) * Math.cos(phi) + centerArray[0];\r\n        const y = roh * Math.cos(theta) + centerArray[1];\r\n        const z = roh * Math.sin(theta) * Math.sin(phi) + centerArray[2];\r\n        thisArray[0] = x;\r\n        thisArray[1] = y;\r\n        thisArray[2] = z;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tpublic static mult(mat: Matrix3, vec: Vector3): Vector3 {\r\n\t\tconst m = mat.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\treturn new Vector3Base([\r\n\t\t\tm[0] * v[0] + m[1] * v[1] + m[2] * v[2],\r\n\t\t\tm[3] * v[0] + m[4] * v[1] + m[5] * v[2],\r\n\t\t\tm[6] * v[0] + m[7] * v[1] + m[8] * v[2]\r\n\t\t]);\r\n\t}\r\n\r\n\tpublic writeIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n\t\tout[offset + 2] = v[2];\r\n    }\r\n    \r\n    public readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tthis.array[0] = arr[offset    ];\r\n\t\tthis.array[1] = arr[offset + 1];\r\n\t\tthis.array[2] = arr[offset + 2];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tpublic addScaled(vector: Vector3, k: number): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] + vector.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] + vector.array[2] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tpublic copyAndSub(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\tthis.array[0] = a[0] - b[0];\r\n\t\tthis.array[1] = a[1] - b[1];\r\n\t\tthis.array[2] = a[2] - b[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic copyAndCross(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\t\r\n\t\tconst t0 = a[1] * b[2] - a[2] * b[1];\r\n\t\tconst t1 = a[2] * b[0] - a[0] * b[2];\r\n\t\tconst t2 = a[0] * b[1] - a[1] * b[0];\r\n\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\t[Symbol.iterator] (): Iterator<number> {\r\n\t\tconst array = this.array;\r\n\t\tlet i = 0;\r\n\t\treturn {\r\n\t\t\tnext() {\r\n\t\t\t\tif (i < array.length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: array[i++], done: false\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: void 0, done: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar Vector3: Vector3Constructor = Vector3Base;\r\n\r\nconst Vector3Injector: Injector<Vector3Constructor> = new Injector({\r\n\tdefaultCtor: Vector3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector3Constructor) => {\r\n\t\t\tVector3 = ctor;\r\n\t\t}\r\n});","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\n\r\nexport { Key };\r\nexport { KeyModifier };\r\nexport { HotKey };\r\nexport { MouseButton };\r\nexport { Input };\r\n\r\nenum Key {\r\n    A = \"a\",\r\n    B = \"b\",\r\n    C = \"c\",\r\n    D = \"d\",\r\n    E = \"e\",\r\n    F = \"f\",\r\n    G = \"g\",\r\n    H = \"h\",\r\n    I = \"i\",\r\n    J = \"j\",\r\n    K = \"k\",\r\n    L = \"l\",\r\n    M = \"m\",\r\n    O = \"o\",\r\n    P = \"p\",\r\n    Q = \"q\",\r\n    R = \"r\",\r\n    S = \"s\",\r\n    T = \"t\",\r\n    U = \"u\",\r\n    V = \"v\",\r\n    W = \"w\",\r\n    X = \"x\",\r\n    Y = \"y\",\r\n    Z = \"z\",\r\n    ENTER = \"Enter\",\r\n    BACKSPACE = \"Backspace\",\r\n    ARROW_DOWN = \"ArrowDown\",\r\n    ARROW_LEFT = \"ArrowLeft\",\r\n    ARROW_RIGHT = \"ArrowRight\",\r\n    ARROW_UP = \"ArrowUp\",\r\n    SHIFT = \"Shift\"\r\n}\r\n\r\nconst KEYS_COUNT = Object.keys(Key).length;\r\n\r\nenum KeyModifier {\r\n    Alt = \"Alt\",\r\n    Control = \"Control\",\r\n    Shift = \"Shift\",\r\n}\r\n\r\nfunction displayKeyModifier(mode: KeyModifier): string {\r\n    switch (mode) {\r\n        case KeyModifier.Control:\r\n            return \"Ctrl\";\r\n        default:\r\n            return mode;\r\n    }\r\n}\r\n\r\nenum MouseButton {\r\n    LEFT = 0,\r\n    WHEEL = 1,\r\n    RIGHT = 2,\r\n    FORWARD = 3,\r\n    BACK = 4\r\n}\r\n\r\nconst MOUSE_BUTTONS_COUNT = Object.keys(MouseButton).length;\r\n\r\nconst MOUSE_BUTTONS_INDICES = Object.freeze(\r\n    Object.values(MouseButton).reduce(\r\n        (map, button, index) => Object.assign(map, {[button]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst KEYS_INDICES = Object.freeze(\r\n    Object.values(Key).reduce(\r\n        (map, key, index) => Object.assign(map, {[key]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst INPUT_EVENT_UP = 0;\r\nconst INPUT_EVENT_DOWN = 1;\r\nconst INPUT_EVENT_REPEAT = 2;\r\n\r\nconst testKeyModifier = (mod: KeyModifier, event: KeyboardEvent) => {\r\n    switch (mod) {\r\n        case \"Alt\":\r\n            return event.altKey;\r\n        case \"Control\":\r\n            return event.ctrlKey;\r\n        case \"Shift\":\r\n            return event.shiftKey;\r\n        default:\r\n            return () => true;\r\n    }\r\n}\r\n\r\nclass HotKey {\r\n\r\n    public readonly key: Key;\r\n    public readonly mod1?: KeyModifier;\r\n    public readonly mod2?: KeyModifier;\r\n\r\n    constructor(key: Key, mod1?: KeyModifier, mod2?: KeyModifier) {\r\n        this.key = key;\r\n        this.mod1 = mod1;\r\n        this.mod2 = mod2;\r\n    }\r\n\r\n    public toString(): string {\r\n        return `${this.mod1 ? `${displayKeyModifier(this.mod1)}+` : ''}${this.mod2 ? `${displayKeyModifier(this.mod2)}+` : ''}${(this.key.length === 1) ? this.key.toUpperCase() : this.key}`;\r\n    }\r\n\r\n    /*public static fromString(str: string): HotKey | null {\r\n        const keys = Object.values(Key);\r\n        const keyModifiers = Object.values(KeyModifier);\r\n\r\n        let key: Key;\r\n        let mod1: KeyModifier | undefined;\r\n        let mod2: KeyModifier | undefined;\r\n\r\n        const keysStr = str.split(' + ');\r\n        if (keysStr.length >= 1) {\r\n            key = keysStr[0] as Key;\r\n            if (!keys.indexOf(key)) {\r\n                return null;\r\n            }\r\n            if (keysStr.length >= 2) {\r\n                mod1 = keysStr[1] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod1)) {\r\n                    return null;\r\n                }\r\n            }\r\n            if (keysStr.length >= 3) {\r\n                mod2 = keysStr[2] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod2)) {\r\n                    return null;\r\n                }\r\n            }\r\n            return new HotKey(key, mod1, mod2);\r\n        }\r\n        return null;\r\n    }*/\r\n\r\n    public test(event: KeyboardEvent): boolean {\r\n        return ((!this.mod1 || testKeyModifier(this.mod1, event)) && (!this.mod2 || testKeyModifier(this.mod2, event)) && event.key === this.key);\r\n    }\r\n}\r\n\r\ninterface Input {\r\n    initialize(canvas: HTMLCanvasElement): void;\r\n    clear(): void;\r\n    getKey(key: Key): boolean;\r\n    getKeyUp(key: Key): boolean;\r\n    getKeyDown(key: Key): boolean;\r\n    getMouseButton(button: MouseButton): boolean;\r\n    getPointerPosition(): Vector2;\r\n    getPointerScreenPosition(): Vector2;\r\n    getWheelDelta(): number;\r\n    getMouseButtonDown(button: MouseButton): boolean;\r\n    getMouseButtonUp(button: MouseButton): boolean;\r\n}\r\n\r\nclass InputBase implements Input {\r\n    private readonly keyFlags = new Array<boolean>(3 * KEYS_COUNT).fill(false);\r\n    private readonly mouseFlags = new Array<boolean>(3 * MOUSE_BUTTONS_COUNT).fill(false);\r\n    private readonly pointerPosition = new Vector2();\r\n    private wheelDelta = 0;\r\n    private canvas: HTMLCanvasElement | null = null;\r\n    private canvasRectangle: DOMRect | null = null;\r\n\r\n    public initialize(canvas: HTMLCanvasElement): void {\r\n        this.canvas = canvas;\r\n        this.canvasRectangle = canvas.getBoundingClientRect();\r\n        canvas.addEventListener(\"pointerdown\", this);\r\n        canvas.addEventListener(\"pointerup\", this);\r\n        canvas.addEventListener(\"contextmenu\", this);\r\n        canvas.addEventListener(\"pointermove\", this);\r\n        canvas.addEventListener(\"wheel\", this);\r\n        canvas.addEventListener(\"keydown\", this);\r\n        canvas.addEventListener(\"keyup\", this);\r\n        canvas.addEventListener(\"focusout\", this);\r\n    }\r\n\r\n    public getCanvasRect(): DOMRect {\r\n        const rect = this.canvasRectangle;\r\n        if (rect === null) {\r\n            throw new Error(`Input manager not initialized.`);\r\n        }\r\n        return rect;\r\n    }\r\n\r\n    public clear(): void {\r\n        this.keyFlags.fill(false, 0, INPUT_EVENT_REPEAT * KEYS_COUNT);\r\n        this.mouseFlags.fill(false, 0, INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT);\r\n        this.wheelDelta = 0;\r\n    }\r\n    \r\n    public handleEvent(event: Event): void {\r\n        let eventIndex = -1;\r\n        switch (event.type) {\r\n            case \"pointerdown\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"pointerup\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"pointermove\":\r\n                const canvasRect = this.getCanvasRect();\r\n                this.pointerPosition.setValues([\r\n                    ((event as MouseEvent).clientX - canvasRect.left),\r\n                    ((event as MouseEvent).clientY - canvasRect.top),\r\n                ]);\r\n                break;\r\n            case \"wheel\":\r\n                this.wheelDelta = (event as WheelEvent).deltaY / 100;\r\n                break;\r\n            case \"keydown\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"keyup\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"focusout\":\r\n                this.keyFlags.fill(false);\r\n                this.mouseFlags.fill(false);\r\n                this.wheelDelta = 0;\r\n                this.pointerPosition.setZeros();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    /*public static getAxis(axisName: string) {\r\n\r\n    }\r\n\r\n    public static getButton(buttonName: string) {\r\n\r\n    }\r\n\r\n    public static getButtonUp(buttonName: string) {\r\n\r\n    }\r\n\r\n    public static getButtonDown(buttonName: string) {\r\n\r\n    }*/\r\n\r\n    public getKey(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    public getKeyUp(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    public getKeyDown(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    public getMouseButton(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    public getPointerPosition(): Vector2 {\r\n        return this.pointerPosition.clone();\r\n    }\r\n\r\n    public getPointerScreenPosition(): Vector2 {\r\n        const positionAray = this.pointerPosition.array;\r\n        const canvasRect = this.getCanvasRect();\r\n        const x = (positionAray[0] / canvasRect.width) * 2 - 1;\r\n        const y = (positionAray[1] / canvasRect.height) * 2 - 1;\r\n        return new Vector2([x, y]);\r\n    }\r\n\r\n    public getWheelDelta(): number {\r\n        return this.wheelDelta;\r\n    }\r\n\r\n    public getMouseButtonDown(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    public getMouseButtonUp(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n}\r\n\r\nvar Input: Input = new InputBase();","import { Vector3 } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport class Space {\r\n\r\n    private constructor () {};\r\n    \r\n    public static readonly origin:      Vector3 = new Vector3([ 0,  0,  0]);\r\n    public static readonly right:       Vector3 = new Vector3([ 1,  0,  0]);\r\n    public static readonly left:        Vector3 = new Vector3([-1,  0,  0]);\r\n    public static readonly up:          Vector3 = new Vector3([ 0,  1,  0]);\r\n    public static readonly down:        Vector3 = new Vector3([ 0, -1,  0]);\r\n    public static readonly forward:     Vector3 = new Vector3([ 0,  0,  1]);\r\n    public static readonly backward:    Vector3 = new Vector3([ 0,  0, -1]);\r\n}","export { PoolAutoExtendPolicy };\r\nexport { Pool };\r\nexport { PoolBase };\r\n\r\nenum PoolAutoExtendPolicy {\r\n    NO_AUTO_EXTEND = 0,\r\n    AUTO_EXTEND_ONE = 1,\r\n    AUTO_EXTEND_POW2 = 2\r\n}\r\n\r\ninterface Pool<O extends object = object> {\r\n    readonly ctor: Constructor<O>;\r\n    readonly autoExtendPolicy: PoolAutoExtendPolicy;\r\n    acquire(count: number): O[];\r\n    release(count: number): void;\r\n    extend(count: number): void;\r\n    clear(): void;\r\n}\r\n\r\nabstract class PoolBase<O extends object = object> implements Pool<O> {\r\n    protected _ctor: Constructor<O>;\r\n    protected _autoExtendPolicy: PoolAutoExtendPolicy;\r\n    protected _autoExtendTicks: number;\r\n\r\n    protected constructor(constructor: Constructor<O>, policy?: PoolAutoExtendPolicy) {\r\n        this._ctor = constructor;\r\n        this._autoExtendPolicy = policy || PoolAutoExtendPolicy.AUTO_EXTEND_ONE;\r\n        this._autoExtendTicks = 0;\r\n    }\r\n\r\n    public get ctor(): Constructor<O> {\r\n        return this._ctor;\r\n    }\r\n\r\n    public get autoExtendPolicy(): PoolAutoExtendPolicy {\r\n        return this._autoExtendPolicy;\r\n    }\r\n\r\n    public autoExtend(): void {\r\n        switch (this._autoExtendPolicy) {\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_ONE:\r\n                this.extend(1);\r\n                break;\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_POW2:\r\n                this.extend(Math.pow(2, this._autoExtendTicks));\r\n                break;\r\n        }\r\n        this._autoExtendTicks++;\r\n    }\r\n\r\n    public abstract acquire(count: number): O[];\r\n    public abstract release(count: number): void;\r\n    public abstract extend(count: number): void;\r\n    public abstract clear(): void;\r\n}","export class MathError extends Error {\r\n    name = 'MathError';\r\n}","import { PoolAutoExtendPolicy, PoolBase, Pool } from \"./Pool\";\r\n\r\nexport { StackPool };\r\n\r\ninterface StackPool<O extends object = object> extends Pool<O> {\r\n    \r\n}\r\n\r\ninterface StackPoolConstructor {\r\n    readonly prototype: StackPool;\r\n    new<O extends object>(constructor: Constructor<O>, options?: {args?: ConstructorParameters<Constructor<O>>, policy?: PoolAutoExtendPolicy, size?: number}): StackPool<O>;\r\n}\r\n\r\nclass StackPoolBase<O extends object = object> extends PoolBase<O> implements Pool<O> {\r\n    private _objects: Array<O>;\r\n    private _top: number;\r\n\r\n    constructor(constructor: Constructor<O>, options?: {args?: any, policy?: PoolAutoExtendPolicy, size?: number}) {\r\n        super(constructor, options?.policy);\r\n        this._objects = Array(options?.size || 0).fill(0).map(() => {\r\n            return new this.ctor(options?.args);\r\n        });\r\n        this._top = 0;\r\n    }\r\n    \r\n    public acquire(count: number): O[] {\r\n        const top = this._top;\r\n        const target = top + count;\r\n\r\n        if (this._autoExtendPolicy) {\r\n            while (this._objects.length < target) {\r\n                this.autoExtend();\r\n            }\r\n        }\r\n        this._top = target;\r\n        \r\n        return this._objects.slice(top, target);\r\n    }\r\n\r\n    public release(count: number): void {\r\n        const top = this._top;\r\n        if (count > top) {\r\n            console.warn(\"Releasing under zero.\");\r\n        }\r\n        this._top = Math.max(top - count, 0);\r\n    }\r\n\r\n    public extend(count: number): void {\r\n        this._objects.push(...Array(count).fill(0).map(() => {\r\n            return new this.ctor();\r\n        }));\r\n    }\r\n    \r\n    public clear(): void {\r\n        this._objects = [];\r\n        this._top = 0;\r\n        this._autoExtendTicks = 0;\r\n    }\r\n}\r\n\r\nvar StackPool: StackPoolConstructor = StackPoolBase;","\r\nexport { deg2Rad };\r\nexport { rad2Deg };\r\nexport { qSqrt };\r\nexport { pow2 };\r\nexport { inRange };\r\nexport { clamp };\r\nexport { lerp };\r\nexport { smoothstep };\r\nexport { smootherstep };\r\nexport { randInt };\r\nexport { randFloat };\r\nexport { randFloatSpread };\r\nexport { degToRad };\r\nexport { radToDeg };\r\nexport { isPowerOfTwo };\r\nexport { ceilPowerOfTwo };\r\nexport { floorPowerOfTwo };\r\n\r\nconst DEG2RAD = Math.PI / 180;\r\nconst RAD2DEG = 180 / Math.PI;\r\n\r\nconst deg2Rad = function(deg: number): number {\r\n\treturn DEG2RAD * deg;\r\n}\r\n\r\nconst rad2Deg = function(rad: number): number {\r\n\treturn RAD2DEG / rad;\r\n}\r\n\r\nconst _bytes = new ArrayBuffer(Float32Array.BYTES_PER_ELEMENT);\r\nconst _floatView = new Float32Array(_bytes);\r\nconst _intView = new Uint32Array(_bytes);\r\n\r\nconst qSqrt = function(x: number) {\r\n\tconst halfx = x * 0.5;\r\n\r\n\t_floatView[0] = x;\r\n\t_intView[0] = 0x5f3759df -(_intView[0] >> 1);\r\n\r\n\tlet y = _floatView[0];\r\n\ty = y * (1.5 - (halfx * y * y));\r\n\r\n\treturn y;\r\n}\r\n\r\nconst pow2 = function(k: number): number {\r\n\treturn 1 << k;\r\n}\r\n\t\r\nconst inRange = function(x: number, min: number, max: number): boolean {\r\n\treturn (min <= x) && (x <= max);\r\n}\r\n\r\nconst clamp = function(value: number, min: number, max: number): number {\r\n\treturn Math.max(min, Math.min(max, value));\r\n}\r\n\r\nconst lerp = function(x: number, y: number, t: number): number {\r\n\treturn (1 - t) * x + t * y;\r\n}\r\n\r\nconst smoothstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * (3 - 2 * x);\r\n}\r\n\r\nconst smootherstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * x * ( x * ( x * 6 - 15) + 10);\r\n}\r\n\r\nconst randInt = function(low: number, high: number): number {\r\n\treturn low + Math.floor(Math.random() * (high - low + 1));\r\n}\r\n\r\nconst randFloat = function(low: number, high: number): number {\r\n\treturn low + Math.random() * (high - low);\r\n}\r\n\r\nconst randFloatSpread = function(range: number): number {\r\n\treturn range * (0.5 - Math.random());\r\n}\r\n\r\nconst degToRad = function(degrees: number): number {\r\n\treturn degrees * DEG2RAD;\r\n}\r\n\r\nconst radToDeg = function(radians: number): number {\r\n\treturn radians * RAD2DEG;\r\n}\r\nconst isPowerOfTwo = function(value: number): boolean {\r\n\treturn (value & (value - 1)) === 0 && value !== 0;\r\n}\r\n\r\nconst ceilPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\r\n}\r\n\r\nconst floorPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3Values, Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { Matrix3Values };\r\nexport { Matrix3 };\r\nexport { Matrix3Injector };\r\nexport { Matrix3Base };\r\n\r\ntype Matrix3Values = [\r\n  number, number, number,\r\n  number, number, number,\r\n  number, number, number\r\n];\r\n\r\ninterface Matrix3Constructor {\r\n\treadonly prototype: Matrix3;\r\n\tnew(): Matrix3;\r\n\tnew(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): Matrix3;\r\n  new(array: ArrayLike<number>): Matrix3;\r\n  rotationX(angle: number): Matrix3;\r\n  rotationY(angle: number): Matrix3;\r\n  rotationZ(angle: number): Matrix3;\r\n}\r\n\r\ninterface Matrix3 {\r\n  readonly array: WritableArrayLike<number>;\r\n  setValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this;\r\n  getValues(): Matrix3Values;\r\n  row1: Vector3Values;\r\n  row2: Vector3Values;\r\n  row3: Vector3Values;\r\n  col1: Vector3Values;\r\n  col2: Vector3Values;\r\n  col3: Vector3Values;\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  setRotationX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n\r\n  equals(mat: Matrix3): boolean;\r\n  copy(mat: Matrix3): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix3): this;\r\n  sub(mat: Matrix3): this;\r\n  mult(mat: Matrix3): this;\r\n  multScalar(k: number): this;\r\n  solve(vecB: Vector3): Vector3Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass Matrix3Base implements Matrix3 {\r\n  public readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  )\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[0], args[1], args[2],\r\n        args[3], args[4], args[5],\r\n        args[6], args[7], args[8]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([\r\n        0, 0, 0,\r\n        0, 0, 0,\r\n        0, 0, 0\r\n      ]);\r\n\t\t}\r\n  }\r\n\r\n  public get row1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[3],\r\n      this.array[6]\r\n    ];\r\n\t}\r\n\r\n\tpublic set row1(row: Vector3Values) {\r\n    this.array[0] = row[0];\r\n    this.array[3] = row[1];\r\n    this.array[6] = row[2];\r\n  }\r\n\r\n  public get row2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[1],\r\n      this.array[4],\r\n      this.array[7]\r\n    ];\r\n\t}\r\n\r\n\tpublic set row2(row: Vector3Values) {\r\n    this.array[1] = row[0];\r\n    this.array[4] = row[1];\r\n    this.array[7] = row[2]\r\n  }\r\n\r\n  public get row3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[2],\r\n      this.array[5],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tpublic set row3(row: Vector3Values) {\r\n    this.array[2] = row[0];\r\n    this.array[5] = row[1];\r\n    this.array[8] = row[2]\r\n  }\r\n\r\n  public get col1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[1],\r\n      this.array[2]\r\n    ];\r\n\t}\r\n\r\n\tpublic set col1(col: Vector3Values) {\r\n    this.array[0] = col[0];\r\n    this.array[1] = col[1];\r\n    this.array[2] = col[2];\r\n  }\r\n\r\n  public get col2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[3],\r\n      this.array[4],\r\n      this.array[5]\r\n    ];\r\n\t}\r\n\r\n\tpublic set col2(col: Vector3Values) {\r\n    this.array[3] = col[0];\r\n    this.array[4] = col[1];\r\n    this.array[5] = col[2]\r\n  }\r\n\r\n  public get col3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[6],\r\n      this.array[7],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tpublic set col3(col: Vector3Values) {\r\n    this.array[6] = col[0];\r\n    this.array[7] = col[1];\r\n    this.array[8] = col[2];\r\n  }\r\n\r\n  public get m11() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tpublic set m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  public get m12() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tpublic set m12(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  public get m13() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tpublic set m13(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  public get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tpublic set m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  public get m22() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tpublic set m22(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  public get m23() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tpublic set m23(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  public get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  public set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  public get m32() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tpublic set m32(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  public get m33() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n  public set m33(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 9) {\r\n\t\t\tthrow new MathError(`Array must be of length 9 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n  public getValues(): Matrix3Values {\r\n\t\treturn [\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8],\r\n    ];\r\n\t}\r\n\r\n\tpublic setValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this {\r\n    this.array[0] = m11;\r\n    this.array[1] = m21;\r\n    this.array[2] = m31;\r\n    this.array[3] = m12;\r\n    this.array[4] = m22;\r\n    this.array[5] = m32;\r\n    this.array[6] = m13;\r\n    this.array[7] = m23;\r\n    this.array[8] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n\tpublic equals(other: Matrix3): boolean {\r\n    const o = other.array;\r\n    return this.array[0] === o[0]\r\n      && this.array[1] === o[1]\r\n      && this.array[2] === o[2]\r\n      && this.array[3] === o[3]\r\n      && this.array[4] === o[4]\r\n      && this.array[5] === o[5]\r\n      && this.array[6] === o[6]\r\n      && this.array[7] === o[7]\r\n      && this.array[8] === o[8];\r\n  }\r\n\r\n  public copy(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = m[0];\r\n    o[1] = m[1];\r\n    o[2] = m[2];\r\n    o[3] = m[3];\r\n    o[4] = m[4];\r\n    o[5] = m[5];\r\n    o[6] = m[6];\r\n    o[7] = m[7];\r\n    o[8] = m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  public clone(): this {\r\n    return new Matrix3Base(\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8]\r\n    ) as this;\r\n  }\r\n\r\n  public setIdentity(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 1;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 1;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  public setZeros(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 0;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 0;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  public det(): number {\r\n    const o = this.array;\r\n\r\n    const x = o[0] * ((o[4] * o[8]) - (o[5] * o[7]));\r\n    const y = o[1] * ((o[3] * o[8]) - (o[5] * o[6]));\r\n    const z = o[2] * ((o[3] * o[7]) - (o[4] * o[6]));\r\n\r\n    return x - y + z;\r\n  }\r\n\r\n  public trace(): number {\r\n    const o = this.array;\r\n    \r\n    return o[0] + o[4] + o[8];\r\n  }\r\n\r\n  public negate(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = -o[0];\r\n    o[1] = -o[1];\r\n    o[2] = -o[2];\r\n    o[3] = -o[3];\r\n    o[4] = -o[4];\r\n    o[5] = -o[5];\r\n    o[6] = -o[6];\r\n    o[7] = -o[7];\r\n    o[8] = -o[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  public transpose(): this {\r\n    const o = this.array;\r\n\r\n    let t;\r\n\r\n    t = o[1];\r\n    o[1] = o[3];\r\n    o[3] = t;\r\n\r\n    t = o[2];\r\n    o[2] = o[6];\r\n    o[6] = t;\r\n\r\n    t = o[5];\r\n    o[5] = o[7];\r\n    o[7] = t;\r\n    \r\n    return this;\r\n  }\r\n\r\n  public invert(): this {\r\n    const o = this.array;\r\n\r\n    const t11 = o[1 * 3 + 1] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 1];\r\n    const t12 = o[0 * 3 + 1] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 1];\r\n    const t13 = o[0 * 3 + 1] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 1];\r\n\r\n    const t21 = o[1 * 3 + 0] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 0];\r\n    const t22 = o[0 * 3 + 0] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 0];\r\n    const t23 = o[0 * 3 + 0] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 0];\r\n\r\n    const t31 = o[1 * 3 + 0] * o[2 * 3 + 1] - o[1 * 3 + 1] * o[2 * 3 + 0];\r\n    const t32 = o[0 * 3 + 0] * o[2 * 3 + 1] - o[0 * 3 + 1] * o[2 * 3 + 0];\r\n    const t33 = o[0 * 3 + 0] * o[1 * 3 + 1] - o[0 * 3 + 1] * o[1 * 3 + 0];\r\n\r\n    const d = 1.0 / (o[0 * 3 + 0] * t11 - o[1 * 3 + 0] * t12 + o[2 * 3 + 0] * t13);\r\n\r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    o[0] = d * t11;\r\n    o[1] = -d * t12;\r\n    o[2] = d * t13;\r\n\r\n    o[3] = -d * t21;\r\n    o[4] = d * t22;\r\n    o[5] = -d * t23;\r\n\r\n    o[6] = d * t31;\r\n    o[7] = -d * t32;\r\n    o[8] = d * t33;\r\n\r\n    return this;\r\n  }\r\n\r\n  public add(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] + m[0];\r\n    o[1] = o[1] + m[1];\r\n    o[2] = o[2] + m[2];\r\n    o[3] = o[3] + m[3];\r\n    o[4] = o[4] + m[4];\r\n    o[5] = o[5] + m[5];\r\n    o[6] = o[6] + m[6];\r\n    o[7] = o[7] + m[7];\r\n    o[8] = o[8] + m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  public sub(mat: Matrix3Base): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] - m[0];\r\n    o[1] = o[1] - m[1];\r\n    o[2] = o[2] - m[2];\r\n    o[3] = o[3] - m[3];\r\n    o[4] = o[4] - m[4];\r\n    o[5] = o[5] - m[5];\r\n    o[6] = o[6] - m[6];\r\n    o[7] = o[7] - m[7];\r\n    o[8] = o[8] - m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  public mult(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    const a11 = o[0 * 3 + 0];\r\n    const a12 = o[0 * 3 + 1];\r\n    const a13 = o[0 * 3 + 2];\r\n    const a21 = o[1 * 3 + 0];\r\n    const a22 = o[1 * 3 + 1];\r\n    const a23 = o[1 * 3 + 2];\r\n    const a31 = o[2 * 3 + 0];\r\n    const a32 = o[2 * 3 + 1];\r\n    const a33 = o[2 * 3 + 2];\r\n    const b11 = m[0 * 3 + 0];\r\n    const b12 = m[0 * 3 + 1];\r\n    const b13 = m[0 * 3 + 2];\r\n    const b21 = m[1 * 3 + 0];\r\n    const b22 = m[1 * 3 + 1];\r\n    const b23 = m[1 * 3 + 2];\r\n    const b31 = m[2 * 3 + 0];\r\n    const b32 = m[2 * 3 + 1];\r\n    const b33 = m[2 * 3 + 2];\r\n\r\n    o[0] = b11 * a11 + b12 * a21 + b13 * a31;\r\n    o[1] = b11 * a12 + b12 * a22 + b13 * a32;\r\n    o[2] = b11 * a13 + b12 * a23 + b13 * a33;\r\n    o[3] = b21 * a11 + b22 * a21 + b23 * a31;\r\n    o[4] = b21 * a12 + b22 * a22 + b23 * a32;\r\n    o[5] = b21 * a13 + b22 * a23 + b23 * a33;\r\n    o[6] = b31 * a11 + b32 * a21 + b33 * a31;\r\n    o[7] = b31 * a12 + b32 * a22 + b33 * a32;\r\n    o[8] = b31 * a13 + b32 * a23 + b33 * a33;\r\n\r\n    return this;\r\n  }\r\n\r\n  public multScalar(k: number): this {\r\n    const o = this.array;\r\n\r\n    o[0] = o[0] * k;\r\n    o[1] = o[1] * k;\r\n    o[2] = o[2] * k;\r\n    o[3] = o[3] * k;\r\n    o[4] = o[4] * k;\r\n    o[5] = o[5] * k;\r\n    o[6] = o[6] * k;\r\n    o[7] = o[7] * k;\r\n    o[8] = o[8] * k;\r\n\r\n    return this;\r\n  }\r\n\r\n  public writeIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst m = this.array;\r\n\r\n\t\tout[offset     ] = m[ 0];\r\n\t\tout[offset +  1] = m[ 1];\r\n    out[offset +  2] = m[ 2];\r\n    out[offset +  3] = m[ 3];\r\n\t\tout[offset +  4] = m[ 4];\r\n    out[offset +  5] = m[ 5];\r\n    out[offset +  6] = m[ 6];\r\n\t\tout[offset +  7] = m[ 7];\r\n    out[offset +  8] = m[ 8];\r\n  }\r\n    \r\n  public readFromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[ 0] = arr[offset     ];\r\n\t\to[ 1] = arr[offset +  1];\r\n    o[ 2] = arr[offset +  2];\r\n    o[ 3] = arr[offset +  3];\r\n    o[ 4] = arr[offset +  4];\r\n    o[ 5] = arr[offset +  5];\r\n    o[ 6] = arr[offset +  6];\r\n\t\to[ 7] = arr[offset +  7];\r\n    o[ 8] = arr[offset +  8];\r\n  }\r\n\r\n  public static rotationX(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationX(angle);\r\n  }\r\n\r\n  public setRotationX(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = 1;\r\n    this.array[1] = 0;\r\n    this.array[2] = 0;\r\n    this.array[3] = 0;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = sinAngle;\r\n    this.array[6] = 0;\r\n    this.array[7] = -sinAngle;\r\n    this.array[8] = cosAngle;\r\n\r\n    return this;\r\n  }\r\n  \r\n  public static rotationY(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationY(angle);\r\n  }\r\n\r\n  public setRotationY(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n    \r\n    this.array[0] = cosAngle;\r\n    this.array[1] = 0;\r\n    this.array[2] = -sinAngle;\r\n    this.array[3] = 0;\r\n    this.array[4] = 1;\r\n    this.array[5] = 0;\r\n    this.array[6] = sinAngle;\r\n    this.array[7] = 0;\r\n    this.array[8] = cosAngle;\r\n    \r\n    return this;\r\n  }\r\n\r\n  public static rotationZ(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationZ(angle);\r\n  }\r\n\r\n  public setRotationZ(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = cosAngle;\r\n    this.array[1] = sinAngle;\r\n    this.array[2] = 0;\r\n    this.array[3] = -sinAngle;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = 0;\r\n    this.array[6] = 0;\r\n    this.array[7] = 0;\r\n    this.array[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  public solve(vecB: Vector3): Vector3Values {\r\n    const a = this.array;\r\n    \r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a13 = a[2];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const a23 = a[5];\r\n    const a31 = a[6];\r\n    const a32 = a[7];\r\n    const a33 = a[8];\r\n    const bx = vecB.x - a[12];\r\n    const by = vecB.y - a[13];\r\n    const bz = vecB.z - a[14];\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n  \r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n  \r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n\r\n    return [\r\n      x, y, z\r\n    ];\r\n  }\r\n\r\n  public solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const bx = vecB.x - a[4];\r\n    const by = vecB.y - a[7];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by)\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n}\r\n\r\nvar Matrix3: Matrix3Constructor = Matrix3Base;\r\nconst Matrix3Injector: Injector<Matrix3Constructor> = new Injector({\r\n\tdefaultCtor: Matrix3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix3Constructor) => {\r\n\t\t\tMatrix3 = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Space } from \"../../geometry/space/Space\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { qSqrt } from \"../../Snippets\";\r\nimport { Matrix3 } from \"../matrices/Matrix3\";\r\nimport { Matrix4 } from \"../matrices/Matrix4\";\r\nimport { Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { QuaternionValues };\r\nexport { Quaternion };\r\nexport { QuaternionInjector };\r\nexport { QuaternionPool };\r\n\r\ntype QuaternionValues = [number, ...number[]] & { length: 4 };\r\n\r\ninterface QuaternionConstructor {\r\n\treadonly prototype: Quaternion;\r\n\tnew(): Quaternion;\r\n\tnew(x: number, y: number, z: number, w: number): Quaternion;\r\n\tnew(array: WritableArrayLike<number>): Quaternion;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tslerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tfromArray(vector: ArrayLike<number>): Quaternion;\r\n\tfromAxisAngle(axis: Vector3, angle?: number): Quaternion;\r\n\tfromEuler(pitch: number, yaw: number, roll: number): Quaternion;\r\n\tfromVector(vector: Vector3): Quaternion;\r\n\tfromMatrix(matrix: Matrix3): Quaternion;\r\n}\r\n// TODO?:\r\n// roll => pitch\r\n// pitch => yaw\r\n// yaw => roll\r\ninterface Quaternion {\r\n\treadonly array: WritableArrayLike<number>;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\tw: number;\r\n\tpitch: number;\r\n\tyaw: number;\r\n\troll: number;\r\n\tgetValues(): QuaternionValues;\r\n\tsetValues(\r\n\t  x: number, y: number,\r\n\t  z: number, w: number\r\n\t): this;\r\n\t//setArray(array: WritableArrayLike<number>): this;\r\n\tlookAt(source: Vector3, dest: Vector3): Quaternion ;\r\n\tsetEuler(pitch: number, yaw: number, roll: number): this;\r\n\r\n\tsetMatrix(matrix: Matrix3): Quaternion;\r\n\tsetMatrix(matrix: Matrix4): Quaternion;\r\n\r\n\tsetAxisAngle(axis: Vector3, angle: number): this;\r\n\tsetVectors(from: Vector3, to: Vector3): this;\r\n\t\r\n\tcopy(quat: Quaternion): this;\r\n\tclone(): this;\r\n\tgetAxis(out: Vector3): Vector3;\r\n\r\n\tgetMatrix(): Matrix3;\r\n\t\r\n\trotate(vec: Vector3): Vector3;\r\n\ttoVector(): Vector3;\r\n\r\n\tangleTo(quat: Quaternion): number;\r\n\trotateTowards(quat: Quaternion): this;\r\n\tinvert(): this;\r\n\tconjugate(): this;\r\n\tdot(quat: Quaternion): number;\r\n\tlengthSquared(): number;\r\n\tlength(): number;\r\n\tnormalize(): this;\r\n\tadd(quat: Quaternion): this;\r\n\tsub(quat: Quaternion): this;\r\n\tmult(quat: Quaternion): this;\r\n\tscale(scalar: number): this;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): this;\r\n\tequals(quat: Quaternion): boolean;\r\n\tcopyIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass QuaternionBase {\r\n\tprivate _array: WritableArrayLike<number>;\r\n\r\n\tpublic get array(): WritableArrayLike<number> {\r\n\t\treturn this._array;\r\n\t}\r\n\r\n\tconstructor()\r\n\tconstructor(array: WritableArrayLike<number>)\r\n\tconstructor(x: number, y: number, z: number, w: number)\r\n\tconstructor(...args: any[]) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis._array = [\r\n\t\t\t\targs[0], args[1], args[2], args[3]\r\n\t\t\t];\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tthis._checkArray(args[0]);\r\n\t\t\tthis._array = args[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._array = [0, 0, 0, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get x(): number {\r\n        return this._array[0];\r\n    }\r\n\r\n    public set x(x: number) {\r\n\t\tthis._array[0] = x;\r\n    }\r\n\r\n    public get y(): number {\r\n        return this._array[1];\r\n    }\r\n\r\n    public set y(y: number) {\r\n\t\tthis._array[1] = y;\r\n    }\r\n\r\n    public set z(z: number) {\r\n\t\tthis._array[2] = z;\r\n\t}\r\n\t\r\n    public get z(): number {\r\n\t\treturn this._array[2];\r\n    }\r\n\r\n    public set w(w: number) {\r\n\t\tthis._array[3] = w;\r\n\t}\r\n\r\n    public get w(): number {\r\n\t\treturn this._array[3];\r\n\t}\r\n\t\r\n\tpublic get pitch(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinPitch = 2 * (w * y - z * x);\r\n\t\tif (Math.abs(sinPitch) >= 1) {\r\n            return Math.sign(sinPitch) * (Math.PI / 2);\r\n        }\r\n\t\telse {\r\n            return Math.asin(sinPitch);\r\n        }\r\n\t}\r\n\r\n\tpublic get yaw(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinYawCosPitch = 2 * (w * z + x * y);\r\n\t\tconst cosYawCosPitch = 1 - 2 * (y * y + z * z);\r\n\t\treturn Math.atan2(sinYawCosPitch, cosYawCosPitch);\r\n\t}\r\n\r\n\tpublic get roll(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinRollCosPitch = 2 * (w * x + y * z);\r\n\t\tconst cosRollCosPitch = 1 - 2 * (x * x + y * y);\r\n\t\treturn Math.atan2(sinRollCosPitch, cosRollCosPitch);\r\n\t}\r\n\r\n\tpublic getValues(): QuaternionValues {\r\n\t\treturn [\r\n\t\t\tthis._array[0],\r\n\t\t\tthis._array[1],\r\n\t\t\tthis._array[2],\r\n\t\t\tthis._array[3]\r\n\t\t];\r\n\t}\r\n\r\n\tpublic setValues(x: number, y: number, z: number, w: number): this {\r\n\t\tthis._array[0] = x;\r\n\t\tthis._array[1] = y;\r\n\t\tthis._array[2] = z;\r\n\t\tthis._array[3] = w;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate _checkArray(array: WritableArrayLike<number>): void {\r\n\t\tif (array.length < 4) {\r\n\t\t\tthrow new MathError(`Array must be of length 4 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t/*public setArray(array: WritableArrayLike<number>): this {\r\n\t\tthis._checkArray(array);\r\n\t\tthis._array = array;\r\n\t\treturn this;\r\n\t}*/\r\n\r\n\tpublic static fromArray(array: WritableArrayLike<number>): QuaternionBase {\r\n\t\treturn new QuaternionBase(array);\r\n\t}\r\n\r\n\tpublic static fromAxisAngle(axis: Vector3, angle: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setAxisAngle(axis, angle);\r\n\t}\r\n\r\n\tpublic static fromVector(vector: Vector3): QuaternionBase {\r\n\t\treturn new QuaternionBase(vector.x, vector.y, vector.z, 1);\r\n\t}\r\n\t\r\n\tpublic static fromEuler(yaw: number, pitch: number, roll: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setEuler(yaw, pitch, roll);\r\n\t}\r\n\r\n\tpublic copy(quat: Quaternion): this {\r\n\t\tconst o = this._array;\r\n\t\tconst q = quat.array;\r\n\r\n\t\to[0] = q[0];\r\n\t\to[1] = q[1];\r\n\t\to[2] = q[2];\r\n\t\to[3] = q[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic clone(): this {\r\n\t\treturn new QuaternionBase(this.x, this.y, this.z, this.w) as this;\r\n\t}\r\n\r\n\tpublic equals(quat: Quaternion): boolean {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\treturn (thisArray[0] === quatArray[0])\r\n\t\t\t&& (thisArray[1] === quatArray[1])\r\n\t\t\t&& (thisArray[2] === quatArray[2])\r\n\t\t\t&& (thisArray[3] === quatArray[3]);\r\n\t}\r\n\r\n\tpublic getAxis(out: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst outArray = out.array;\r\n\r\n\t\tconst den = 1 - (thisArray[3] * thisArray[3]);\r\n\r\n\t\tif (den < Number.EPSILON) {\r\n\t\t  return out.setZeros();\r\n\t\t}\r\n\t  \r\n\t\tconst scale = qSqrt(den);\r\n\t\t\r\n\t\toutArray[0] = thisArray[0] * scale;\r\n\t\toutArray[1] = thisArray[1] * scale;\r\n\t\toutArray[2] = thisArray[2] * scale;\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\tpublic getMatrix(): Matrix3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst thisLengthSquared = this.lengthSquared();\r\n\t\tconst s = 2.0 / thisLengthSquared;\r\n\r\n\t\tconst x = thisArray[0];\r\n\t\tconst y = thisArray[1];\r\n\t\tconst z = thisArray[2];\r\n\t\tconst w = thisArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n\t\treturn new Matrix3([\r\n\t\t\t1 - (yy + zz),\txy + wz,\t\txz - wy,\r\n\t\t\txy - wz,\t\t1 - (xx + zz),\tyz + wx,\r\n\t\t\txz + wy,\t\tyz - wx,\t\t1 - (xx + yy)\r\n\t\t]);\r\n\t}\r\n\r\n\tpublic rotate(vector: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst vectorArray = vector.array;\r\n\r\n\t\tconst vx = vectorArray[0];\r\n\t\tconst vy = vectorArray[1];\r\n\t\tconst vz = vectorArray[2];\t\t\r\n\t\t\r\n\t\tconst qx = thisArray[0];\r\n\t\tconst qy = thisArray[1];\r\n\t\tconst qz = thisArray[2];\r\n\t\tconst qw = thisArray[3];\r\n\r\n\t\tconst tx = qw * vx + -qx * 0 + -qy * vz + qz * vy;\r\n\t\tconst ty = qw * vy + -qy * 0 + -qz * vx + qx * vz;\r\n\t\tconst tz = qw * vz + -qz * 0 + -qx * vy + qy * vx;\r\n\t\tconst tw = qx * vx + qw * 0 + qy * vy + qz * vz;\r\n\r\n\t\tvectorArray[0] = tw * qz + tz * qw + tx * qy - ty * qx;\r\n\t\tvectorArray[1] = tw * qy + ty * qw + tz * qx - tx * qz;\r\n\t\tvectorArray[2] = tw * qx + tx * qw + ty * qz - tz * qy;\r\n\r\n\t\treturn vector;\r\n\t}\r\n\r\n\tpublic toVector(): Vector3 {\r\n\t\treturn new Vector3([\r\n\t\t\tthis.x, this.y, this.z\r\n\t\t]);\r\n\t}\r\n\t\r\n\tpublic setEuler(pitch: number, yaw: number, roll: number): this {\r\n\t\tconst cosYaw = Math.cos(yaw * 0.5);\r\n\t\tconst sinYaw = Math.sin(yaw * 0.5);\r\n\t\tconst cosPitch = Math.cos(pitch * 0.5);\r\n\t\tconst sinPitch = Math.sin(pitch * 0.5);\r\n\t\tconst cosRoll = Math.cos(roll * 0.5);\r\n\t\tconst sinRoll = Math.sin(roll * 0.5);\r\n\t\tconst thisArray = this.array;\r\n\r\n        thisArray[0] = sinRoll * cosPitch * cosYaw - cosRoll * sinPitch * sinYaw;\r\n        thisArray[1] = cosRoll * sinPitch * cosYaw + sinRoll * cosPitch * sinYaw;\r\n        thisArray[2] = cosRoll * cosPitch * sinYaw - sinRoll * sinPitch * cosYaw;\r\n\t\tthisArray[3] = cosRoll * cosPitch * cosYaw + sinRoll * sinPitch * sinYaw;\r\n        \r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic setAxisAngle(axis: Vector3, angle: number = 0): this {\r\n\t\tconst axisLength = axis.length();\r\n\t\tif (axisLength === 0) {\r\n\t\t  return this;\r\n\t\t}\r\n\t\tconst halfSin = Math.sin(angle * 0.5) / axisLength;\r\n\t\tconst axisArray = axis.array;\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] = axisArray[0] * halfSin;\r\n\t\tthisArray[1] = axisArray[1] * halfSin;\r\n\t\tthisArray[2] = axisArray[2] * halfSin;\r\n\t\tthisArray[3] = Math.cos(angle * 0.5);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic setMatrix(matrix: Matrix3): this\r\n\tpublic setMatrix(matrix: Matrix4): this\r\n\tpublic setMatrix(matrix: Matrix3 | Matrix4): this {\r\n\t\tconst matrixArray = matrix.array;\r\n\t\tlet m11 = 0, m12 = 0, m13 = 0,\r\n\t\t\tm21 = 0, m22 = 0, m23 = 0,\r\n\t\t\tm31 = 0, m32 = 0, m33 = 0;\r\n\r\n\t\tif (matrix instanceof Matrix3) {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[3], m13 = matrixArray[6],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[4], m23 = matrixArray[7],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[5], m33 = matrixArray[8];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[4], m13 = matrixArray[ 8],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[5], m23 = matrixArray[ 9],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[6], m33 = matrixArray[10];\r\n\t\t}\r\n\r\n\t\tconst trace = m11 + m22 + m33;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tif (trace > 0) {\r\n\t\t\tconst s = Math.sqrt(trace + 1) * 2;\r\n\t\t\tthisArray[3] = 0.25 * s;\r\n\t\t\tthisArray[0] = (m32 - m23) / s;\r\n\t\t\tthisArray[1] = (m13 - m31) / s;\r\n\t\t\tthisArray[2] = (m21 - m12) / s;\r\n\t\t}\r\n\t\telse if (m11 > m22 && m11 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n\t\t\tthisArray[3] = (m32 - m23) / s;\r\n\t\t\tthisArray[0] = 0.25 * s;\r\n\t\t\tthisArray[1] = (m12 + m21) / s;\r\n\t\t\tthisArray[2] = (m13 + m31) / s;\r\n\t\t}\r\n\t\telse if (m22 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n\t\t\tthisArray[3] = (m13 - m31) / s;\r\n\t\t\tthisArray[0] = (m12 + m21) / s;\r\n\t\t\tthisArray[1] = 0.25 * s;\r\n\t\t\tthisArray[2] = (m23 + m32) / s;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n\t\t\tthisArray[3] = (m21 - m12) / s;\r\n\t\t\tthisArray[0] = (m13 + m31) / s;\r\n\t\t\tthisArray[1] = (m23 + m32) / s;\r\n\t\t\tthisArray[2] = 0.25 * s;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic lookAt(source: Vector3, dest: Vector3): Quaternion {\r\n\t\tconst forward = dest.clone().sub(source).normalize();\r\n\r\n\t\tconst axis = Space.forward.clone().cross(forward);\r\n\t\tconst dot = Space.forward.dot(forward);\r\n\r\n\t\treturn new Quaternion(axis.x, axis.y, axis.z, dot + 1).normalize();\r\n\t}\r\n\r\n\tpublic static fromMatrix(matrix: Matrix3): QuaternionBase {\r\n\t\treturn new QuaternionBase().setMatrix(matrix);\r\n\t}\r\n\r\n\tpublic setVectors(from: Vector3, to: Vector3): this {\r\n\t\tconst dot = from.dot(to);\r\n\t\tconst cross = from.cross(to);\r\n\t\tconst crossArray = cross.array;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = crossArray[0];\r\n\t\tthisArray[1] = crossArray[1];\r\n\t\tthisArray[2] = crossArray[2];\r\n\r\n\t\tconst fromLength = from.length();\r\n\t\tconst toLength = from.length();\r\n\r\n\t\tthisArray[3] = Math.sqrt(fromLength * fromLength * toLength * toLength) + dot;\r\n\r\n\t\treturn this.normalize();\r\n\t}\r\n\r\n\tpublic dot(quat: Quaternion): number {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\treturn thisArray[0] * quatArray[0] + thisArray[1] * quatArray[1] + thisArray[2] * quatArray[2] + thisArray[3] * quatArray[3];\r\n\t}\r\n\r\n\tpublic lengthSquared(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn thisArray[0] ** 2 + thisArray[1] ** 2 + thisArray[2] ** 2 + thisArray[3] ** 2;\r\n\t}\r\n\r\n\tpublic length(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn Math.hypot(thisArray[0], thisArray[1], thisArray[2], thisArray[3]);\r\n\t}\r\n\r\n\tpublic angleTo(rotation: Quaternion): number {\r\n\t\treturn 2 * Math.acos(Math.abs(Math.max(-1, Math.min(1, this.dot(rotation)))));\r\n\t}\r\n\r\n\tpublic rotateTowards(rotation: Quaternion): this {\r\n\t\tconst angle = this.angleTo(rotation);\r\n\r\n\t\tif (angle === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconst t = Math.min(1, angle);\r\n\t\tthis.slerp(this, rotation, t);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic invert(): this {\r\n\t\treturn this.conjugate();\r\n\t}\r\n\t\r\n\tpublic conjugate(): this {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] *= -1;\r\n\t\tthisArray[1] *= -1;\r\n\t\tthisArray[2] *= -1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic normalize(): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tlet length = this.length();\r\n\r\n\t\tif (length === 0) {\r\n\t\t\tthisArray[0] = 0;\r\n\t\t\tthisArray[1] = 0;\r\n\t\t\tthisArray[2] = 0;\r\n\t\t\tthisArray[3] = 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlength = 1 / length;\r\n\t\t\tthisArray[0] *= length;\r\n\t\t\tthisArray[1] *= length;\r\n\t\t\tthisArray[2] *= length;\r\n\t\t\tthisArray[3] *= length;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tpublic add(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] += quatArray[0];\r\n\t\tthisArray[1] += quatArray[1];\r\n\t\tthisArray[2] += quatArray[2];\r\n\t\tthisArray[3] += quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic sub(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] -= quatArray[0];\r\n\t\tthisArray[1] -= quatArray[1];\r\n\t\tthisArray[2] -= quatArray[2];\r\n\t\tthisArray[3] -= quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic mult(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\tconst ax = thisArray[0], ay = thisArray[1], az = thisArray[2], aw = thisArray[3];\r\n\t\tconst bx = quatArray[0], by = quatArray[1], bz = quatArray[2], bw = quatArray[3];\r\n\r\n\t\tthisArray[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n\t\tthisArray[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n\t\tthisArray[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n\t\tthisArray[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic scale(scalar: number): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] *= scalar;\r\n\t\tthisArray[1] *= scalar;\r\n\t\tthisArray[2] *= scalar;\r\n\t\tthisArray[3] *= scalar;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic static slerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tpublic static slerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tpublic static slerp(from: Quaternion, to: Quaternion, t: number, out?: Quaternion): Quaternion {\r\n\t\tif (!(out instanceof Quaternion)) {\r\n\t\t\tout = new Quaternion();\r\n\t\t}\r\n\t\tif (t === 0) return out.copy(from);\r\n\t\tif (t === 1) return out.copy(to);\r\n\r\n\t\tconst outArray = out.array;\r\n\t\tconst fromArray = from.array;\r\n\t\tconst toArray = to.array;\r\n\r\n\t\tconst cosHalfTheta = fromArray[3] * toArray[3] + fromArray[0] * toArray[0] + fromArray[1] * toArray[1] + fromArray[2] * toArray[2];\r\n\t\t\r\n\t\tif (Math.abs(cosHalfTheta) >= 1) {\r\n\t\t\toutArray[3] = fromArray[3];\r\n\t\t\toutArray[0] = fromArray[0];\r\n\t\t\toutArray[1] = fromArray[1];\r\n\t\t\toutArray[2] = fromArray[2];\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst halfTheta = Math.acos(cosHalfTheta);\r\n\t\tconst sinHalfTheta = Math.sqrt(1 - cosHalfTheta * cosHalfTheta);\r\n\t\t\r\n\t\tif (Math.abs(sinHalfTheta - Math.trunc(sinHalfTheta)) < Number.EPSILON) {\r\n\t\t\toutArray[3] = (fromArray[3] * 0.5 + toArray[3] * 0.5);\r\n\t\t\toutArray[0] = (fromArray[0] * 0.5 + toArray[0] * 0.5);\r\n\t\t\toutArray[1] = (fromArray[1] * 0.5 + toArray[1] * 0.5);\r\n\t\t\toutArray[2] = (fromArray[2] * 0.5 + toArray[2] * 0.5);\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta;\r\n\t\tconst ratioB = Math.sin(t * halfTheta) / sinHalfTheta; \r\n\t\toutArray[3] = (fromArray[3] * ratioA + toArray[3] * ratioB);\r\n\t\toutArray[0] = (fromArray[0] * ratioA + toArray[0] * ratioB);\r\n\t\toutArray[1] = (fromArray[1] * ratioA + toArray[1] * ratioB);\r\n\t\toutArray[2] = (fromArray[2] * ratioA + toArray[2] * ratioB);\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * https://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t */\r\n\tpublic slerp(from: Quaternion, to: Quaternion, t: number): this {\r\n\t\treturn Quaternion.slerp(from, to, t, this) as this;\r\n\t}\r\n\r\n\tpublic copyIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tarray[offset    ] = thisArray[0];\r\n\t\tarray[offset + 1] = thisArray[1];\r\n\t\tarray[offset + 2] = thisArray[2];\r\n\t\tarray[offset + 3] = thisArray[3];\r\n    }\r\n    \r\n    public readFromArray(array: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = array[offset    ];\r\n\t\tthisArray[1] = array[offset + 1];\r\n\t\tthisArray[2] = array[offset + 2];\r\n\t\tthisArray[3] = array[offset + 3];\r\n    }\r\n}\r\n\r\nvar Quaternion: QuaternionConstructor = QuaternionBase;\r\nconst QuaternionPool: StackPool<Quaternion> = new StackPool(QuaternionBase);\r\nconst QuaternionInjector: Injector<QuaternionConstructor> = new Injector({\r\n\tdefaultCtor: QuaternionBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: QuaternionConstructor) => {\r\n\t\t\tQuaternion = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Quaternion } from \"../quaternions/Quaternion\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"../vectors/Vector3\";\r\nimport { Vector4, Vector4Values } from \"../vectors/Vector4\";\r\nimport { Matrix3, Matrix3Values } from \"./Matrix3\";\r\n\r\nexport { Matrix4Values };\r\nexport { Matrix4 };\r\nexport { Matrix4Injector };\r\nexport { Matrix4Base };\r\n\r\ntype Matrix4Values = [\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number\r\n];\r\n\r\ninterface Matrix4Constructor {\r\n\treadonly prototype: Matrix4;\r\n\tnew(): Matrix4;\r\n\tnew(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  new(array: ArrayLike<number>): Matrix4;\r\n\r\n  fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  fromArray(array: ArrayLike<number>): Matrix4;\r\n\r\n  invert(A: Matrix4, out: Matrix4): Matrix4;\r\n  transpose(A: Matrix4, out: Matrix4): Matrix4;\r\n  add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n\r\n  identity(): Matrix4;\r\n  zeros(): Matrix4;\r\n\r\n  translation(vector: Vector3): Matrix4;\r\n  rotationX(angle: number): Matrix4;\r\n  rotationY(angle: number): Matrix4;\r\n  rotationZ(angle: number): Matrix4;\r\n  rotation(matrix: Matrix3): Matrix4;\r\n  scaling(vector: Vector3): Matrix4;\r\n  \r\n  perspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): Matrix4;\r\n  orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n  frustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n}\r\n\r\n/**\r\n * 4x4 matrix. Values are stored in column major order.\r\n */\r\ninterface Matrix4 {\r\n  readonly array: Float32Array;\r\n  getValues(): Matrix4Values\r\n  setValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this;\r\n  /*row1: Vector4Values;\r\n  row2: Vector4Values;\r\n  row3: Vector4Values;\r\n  row4: Vector4Values;\r\n  col1: Vector4Values;\r\n  col2: Vector4Values;\r\n  col3: Vector4Values;\r\n  col4: Vector4Values;*/\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m14: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m24: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  m34: number;\r\n  m41: number;\r\n  m42: number;\r\n  m43: number;\r\n  m44: number;\r\n  //setArray(array: WritableArrayLike<number>): this;\r\n  getRotation(): Quaternion;\r\n  setRotation(rotation: Quaternion): this;\r\n  setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this;\r\n  equals(mat: Matrix4): boolean;\r\n  copy(mat: Matrix4): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix4): this;\r\n  sub(mat: Matrix4): this;\r\n  mult(mat: Matrix4): this;\r\n\r\n  getMaxScaleOnAxis(): number;\r\n  solve(vecB: Vector4): Vector4Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  solve3(vecB: Vector3): Vector3Values;\r\n\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n\r\n  setTranslation(vector: Vector3): this;\r\n  translate(vector: Vector3): this;\r\n\r\n  setRotationX(angle: number): this;\r\n  rotateX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  rotateY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n  rotateZ(angle: number): this;\r\n\r\n  rotate(vector: Vector3, angle: number): this\r\n  rotation(matrix: Matrix3): this;\r\n\r\n  setScaling(vector: Vector3): this;\r\n  scale(vector: Vector3): this;\r\n\r\n  lookAt(eye: Vector3 | Vector3Values, target: Vector3, up: Vector3): this;\r\n\r\n  transformPoint(point: Vector3): Vector3;\r\n  transformDirection(direction: Vector3): Vector3;\r\n  transformNormal(normal: Vector3): Vector3;\r\n  \r\n  setFrustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n  setPerspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): this;\r\n  setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n}\r\n\r\nclass Matrix4Base implements Matrix4 {\r\n  public readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  )\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[ 0], args[ 1], args[ 2], args[ 3],\r\n        args[ 4], args[ 5], args[ 6], args[ 7],\r\n        args[ 8], args[ 9], args[10], args[11],\r\n        args[12], args[13], args[14], args[15]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array(16);\r\n\t\t}\r\n  }\r\n\r\n  public static fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4Base {\r\n    return new Matrix4Base(\r\n      m11, m21, m31, m41,\r\n      m12, m22, m32, m42,\r\n      m13, m23, m33, m43,\r\n      m14, m24, m34, m44\r\n    );\r\n  }\r\n\r\n  public static fromArray(array: ArrayLike<number>): Matrix4Base {\r\n    if (array.length < 16) {\r\n      throw new Error(`Matrix4 needs an array of size 16 at least.`);\r\n    }\r\n    return new Matrix4Base(array);\r\n  }\r\n\r\n  public getValues(): Matrix4Values {\r\n    const thisArray = this.array;\r\n\t\treturn [\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ];\r\n\t}\r\n\r\n\tpublic setValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 3] = m41;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 7] = m42;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n    thisArray[11] = m43;\r\n    thisArray[12] = m14;\r\n    thisArray[13] = m24;\r\n    thisArray[14] = m34;\r\n    thisArray[15] = m44;\r\n\r\n    return this;\r\n  }\r\n  \r\n  public get m11(): number {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tpublic set m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  public get m12() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tpublic set m12(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  public get m13() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n\tpublic set m13(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n  \r\n  public get m14() {\r\n\t\treturn this.array[12];\r\n\t}\r\n\r\n\tpublic set m14(val: number) {\r\n\t\tthis.array[12] = val;\r\n  }\r\n  \r\n  public get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tpublic set m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  public get m22() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tpublic set m22(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  public get m23() {\r\n\t\treturn this.array[9];\r\n\t}\r\n\r\n\tpublic set m23(val: number) {\r\n\t\tthis.array[9] = val;\r\n  }\r\n  \r\n  public get m24() {\r\n\t\treturn this.array[13];\r\n\t}\r\n\r\n\tpublic set m24(val: number) {\r\n\t\tthis.array[13] = val;\r\n  }\r\n  \r\n  public get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  public set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  public get m32() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tpublic set m32(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  public get m33() {\r\n\t\treturn this.array[10];\r\n\t}\r\n\r\n  public set m33(val: number) {\r\n\t\tthis.array[10] = val;\r\n  }\r\n  \r\n  public get m34() {\r\n\t\treturn this.array[14];\r\n\t}\r\n\r\n\tpublic set m34(m34: number) {\r\n\t\tthis.array[14] = m34;\r\n  }\r\n  \r\n  public get m41() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tpublic set m41(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  public get m42() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tpublic set m42(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  public get m43() {\r\n\t\treturn this.array[11];\r\n\t}\r\n\r\n\tpublic set m43(val: number) {\r\n\t\tthis.array[11] = val;\r\n  }\r\n  \r\n  public get m44() {\r\n\t\treturn this.array[15];\r\n\t}\r\n\r\n\tpublic set m44(m44: number) {\r\n\t\tthis.array[15] = m44;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 16) {\r\n\t\t\tthrow new MathError(`Array must be of length 16 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t// public setArray(array: WritableArrayLike<number>): this {\r\n\t// \tthis._checkArray(array);\r\n\t// \tthisArray = array;\r\n\t// \treturn this;\r\n\t// }\r\n\r\n  public getRotation(): Quaternion {\r\n    const thisArray = this.array;\r\n    const m11 = thisArray[0], m12 = thisArray[4], m13 = thisArray[ 8],\r\n          m21 = thisArray[1], m22 = thisArray[5], m23 = thisArray[ 9],\r\n          m31 = thisArray[2], m32 = thisArray[6], m33 = thisArray[10];\r\n    const trace = m11 + m22 + m33;\r\n    \r\n    let x = 0;\r\n    let y = 0;\r\n    let z = 0;\r\n    let w = 0;\r\n\r\n    if (trace > 0) {\r\n      const s = Math.sqrt(trace + 1) * 2;\r\n      w = 0.25 * s;\r\n      x = (m32 - m23) / s;\r\n      y = (m13 - m31) / s;\r\n      z = (m21 - m12) / s;\r\n    }\r\n    else if (m11 > m22 && m11 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n      w = (m32 - m23) / s;\r\n      x = 0.25 * s;\r\n      y = (m12 + m21) / s;\r\n      z = (m13 + m31) / s;\r\n    }\r\n    else if (m22 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n      w = (m13 - m31) / s;\r\n      x = (m12 + m21) / s;\r\n      y = 0.25 * s;\r\n      z = (m23 + m32) / s;\r\n    }\r\n    else {\r\n      const s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n      w = (m21 - m12) / s;\r\n      x = (m13 + m31) / s;\r\n      y = (m23 + m32) / s;\r\n      z = 0.25 * s;\r\n    }\r\n    \r\n    return new Quaternion(x, y, z, w);\r\n  }\r\n\r\n  public setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this {\r\n    const thisArray = this.array;\r\n    const rotationArray = rotation.array;\r\n    const translationArray = translation.array;\r\n    const scalingArray = scaling.array;\r\n\r\n    const x = rotationArray[0];\r\n    const y = rotationArray[1];\r\n    const z = rotationArray[2];\r\n    const w = rotationArray[3];\r\n\r\n    const x2 = x + x;\r\n    const y2 = y + y;\r\n    const z2 = z + z;\r\n\r\n    const xx = x * x2;\r\n    const xy = x * y2;\r\n    const xz = x * z2;\r\n    const yy = y * y2;\r\n    const yz = y * z2;\r\n    const zz = z * z2;\r\n    const wx = w * x2;\r\n    const wy = w * y2;\r\n    const wz = w * z2;\r\n    const sx = scalingArray[0];\r\n    const sy = scalingArray[1];\r\n    const sz = scalingArray[2];\r\n\r\n    thisArray[0] = (1 - (yy + zz)) * sx;\r\n    thisArray[1] = (xy + wz) * sx;\r\n    thisArray[2] = (xz - wy) * sx;\r\n    thisArray[3] = 0;\r\n    thisArray[4] = (xy - wz) * sy;\r\n    thisArray[5] = (1 - (xx + zz)) * sy;\r\n    thisArray[6] = (yz + wx) * sy;\r\n    thisArray[7] = 0;\r\n    thisArray[8] = (xz + wy) * sz;\r\n    thisArray[9] = (yz - wx) * sz;\r\n    thisArray[10] = (1 - (xx + yy)) * sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = translationArray[0];\r\n    thisArray[13] = translationArray[1];\r\n    thisArray[14] = translationArray[2];\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n  \r\n  public setRotation(quaternion: Quaternion): this {\r\n    const thisArray = this.array;\r\n    const quaternionArray = quaternion.array;\r\n\t\tconst quaternionLengthSquared = quaternion.lengthSquared();\r\n\t\tconst s = 2.0 / quaternionLengthSquared;\r\n\r\n\t\tconst x = quaternionArray[0];\r\n\t\tconst y = quaternionArray[1];\r\n\t\tconst z = quaternionArray[2];\r\n\t\tconst w = quaternionArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n    const m11 = 1 - (yy + zz);\r\n    const m21 = xy + wz;\r\n    const m31 = xz - wy;\r\n    const m12 = xy - wz;\r\n    const m22 = 1 - (xx + zz);\r\n    const m32 = yz + wx;\r\n    const m13 = xz + wy;\r\n    const m23 = yz - wx;\r\n    const m33 = 1 - (xx + yy);\r\n\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n  public equals(mat: Matrix4): boolean {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n    return thisArray[ 0] === matArray[ 0]\r\n      && thisArray[ 1] === matArray[ 1]\r\n      && thisArray[ 2] === matArray[ 2]\r\n      && thisArray[ 3] === matArray[ 3]\r\n      && thisArray[ 4] === matArray[ 4]\r\n      && thisArray[ 5] === matArray[ 5]\r\n      && thisArray[ 6] === matArray[ 6]\r\n      && thisArray[ 7] === matArray[ 7]\r\n      && thisArray[ 8] === matArray[ 8]\r\n      && thisArray[ 9] === matArray[ 9]\r\n      && thisArray[10] === matArray[10]\r\n      && thisArray[11] === matArray[11]\r\n      && thisArray[12] === matArray[12]\r\n      && thisArray[13] === matArray[13]\r\n      && thisArray[14] === matArray[14]\r\n      && thisArray[15] === matArray[15];\r\n  }\r\n\r\n  public copy(mat: Matrix4): this {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n\r\n    thisArray[ 0] = matArray[ 0];\r\n    thisArray[ 1] = matArray[ 1];\r\n    thisArray[ 2] = matArray[ 2];\r\n    thisArray[ 3] = matArray[ 3];\r\n    thisArray[ 4] = matArray[ 4];\r\n    thisArray[ 5] = matArray[ 5];\r\n    thisArray[ 6] = matArray[ 6];\r\n    thisArray[ 7] = matArray[ 7];\r\n    thisArray[ 8] = matArray[ 8];\r\n    thisArray[ 9] = matArray[ 9];\r\n    thisArray[10] = matArray[10];\r\n    thisArray[11] = matArray[11];\r\n    thisArray[12] = matArray[12];\r\n    thisArray[13] = matArray[13];\r\n    thisArray[14] = matArray[14];\r\n    thisArray[15] = matArray[15];\r\n\r\n    return this;\r\n  }\r\n\r\n  public clone(): this {\r\n    const thisArray = this.array;\r\n    return new Matrix4Base(\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ) as this;\r\n  }\r\n\r\n  public static identity(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      1, 0, 0, 0,\r\n      0, 1, 0, 0,\r\n      0, 0, 1, 0,\r\n      0, 0, 0, 1\r\n    );\r\n  }\r\n\r\n  public setIdentity(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  public static zeros(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0\r\n    );\r\n  }\r\n\r\n  public setZeros(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 0;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 0;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 0;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  public det(): number {\r\n    const thisArray = this.array;\r\n    const det2_01_01 = thisArray[0] * thisArray[5] - thisArray[1] * thisArray[4];\r\n    const det2_01_02 = thisArray[0] * thisArray[6] - thisArray[2] * thisArray[4];\r\n    const det2_01_03 = thisArray[0] * thisArray[7] - thisArray[3] * thisArray[4];\r\n    const det2_01_12 = thisArray[1] * thisArray[6] - thisArray[2] * thisArray[5];\r\n    const det2_01_13 = thisArray[1] * thisArray[7] - thisArray[3] * thisArray[5];\r\n    const det2_01_23 = thisArray[2] * thisArray[7] - thisArray[3] * thisArray[6];\r\n    const det3_201_012 = thisArray[8] * det2_01_12 - thisArray[ 9] * det2_01_02 + thisArray[10] * det2_01_01;\r\n    const det3_201_013 = thisArray[8] * det2_01_13 - thisArray[ 9] * det2_01_03 + thisArray[11] * det2_01_01;\r\n    const det3_201_023 = thisArray[8] * det2_01_23 - thisArray[10] * det2_01_03 + thisArray[11] * det2_01_02;\r\n    const det3_201_123 = thisArray[9] * det2_01_23 - thisArray[10] * det2_01_13 + thisArray[11] * det2_01_12;\r\n\r\n    return -det3_201_123 * thisArray[12] + det3_201_023 * thisArray[13]\r\n      - det3_201_013 * thisArray[14] + det3_201_012 * thisArray[15];\r\n  }\r\n\r\n  public trace(): number {\r\n    const thisArray = this.array;\r\n    return thisArray[0] + thisArray[5] + thisArray[10] + thisArray[15];\r\n  }\r\n\r\n  public static negate(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = -a[ 0];\r\n    o[ 1] = -a[ 1];\r\n    o[ 2] = -a[ 2];\r\n    o[ 3] = -a[ 3];\r\n    o[ 4] = -a[ 4];\r\n    o[ 5] = -a[ 5];\r\n    o[ 6] = -a[ 6];\r\n    o[ 7] = -a[ 7];\r\n    o[ 8] = -a[ 8];\r\n    o[ 9] = -a[ 9];\r\n    o[10] = -a[10];\r\n    o[11] = -a[11];\r\n    o[12] = -a[12];\r\n    o[13] = -a[13];\r\n    o[14] = -a[14];\r\n    o[15] = -a[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  public negate(): this {\r\n    return Matrix4Base.negate(this, this) as this;\r\n  }\r\n\r\n  public static transpose(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    o[ 0] = a11;\r\n    o[ 1] = a12;\r\n    o[ 2] = a13;\r\n    o[ 3] = a14;\r\n    o[ 4] = a21;\r\n    o[ 5] = a22;\r\n    o[ 6] = a23;\r\n    o[ 7] = a24;\r\n    o[ 8] = a31;\r\n    o[ 9] = a32;\r\n    o[10] = a33;\r\n    o[11] = a34;\r\n    o[12] = a41;\r\n    o[13] = a42;\r\n    o[14] = a43;\r\n    o[15] = a44;\r\n    \r\n    return out;\r\n  }\r\n\r\n  public transpose(): this {\r\n    return Matrix4Base.transpose(this, this) as this;\r\n  }\r\n\r\n  public static invert(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const o00 = a[ 0];\r\n    const o01 = a[ 1];\r\n    const o02 = a[ 2];\r\n    const o03 = a[ 3];\r\n    const o10 = a[ 4];\r\n    const o11 = a[ 5];\r\n    const o12 = a[ 6];\r\n    const o13 = a[ 7];\r\n    const o20 = a[ 8];\r\n    const o21 = a[ 9];\r\n    const o22 = a[10];\r\n    const o23 = a[11];\r\n    const o30 = a[12];\r\n    const o31 = a[13];\r\n    const o32 = a[14];\r\n    const o33 = a[15];\r\n\r\n    const t00 = o00 * o11 - o01 * o10;\r\n    const t01 = o00 * o12 - o02 * o10;\r\n    const t02 = o00 * o13 - o03 * o10;\r\n    const t03 = o01 * o12 - o02 * o11;\r\n    const t04 = o01 * o13 - o03 * o11;\r\n    const t05 = o02 * o13 - o03 * o12;\r\n    const t06 = o20 * o31 - o21 * o30;\r\n    const t07 = o20 * o32 - o22 * o30;\r\n    const t08 = o20 * o33 - o23 * o30;\r\n    const t09 = o21 * o32 - o22 * o31;\r\n    const t10 = o21 * o33 - o23 * o31;\r\n    const t11 = o22 * o33 - o23 * o32;\r\n\r\n    const d = (t00 * t11 - t01 * t10 + t02 * t09 + t03 * t08 - t04 * t07 + t05 * t06);\r\n    \r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    const invDet = 1 / d;\r\n\r\n    o[ 0] = (o11 * t11 - o12 * t10 + o13 * t09) * invDet;\r\n    o[ 1] = (-o01 * t11 + o02 * t10 - o03 * t09) * invDet;\r\n    o[ 2] = (o31 * t05 - o32 * t04 + o33 * t03) * invDet;\r\n    o[ 3] = (-o21 * t05 + o22 * t04 - o23 * t03) * invDet;\r\n    o[ 4] = (-o10 * t11 + o12 * t08 - o13 * t07) * invDet;\r\n    o[ 5] = (o00 * t11 - o02 * t08 + o03 * t07) * invDet;\r\n    o[ 6] = (-o30 * t05 + o32 * t02 - o33 * t01) * invDet;\r\n    o[ 7] = (o20 * t05 - o22 * t02 + o23 * t01) * invDet;\r\n    o[ 8] = (o10 * t10 - o11 * t08 + o13 * t06) * invDet;\r\n    o[ 9] = (-o00 * t10 + o01 * t08 - o03 * t06) * invDet;\r\n    o[10] = (o30 * t04 - o31 * t02 + o33 * t00) * invDet;\r\n    o[11] = (-o20 * t04 + o21 * t02 - o23 * t00) * invDet;\r\n    o[12] = (-o10 * t09 + o11 * t07 - o12 * t06) * invDet;\r\n    o[13] = (o00 * t09 - o01 * t07 + o02 * t06) * invDet;\r\n    o[14] = (-o30 * t03 + o31 * t01 - o32 * t00) * invDet;\r\n    o[15] = (o20 * t03 - o21 * t01 + o22 * t00) * invDet;\r\n\r\n    return out;\r\n  }\r\n\r\n  public invert(): this {\r\n    return Matrix4Base.invert(this, this) as this;\r\n  }\r\n\r\n  public static add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] + b[ 0];\r\n    o[ 1] = a[ 1] + b[ 1];\r\n    o[ 2] = a[ 2] + b[ 2];\r\n    o[ 3] = a[ 3] + b[ 3];\r\n    o[ 4] = a[ 4] + b[ 4];\r\n    o[ 5] = a[ 5] + b[ 5];\r\n    o[ 6] = a[ 6] + b[ 6];\r\n    o[ 7] = a[ 7] + b[ 7];\r\n    o[ 8] = a[ 8] + b[ 8];\r\n    o[ 9] = a[ 9] + b[ 9];\r\n    o[10] = a[10] + b[10];\r\n    o[11] = a[11] + b[11];\r\n    o[12] = a[12] + b[12];\r\n    o[13] = a[13] + b[13];\r\n    o[14] = a[14] + b[14];\r\n    o[15] = a[15] + b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  public add(matrix: Matrix4): this {\r\n    return Matrix4Base.add(this, matrix, this) as this;\r\n  }\r\n\r\n  public static sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] - b[ 0];\r\n    o[ 1] = a[ 1] - b[ 1];\r\n    o[ 2] = a[ 2] - b[ 2];\r\n    o[ 3] = a[ 3] - b[ 3];\r\n    o[ 4] = a[ 4] - b[ 4];\r\n    o[ 5] = a[ 5] - b[ 5];\r\n    o[ 6] = a[ 6] - b[ 6];\r\n    o[ 7] = a[ 7] - b[ 7];\r\n    o[ 8] = a[ 8] - b[ 8];\r\n    o[ 9] = a[ 9] - b[ 9];\r\n    o[10] = a[10] - b[10];\r\n    o[11] = a[11] - b[11];\r\n    o[12] = a[12] - b[12];\r\n    o[13] = a[13] - b[13];\r\n    o[14] = a[14] - b[14];\r\n    o[15] = a[15] - b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  public sub(matrix: Matrix4): this {\r\n    return Matrix4Base.sub(this, matrix, this) as this;\r\n  }\r\n\r\n  public static mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    const b11 = b[ 0];\r\n    const b21 = b[ 1];\r\n    const b31 = b[ 2];\r\n    const b41 = b[ 3];\r\n    const b12 = b[ 4];\r\n    const b22 = b[ 5];\r\n    const b32 = b[ 6];\r\n    const b42 = b[ 7];\r\n    const b13 = b[ 8];\r\n    const b23 = b[ 9];\r\n    const b33 = b[10];\r\n    const b43 = b[11];\r\n    const b14 = b[12];\r\n    const b24 = b[13];\r\n    const b34 = b[14];\r\n    const b44 = b[15];\r\n\r\n    o[ 0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n    o[ 1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n    o[ 2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n    o[ 3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n    o[ 4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n    o[ 5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n    o[ 6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n    o[ 7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n    o[ 8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n    o[ 9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n    o[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n    o[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n    o[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n    o[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n    o[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n    o[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n    return out;\r\n  }\r\n\r\n  public mult(matrix: Matrix4): this {\r\n    return Matrix4Base.mult(this, matrix, this) as this;\r\n  }\r\n\r\n\tpublic getMaxScaleOnAxis(): number {\r\n    const thisArray = this.array;\r\n    const scaleXSq = thisArray[ 0] * thisArray[ 0] + thisArray[ 1] * thisArray[ 1] + thisArray[ 2] * thisArray[ 2];\r\n    const scaleYSq = thisArray[ 4] * thisArray[ 4] + thisArray[ 5] * thisArray[ 5] + thisArray[ 6] * thisArray[ 6];\r\n    const scaleZSq = thisArray[ 8] * thisArray[ 8] + thisArray[ 9] * thisArray[ 9] + thisArray[10] * thisArray[10];\r\n\r\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\r\n  }\r\n\r\n  public writeIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n    const thisArray = this.array;\r\n\t\tarray[offset     ] = thisArray[ 0];\r\n\t\tarray[offset +  1] = thisArray[ 1];\r\n    array[offset +  2] = thisArray[ 2];\r\n    array[offset +  3] = thisArray[ 3];\r\n\t\tarray[offset +  4] = thisArray[ 4];\r\n    array[offset +  5] = thisArray[ 5];\r\n    array[offset +  6] = thisArray[ 6];\r\n\t\tarray[offset +  7] = thisArray[ 7];\r\n    array[offset +  8] = thisArray[ 8];\r\n    array[offset +  9] = thisArray[ 9];\r\n\t\tarray[offset + 10] = thisArray[10];\r\n    array[offset + 11] = thisArray[11];\r\n    array[offset + 12] = thisArray[12];\r\n\t\tarray[offset + 13] = thisArray[13];\r\n    array[offset + 14] = thisArray[14];\r\n    array[offset + 15] = thisArray[15];\r\n  }\r\n    \r\n  public readFromArray(array: ArrayLike<number>, offset: number = 0): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = array[offset     ];\r\n    thisArray[ 1] = array[offset +  1];\r\n    thisArray[ 2] = array[offset +  2];\r\n    thisArray[ 3] = array[offset +  3];\r\n    thisArray[ 4] = array[offset +  4];\r\n    thisArray[ 5] = array[offset +  5];\r\n    thisArray[ 6] = array[offset +  6];\r\n    thisArray[ 7] = array[offset +  7];\r\n    thisArray[ 8] = array[offset +  8];\r\n    thisArray[ 9] = array[offset +  9];\r\n    thisArray[10] = array[offset + 10];\r\n    thisArray[11] = array[offset + 11];\r\n    thisArray[12] = array[offset + 12];\r\n    thisArray[13] = array[offset + 13];\r\n    thisArray[14] = array[offset + 14];\r\n    thisArray[15] = array[offset + 15];\r\n\r\n    return this;\r\n  }\r\n\r\n  public solve(vecB: Vector4): Vector4Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a14 = a[ 3];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a24 = a[ 7];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const a34 = a[11];\r\n    const a41 = a[12];\r\n    const a42 = a[13];\r\n    const a43 = a[14];\r\n    const a44 = a[15];\r\n    const b00 = a11 * a22 - a12 * a21;\r\n    const b01 = a11 * a23 - a13 * a21;\r\n    const b02 = a11 * a24 - a14 * a21;\r\n    const b03 = a12 * a23 - a13 * a22;\r\n    const b04 = a12 * a24 - a14 * a22;\r\n    const b05 = a13 * a24 - a14 * a23;\r\n    const b06 = a31 * a42 - a32 * a41;\r\n    const b07 = a31 * a43 - a33 * a41;\r\n    const b08 = a31 * a44 - a34 * a41;\r\n    const b09 = a32 * a43 - a33 * a42;\r\n    const b10 = a32 * a44 - a34 * a42;\r\n    const b11 = a33 * a44 - a34 * a43;\r\n\r\n    const bX = vecB.x;\r\n    const bY = vecB.y;\r\n    const bZ = vecB.z;\r\n    const bW = vecB.w;\r\n\r\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (det != 0) {\r\n      det = 1 / det;\r\n    }\r\n\r\n    const x = det *\r\n      ((a22 * b11 - a23 * b10 + a24 * b09) * bX -\r\n      (a21 * b11 - a23 * b08 + a24 * b07) * bY +\r\n      (a21 * b10 - a22 * b08 + a24 * b06) * bZ -\r\n      (a21 * b09 - a22 * b07 + a23 * b06) * bW)\r\n    const y = det *\r\n      -((a12 * b11 - a13 * b10 + a14 * b09) * bX -\r\n      (a11 * b11 - a13 * b08 + a14 * b07) * bY +\r\n      (a11 * b10 - a12 * b08 + a14 * b06) * bZ -\r\n      (a11 * b09 - a12 * b07 + a13 * b06) * bW)\r\n    const z = det *\r\n      ((a42 * b05 - a43 * b04 + a44 * b03) * bX -\r\n      (a41 * b05 - a43 * b02 + a44 * b01) * bY +\r\n      (a41 * b04 - a42 * b02 + a44 * b00) * bZ -\r\n      (a41 * b03 - a42 * b01 + a43 * b00) * bW)\r\n    const w = det *\r\n      -((a32 * b05 - a33 * b04 + a34 * b03) * bX -\r\n      (a31 * b05 - a33 * b02 + a34 * b01) * bY +\r\n      (a31 * b04 - a32 * b02 + a34 * b00) * bZ -\r\n      (a31 * b03 - a32 * b01 + a33 * b00) * bW);\r\n    \r\n    return [\r\n      x, y, z, w\r\n    ];\r\n  }\r\n\r\n  public solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[4];\r\n    const a22 = a[5];\r\n    const bx = vecB.x - a[8];\r\n    const by = vecB.y - a[9];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by);\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n\r\n  public solve3(vecB: Vector3): Vector3Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const bx = vecB.x - a[12];\r\n    const by = vecB.y - a[13];\r\n    const bz = vecB.z - a[14];\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n\r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n\r\n    return [\r\n      x, y, z\r\n    ];\r\n  }\r\n\r\n  public static translation(vector: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setTranslation(vector);\r\n  }\r\n\r\n  public setTranslation(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n\r\n    const x = vecArray[0];\r\n    const y = vecArray[1];\r\n    const z = vecArray[2];\r\n\r\n    /*thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;*/\r\n    thisArray[12] = x;\r\n    thisArray[13] = y;\r\n    thisArray[14] = z;\r\n    //thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  public translate(vector: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vectorArray = vector.array;\r\n\r\n    const tx = vectorArray[0];\r\n    const ty = vectorArray[1];\r\n    const tz = vectorArray[2];\r\n    const tw = 1;\r\n\r\n    const t1 = thisArray[0] * tx + thisArray[4] * ty + thisArray[ 8] * tz + thisArray[12] * tw;\r\n    const t2 = thisArray[1] * tx + thisArray[5] * ty + thisArray[ 9] * tz + thisArray[13] * tw;\r\n    const t3 = thisArray[2] * tx + thisArray[6] * ty + thisArray[10] * tz + thisArray[14] * tw;\r\n    const t4 = thisArray[3] * tx + thisArray[7] * ty + thisArray[11] * tz + thisArray[15] * tw;\r\n\r\n    thisArray[12] = t1;\r\n    thisArray[13] = t2;\r\n    thisArray[14] = t3;\r\n    thisArray[15] = t4;\r\n\r\n    return this;\r\n  }\r\n\r\n  public static rotationX(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationX(angle);\r\n  }\r\n\r\n  public setRotationX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = sinAngle;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = -sinAngle;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  public rotateX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[4] *  cosAngle + thisArray[ 8] * sinAngle;\r\n    const t2 = thisArray[5] *  cosAngle + thisArray[ 9] * sinAngle;\r\n    const t3 = thisArray[6] *  cosAngle + thisArray[10] * sinAngle;\r\n    const t4 = thisArray[7] *  cosAngle + thisArray[11] * sinAngle;\r\n    const t5 = thisArray[4] * -sinAngle + thisArray[ 8] * cosAngle;\r\n    const t6 = thisArray[5] * -sinAngle + thisArray[ 9] * cosAngle;\r\n    const t7 = thisArray[6] * -sinAngle + thisArray[10] * cosAngle;\r\n    const t8 = thisArray[7] * -sinAngle + thisArray[11] * cosAngle;\r\n\r\n    thisArray[ 4] = t1;\r\n    thisArray[ 5] = t2;\r\n    thisArray[ 6] = t3;\r\n    thisArray[ 7] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  public static rotationY(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationY(angle);\r\n  }\r\n\r\n  public setRotationY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = -sinAngle;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = sinAngle;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  public rotateY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[ 0] * cosAngle + thisArray[ 8] * -sinAngle;\r\n    const t2 = thisArray[ 1] * cosAngle + thisArray[ 9] * -sinAngle;\r\n    const t3 = thisArray[ 2] * cosAngle + thisArray[10] * -sinAngle;\r\n    const t4 = thisArray[ 3] * cosAngle + thisArray[11] * -sinAngle;\r\n    const t5 = thisArray[ 0] * sinAngle + thisArray[ 8] *  cosAngle;\r\n    const t6 = thisArray[ 1] * sinAngle + thisArray[ 9] *  cosAngle;\r\n    const t7 = thisArray[ 2] * sinAngle + thisArray[10] *  cosAngle;\r\n    const t8 = thisArray[ 3] * sinAngle + thisArray[11] *  cosAngle;\r\n\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  public static rotationZ(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationZ(angle);\r\n  }\r\n\r\n  public setRotationZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngles = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = sinAngles;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = -sinAngles;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  public rotateZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[0] *  cosAngle + thisArray[4] * sinAngle;\r\n    const t2 = thisArray[1] *  cosAngle + thisArray[5] * sinAngle;\r\n    const t3 = thisArray[2] *  cosAngle + thisArray[6] * sinAngle;\r\n    const t4 = thisArray[3] *  cosAngle + thisArray[7] * sinAngle;\r\n    const t5 = thisArray[0] * -sinAngle + thisArray[4] * cosAngle;\r\n    const t6 = thisArray[1] * -sinAngle + thisArray[5] * cosAngle;\r\n    const t7 = thisArray[2] * -sinAngle + thisArray[6] * cosAngle;\r\n    const t8 = thisArray[3] * -sinAngle + thisArray[7] * cosAngle;\r\n    \r\n    thisArray[0] = t1;\r\n    thisArray[1] = t2;\r\n    thisArray[2] = t3;\r\n    thisArray[3] = t4;\r\n    thisArray[4] = t5;\r\n    thisArray[5] = t6;\r\n    thisArray[6] = t7;\r\n    thisArray[7] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  public static rotation(matrix: Matrix3): Matrix4Base {\r\n    return new Matrix4Base().rotation(matrix);\r\n  }\r\n\r\n  public rotation(matrix: Matrix3): this {\r\n    const thisArray = this.array;\r\n    const matArray = matrix.array;\r\n\r\n    thisArray[ 0] = matArray[0];\r\n    thisArray[ 1] = matArray[1];\r\n    thisArray[ 2] = matArray[2];\r\n    thisArray[ 4] = matArray[3];\r\n    thisArray[ 5] = matArray[4];\r\n    thisArray[ 6] = matArray[5];\r\n    thisArray[ 8] = matArray[6];\r\n    thisArray[ 9] = matArray[7];\r\n    thisArray[10] = matArray[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  public rotate(axis: Vector3, angle: number): this {\r\n    const thisArray = this.array;\r\n    const axisArray = axis.array;\r\n    const axisLength = axis.length();\r\n    const x = axisArray[0] / axisLength;\r\n    const y = axisArray[1] / axisLength;\r\n    const z = axisArray[2] / axisLength;\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n    const C = 1.0 - c;\r\n    const m11 = x * x * C + c;\r\n    const m12 = x * y * C - z * s;\r\n    const m13 = x * z * C + y * s;\r\n    const m21 = y * x * C + z * s;\r\n    const m22 = y * y * C + c;\r\n    const m23 = y * z * C - x * s;\r\n    const m31 = z * x * C - y * s;\r\n    const m32 = z * y * C + x * s;\r\n    const m33 = z * z * C + c;\r\n    const t1  = thisArray[0] * m11 + thisArray[4] * m21 + thisArray[8] * m31;\r\n    const t2  = thisArray[1] * m11 + thisArray[5] * m21 + thisArray[9] * m31;\r\n    const t3  = thisArray[2] * m11 + thisArray[6] * m21 + thisArray[10] * m31;\r\n    const t4  = thisArray[3] * m11 + thisArray[7] * m21 + thisArray[11] * m31;\r\n    const t5  = thisArray[0] * m12 + thisArray[4] * m22 + thisArray[8] * m32;\r\n    const t6  = thisArray[1] * m12 + thisArray[5] * m22 + thisArray[9] * m32;\r\n    const t7  = thisArray[2] * m12 + thisArray[6] * m22 + thisArray[10] * m32;\r\n    const t8  = thisArray[3] * m12 + thisArray[7] * m22 + thisArray[11] * m32;\r\n    const t9  = thisArray[0] * m13 + thisArray[4] * m23 + thisArray[8] * m33;\r\n    const t10 = thisArray[1] * m13 + thisArray[5] * m23 + thisArray[9] * m33;\r\n    const t11 = thisArray[2] * m13 + thisArray[6] * m23 + thisArray[10] * m33;\r\n    const t12 = thisArray[3] * m13 + thisArray[7] * m23 + thisArray[11] * m33;\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 4] = t5;\r\n    thisArray[ 5] = t6;\r\n    thisArray[ 6] = t7;\r\n    thisArray[ 7] = t8;\r\n    thisArray[ 8] = t9;\r\n    thisArray[ 9] = t10;\r\n    thisArray[10] = t11;\r\n    thisArray[11] = t12;\r\n\r\n    return this;\r\n  }\r\n\r\n  public static scaling(vec: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setScaling(vec);\r\n  }\r\n\r\n  public setScaling(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] = sx;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = sy;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  public scale(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] *= sx;\r\n    thisArray[ 1] *= sx;\r\n    thisArray[ 2] *= sx;\r\n    thisArray[ 3] *= sx;\r\n    thisArray[ 4] *= sy;\r\n    thisArray[ 5] *= sy;\r\n    thisArray[ 6] *= sy;\r\n    thisArray[ 7] *= sy;\r\n    thisArray[ 8] *= sz;\r\n    thisArray[ 9] *= sz;\r\n    thisArray[10] *= sz;\r\n    thisArray[11] *= sz;\r\n    thisArray[12] *= sw;\r\n    thisArray[13] *= sw;\r\n    thisArray[14] *= sw;\r\n    thisArray[15] *= sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  public static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4): Matrix4 {\r\n    const eyeArray = eye.array;\r\n    const upArray = up.array;\r\n    const targetArray = target.array;\r\n    const outArray = out.array;\r\n    const e0 = eyeArray[0];\r\n    const e1 = eyeArray[1];\r\n    const e2 = eyeArray[2];\r\n    const u0 = upArray[0];\r\n    const u1 = upArray[1];\r\n    const u2 = upArray[2];\r\n    const t0 = targetArray[0];\r\n    const t1 = targetArray[1];\r\n    const t2 = targetArray[2];\r\n    let x0, x1, x2, y0, y1, y2, z0, z1, z2, length;\r\n\r\n    z0 = e0 - t0;\r\n    z1 = e1 - t1;\r\n    z2 = e2 - t2;\r\n    length = Math.hypot(z0, z1, z2);\r\n    if (length > 0) {\r\n      length = 1 / Math.hypot(z0, z1, z2);\r\n      z0 *= length;\r\n      z1 *= length;\r\n      z2 *= length;\r\n    }\r\n  \r\n    x0 = u1 * z2 - u2 * z1;\r\n    x1 = u2 * z0 - u0 * z2;\r\n    x2 = u0 * z1 - u1 * z0;\r\n    length = Math.hypot(x0, x1, x2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      x0 *= length;\r\n      x1 *= length;\r\n      x2 *= length;\r\n    }\r\n\r\n    y0 = z1 * x2 - z2 * x1;\r\n    y1 = z2 * x0 - z0 * x2;\r\n    y2 = z0 * x1 - z1 * x0;\r\n    length = Math.hypot(y0, y1, y2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      y0 *= length;\r\n      y1 *= length;\r\n      y2 *= length;\r\n    }\r\n  \r\n    outArray[ 0] = x0;\r\n    outArray[ 1] = x1;\r\n    outArray[ 2] = x2;\r\n    outArray[ 3] = 0;\r\n    outArray[ 4] = y0;\r\n    outArray[ 5] = y1;\r\n    outArray[ 6] = y2;\r\n    outArray[ 7] = 0;\r\n    outArray[ 8] = z0;\r\n    outArray[ 9] = z1;\r\n    outArray[10] = z2;\r\n    outArray[11] = 0;\r\n    outArray[12] = e0;\r\n    outArray[13] = e1;\r\n    outArray[14] = e2;\r\n    outArray[15] = 1;\r\n  \r\n    return out;\r\n  }\r\n\r\n  public lookAt(eye: Vector3, target: Vector3, up: Vector3): this {\r\n    return Matrix4Base.lookAt(eye, target, up, this) as this;\r\n  }\r\n\r\n  public transformPoint(point: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const pointArray = point.array;\r\n\r\n    const x = pointArray[0];\r\n    const y = pointArray[1];\r\n    const z = pointArray[2];\r\n\r\n    const d = x * thisArray[3] + y * thisArray[7] + z * thisArray[11] + thisArray[15];\r\n\r\n    point.setValues([\r\n      (x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8] + thisArray[12]) / d,\r\n      (x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9] + thisArray[13]) / d,\r\n      (x * thisArray[2] + y * thisArray[6] + z * thisArray[10] + thisArray[14]) / d\r\n    ]);\r\n\r\n    return point;\r\n  }\r\n\r\n  public transformDirection(direction: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const directionArray = direction.array;\r\n\r\n    const x = directionArray[0];\r\n    const y = directionArray[1];\r\n    const z = directionArray[2];\r\n\r\n    direction.setValues([\r\n      x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8],\r\n      x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9],\r\n      x * thisArray[2] + y * thisArray[6] + z * thisArray[10]\r\n    ]);\r\n\r\n    return direction;\r\n  }\r\n\r\n  public transformNormal(normal: Vector3): Vector3 {\r\n    const normalArray = normal.array;\r\n\r\n    const thisInvArray = this.invert().array;\r\n\r\n    const x = normalArray[0];\r\n    const y = normalArray[1];\r\n    const z = normalArray[2];\r\n\r\n    normal.setValues([\r\n      x * thisInvArray[0] + y * thisInvArray[4] + z * thisInvArray[ 8],\r\n      x * thisInvArray[1] + y * thisInvArray[5] + z * thisInvArray[ 9],\r\n      x * thisInvArray[2] + y * thisInvArray[6] + z * thisInvArray[10]\r\n    ]);\r\n\r\n    this.invert();\r\n\r\n    return normal;\r\n  }\r\n\r\n  public static perspective(fov: number, aspect: number, zNear: number, zFar: number): Matrix4Base {\r\n    return new Matrix4Base().setPerspective(fov, aspect, zNear, zFar);\r\n  }\r\n\r\n  public setPerspective(fov: number, aspect: number, zNear: number, zFar: number): this {\r\n    const thisArray = this.array;\r\n    const width = Math.tan(Math.PI * 0.5 - 0.5 * fov);\r\n    const height = width / aspect;\r\n    const rangeInv = 1 / (zNear - zFar);\r\n\r\n    thisArray[ 0] = height;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = width;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = (zNear + zFar) * rangeInv;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = (2 * zNear * zFar) * rangeInv;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n\r\n  public static orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setOrthographic(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  public setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 2 / (right - left);\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 2 / (top - bottom);\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 2 / (near - far);\r\n    thisArray[11] = 0;\r\n    thisArray[12] = (right + left) / (left - right);\r\n    thisArray[13] = (top + bottom) / (bottom - top);\r\n    thisArray[14] = (far + near) / (near - far);\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  public static frustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setFrustrum(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  public setFrustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    const invWidth = 1 / (right - left);\r\n    const invHeight = 1 / (top - bottom);\r\n    const invDepth = 1 / (near - far);\r\n\r\n    thisArray[ 0] = near * 2 * invWidth;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = near * 2 * invHeight;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = (right + left) * invWidth;\r\n    thisArray [9] = (top + bottom) * invHeight;\r\n    thisArray[10] = (far + near) * invDepth;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = far * near * 2 * invDepth;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n}\r\n\r\nvar Matrix4: Matrix4Constructor = Matrix4Base;\r\n\r\nconst Matrix4Injector: Injector<Matrix4Constructor> = new Injector({\r\n\tdefaultCtor: Matrix4Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix4Constructor) => {\r\n\t\t\tMatrix4 = ctor;\r\n\t\t}\r\n});","import { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Matrix4 } from \"../../algebra/matrices/Matrix4\";\r\nimport { Vector3, Vector3Constructor } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport { Vector3Pool };\r\n\r\nclass Vector3PoolBase extends StackPool<Vector3> implements StackPool<Vector3> {\r\n    private _buffer: Float32Array;\r\n    private _bufferViews: Array<WritableArrayLike<number>>;\r\n    private _extensions: Array<WritableArrayLike<number>>;\r\n\r\n    constructor(ctor: Vector3Constructor, options?: any) {\r\n        super(ctor, options);\r\n        this._buffer = new Float32Array(0);\r\n        this._bufferViews = Array(options?.size || 0).fill(0).map(() => {\r\n            return this._buffer.subarray();\r\n        });\r\n        this._extensions = [];\r\n    }\r\n}\r\n\r\nconst Vector3Pool: StackPool<Vector3> = new Vector3PoolBase(Vector3);","export { UUID };\r\nexport { Identifiable };\r\nexport { UUIDGeneratorBase };\r\nexport { UUIDGenerator };\r\n\r\ntype UUID = string;\r\n\r\ninterface Identifiable {\r\n    readonly uuid: UUID;\r\n}\r\n\r\ninterface UUIDGenerator {\r\n    newUUID(): UUID;\r\n}\r\n\r\nclass UUIDGeneratorBase {\r\n\r\n    private _count: number;\r\n\r\n    constructor() {\r\n        this._count = 0\r\n    }\r\n\r\n    public newUUID(): UUID {\r\n        return (++this._count).toString(16);\r\n    }\r\n}\r\n\r\nconst UUIDGenerator: UUIDGenerator = new UUIDGeneratorBase();","import { EulerAngles } from \"../../libs/maths/algebra/angles/EulerAngles\";\r\nimport { Matrix3 } from \"../../libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Quaternion, QuaternionPool } from \"../../libs/maths/algebra/quaternions/Quaternion\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../libs/maths/extensions/pools/Vector3Pools\";\r\nimport { UUID, UUIDGenerator } from \"../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Object3D } from \"../rendering/scenes/objects/Object3D\";\r\n\r\nexport { Transform };\r\nexport { TransformBase };\r\n\r\ninterface TransformConstructor {\r\n    readonly prototype: Transform;\r\n    new(): Transform;\r\n    new(owner: Object3D): Transform;\r\n}\r\n\r\ninterface Transform {\r\n    readonly localArray: Float32Array;\r\n    readonly array: Float32Array;\r\n    readonly uuid: UUID;\r\n    readonly owner: Object3D | null;\r\n\r\n    localMatrix: Matrix4;\r\n    matrix: Matrix4;\r\n\r\n    getMatrix(matrix: Matrix4): Matrix4;\r\n    setMatrix(matrix: Matrix4): this;\r\n    getLocalMatrix(matrix: Matrix4): Matrix4;\r\n    setLocalMatrix(matrix: Matrix4): this;\r\n\r\n    getRight(vector: Vector3): Vector3;\r\n    getLeft(vector: Vector3): Vector3;\r\n    getUp(vector: Vector3): Vector3;\r\n    getDown(vector: Vector3): Vector3;\r\n    getForward(vector: Vector3): Vector3;\r\n    getBackward(vector: Vector3): Vector3;\r\n\r\n    getTranslation(vector: Vector3): Vector3;\r\n    setTranslation(vector: Vector3): this;\r\n    translate(vector: Vector3): this;\r\n\r\n    getRotation(rotation: Quaternion): Quaternion;\r\n    setRotation(rotation: Quaternion): this;\r\n    rotate(rotation: Quaternion): this;\r\n\r\n    getScaling(scaling: Vector3): Vector3;\r\n    setScaling(scaling: Vector3): this;\r\n    scale(scaling: Vector3): this;\r\n    \r\n    lookAt(target: Vector3, up?: Vector3): this;\r\n}\r\n\r\nclass TransformBase implements Transform {\r\n    public readonly localArray: Float32Array;\r\n    public readonly array: Float32Array;\r\n    public readonly uuid: UUID;\r\n    public readonly owner: Object3D | null;\r\n\r\n    public readonly matrix: Matrix4;\r\n    public readonly localMatrix: Matrix4;\r\n\r\n    private _hasChanged: boolean;\r\n\r\n    constructor(owner?: Object3D) {\r\n        this.uuid = UUIDGenerator.newUUID();\r\n        this.owner = owner || null;\r\n        \r\n        this.array = new Float32Array(16);\r\n        this.localArray = new Float32Array(16);\r\n\r\n        this.matrix = new Matrix4(this.array).setIdentity();\r\n        this.localMatrix = new Matrix4(this.localArray).setIdentity();\r\n\r\n        this._hasChanged = false;\r\n    }\r\n\r\n    public getMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisArray[ 0];\r\n        matrixArray[ 1] = thisArray[ 1];\r\n        matrixArray[ 2] = thisArray[ 2];\r\n        matrixArray[ 3] = thisArray[ 3];\r\n        matrixArray[ 4] = thisArray[ 4];\r\n        matrixArray[ 5] = thisArray[ 5];\r\n        matrixArray[ 6] = thisArray[ 6];\r\n        matrixArray[ 7] = thisArray[ 7];\r\n        matrixArray[ 8] = thisArray[ 8];\r\n        matrixArray[ 9] = thisArray[ 9];\r\n        matrixArray[10] = thisArray[10];\r\n        matrixArray[11] = thisArray[11];\r\n        matrixArray[12] = thisArray[12];\r\n        matrixArray[13] = thisArray[13];\r\n        matrixArray[14] = thisArray[14];\r\n        matrixArray[15] = thisArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    public setMatrix(matrix: Matrix4): this {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        thisArray[ 0] = matrixArray[ 0];\r\n        thisArray[ 1] = matrixArray[ 1];\r\n        thisArray[ 2] = matrixArray[ 2];\r\n        thisArray[ 3] = matrixArray[ 3];\r\n        thisArray[ 4] = matrixArray[ 4];\r\n        thisArray[ 5] = matrixArray[ 5];\r\n        thisArray[ 6] = matrixArray[ 6];\r\n        thisArray[ 7] = matrixArray[ 7];\r\n        thisArray[ 8] = matrixArray[ 8];\r\n        thisArray[ 9] = matrixArray[ 9];\r\n        thisArray[10] = matrixArray[10];\r\n        thisArray[11] = matrixArray[11];\r\n        thisArray[12] = matrixArray[12];\r\n        thisArray[13] = matrixArray[13];\r\n        thisArray[14] = matrixArray[14];\r\n        thisArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    public getLocalMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisLocalArray[ 0];\r\n        matrixArray[ 1] = thisLocalArray[ 1];\r\n        matrixArray[ 2] = thisLocalArray[ 2];\r\n        matrixArray[ 3] = thisLocalArray[ 3];\r\n        matrixArray[ 4] = thisLocalArray[ 4];\r\n        matrixArray[ 5] = thisLocalArray[ 5];\r\n        matrixArray[ 6] = thisLocalArray[ 6];\r\n        matrixArray[ 7] = thisLocalArray[ 7];\r\n        matrixArray[ 8] = thisLocalArray[ 8];\r\n        matrixArray[ 9] = thisLocalArray[ 9];\r\n        matrixArray[10] = thisLocalArray[10];\r\n        matrixArray[11] = thisLocalArray[11];\r\n        matrixArray[12] = thisLocalArray[12];\r\n        matrixArray[13] = thisLocalArray[13];\r\n        matrixArray[14] = thisLocalArray[14];\r\n        matrixArray[15] = thisLocalArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    public setLocalMatrix(matrix: Matrix4): this {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        thisLocalArray[ 0] = matrixArray[ 0];\r\n        thisLocalArray[ 1] = matrixArray[ 1];\r\n        thisLocalArray[ 2] = matrixArray[ 2];\r\n        thisLocalArray[ 3] = matrixArray[ 3];\r\n        thisLocalArray[ 4] = matrixArray[ 4];\r\n        thisLocalArray[ 5] = matrixArray[ 5];\r\n        thisLocalArray[ 6] = matrixArray[ 6];\r\n        thisLocalArray[ 7] = matrixArray[ 7];\r\n        thisLocalArray[ 8] = matrixArray[ 8];\r\n        thisLocalArray[ 9] = matrixArray[ 9];\r\n        thisLocalArray[10] = matrixArray[10];\r\n        thisLocalArray[11] = matrixArray[11];\r\n        thisLocalArray[12] = matrixArray[12];\r\n        thisLocalArray[13] = matrixArray[13];\r\n        thisLocalArray[14] = matrixArray[14];\r\n        thisLocalArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    public getRight(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[0];\r\n        vectorArray[1] = thisArray[1];\r\n        vectorArray[2] = thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    public getLeft(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[0];\r\n        vectorArray[1] = -thisArray[1];\r\n        vectorArray[2] = -thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    public getUp(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[4];\r\n        vectorArray[1] = thisArray[5];\r\n        vectorArray[2] = thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    public getDown(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[4];\r\n        vectorArray[1] = -thisArray[5];\r\n        vectorArray[2] = -thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    public getForward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 8];\r\n        vectorArray[1] = thisArray[ 9];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    public getBackward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[ 8];\r\n        vectorArray[1] = -thisArray[ 9];\r\n        vectorArray[2] = -thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    public get hasChanged() {\r\n        return this._hasChanged;\r\n    }\r\n\r\n    public getTranslation(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[12];\r\n        vectorArray[1] = thisArray[13];\r\n        vectorArray[2] = thisArray[14];\r\n        return vector;\r\n    }\r\n\r\n    public setTranslation(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] = vectorArray[0];\r\n        thisArray[13] = vectorArray[1];\r\n        thisArray[14] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    public translate(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] += vectorArray[0];\r\n        thisArray[13] += vectorArray[1];\r\n        thisArray[14] += vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    public getScaling(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 0];\r\n        vectorArray[1] = thisArray[ 5];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    public setScaling(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] = vectorArray[0];\r\n        thisArray[ 5] = vectorArray[1];\r\n        thisArray[10] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    public scale(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] *= vectorArray[0];\r\n        thisArray[ 5] *= vectorArray[1];\r\n        thisArray[10] *= vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    public getRotation(rotation: Quaternion): Quaternion {\r\n        rotation.setMatrix(this.matrix);\r\n        return rotation;\r\n    }\r\n    \r\n    public setRotation(rotation: Quaternion): this {\r\n        this.matrix.setRotation(rotation);\r\n        return this;\r\n    }\r\n\r\n    public rotate(rotation: Quaternion): this {\r\n        const thisRotation = this.getRotation(QuaternionPool.acquire(1)[0]);\r\n        this.matrix.setRotation(thisRotation.mult(rotation));\r\n        QuaternionPool.release(1);\r\n        return this;\r\n    }\r\n\r\n    public transformPoint(point: Vector3): Vector3 {\r\n        return point;\r\n    }\r\n\r\n    public transformDirection(direction: Vector3): Vector3 {\r\n        return direction;\r\n    }\r\n\r\n    public transformVector(vector: Vector3): Vector3 {\r\n        return vector;\r\n    }\r\n\r\n    public lookAt(target: Vector3, up: Vector3): this {\r\n        const thisPosition = this.getTranslation(Vector3Pool.acquire(1)[0]);\r\n        this.matrix.lookAt(thisPosition, target, up);\r\n        Vector3Pool.release(1);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Transform: TransformConstructor = TransformBase;","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3 } from \"../../algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\n\r\nexport { Plane };\r\nexport { PlaneInjector };\r\nexport { PlaneBase };\r\n\r\ninterface Plane {\r\n    normal: Vector3;\r\n    constant: number;\r\n\r\n    copy(plane: Plane): Plane;\r\n    set(x: number, y: number, z: number, constant: number): Plane;\r\n    setFromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n\tsetFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n\tsetFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): Plane;\r\n\tdistanceToPoint(point: Vector3): number;\r\n    normalized(): Plane;\r\n}\r\n\r\ninterface PlaneConstructor {\r\n    readonly prototype: Plane;\r\n    new(): Plane;\r\n    new(normal: Vector3, constant: number): Plane;\r\n    new(normal?: Vector3, constant?: number): Plane;\r\n    fromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n    fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n    fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane;\r\n}\r\n\r\nclass PlaneBase implements Plane {\r\n\r\n    private _normal: Vector3;\r\n    private _constant: number;\r\n\r\n    constructor()\r\n    constructor(normal: Vector3, constant: number)\r\n    constructor(normal?: Vector3, constant?: number) {\r\n        this._normal = normal || new Vector3([0, 0, 0]);\r\n        this._constant = constant || 0;\r\n    }\r\n\r\n    public static fromNormalAndConstant(normal: Vector3, constant: number): Plane {\r\n        return new PlaneBase().setFromNormalAndConstant(normal, constant);\r\n    }\r\n\r\n\tpublic static fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane {\r\n\t\treturn new PlaneBase().setFromNormalAndCoplanarPoint(normal, point);\r\n\t}\r\n\r\n\tpublic static fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane {\r\n        return new PlaneBase().setFromCoplanarPoints(a, b, c);\r\n    }\r\n\r\n    public get normal(): Vector3 {\r\n\t\treturn this._normal;\r\n\t}\r\n\r\n\tpublic set normal(normal: Vector3) {\r\n\t\tthis._normal = normal;\r\n\t}\r\n\r\n\tpublic get constant(): number {\r\n\t\treturn this._constant;\r\n\t}\r\n\r\n\tpublic set constant(constant: number) {\r\n\t\tthis._constant = constant;\r\n\t}\r\n\r\n    public copy(plane: PlaneBase): PlaneBase {\r\n        this._normal = plane._normal.clone();\r\n        this._constant = plane._constant;\r\n\r\n        return this;\r\n    }\r\n\r\n    public set(x: number, y: number, z: number, constant: number): PlaneBase {\r\n        this._normal.setValues([x, y, z]);\r\n        this._constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n    public setFromNormalAndConstant(normal: Vector3, constant: number): PlaneBase {\r\n        this._normal.copy(normal);\r\n        this._constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n\tpublic setFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): PlaneBase {\r\n\t\tthis._normal.copy(normal);\r\n        this._constant = -point.dot(this._normal);\r\n        \r\n        return this;\r\n\t}\r\n\r\n\tpublic setFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): PlaneBase {\r\n        const normal = point3.clone();\r\n        const [temp] = Vector3Pool.acquire(1);\r\n        temp.copy(point1);\r\n        normal.sub(point2).cross(temp.sub(point2)).normalize();\r\n        this.setFromNormalAndCoplanarPoint(normal, point1);\r\n        Vector3Pool.release(1);\r\n\t\treturn this;\r\n    }\r\n\r\n\tpublic distanceToPoint(point: Vector3): number {\r\n\t\treturn this._normal.dot(point) + this._constant;\r\n\t}\r\n    \r\n    public normalized(): PlaneBase {\r\n        const inverseNormalLength = 1.0 / this._normal.length();\r\n        \r\n        this._normal.scale(inverseNormalLength);\r\n\t\tthis._constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nvar Plane: PlaneConstructor = PlaneBase;\r\nconst PlaneInjector: Injector<PlaneConstructor> = new Injector({\r\n\tdefaultCtor: PlaneBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: PlaneConstructor) => {\r\n\t\t\tPlane = ctor;\r\n\t\t}\r\n});","import { Matrix4 } from \"../../maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../maths/algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../maths/extensions/pools/Vector3Pools\";\r\nimport { Plane, PlaneInjector } from \"../../maths/geometry/primitives/Plane\";\r\nimport { Injector } from \"../../patterns/injectors/Injector\";\r\nimport { BoundingBox } from \"./BoundingBox\";\r\nimport { BoundingSphere } from \"./BoundingSphere\";\r\n\r\nexport { Frustrum };\r\nexport { FrustrumInjector };\r\nexport { FrustrumBase };\r\n\r\ninterface Frustrum {\r\n    nearPlane: Plane;\r\n    farPlane: Plane;\r\n    topPlane: Plane;\r\n    bottomPlane: Plane;\r\n    leftPlane: Plane;\r\n    rightPlane: Plane;\r\n    copy(frustrum: Frustrum): Frustrum;\r\n\tclone(): Frustrum;\r\n\tsetFromPerspectiveMatrix(matrix: Matrix4): Frustrum;\r\n\tset(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane\r\n    ): Frustrum;\r\n\tintersectsSphere(sphere: BoundingSphere): boolean;\r\n\tintersectsBox(box: BoundingBox): boolean;\r\n\tcontainsPoint(point: Vector3): boolean;\r\n}\r\n\r\ninterface FrustrumConstructor {\r\n    readonly prototype: Frustrum;\r\n    new(): Frustrum;\r\n}\r\n\r\nclass FrustrumBase implements Frustrum {\r\n    private _nearPlane: Plane;\r\n    private _farPlane: Plane;\r\n    private _topPlane: Plane;\r\n    private _bottomPlane: Plane;\r\n    private _leftPlane: Plane;\r\n    private _rightPlane: Plane;\r\n\r\n    constructor() {\r\n        const planeCtor = PlaneInjector.defaultCtor;\r\n\t\tthis._nearPlane = new planeCtor();\r\n        this._farPlane = new planeCtor();\r\n        this._topPlane = new planeCtor();\r\n        this._bottomPlane = new planeCtor();\r\n        this._leftPlane = new planeCtor();\r\n        this._rightPlane = new planeCtor();\r\n    }\r\n    \r\n    public get nearPlane(): Plane {\r\n        return this._nearPlane;\r\n    }\r\n\r\n    public set nearPlane(nearPlane: Plane) {\r\n        this._nearPlane = nearPlane;\r\n    }\r\n\r\n    public get farPlane(): Plane {\r\n        return this._farPlane;\r\n    }\r\n\r\n    public set farPlane(farPlane: Plane) {\r\n        this._farPlane = farPlane;\r\n    }\r\n\r\n    public get topPlane(): Plane {\r\n        return this._topPlane;\r\n    }\r\n\r\n    public set topPlane(topPlane: Plane) {\r\n        this._topPlane = topPlane;\r\n    }\r\n\r\n    public get bottomPlane(): Plane {\r\n        return this._bottomPlane;\r\n    }\r\n\r\n    public set bottomPlane(bottomPlane: Plane) {\r\n        this._bottomPlane = bottomPlane;\r\n    }\r\n\r\n    public get leftPlane(): Plane {\r\n        return this._leftPlane;\r\n    }\r\n\r\n    public set leftPlane(leftPlane: Plane) {\r\n        this._leftPlane = leftPlane;\r\n    }\r\n\r\n    public get rightPlane(): Plane {\r\n        return this._rightPlane;\r\n    }\r\n\r\n    public set rightPlane(rightPlane: Plane) {\r\n        this._rightPlane = rightPlane;\r\n    }\r\n\r\n    public set(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane): Frustrum {\r\n\r\n\t\tthis._nearPlane.copy(nearPlane);\r\n\t\tthis._farPlane.copy(farPlane);\r\n        this._topPlane.copy(topPlane);\r\n        this._bottomPlane.copy(bottomPlane);\r\n        this._leftPlane.copy(leftPlane);\r\n        this._rightPlane.copy(rightPlane);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n    public copy(frustrum: FrustrumBase): FrustrumBase {\r\n        this.set(\r\n            frustrum._nearPlane,\r\n            frustrum._farPlane,\r\n            frustrum._topPlane,\r\n            frustrum._bottomPlane,\r\n            frustrum._leftPlane,\r\n            frustrum._rightPlane\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n\tpublic clone(): FrustrumBase {\r\n\t\treturn new FrustrumBase().copy(this);\r\n    }\r\n    \r\n\tpublic setFromPerspectiveMatrix(matrix: Matrix4): FrustrumBase {\r\n        const m11 = matrix.m11;\r\n        const m12 = matrix.m12;\r\n        const m13 = matrix.m13;\r\n        const m14 = matrix.m14;\r\n        const m21 = matrix.m21;\r\n        const m22 = matrix.m22;\r\n        const m23 = matrix.m23;\r\n        const m24 = matrix.m24;\r\n        const m31 = matrix.m31;\r\n        const m32 = matrix.m32;\r\n        const m33 = matrix.m33;\r\n        const m34 = matrix.m34;\r\n        const m41 = matrix.m41;\r\n        const m42 = matrix.m42;\r\n        const m43 = matrix.m43;\r\n        const m44 = matrix.m44;\r\n\r\n        this._nearPlane.set(m31 + m41, m32 + m42, m33 + m43, m34 + m44).normalized();\r\n        this._farPlane.set(-m31 + m41, -m32 + m42, -m33 + m43, -m34 + m44).normalized();\r\n        this._bottomPlane.set(m21 + m41, m22 + m42, m23 + m43, m24 + m44).normalized();\r\n        this._topPlane.set(-m21 + m41, -m22 + m42, -m23 + m43, -m24 + m44).normalized();\r\n        this._leftPlane.set(m11 + m41, m12 + m42, m13 + m43, m14 + m44).normalized();\r\n        this._rightPlane.set(-m11 + m41, -m12 + m42, -m13 + m43, -m14 + m44).normalized();\r\n        \r\n\t\treturn this;\r\n    }\r\n    \r\n\tpublic intersectsSphere(sphere: BoundingSphere): boolean {\r\n        const center = sphere.center;\r\n        const radius = sphere.radius;\r\n        return center.dot(this._nearPlane.normal) + this._nearPlane.constant + radius <= 0 ||\r\n            center.dot(this._farPlane.normal) + this._farPlane.constant + radius <= 0 ||\r\n            center.dot(this._bottomPlane.normal) + this._bottomPlane.constant + radius <= 0 ||\r\n            center.dot(this._topPlane.normal) + this._topPlane.constant + radius <= 0 ||\r\n            center.dot(this._leftPlane.normal) + this._leftPlane.constant + radius <= 0 ||\r\n            center.dot(this._rightPlane.normal) + this._rightPlane.constant + radius <= 0;\r\n\t}\r\n\r\n\tpublic intersectsBox(box: BoundingBox): boolean {\r\n        let intersects = true;\r\n\r\n        const boxMax = box.max;\r\n        const boxMin = box.min;\r\n\r\n        const [temp] = Vector3Pool.acquire(1);\r\n        intersects = \r\n            this._nearPlane.distanceToPoint(temp.setValues([\r\n                this._nearPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this._nearPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this._nearPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            ])) >= 0 &&\r\n            this._farPlane.distanceToPoint(temp.setValues([\r\n                this._farPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this._farPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this._farPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            ])) >= 0 &&\r\n            this._bottomPlane.distanceToPoint(temp.setValues([\r\n                this._bottomPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this._bottomPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this._bottomPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            ])) >= 0 &&\r\n            this._topPlane.distanceToPoint(temp.setValues([\r\n                this._topPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this._topPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this._topPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            ])) >= 0 &&\r\n            this._leftPlane.distanceToPoint(temp.setValues([\r\n                this._leftPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this._leftPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this._leftPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            ])) >= 0 &&\r\n            this._rightPlane.distanceToPoint(temp.setValues([\r\n                this._rightPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this._rightPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this._rightPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            ])) >= 0;\r\n        Vector3Pool.release(1);\r\n\r\n\t\treturn intersects;\r\n\t}\r\n\r\n\tpublic containsPoint(point: Vector3): boolean {\r\n        return this._nearPlane.distanceToPoint(point) >= 0 &&\r\n            this._farPlane.distanceToPoint(point) >= 0 &&\r\n            this._bottomPlane.distanceToPoint(point) >= 0 &&\r\n            this._topPlane.distanceToPoint(point) >= 0 &&\r\n            this._leftPlane.distanceToPoint(point) >= 0 &&\r\n            this._rightPlane.distanceToPoint(point) >= 0;\r\n    }\r\n}\r\n\r\nvar Frustrum: FrustrumConstructor = FrustrumBase;\r\nconst FrustrumInjector: Injector<FrustrumConstructor> = new Injector({\r\n\tdefaultCtor: FrustrumBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: FrustrumConstructor) => {\r\n\t\t\tFrustrum = ctor;\r\n\t\t}\r\n});","\r\n\r\n// Vertices : counter clock-wise ordered\r\n\r\nimport { TriangleList } from \"../../../../libs/maths/extensions/lists/TriangleList\";\r\nimport { Vector2List } from \"../../../../libs/maths/extensions/lists/Vector2List\";\r\nimport { Vector3List } from \"../../../../libs/maths/extensions/lists/Vector3List\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { BoundingBox } from \"../../../../libs/physics/collisions/BoundingBox\";\r\nimport { BoundingSphere } from \"../../../../libs/physics/collisions/BoundingSphere\";\r\nimport { GeometryBuffer } from \"./GeometryBuffer\";\r\nimport { GeometryBuilder } from \"./GeometryBuilder\";\r\nimport { GeometryUtils } from \"./GeometryUtils\";\r\n\r\n// FaceIndices : 3 vertices indices\r\n// FaceArea : triangle.getArea()\r\n// FaceNormal : triangle.getNormal()\r\n// FaceUV / FaceColor ?\r\n\r\n// VertexNormal => Weighted (by area) average of the normals of the faces containing the vertex (=> Varying)\r\n// - Clone the vertex array, read the face indices array\r\n\r\n// VertexIndices\r\n\r\n// PerVertex Animation / MorphTargets\r\n\r\n// SkeletalAnimation\r\n\r\n// Bones are a hierarchical tree\r\n\r\n// bonesWeights\r\n// bonesIndices\r\n\r\n// MorphTarget Animation\r\n\r\n// MorphTargets are a copy of each face, being transformed over time\r\n\r\n// morphIndices\r\n// morphTargets = []; MorphTargets are a transformed copy of faces\r\n// morphNormals = [];\r\n\r\nexport { GeometryPropertyKeys };\r\nexport { Geometry };\r\n//export { isGeometry };\r\nexport { GeometryBase };\r\n\r\nenum GeometryPropertyKeys {\r\n    vertices,\r\n    indices,\r\n    uvs,\r\n    facesNormals,\r\n    verticesNormals,\r\n    tangents,\r\n    bitangents\r\n}\r\n\r\n\r\ninterface GeometryConstructor {\r\n\r\n}\r\n\r\ninterface Geometry {\r\n    /*readonly isGeometry: true;\r\n    readonly uuid: UUID;\r\n    \r\n    indices: TypedArray;\r\n    distances: TypedArray;\r\n    vertices: Vector3List;\r\n    barycentrics: Vector2List\r\n    faces: TriangleList;\r\n    uvs: Vector2List;\r\n\r\n    facesNormals: Vector3List;\r\n    verticesNormals: Vector3List;\r\n    tangents: Vector3List;\r\n    bitangents: Vector3List;\r\n\r\n    readonly boundingBox?: BoundingBox;\r\n    readonly boundingSphere?: BoundingSphere;*/\r\n\r\n    //builder(): GeometryBuilder;\r\n\r\n    //readonly changes: SingleTopicMessageSubscriber<{prop: GeometryPropertyKeys, section: BufferSectionValues}>;\r\n    \r\n    //copy(geometry: Geometry): Geometry;\r\n    //clone(): Geometry;\r\n\r\n    //computeFacesNormals(options?: ListLoopOptions): Geometry;\r\n    //computeVerticesNormals(weighted?: boolean, options?: ListLoopOptions): Geometry;\r\n    //computeTangentsAndBitangents(options?: ListLoopOptions): Geometry;\r\n\r\n\t// computeBoundingBox(): BoundingBox;\r\n    // computeBoundingSphere(): BoundingSphere;\r\n    \r\n    //updateVertices(vertices: TypedArray, offset?: number): Geometry;\r\n    //updateUvs(uvs: TypedArray, offset?: number): Geometry;\r\n}\r\n/*\r\nfunction isGeometry(obj: any): obj is Geometry {\r\n    return (obj as Geometry).isGeometry;\r\n}*/\r\n\r\nabstract class GeometryBase implements Geometry {\r\n\r\n    /*public readonly uuid: UUID;\r\n    public readonly isGeometry: true;\r\n    \r\n    private _boundingBox?: BoundingBox;\r\n    private _boundingSphere?: BoundingSphere;\r\n\r\n    private _indicesArray: TypedArray;\r\n\r\n    private _distancesArray: TypedArray;\r\n\r\n    private _verticesArray: TypedArray;\r\n    private _vertices: Vector3List;\r\n    private _faces: TriangleList;\r\n\r\n    private _uvsArray: TypedArray;\r\n    private _uvs: Vector2List;\r\n\r\n    private _facesNormalsArray: TypedArray;\r\n    private _facesNormals: Vector3List;\r\n\r\n    private _verticesNormalsArray: TypedArray;\r\n    private _verticesNormals: Vector3List;\r\n\r\n    private _tangentsArray: TypedArray;\r\n    private _tangents: Vector3List;\r\n\r\n    private _bitangentsArray: TypedArray;\r\n    private _bitangents: Vector3List;\r\n\r\n    private _barycentricsArray: TypedArray;\r\n    private _barycentrics: Vector2List;\r\n\r\n    private _weightedVerticesNormals: boolean;*/\r\n\r\n    constructor(/*desc: {\r\n        vertices: TypedArray;\r\n        indices: TypedArray;\r\n        uvs: TypedArray;\r\n        weightedVerticesNormals?: boolean\r\n    }*/) {\r\n        /*this.uuid = UUIDGenerator.newUUID();\r\n        this.isGeometry = true;\r\n        \r\n        this._verticesArray = desc.vertices;\r\n        this._vertices = new Vector3List(this._verticesArray);\r\n        this._faces = new TriangleList(this._verticesArray);\r\n\r\n        this._indicesArray = desc.indices;\r\n\r\n        this._uvsArray = desc.uvs;\r\n        this._uvs = new Vector2List(this._uvsArray);\r\n\r\n        this._weightedVerticesNormals = desc.weightedVerticesNormals ?? false;\r\n\r\n        this._facesNormalsArray = GeometryUtils.computeFacesNormals(this._verticesArray, this._indicesArray, Float32Array);\r\n        this._facesNormals = new Vector3List(this._facesNormalsArray);\r\n        \r\n        this._verticesNormalsArray = GeometryUtils.computeVerticesNormals(this._verticesArray, this._indicesArray, this._weightedVerticesNormals, Float32Array, this._facesNormalsArray);\r\n        this._verticesNormals = new Vector3List(this._verticesNormalsArray);\r\n\r\n        this._barycentricsArray = GeometryUtils.computeBarycentrics(this._verticesArray, Float32Array);\r\n        this._barycentrics = new Vector2List(this._barycentricsArray);\r\n\r\n        this._distancesArray = GeometryUtils.computeDistances(this._verticesArray, this._indicesArray, Float32Array);\r\n        \r\n        const { tangentsArray, bitangentsArray } = GeometryUtils.computeTangentsAndBitangents(this._verticesArray, this._uvsArray, this._indicesArray, Float32Array);\r\n        this._tangentsArray = tangentsArray;\r\n        this._bitangentsArray = bitangentsArray;\r\n        this._tangents = new Vector3List(this._tangentsArray);\r\n        this._bitangents = new Vector3List(this._bitangentsArray);*/\r\n    }\r\n\r\n    /*public builder(): GeometryBuilder {\r\n        return new GeometryBuilderBase(this);\r\n    }*/\r\n\r\n    /*public get indices(): TypedArray {\r\n        return this._indicesArray;\r\n    }\r\n\r\n    public get vertices(): Vector3List {\r\n        return this._vertices;\r\n    }\r\n\r\n    public get barycentrics(): Vector2List {\r\n        return this._barycentrics;\r\n    }\r\n\r\n    public get distances(): TypedArray {\r\n        return this._distancesArray;\r\n    }\r\n\r\n    public get uvs(): Vector2List {\r\n        return this._uvs;\r\n    }\r\n\r\n    public get faces(): TriangleList {\r\n        return this._faces;\r\n    }\r\n\r\n    public get facesNormals(): Vector3List {\r\n        return this._facesNormals;\r\n    }\r\n\r\n    public get verticesNormals(): Vector3List {\r\n        return this._verticesNormals;\r\n    }\r\n\r\n    public get tangents(): Vector3List {\r\n        return this._tangents;\r\n    }\r\n\r\n    public get bitangents(): Vector3List {\r\n        return this._bitangents;\r\n    }\r\n\r\n    public get boundingBox(): BoundingBox | undefined {\r\n        return this._boundingBox;\r\n    }\r\n    \r\n\tpublic get boundingSphere(): BoundingSphere | undefined {\r\n        return this._boundingSphere;\r\n    }*/\r\n\r\n    public abstract toBuilder(): GeometryBuilder;\r\n    \r\n    /*public copy(geometry: GeometryBase): GeometryBase {\r\n        this._verticesArray = geometry._verticesArray.slice();\r\n        this._indicesArray = geometry._indicesArray.slice();\r\n        this._uvsArray = geometry._uvsArray.slice();\r\n        this._facesNormalsArray = geometry._facesNormalsArray.slice();\r\n        this._verticesNormalsArray = geometry._verticesNormalsArray.slice();\r\n        this._tangentsArray = geometry._tangentsArray.slice();\r\n        this._bitangentsArray = geometry._bitangentsArray.slice();\r\n\r\n        if (typeof geometry._boundingBox !== 'undefined') {\r\n            this.computeBoundingBox();\r\n        }\r\n\r\n        if (typeof geometry._boundingSphere !== 'undefined') {\r\n            this.computeBoundingSphere();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public updateVertices(vertices: TypedArray, offset: number = 0): GeometryBase {\r\n        const idxFrom = offset;\r\n        const idxTo = offset + vertices.length;\r\n        this._verticesArray.set(vertices, offset);\r\n        this._updateFacesNormals({idxFrom, idxTo});\r\n        this._updateVerticesNormals(this._weightedVerticesNormals, {idxFrom, idxTo});\r\n        //this._changes.publish({prop: GeometryPropertyKeys.vertices, section: [idxFrom, idxTo]});\r\n        return this;\r\n    }\r\n\r\n    public updateUvs(uvs: TypedArray, offset: number = 0): GeometryBase {\r\n        const idxFrom = offset;\r\n        const idxTo = offset + uvs.length;\r\n        this._uvsArray.set(uvs, offset);\r\n        if (typeof this._tangents !== 'undefined') {\r\n            this._updateTangentsAndBitangents({idxFrom, idxTo});\r\n        }\r\n        //this._changes.publish({prop: GeometryPropertyKeys.uvs, section: [idxFrom, idxTo]});\r\n        return this;\r\n    }\r\n\r\n    public clone(): GeometryBase {\r\n        return new GeometryBase({\r\n            vertices: this._verticesArray.slice(),\r\n            indices: this._indicesArray.slice(),\r\n            uvs: this._uvsArray.slice()\r\n        }).copy(this);\r\n    }\r\n\r\n    private _updateFacesNormals(options?: {\r\n        idxFrom: number;\r\n        idxTo: number;\r\n    }): GeometryBase {\r\n        GeometryUtils.computeFacesNormals(this._faces,  this._indicesArray, this._facesNormals, options);\r\n        //this._changes.publish({prop: GeometryPropertyKeys.facesNormals, section: [options?.idxFrom || 0, options?.idxTo || this._facesNormals.buffer.length]});\r\n        return this;\r\n    }\r\n\r\n    private _updateVerticesNormals(weighted: boolean = false, options?: {\r\n        idxFrom: number;\r\n        idxTo: number;\r\n    }): GeometryBase {\r\n        this._weightedVerticesNormals = weighted;\r\n        if (typeof this.facesNormals === 'undefined') {\r\n            this._updateFacesNormals();\r\n        }\r\n        GeometryUtils.computeVerticesNormals(this._vertices, this._faces, this._indicesArray, this._facesNormals!, this._verticesNormals, weighted, options);\r\n        //this._changes.publish({prop: GeometryPropertyKeys.verticesNormals, section: [options?.idxFrom || 0, options?.idxTo || this._verticesNormals.buffer.length]});\r\n        return this;\r\n    }\r\n\r\n    private _updateTangentsAndBitangents(options?: {\r\n        idxFrom: number;\r\n        idxTo: number;\r\n    }): GeometryBase {\r\n        //this._changes.publish({prop: GeometryPropertyKeys.tangents, section: [options?.idxFrom || 0, options?.idxTo || this._tangents.buffer.length]});\r\n        //this._changes.publish({prop: GeometryPropertyKeys.bitangents, section: [options?.idxFrom || 0, options?.idxTo || this._bitangents.buffer.length]});\r\n        GeometryUtils.computeTangentsAndBitangents(this._verticesArray, this._uvsArray, this._indicesArray, this._tangentsArray, this._bitangentsArray, options);\r\n        return this;\r\n    }*/\r\n    \r\n\t/*public computeBoundingBox(): BoundingBox {\r\n        if (this._boundingBox === undefined) {\r\n            this._boundingBox = new BoundingBox().setFromPoints(this._vertices);\r\n        }\r\n        else {\r\n            this._boundingBox.setFromPoints(this._vertices);\r\n        }\r\n        return this._boundingBox;\r\n    }\r\n    \r\n\tpublic computeBoundingSphere(): BoundingSphere {\r\n        if (this._boundingSphere === undefined) {\r\n            this._boundingSphere = new BoundingSphere().setFromPoints(this._vertices);\r\n        }\r\n        else {\r\n            this._boundingSphere.setFromPoints(this._vertices);\r\n        }\r\n        return this._boundingSphere;\r\n    }*/\r\n}","import { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { CameraBase } from \"./Camera\";\r\n\r\nexport class PerspectiveCamera extends CameraBase {\r\n    \r\n    constructor(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number) {\r\n        \r\n        super(Matrix4.perspective(fov, aspect, zNear, zFar));\r\n    }\r\n\r\n    public setValues(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number): PerspectiveCamera\r\n    {\r\n        this._projection.setPerspective(fov, aspect, zNear, zFar);\r\n        this.updateFrustrum();\r\n        return this;\r\n    }\r\n}","import { Vector3 } from \"engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Space } from \"../../../../libs/maths/geometry/space/Space\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Frustrum } from \"../../../../libs/physics/collisions/Frustrum\";\r\nimport { Mesh } from \"../objects/meshes/Mesh\";\r\nimport { Object3D, Object3DBase } from \"../objects/Object3D\";\r\n\r\nexport { Camera };\r\nexport { CameraBase };\r\n\r\ninterface Camera extends Object3D {\r\n  readonly uuid: UUID;\r\n  readonly viewProjection: Matrix4;\r\n  readonly projection: Matrix4;\r\n  readonly view: Matrix4\r\n  isViewing(mesh: Mesh): boolean;\r\n}\r\n\r\nclass CameraBase extends Object3DBase {\r\n    public readonly uuid: UUID;\r\n    protected _projection: Matrix4;\r\n    private _frustrum: Frustrum;\r\n  \r\n    constructor()\r\n    constructor(projection: Matrix4)\r\n    constructor(projection?: Matrix4) {\r\n      super();\r\n      this.uuid = UUIDGenerator.newUUID();\r\n      this._projection = projection || new Matrix4();\r\n      this._frustrum = new Frustrum().setFromPerspectiveMatrix(this._projection);\r\n    }\r\n\r\n    public get projection(): Matrix4 {\r\n      return this._projection.clone();\r\n    }\r\n\r\n    public get view(): Matrix4 {\r\n      return this.transform.matrix.clone().invert();\r\n    }\r\n\r\n    public get viewProjection(): Matrix4 {\r\n      return this.projection.clone().mult(this.view);\r\n    }\r\n\r\n    public isViewing(mesh: Mesh): boolean {\r\n      /*if (typeof mesh.geometry.boundingBox === 'undefined') {\r\n        const boundingBox = mesh.geometry.computeBoundingBox();\r\n        return this._frustrum.intersectsBox(boundingBox);\r\n      }\r\n      return this._frustrum.intersectsBox(mesh.geometry.boundingBox);*/\r\n      return true;\r\n    }\r\n\r\n    protected updateFrustrum(): void {\r\n      this._frustrum.setFromPerspectiveMatrix(this._projection);\r\n    }\r\n}","import { Transform, TransformBase } from \"../../../general/Transform\";\r\n\r\nexport { Object3D };\r\nexport { Object3DBase };\r\n\r\ninterface Object3D {\r\n    transform: Transform;\r\n}\r\n\r\nclass Object3DBase implements Object3D {\r\n    public readonly transform: Transform;\r\n\r\n    constructor() {\r\n        this.transform = new TransformBase(this);\r\n    }\r\n}","import { Geometry } from \"./Geometry\";\r\n\r\nexport { GeometryBuilder };\r\nexport { GeometryBuilderBase };\r\n\r\ninterface GeometryBuilder<G extends PartialGeometry = PartialGeometry> {\r\n    halfEdges: Array<HalfEdge>;\r\n    vertices: Array<Vertex>;\r\n    faces: Array<Face>;\r\n    \r\n    verticesArray(): Float32Array;\r\n    uvsArray(): Float32Array;\r\n    indicesArray(): Uint8Array | Uint16Array | Uint32Array;\r\n    linesArray(): Float32Array;\r\n    verticesNormalsArray(): Float32Array;\r\n    tangentsArray(): Float32Array;\r\n\r\n    addQuadFaceVertices(\r\n        v0: number[] | Float32Array | Float64Array,\r\n        v1: number[] | Float32Array | Float64Array,\r\n        v2: number[] | Float32Array | Float64Array,\r\n        v3: number[] | Float32Array | Float64Array,\r\n        properties?: {[key: string]: any;}\r\n    ): void;\r\n    addTriangleFaceVertices(\r\n        v0: number[] | Float32Array | Float64Array,\r\n        v1: number[] | Float32Array | Float64Array,\r\n        v2: number[] | Float32Array | Float64Array,\r\n        properties?: {[key: string]: any;}\r\n    ): void;\r\n    addTriangleFace(v0: Vertex, v1: Vertex, v2: Vertex, properties?: {[key: string]: any;}): void;\r\n    addQuadFace(v0: Vertex, v1: Vertex, v2: Vertex, v3: Vertex, properties?: {[key: string]: any;}): void;\r\n    addVertex(vertex: number[] | Float32Array | Float64Array): Vertex;\r\n    addFace(vertices: Vertex[], properties?: {[key: string]: any;}[]): void;\r\n}\r\n\r\ninterface GeometryBuilderConstructor {\r\n    readonly prototype: GeometryBuilder;\r\n    new(): GeometryBuilder;\r\n}\r\n\r\ninterface PartialGeometry extends Partial<Geometry> {};\r\n\r\nclass GeometryBuilderBase<G extends PartialGeometry> implements GeometryBuilder<G> {\r\n    halfEdges: Array<HalfEdge>;\r\n    vertices: Array<Vertex>;\r\n    faces: Array<Face>;\r\n\r\n    constructor() {\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n    }\r\n\r\n    public linesArray(): Float32Array {\r\n        return new Float32Array(this.faces.flatMap((face) => {\r\n            const faceVertices = Array.from(new FaceVerticesIterator(face));\r\n            if (faceVertices.length === 4) {\r\n                const v0 = faceVertices[0];\r\n                const v1 = faceVertices[1];\r\n                const v2 = faceVertices[2];\r\n                const v3 = faceVertices[3];\r\n                return [\r\n                    ...v0.point, ...v1.point,\r\n                    ...v1.point, ...v2.point,\r\n                    ...v2.point, ...v3.point,\r\n                    ...v3.point, ...v0.point\r\n                ];\r\n            }\r\n            else {\r\n                const v0 = faceVertices[0];\r\n                const v1 = faceVertices[1];\r\n                const v2 = faceVertices[2];\r\n                return [\r\n                    ...v0.point, ...v1.point,\r\n                    ...v1.point, ...v2.point,\r\n                    ...v2.point, ...v0.point\r\n                ];\r\n            }\r\n        }));\r\n    }\r\n\r\n    public verticesArray(): Float32Array {\r\n        return new Float32Array(this.faces.flatMap((face) => {\r\n            return Array.from(new FaceVerticesIterator(face)).flatMap((vertex) => {\r\n                return Array.from(vertex.point);\r\n            });\r\n        }));\r\n    }\r\n\r\n    public tangentsArray(): Float32Array {\r\n        return new Float32Array(this.faces.flatMap((face) => {\r\n            const faceVertices = Array.from(new FaceVerticesIterator(face));\r\n            const faceUvs = face.uv as Array<Array<number>>;\r\n            const p0 = faceVertices[0].point;\r\n            const p1 = faceVertices[1].point;\r\n            const p2 = faceVertices[2].point;\r\n            const uv0 = faceUvs[0];\r\n            const uv1 = faceUvs[1];\r\n            const uv2 = faceUvs[2];\r\n            const edge1 = p1.map((p1_i, i) => p0[i] - p1_i);\r\n            const edge2 = p1.map((p1_i, i) => p2[i] - p1_i);\r\n            const deltaUV1 = uv1.map((uv1_i, i) => uv0[i] - uv1_i);\r\n            const deltaUV2 = uv1.map((uv1_i, i) => uv2[i] - uv1_i);\r\n            const f = 1.0 / (deltaUV1[0] * deltaUV2[1] - deltaUV1[1] * deltaUV2[0]);\r\n            const tangent = edge1.map((edge1_i, i) => -(edge1_i * deltaUV2[1] - edge2[i] * deltaUV1[1]) * f);\r\n            const length = Math.hypot(...tangent);\r\n            face.tangent = tangent.map(tangent_i => tangent_i / length);\r\n\r\n            return faceVertices.flatMap(() => {\r\n                return Array.from(face.tangent);\r\n            });\r\n        }));\r\n    }\r\n\r\n    public verticesNormalsArray(): Float32Array {\r\n        return new Float32Array(this.faces.flatMap((face) => {\r\n            const faceVertices = Array.from(new FaceVerticesIterator(face));\r\n            const p0 = faceVertices[0].point;\r\n            const p1 = faceVertices[1].point;\r\n            const p2 = faceVertices[2].point;\r\n            const edge1 = p1.map((p1_i, i) => p0[i] - p1_i);\r\n            const edge2 = p1.map((p1_i, i) => p2[i] - p1_i);\r\n            const components = edge1.length;\r\n            const normal = edge1.map((_, i) => {\r\n                const ni = (i + 1) % components;\r\n                const pi = ((i - 1) + components) % components;\r\n                return -(edge1[ni] * edge2[pi] - edge1[pi] * edge2[ni]);\r\n            });\r\n            const length = Math.hypot(...normal);\r\n            face.normal = normal.map(normal_i => normal_i / length);\r\n\r\n            return faceVertices.flatMap(() => {\r\n                return Array.from(face.normal);\r\n            });\r\n        }));\r\n    }\r\n\r\n    public uvsArray(): Float32Array {\r\n        return new Float32Array(this.faces.flatMap((face) => {\r\n            return face.uv.flat(1);\r\n        }));\r\n    }\r\n\r\n    public indicesArray(): Uint8Array | Uint16Array | Uint32Array {\r\n        const count = this.faces.reduce((verticesCount, face) => {\r\n            return verticesCount + Array.from(new FaceVerticesIterator(face)).length;\r\n        }, 0);\r\n        const arrayConstructor = (count < Math.pow(2, 8)) ? Uint8Array : (count < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        return new arrayConstructor(this.faces.reduce(([indices, index], face) => {\r\n            const faces = Array.from(new FaceVerticesIterator(face));\r\n            if (faces.length === 4) {\r\n                return [indices.concat([index, index + 1, index + 2, index + 2, index + 3, index]), index + 4] as [number[], number];\r\n            }\r\n            return [indices.concat([index, index + 1, index + 2]), index + 3] as [number[], number];\r\n        }, [[], 0] as [number[], number])[0]);\r\n    }\r\n\r\n    public addFaceVertices(vertices: number[][], properties?: {[key: string]: any;}): void {\r\n        const addedVertices = vertices.map((vertex) => {\r\n            return this.vertices\r\n                .find(vert => vert.point.length === vertex.length && vert.point.every((value, index) => vertex[index] === value)) ?? this.addVertex(vertex);\r\n        });\r\n        this.addFace(addedVertices, properties);\r\n    }\r\n\r\n    public addTriangleFaceVertices(\r\n        v0: number[] | Float32Array | Float64Array,\r\n        v1: number[] | Float32Array | Float64Array,\r\n        v2: number[] | Float32Array | Float64Array,\r\n        properties?: {[key: string]: any;}\r\n        ): void {\r\n        const [_v0, _v1, _v2] = [v0, v1, v2].map((vertex) => {\r\n            return this.vertices\r\n                .find(vert => vert.point.length === vertex.length && vert.point.every((value, index) => vertex[index] === value)) ?? this.addVertex(vertex);\r\n        });\r\n        this.addTriangleFace(_v0, _v1, _v2, properties);\r\n    }\r\n\r\n    public addTriangleFace(v0: Vertex, v1: Vertex, v2: Vertex, properties?: {[key: string]: any;}): void {\r\n        this.addFace([v0, v1, v2], properties);\r\n    }\r\n\r\n    public addQuadFaceVertices(\r\n        v0: number[] | Float32Array | Float64Array,\r\n        v1: number[] | Float32Array | Float64Array,\r\n        v2: number[] | Float32Array | Float64Array,\r\n        v3: number[] | Float32Array | Float64Array,\r\n        properties?: {[key: string]: any;}\r\n        ): void {\r\n        const [_v0, _v1, _v2, _v3] = [v0, v1, v2, v3].map((vertex) => {\r\n            return this.vertices\r\n                .find(vert => vert.point.length === vertex.length && vert.point.every((value, index) => vertex[index] === value)) ?? this.addVertex(vertex);\r\n        });\r\n        this.addQuadFace(_v0, _v1, _v2, _v3, properties);\r\n    }\r\n\r\n    public addQuadFace(v0: Vertex, v1: Vertex, v2: Vertex, v3: Vertex, properties?: {[key: string]: any;}): void {\r\n        this.addFace([v0, v1, v2, v3], properties);\r\n    }\r\n    \r\n    public addVertex(vertex: number[] | Float32Array | Float64Array): Vertex {\r\n        const vert: Vertex = {\r\n            point: vertex,\r\n            halfEdge: null\r\n        };\r\n        this.vertices.push(vert);\r\n        return vert;\r\n    }\r\n\r\n    public addFace(vertices: Vertex[], properties?: {[key: string]: any;}): void {\r\n        if (vertices.length < 2) {\r\n            console.warn(`At least 2 vertices are required to create a face.`);\r\n            return;\r\n        }\r\n        const face: Face = {\r\n            halfEdge: null,\r\n            ...properties\r\n        };\r\n        let source: Vertex | null = null;\r\n        let target: Vertex | null = null;\r\n        let firstHalfEdge: HalfEdge | null = null;\r\n        let halfEdge: HalfEdge | null = null;\r\n        let previousHalfEdge: HalfEdge | null = null;\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            source = vertices[i];\r\n            target = (i < vertices.length - 1) ? vertices[i + 1] : vertices[0];\r\n            const existingHalfEdge = Array.from(new VertexFacesIterator(source)).find(\r\n                (face) => {\r\n                    if (face == null) return false;\r\n                    return Array.from(new FaceHalfEdgesIterator(face)).find(\r\n                        (halfEdge) => halfEdge.target === target && halfEdge.prev?.target === source\r\n                    );\r\n                }\r\n            );\r\n            if (existingHalfEdge) {\r\n                continue;\r\n            }\r\n            halfEdge = {\r\n                target: target,\r\n                twin: null,\r\n                next: null,\r\n                prev: null,\r\n                face: face\r\n            };\r\n            if (previousHalfEdge == null) {\r\n                face.halfEdge = halfEdge;\r\n                firstHalfEdge = halfEdge;\r\n            }\r\n            else {\r\n                halfEdge.prev = previousHalfEdge;\r\n                previousHalfEdge.next = halfEdge;\r\n            }\r\n            if (source.halfEdge == null) {\r\n                source.halfEdge = halfEdge;\r\n            }\r\n            const twinHalfEdge = this.halfEdges.find(\r\n                halfEdge => halfEdge.target === source && halfEdge.prev?.target === target\r\n            ) ?? null;\r\n            if (twinHalfEdge !== null) {\r\n                halfEdge.twin = twinHalfEdge;\r\n                twinHalfEdge.twin = halfEdge;\r\n            }\r\n            previousHalfEdge = halfEdge;\r\n            this.halfEdges.push(halfEdge);\r\n        }\r\n        if (halfEdge !== null && firstHalfEdge !== null) {\r\n            firstHalfEdge.prev = halfEdge;\r\n            halfEdge.next = firstHalfEdge;\r\n        }\r\n        this.faces.push(face);\r\n    }\r\n}\r\n\r\nvar GeometryBuilder: GeometryBuilderConstructor = GeometryBuilderBase;\r\n\r\nexport type HalfEdge = {\r\n    target: Vertex | null;\r\n    twin: HalfEdge | null;\r\n    prev: HalfEdge | null;\r\n    next: HalfEdge | null;\r\n    face: Face | null;\r\n}\r\n\r\nexport type Face = {\r\n    halfEdge: HalfEdge | null;\r\n    [key: string]: any;\r\n}\r\n\r\nexport type Vertex = {\r\n    point: number[] | Float32Array | Float64Array;\r\n    halfEdge: HalfEdge | null;\r\n    properties?: {\r\n        [key: string]: any;\r\n    }\r\n}\r\n\r\nexport class FaceHalfEdgesIterator {\r\n    private _face: Face;\r\n    private _halfEdge: HalfEdge | null;\r\n\r\n    constructor(face: Face) {\r\n        this._face = face;\r\n        this._halfEdge = null;\r\n    }\r\n\r\n    public reset(): void {\r\n        this._halfEdge = null;\r\n    }\r\n\r\n    public current(): HalfEdge | null {\r\n        return this._halfEdge;\r\n    }\r\n\r\n    public next(): IteratorResult<HalfEdge> {\r\n        if (this._halfEdge == null) {\r\n            const firstHalfEdge = this._face.halfEdge ?? null;\r\n            const nextHalfEdge = this._face.halfEdge?.next ?? null;\r\n            this._halfEdge = nextHalfEdge;\r\n            if (firstHalfEdge !== null) {\r\n                return {\r\n                    value: firstHalfEdge, done: nextHalfEdge == null\r\n                };\r\n            }\r\n        }\r\n        else if (this._halfEdge !== this._face.halfEdge) {\r\n            const halfEdge = this._halfEdge;\r\n            const nextHalfEdge = halfEdge.next ?? null;\r\n            this._halfEdge = nextHalfEdge;\r\n            if (halfEdge !== null) {\r\n                return {\r\n                    value: halfEdge, done: nextHalfEdge == null\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            value: void 0, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<HalfEdge> {\r\n        this._halfEdge = null;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class FaceVerticesIterator {\r\n    private _face: Face;\r\n    private _halfEdge: HalfEdge | null;\r\n\r\n    constructor(face: Face) {\r\n        this._face = face;\r\n        this._halfEdge = null;\r\n    }\r\n\r\n    public reset(): void {\r\n        this._halfEdge = null;\r\n    }\r\n\r\n    public current(): Vertex | null {\r\n        return this._halfEdge?.prev?.target ?? null;\r\n    }\r\n\r\n    public next(): IteratorResult<Vertex> {\r\n        if (this._halfEdge == null) {\r\n            const firstVertex = this._face.halfEdge?.prev?.target ?? null;\r\n            const nextHalfEdge = this._face.halfEdge?.next ?? null;\r\n            this._halfEdge = nextHalfEdge;\r\n            if (firstVertex !== null) {\r\n                return {\r\n                    value: firstVertex, done: nextHalfEdge == null\r\n                };\r\n            }\r\n        }\r\n        else if (this._halfEdge !== this._face.halfEdge) {\r\n            const vertex = this._halfEdge.prev?.target ?? null;\r\n            const nextHalfEdge = this._halfEdge.next ?? null;\r\n            this._halfEdge = nextHalfEdge;\r\n            if (vertex !== null) {\r\n                return {\r\n                    value: vertex, done: nextHalfEdge == null\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            value: void 0, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<Vertex> {\r\n        this._halfEdge = null;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class VertexFacesIterator {\r\n    private _halfEdge: HalfEdge | null;\r\n    private _vertex: Vertex;\r\n\r\n    constructor(vertex: Vertex) {\r\n        this._vertex = vertex;\r\n        this._halfEdge = null;\r\n    }\r\n\r\n    public reset(): void {\r\n        this._halfEdge = null;\r\n    }\r\n\r\n    public current(): Face | null {\r\n        return this._halfEdge?.face ?? null;\r\n    }\r\n\r\n    public next(): IteratorResult<Face>  {\r\n        if (this._halfEdge == null) {\r\n            const face = this._vertex.halfEdge?.face ?? null;\r\n            const nextHalfEdge = this._vertex.halfEdge?.prev?.twin ?? null;\r\n            this._halfEdge = nextHalfEdge;\r\n            if (face !== null) {\r\n                return {\r\n                    value: face, done: nextHalfEdge == null\r\n                };\r\n            }\r\n        }\r\n        else if (this._halfEdge !== this._vertex.halfEdge) {\r\n            const face = this._halfEdge.face ?? null;\r\n            const nextHalfEdge = this._halfEdge?.prev?.twin ?? null;\r\n            this._halfEdge = nextHalfEdge;\r\n            if (face !== null) {\r\n                return {\r\n                    value: face, done: nextHalfEdge == null\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            value: void 0, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<Face> {\r\n        this._halfEdge = null;\r\n        return this;\r\n    }\r\n}","import { BufferMask } from \"./WebGLRendererUtilities\";\r\nimport { Texture, TextureMagFilter, TexturePixelFormat, TexturePixelType } from \"./WebGLTextureUtilities\";\r\n\r\nexport enum FramebufferStatus {\r\n    FRAMEBUFFER_COMPLETE = 0x8CD5,\r\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6,\r\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7,\r\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9,\r\n    FRAMEBUFFER_UNSUPPORTED = 0x8CDD\r\n}\r\n\r\nexport enum FramebufferTextureTarget {\r\n    TEXTURE_2D = 0x0DE1,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A\r\n}\r\n\r\nexport enum FramebufferAttachment {\r\n    COLOR_ATTACHMENT0 = 0x8CE0,\r\n    COLOR_ATTACHMENT1 = 0x8CE1,\r\n    COLOR_ATTACHMENT2 = 0x8CE2,\r\n    COLOR_ATTACHMENT3 = 0x8CE3,\r\n    COLOR_ATTACHMENT4 = 0x8CE4,\r\n    COLOR_ATTACHMENT5 = 0x8CE5,\r\n    COLOR_ATTACHMENT6 = 0x8CE6,\r\n    COLOR_ATTACHMENT7 = 0x8CE7,\r\n    COLOR_ATTACHMENT8 = 0x8CE8,\r\n    COLOR_ATTACHMENT9 = 0x8CE9,\r\n    COLOR_ATTACHMENT10 = 0x8CEA,\r\n    COLOR_ATTACHMENT11 = 0x8CEB,\r\n    COLOR_ATTACHMENT12 = 0x8CEC,\r\n    COLOR_ATTACHMENT13 = 0x8CED,\r\n    COLOR_ATTACHMENT14 = 0x8CEE,\r\n    COLOR_ATTACHMENT15 = 0x8CEF,\r\n    DEPTH_ATTACHMENT = 0x8D00,\r\n    STENCIL_ATTACHMENT = 0x8D20,\r\n    DEPTH_STENCIL_ATTACHMENT = 0x821A\r\n}\r\n\r\nexport enum RenderbufferPixelFormat {\r\n    R8 = 0x8229,\r\n    R8UI = 0x8232,\r\n    R8I = 0x8231,\r\n    R16UI = 0x8234,\r\n    R16I = 0x8233,\r\n    R32UI = 0x8236,\r\n    R32I = 0x8235,\r\n    RG8 = 0x822B,\r\n    RG8UI = 0x8238,\r\n    RG8I = 0x8237,\r\n    RG16UI = 0x823A,\r\n    RG16I = 0x8239,\r\n    RG32UI = 0x823C,\r\n    RG32I = 0x823B,\r\n    RGB8 = 0x8051,\r\n    RGBA8 = 0x8058,\r\n    SRGB8_ALPHA8 = 0x8C43,\r\n    RGBA4 = 0x8056,\r\n    RGB565 = 0x8D62,\r\n    RGB5_A1 = 0x8057,\r\n    RGB10_A2 = 0x8059,\r\n    RGBA8UI = 0x8D7C,\r\n    RGBA8I = 0x8D8E,\r\n    RGB10_A2UI = 0x906F,\r\n    RGBA16UI = 0x8D76,\r\n    RGBA16I = 0x8D88,\r\n    RGBA32I = 0x8D82,\r\n    RGBA32UI = 0x8D70,\r\n    DEPTH_COMPONENT16 = 0x81A5,\r\n    DEPTH_COMPONENT24 = 0x81A6,\r\n    DEPTH_COMPONENT32F = 0x8CAC,\r\n    DEPTH24_STENCIL8 = 0x88F0,\r\n    DEPTH32F_STENCIL8 = 0x8CAD,\r\n    STENCIL_INDEX8 = 0x8D48\r\n}\r\n\r\nexport type Renderbuffer = {\r\n    internal: WebGLRenderbuffer;\r\n}\r\n\r\nexport type RenderbufferProperties = {\r\n    internalFormat: RenderbufferPixelFormat;\r\n    width: number;\r\n    height: number;\r\n    samples?: number;\r\n}\r\n\r\ntype Framebuffer = {\r\n    internal: WebGLFramebuffer;\r\n};\r\n\r\ntype FramebufferTextureAttachmentProperties = {\r\n    attachment: FramebufferAttachment;\r\n    textureTarget: FramebufferTextureTarget;\r\n    texture: Texture;\r\n}\r\n\r\ntype FramebufferTextureAttachment = FramebufferTextureAttachmentProperties & Framebuffer;\r\n\r\ntype FramebufferRenderbufferAttachmentProperties = {\r\n    attachment: FramebufferAttachment;\r\n    renderbuffer: Renderbuffer;\r\n}\r\n\r\ntype FramebufferRenderbufferAttachment = FramebufferRenderbufferAttachmentProperties & Framebuffer;\r\n\r\nexport class WebGLFramebufferUtilities {\r\n\r\n    private constructor() {}\r\n\r\n    public static createFramebuffer(gl: WebGL2RenderingContext): Framebuffer | null {\r\n        const framebuffer = gl.createFramebuffer();\r\n    \r\n        if (framebuffer === null) {\r\n            console.error(\"Could not create WebGLFramebuffer.\");\r\n            return null;\r\n        }\r\n        \r\n        return {\r\n            internal: framebuffer\r\n        };\r\n    }\r\n\r\n    public static createRenderbuffer(gl: WebGL2RenderingContext, props: RenderbufferProperties): Renderbuffer | null {\r\n        const renderbuffer = gl.createRenderbuffer();\r\n        \r\n        if (renderbuffer == null) {\r\n            console.error(\"Could not create WebGLRenderbuffer.\");\r\n            return null;\r\n        }\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\r\n        \r\n        if (typeof props.samples !== \"undefined\") {\r\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, props.samples, props.internalFormat, props.width, props.height);\r\n        }\r\n        else {\r\n            gl.renderbufferStorage(gl.RENDERBUFFER, props.internalFormat, props.width, props.height);\r\n        }\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n        return {\r\n            ...props,\r\n            internal: renderbuffer\r\n        };\r\n    }\r\n\r\n    public static attachTexture(gl: WebGL2RenderingContext, framebuffer: Framebuffer, ...props: FramebufferTextureAttachmentProperties[]): FramebufferTextureAttachment[] {\r\n        const currentFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\r\n        if (currentFramebuffer !== framebuffer.internal) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer.internal);\r\n        }\r\n        \r\n        const attachments = props.map((props) => {\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, props.attachment, props.textureTarget, props.texture.internal, 0);\r\n            return {\r\n                ...props,\r\n                ...framebuffer\r\n            };\r\n        });\r\n\r\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        if (status !== FramebufferStatus.FRAMEBUFFER_COMPLETE) {\r\n            console.warn(`Incomplete framebuffer status: ${FramebufferStatus[status]}`);\r\n        }\r\n\r\n        return attachments;\r\n    }\r\n\r\n    public static attachRenderbuffer(gl: WebGL2RenderingContext, framebuffer: Framebuffer, ...props: FramebufferRenderbufferAttachmentProperties[]): FramebufferRenderbufferAttachment[] {\r\n        const currentFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\r\n        if (currentFramebuffer !== framebuffer.internal) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer.internal);\r\n        }\r\n\r\n        const attachments = props.map((props) => {\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, props.attachment, gl.RENDERBUFFER, props.renderbuffer.internal);\r\n            return {\r\n                ...props,\r\n                ...framebuffer\r\n            };\r\n        });\r\n\r\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        if (status !== FramebufferStatus.FRAMEBUFFER_COMPLETE) {\r\n            console.warn(`Incomplete framebuffer status: ${FramebufferStatus[status]}`);\r\n        }\r\n\r\n        return attachments;\r\n    }\r\n\r\n    public static blit(gl: WebGL2RenderingContext, readFramebuffer: Framebuffer | null, drawFramebuffer: Framebuffer | null, readRectangle: number[], drawRectangle: number[], mask: BufferMask, filter: TextureMagFilter): void {\r\n        \r\n        const currentReadFramebuffer = gl.getParameter(gl.READ_FRAMEBUFFER_BINDING);\r\n        if (currentReadFramebuffer !== readFramebuffer) {\r\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, (readFramebuffer !== null) ? readFramebuffer.internal : null);\r\n        }\r\n        \r\n        const currentDrawFramebuffer = gl.getParameter(gl.DRAW_FRAMEBUFFER_BINDING);\r\n        if (currentDrawFramebuffer !== drawFramebuffer) {\r\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, (drawFramebuffer !== null) ? drawFramebuffer.internal : null);\r\n        }\r\n        \r\n        gl.blitFramebuffer(readRectangle[0], readRectangle[1], readRectangle[2], readRectangle[3], drawRectangle[0], drawRectangle[1], drawRectangle[2], drawRectangle[3], mask, filter);\r\n    }\r\n\r\n    public static readPixels(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number, format: TexturePixelFormat, type: TexturePixelType, pixels: ArrayBufferView): void {\r\n        gl.readPixels(x, y, width, height, format, type, pixels);\r\n    }\r\n\r\n    public static bindFramebuffer(gl: WebGL2RenderingContext, framebuffer: Framebuffer): void {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer.internal);\r\n    }\r\n\r\n    public static unbindFramebuffer(gl: WebGL2RenderingContext): void {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    public static deleteFramebuffer(gl: WebGL2RenderingContext, framebuffer: Framebuffer): void {\r\n        if (gl.isFramebuffer(framebuffer.internal)) {\r\n            gl.deleteFramebuffer(framebuffer.internal);\r\n        }\r\n    }\r\n\r\n    public static deleteRenderbuffer(gl: WebGL2RenderingContext, renderbuffer: Renderbuffer): void {\r\n        if (gl.isRenderbuffer(renderbuffer.internal)) {\r\n            gl.deleteRenderbuffer(renderbuffer.internal);\r\n        }\r\n    }\r\n}","export { Buffer };\r\nexport { BufferProperties };\r\n\r\nexport enum BufferDataUsage {\r\n    STATIC_DRAW = 0x88E4,\r\n    DYNAMIC_DRAW = 0x88E8,\r\n    STREAM_DRAW = 0x88E0,\r\n    STATIC_READ = 0x88E5,\r\n    DYNAMIC_READ = 0x88E9,\r\n    STREAM_READ = 0x88E1,\r\n    STATIC_COPY = 0x88E6,\r\n    DYNAMIC_COPY = 0x88EA,\r\n    STREAM_COPY = 0x88E2\r\n}\r\n\r\nexport enum BufferTarget {\r\n    ARRAY_BUFFER = 0x8892,\r\n    ELEMENT_ARRAY_BUFFER = 0x8893,\r\n    TRANSFORM_FEEDBACK_BUFFER = 0x8C8E,\r\n    UNIFORM_BUFFER = 0x8A11,\r\n}\r\n\r\ntype BufferProperties = {\r\n    target: BufferTarget;\r\n    usage: BufferDataUsage;\r\n    byteLength?: number;\r\n}\r\n\r\ntype Buffer = {\r\n    internal: WebGLBuffer;\r\n    target: BufferTarget;\r\n    usage: BufferDataUsage;\r\n    byteLength: number;\r\n}","export enum ShaderType {\r\n    FRAGMENT_SHADER = 0x8B30,\r\n    VERTEX_SHADER = 0x8B31,\r\n}\r\n\r\nexport type Program = {\r\n    internal: WebGLProgram;\r\n    vertexShader: Shader;\r\n    fragmentShader: Shader;\r\n}\r\n\r\nexport type Shader = {\r\n    internal: WebGLShader;\r\n}\r\n\r\nexport type ProgramProperties = {\r\n    vertexSource: string;\r\n    fragmentSource: string;\r\n}\r\n\r\nexport class WebGLProgramUtilities {\r\n\r\n    private constructor() {}\r\n\r\n    public static createShader(gl: WebGL2RenderingContext, type: ShaderType, source: string): Shader | null {\r\n        const shader = gl.createShader(type);\r\n        \r\n        if (shader == null) {\r\n            console.error(`Could not create WebGLShader.`);\r\n            return null;\r\n        }\r\n\r\n        gl.shaderSource(shader, source);\r\n        gl.compileShader(shader);\r\n        \r\n        const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n        if (success) {\r\n            return {\r\n                internal: shader\r\n            };\r\n        }\r\n\r\n        const shaderInfoLog = gl.getShaderInfoLog(shader);\r\n        if (shaderInfoLog !== null) {\r\n            console.warn(shaderInfoLog);\r\n        }\r\n\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n\r\n    public static deleteShader(gl: WebGL2RenderingContext, shader: Shader): void {\r\n        if (gl.isShader(shader.internal)) {\r\n            gl.deleteShader(shader.internal);\r\n        }\r\n    }\r\n    \r\n    public static createProgram(gl: WebGL2RenderingContext, vertexSource: string, fragmentSource: string): Program | null {\r\n\r\n        const vertexShader = this.createShader(gl, ShaderType.VERTEX_SHADER, vertexSource);\r\n        if (vertexShader == null) {\r\n            return null;\r\n        }\r\n\r\n        const fragmentShader = this.createShader(gl, ShaderType.FRAGMENT_SHADER, fragmentSource);\r\n        if (fragmentShader == null) {\r\n            return null;\r\n        }\r\n        \r\n        const program = gl.createProgram();\r\n\r\n        if (program == null) {\r\n            console.error(\"Could not create WebGLProgram.\");\r\n            return null;\r\n        }\r\n\r\n        gl.attachShader(program, vertexShader.internal);\r\n        gl.attachShader(program, fragmentShader.internal);\r\n        gl.linkProgram(program);\r\n\r\n        const success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n        if (success) {\r\n            return {\r\n                internal: program,\r\n                vertexShader: vertexShader,\r\n                fragmentShader: fragmentShader\r\n            };\r\n        }\r\n\r\n        const programInfoLog = gl.getProgramInfoLog(program);\r\n        const vsInfoLog = gl.getProgramInfoLog(program);\r\n        const fsInfoLog = gl.getProgramInfoLog(program);\r\n        if (programInfoLog !== null) {\r\n            console.warn(`Program info: ${programInfoLog}`);\r\n            console.warn(`VS info: ${vsInfoLog}`);\r\n            console.warn(`FS info: ${fsInfoLog}`);\r\n        }\r\n        \r\n        gl.deleteProgram(program);\r\n\r\n        return null;\r\n    }\r\n    \r\n    public static deleteProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        if (gl.isShader(program.vertexShader)) {\r\n            gl.deleteShader(program.vertexShader);\r\n        }\r\n        if (gl.isShader(program.fragmentShader)) {\r\n            gl.deleteShader(program.fragmentShader);\r\n        }\r\n        if (gl.isProgram(program.internal)) {\r\n            gl.deleteProgram(program.internal);\r\n        }\r\n    }\r\n\r\n    public static useProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        const currentProgram = gl.getParameter(gl.CURRENT_PROGRAM);\r\n        if (currentProgram !== program.internal) {\r\n            gl.useProgram(program.internal);\r\n        }\r\n    }\r\n}","import { BufferDataUsage, BufferTarget, Buffer } from \"./WebGLBufferUtilities\";\r\nimport { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\n\r\nexport { VertexArrayAttributeValue };\r\nexport { VertexArrayAttributeProperties };\r\nexport { VertexArrayProperties };\r\nexport { VertexArrayValues };\r\nexport { VertexArray };\r\nexport { WebGLVertexArrayUtilities };\r\n\r\nexport enum DrawMode {\r\n    POINTS = 0x0000,\r\n    LINES = 0x0001,\r\n    LINE_LOOP = 0x0002,\r\n    LINE_STRIP = 0x0003,\r\n    TRIANGLES = 0x0004,\r\n    TRIANGLE_STRIP = 0x0005,\r\n    TRIANGLE_FAN = 0x0006\r\n}\r\n\r\nexport enum ArrayDataType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406,\r\n    HALF_FLOAT = 0x140B,\r\n}\r\n\r\nexport enum ElementArrayDataType {\r\n    UNSIGNED_BYTE = 0x1401,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    UNSIGNED_INT = 0x1405\r\n}\r\n\r\ntype VertexArrayAttributeArray =\r\n    Float32Array | Int32Array | Uint32Array |\r\n    Int16Array | Uint16Array |\r\n    Int8Array | Uint8Array | Uint8ClampedArray;\r\n\r\ntype VertexArrayAttributeProperties = {\r\n    array: VertexArrayAttributeArray;\r\n    numComponents: 1 | 2 | 3 | 4;\r\n    stride?: number;\r\n    offset?: number;\r\n    divisor?: number;\r\n    normalize?: boolean;\r\n    usage?: BufferDataUsage;\r\n    byteLength?: number;\r\n    constant?: boolean;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n}\r\n\r\ntype VertexArrayAttributeValue = {\r\n    array: VertexArrayAttributeArray;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n}\r\n\r\ntype VertexArrayAttributeSetter = {\r\n    bufferIndex: number;\r\n    location: number;\r\n    divisor: number;\r\n    stride: number;\r\n    constant: boolean;\r\n    offset: number;\r\n    numComponents: number;\r\n    normalize: boolean;\r\n    bufferBytesOffset: number;\r\n}\r\n\r\ntype VertexArrayProperties = {\r\n    attributes: {\r\n        [name: string]: VertexArrayAttributeProperties;\r\n    };\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    numElements: number;\r\n}\r\n\r\ntype VertexArrayValues = {\r\n    attributes: {\r\n        [name: string]: VertexArrayAttributeValue;\r\n    };\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    numElements: number;\r\n}\r\n\r\ntype VertexArray = {\r\n    internal: WebGLVertexArrayObject;\r\n    program: Program;\r\n    attributeSetters: {\r\n        [name: string]: VertexArrayAttributeSetter;\r\n    };\r\n    verticesBuffers: Buffer[];\r\n    numElements: number;\r\n    indexType?: ElementArrayDataType;\r\n    indicesBuffer?: WebGLBuffer;\r\n}\r\n\r\nclass WebGLVertexArrayUtilities {\r\n\r\n    public static getAttributeDataType(attribute: VertexArrayAttributeProperties): ArrayDataType {\r\n        if (attribute.array instanceof Float32Array || attribute.array instanceof Int32Array || attribute.array instanceof Uint32Array) {\r\n            return ArrayDataType.FLOAT;\r\n        }\r\n        else if (attribute.array instanceof Int16Array) {\r\n            return ArrayDataType.SHORT;\r\n        }\r\n        else if (attribute.array instanceof Uint16Array) {\r\n            return ArrayDataType.UNSIGNED_SHORT;\r\n        }\r\n        else if (attribute.array instanceof Int8Array) {\r\n            return ArrayDataType.BYTE;\r\n        }\r\n        else if (attribute.array instanceof Uint8Array) {\r\n            return ArrayDataType.UNSIGNED_BYTE;\r\n        }\r\n        console.error(`Unsupported attribute array ${attribute.array.constructor.name}.`);\r\n        return -1;\r\n    };\r\n\r\n    public static createVertexArray(gl: WebGL2RenderingContext, program: Program, vertexArray: VertexArrayProperties): VertexArray | null {\r\n        \r\n        const _vertexArray = gl.createVertexArray();\r\n        if (_vertexArray === null) {\r\n            console.error(\"Could not create WebGLVertexArrayObject.\");\r\n            return null;\r\n        }\r\n\r\n        gl.bindVertexArray(_vertexArray);\r\n\r\n        const attributesEntries = Object.entries(vertexArray.attributes);\r\n\r\n        const buffersProps: {\r\n            usage: BufferDataUsage;\r\n            byteLength: number;\r\n        }[] = [];\r\n        attributesEntries.forEach(([_, attribute]) => {\r\n            const bufferUsage = attribute.usage || gl.STATIC_DRAW;\r\n            const bufferIndex = buffersProps.findIndex(bufferProps => bufferProps.usage === bufferUsage);\r\n\r\n            if (bufferIndex < 0) {\r\n                buffersProps.push({\r\n                    usage: bufferUsage,\r\n                    byteLength: attribute.array.byteLength\r\n                });\r\n            }\r\n            else {\r\n                buffersProps[bufferIndex].byteLength += attribute.array.byteLength;\r\n            }\r\n        });\r\n\r\n        const attributesSetters: {\r\n            [name: string]: VertexArrayAttributeSetter;\r\n        } = {};\r\n        const buffers: VertexArray[\"verticesBuffers\"] = [];\r\n        buffersProps.forEach((bufferProps, bufferIndex) => {\r\n            const buffer = gl.createBuffer();\r\n            if (buffer == null) {\r\n                console.error(\"Could not create WebGLBuffer.\");\r\n                return null;\r\n            }\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, bufferProps.byteLength, bufferProps.usage);\r\n\r\n            let bufferBytesOffset = 0;\r\n            attributesEntries\r\n                .filter(([_, attribute]) => (attribute.usage || gl.STATIC_DRAW) === bufferProps.usage)\r\n                .forEach(([attributeName, attribute]) => {\r\n\r\n                const constant = attribute.constant ?? false;\r\n                const array = attribute.array;\r\n\r\n                if (\"buffer\" in array && !constant) {\r\n                    const srcOffset = (typeof attribute.srcOffset === \"undefined\") ? 0 : attribute.srcOffset;\r\n                    const srcLength = (typeof attribute.srcLength === \"undefined\") ? array.length : attribute.srcLength;\r\n                    gl.bufferSubData(gl.ARRAY_BUFFER, bufferBytesOffset, array, srcOffset, srcLength);\r\n                }\r\n                \r\n                const location = gl.getAttribLocation(program.internal, attributeName);\r\n                if (location == -1) {\r\n                    console.warn(`Attribute ${attributeName} could not be located.`);\r\n                    return;\r\n                }\r\n                \r\n                const type = this.getAttributeDataType(attribute);\r\n                const stride = attribute.stride ?? 0;\r\n                const numComponents = attribute.numComponents;\r\n                const divisor = attribute.divisor ?? 0;\r\n                const normalize = attribute.normalize ?? false;\r\n                const offset = (stride > 0) ? (attribute.offset || 0) : bufferBytesOffset;\r\n                \r\n                gl.vertexAttribPointer(location, numComponents, type, normalize, stride, offset);\r\n                if (divisor > 0) {\r\n                    gl.vertexAttribDivisor(location, divisor);\r\n                }\r\n                if (constant) {\r\n                    switch (numComponents) {\r\n                        case 1:\r\n                            gl.vertexAttrib1fv(location, array);\r\n                            break;\r\n                        case 2:\r\n                            gl.vertexAttrib2fv(location, array);\r\n                            break;\r\n                        case 3:\r\n                            gl.vertexAttrib3fv(location, array);\r\n                            break;\r\n                        case 4:\r\n                            gl.vertexAttrib4fv(location, array);\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    gl.enableVertexAttribArray(location);\r\n                }\r\n    \r\n                attributesSetters[attributeName] = {\r\n                    bufferIndex: bufferIndex,\r\n                    location: location,\r\n                    stride: stride,\r\n                    numComponents: numComponents,\r\n                    normalize: normalize,\r\n                    constant: constant,\r\n                    divisor: divisor,\r\n                    offset: offset,\r\n                    bufferBytesOffset: bufferBytesOffset\r\n                };\r\n    \r\n                bufferBytesOffset += attribute.array.byteLength;\r\n            });\r\n\r\n            buffers.push({\r\n                internal: buffer,\r\n                target: gl.ARRAY_BUFFER,\r\n                usage: bufferProps.usage,\r\n                byteLength: bufferProps.byteLength\r\n            });\r\n        });\r\n\r\n        let indicesBuffer: WebGLBuffer | null | undefined = void 0;\r\n        let indexType: ElementArrayDataType | undefined = void 0;\r\n\r\n        if (typeof vertexArray.indices !== \"undefined\") {\r\n            indexType = this.getElementArrayBufferType(vertexArray.indices);\r\n            indicesBuffer = gl.createBuffer();\r\n            if (indicesBuffer == null) {\r\n                console.error(\"Could not create WebGLBuffer.\");\r\n                return null;\r\n            }\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indicesBuffer);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, vertexArray.indices, gl.STATIC_DRAW);\r\n        }\r\n\r\n        return {\r\n            attributeSetters: attributesSetters,\r\n            verticesBuffers: buffers,\r\n            indicesBuffer: indicesBuffer,\r\n            program: program,\r\n            internal: _vertexArray,\r\n            numElements: vertexArray.numElements,\r\n            indexType: indexType\r\n        };\r\n    }\r\n\r\n    public static deleteVertexArray(gl: WebGL2RenderingContext, vertexArray: VertexArray): void {\r\n        if (gl.isVertexArray(vertexArray.internal)) {\r\n            gl.deleteVertexArray(vertexArray.internal);\r\n        }\r\n    }\r\n\r\n    public static drawVertexArray(gl: WebGL2RenderingContext, vertexArray: VertexArray, mode: DrawMode, instanceCount?: number): void {\r\n        \r\n        WebGLProgramUtilities.useProgram(gl, vertexArray.program);\r\n        \r\n        const currentVertexArray = gl.getParameter(gl.VERTEX_ARRAY_BINDING);\r\n        if (currentVertexArray !== vertexArray.internal) {\r\n            gl.bindVertexArray(vertexArray.internal);\r\n        }\r\n        \r\n        if (typeof vertexArray.indexType !== \"undefined\") {\r\n            if (typeof instanceCount !== \"undefined\") {\r\n                gl.drawElementsInstanced(mode, vertexArray.numElements, vertexArray.indexType, 0, instanceCount);\r\n            }\r\n            else {\r\n                gl.drawElements(mode, vertexArray.numElements, vertexArray.indexType, 0);\r\n            }\r\n        }\r\n        else {\r\n            if (typeof instanceCount !== \"undefined\") {\r\n                gl.drawArraysInstanced(mode, 0, vertexArray.numElements, instanceCount);\r\n            }\r\n            else {\r\n                gl.drawArrays(mode, 0, vertexArray.numElements);\r\n            }\r\n        }\r\n    }\r\n\r\n    public static setVertexArrayValues(gl: WebGL2RenderingContext, vertexArray: VertexArray, values: VertexArrayValues): void {\r\n        const currentVertexArray = gl.getParameter(gl.VERTEX_ARRAY_BINDING);\r\n        if (currentVertexArray !== vertexArray.internal) {\r\n            gl.bindVertexArray(vertexArray.internal);\r\n        }\r\n\r\n        Object.entries(values.attributes).forEach(([attributeName, attribute]) => {\r\n            const attributeSetter = vertexArray.attributeSetters[attributeName];\r\n            const verticesBuffer = vertexArray.verticesBuffers[attributeSetter.bufferIndex];\r\n\r\n            const currentArrayBufferBinding = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\r\n            if (currentArrayBufferBinding !== verticesBuffer.internal) {\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, verticesBuffer.internal);\r\n            }\r\n\r\n            const srcOffset = (typeof attribute.srcOffset === \"undefined\") ? 0 : attribute.srcOffset;\r\n            const srcLength = (typeof attribute.srcLength === \"undefined\") ? attribute.array.length : attribute.srcLength;\r\n\r\n            if (typeof vertexArray !== \"undefined\") {\r\n                gl.bufferSubData(gl.ARRAY_BUFFER, attributeSetter.bufferBytesOffset, attribute.array, srcOffset, srcLength);\r\n            }\r\n            else {\r\n                console.warn(`Attribute ${attributeName} does not exist in the setters.`);\r\n            }\r\n        });\r\n\r\n        if (typeof values.indices !== \"undefined\" && typeof vertexArray.indicesBuffer !== \"undefined\") {\r\n            const currentElementArrayBufferBinding = gl.getParameter(gl.ELEMENT_ARRAY_BUFFER_BINDING);\r\n            if (currentElementArrayBufferBinding !== vertexArray.indicesBuffer) {\r\n                gl.bindBuffer(BufferTarget.ELEMENT_ARRAY_BUFFER, vertexArray.indicesBuffer);\r\n            }\r\n            gl.bufferSubData(BufferTarget.ELEMENT_ARRAY_BUFFER, 0, values.indices);\r\n        }\r\n    }\r\n\r\n    public static unbindVertexArray(gl: WebGL2RenderingContext): void {\r\n        gl.bindVertexArray(null);\r\n    }\r\n\r\n    public static getElementArrayBufferType(indices: Uint8Array | Uint16Array | Uint32Array): ElementArrayDataType {\r\n        if (indices instanceof Uint8Array) {\r\n            return ElementArrayDataType.UNSIGNED_BYTE;\r\n        }\r\n        else if (indices instanceof Uint16Array) {\r\n            return ElementArrayDataType.UNSIGNED_SHORT;\r\n        }\r\n        else {\r\n            return ElementArrayDataType.UNSIGNED_INT;\r\n        }\r\n    }\r\n}","export enum TexturePixelFormat {\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    DEPTH_COMPONENT = 0x1902,\r\n    DEPTH_STENCIL = 0x84F9,\r\n    RED = 0x1903,\r\n    RG = 0x8227,\r\n    RED_INTEGER = 0x8D94,\r\n    RG_INTEGER = 0x8228,\r\n    RGB_INTEGER = 0x8D98,\r\n    RGBA_INTEGER = 0x8D99\r\n}\r\n\r\nexport enum TextureInternalPixelFormat {\r\n    DEPTH_COMPONENT16 = 0x81A5,\r\n    DEPTH_COMPONENT24 = 0x81A6,\r\n    DEPTH_COMPONENT32F = 0x8CAC,\r\n    DEPTH24_STENCIL8 = 0x88F0,\r\n    DEPTH32F_STENCIL8 = 0x8CAD,\r\n    R8 = 0x8229,\r\n    R8_SNORM = 0x8F94,\r\n    RG8 = 0x822B,\r\n    RG8_SNORM = 0x8F95,\r\n    RGB8 = 0x8051,\r\n    RGB8_SNORM = 0x8F96,\r\n    RGB565 = 0x8D62,\r\n    RGBA8 = 0x8058,\r\n    RGBA4 = 0x8056,\r\n    RGB5_A1 = 0x8057,\r\n    RGBA8_SNORM = 0x8F97,\r\n    RGB10_A2UI = 0x906F,\r\n    SRGB = 0x8C40,\r\n    SRGB8 = 0x8C41,\r\n    SRGB8_ALPHA8 = 0x8C43,\r\n    R16F = 0x822D,\r\n    RGB16F = 0x881B,\r\n    RGBA16F = 0x881A,\r\n    R32F = 0x822E,\r\n    RG32F = 0x8230,\r\n    RGB32F = 0x8815,\r\n    RGBA32F\t= 0x8814,\r\n    R11F_G11F_B10F = 0x8C3A,\r\n    RGB9_E5 = 0x8C3D,\r\n    R8UI = 0x8232,\r\n    R16I = 0x8233,\r\n    R16UI = 0x8234,\r\n    R32I = 0x8235,\r\n    R32UI = 0x8236,\r\n    RG8I = 0x8237,\r\n    RG8UI = 0x8238,\r\n    RG16I = 0x8239,\r\n    RG16UI = 0x823A,\r\n    RG32I = 0x823B,\r\n    RG32UI = 0x823C,\r\n    RGB8I = 0x8D8F,\r\n    RGB8UI = 0x8D7D,\r\n    RGB16I = 0x8D89,\r\n    RGB16UI = 0x8D77,\r\n    RGB32I = 0x8D83,\r\n    RGB32UI = 0x8D71,\r\n    RGBA8I = 0x8D8E,\r\n    RGBA8UI = 0x8D7C,\r\n    RGBA16I = 0x8D88,\r\n    RGBA16UI = 0x8D76,\r\n    RGBA32I = 0x8D82,\r\n    RGBA32UI = 0x8D70,\r\n}\r\n\r\nexport enum TexturePixelType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406,\r\n    HALF_FLOAT = 0x140B,\r\n    UNSIGNED_SHORT_4_4_4_4 = 0x8033,\r\n    UNSIGNED_SHORT_5_5_5_1 = 0x8034,\r\n    UNSIGNED_SHORT_5_6_5 = 0x8363,\r\n    UNSIGNED_INT_2_10_10_10_REV = 0x8368,\r\n    UNSIGNED_INT_24_8 = 0x84FA,\r\n    UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B,\r\n    UNSIGNED_INT_5_9_9_9_REV = 0x8C3E,\r\n    FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD,\r\n    INT_2_10_10_10_REV = 0x8D9F\r\n}\r\n\r\n\r\nexport enum TextureParameter {\r\n    TEXTURE_MAG_FILTER = 0x2800,\r\n    TEXTURE_MIN_FILTER = 0x2801,\r\n    TEXTURE_WRAP_S = 0x2802,\r\n    TEXTURE_WRAP_T = 0x2803,\r\n    TEXTURE_BASE_LEVEL = 0x813C,\r\n    TEXTURE_MAX_LEVEL = 0x813D,\r\n    TEXTURE_MAX_LOD = 0x813B,\r\n    TEXTURE_MIN_LOD = 0x813A,\r\n    TEXTURE_WRAP_R = 0x8072,\r\n    TEXTURE_COMPARE_FUNC = 0x884D,\r\n    TEXTURE_COMPARE_MODE = 0x884C\r\n}\r\n\r\nexport enum TextureTarget {\r\n    TEXTURE_2D = 0x0DE1,\r\n    TEXTURE_CUBE_MAP = 0x8513,\r\n    TEXTURE_3D = 0x806F,\r\n    TEXTURE_2D_ARRAY = 0x8C1A,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A\r\n}\r\n\r\nexport enum TextureMagFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600\r\n}\r\n\r\nexport enum TextureMinFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600,\r\n    NEAREST_MIPMAP_NEAREST = 0x2700, \r\n    LINEAR_MIPMAP_NEAREST = 0x2701, \r\n    NEAREST_MIPMAP_LINEAR = 0x2702,\r\n    LINEAR_MIPMAP_LINEAR = 0x2703\r\n}\r\n\r\nexport enum TextureCompareMode {\r\n    COMPARE_REF_TO_TEXTURE = 0x884E,\r\n    NONE = 0\r\n}\r\n\r\nexport enum TextureWrapMode {\r\n    REPEAT = 0x2901,\r\n    CLAMP_TO_EDGE = 0x812F, \r\n    MIRRORED_REPEAT = 0x8370\r\n}\r\n\r\nexport enum TextureCompareFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207\r\n}\r\n\r\nexport type Texture2DPixels = Uint32Array |  Uint16Array | Uint8Array | TexImageSource | null;\r\n\r\nexport type TextureCubeMapPixels = {\r\n    xPos: TexImageSource;\r\n    xNeg: TexImageSource;\r\n    yPos: TexImageSource;\r\n    yNeg: TexImageSource;\r\n    zPos: TexImageSource;\r\n    zNeg: TexImageSource;\r\n}\r\n\r\nexport type TextureParameters = {\r\n    min?: TextureMinFilter;\r\n    mag?: TextureMagFilter;\r\n\r\n    wrapS?: TextureWrapMode;\r\n    wrapT?: TextureWrapMode;\r\n    wrapR?: TextureWrapMode;\r\n\r\n    baseMipmapLevel?: number;\r\n    maxMipmapLevel?: number;\r\n\r\n    minLod?: number;\r\n    maxLod?: number;\r\n\r\n    compareFunction?: TextureCompareFunction;\r\n    compareMode?: TextureCompareMode;\r\n}\r\n\r\nexport type TextureProperties = {\r\n    pixels: Texture2DPixels | TextureCubeMapPixels;\r\n    target: TextureTarget;\r\n    \r\n    subimage?: {\r\n        xoffset: number;\r\n        yoffset: number;\r\n        width: number;\r\n        height: number;\r\n    };\r\n\r\n    lod?: number;\r\n    width: number;\r\n    height: number;\r\n\r\n    format: TexturePixelFormat;\r\n    internalFormat: TextureInternalPixelFormat;\r\n    type: TexturePixelType;\r\n}\r\n\r\nexport type Texture = TextureProperties & TextureParameters & {\r\n    unit: number;\r\n    internal: WebGLTexture;\r\n}\r\n\r\nexport class WebGLTextureUtilities {\r\n\r\n    private constructor() {}\r\n\r\n    public static createTexture(gl: WebGL2RenderingContext, props: TextureProperties & TextureParameters): Texture | null {\r\n        const texture = gl.createTexture();\r\n        \r\n        if (texture === null) {\r\n            console.error(\"Could not create WebGLTexture.\");\r\n            return null;\r\n        }\r\n\r\n        const unit = this._allocateUnit(gl);\r\n        if (unit < 0) {\r\n            console.error(`Could not allocate another texture unit. Max (${gl.MAX_TEXTURE_IMAGE_UNITS}) was reached.`);\r\n            return null;\r\n        }\r\n\r\n        let tex = {\r\n            unit: unit,\r\n            internal: texture\r\n        } as Texture;\r\n\r\n        this.setTextureProperties(gl, tex, props);\r\n        this.setTextureParameters(gl, tex, props);\r\n\r\n        return tex;\r\n    }\r\n\r\n    public static deleteTexture(gl: WebGL2RenderingContext, texture: Texture): void {\r\n        if (gl.isTexture(texture.internal)) {\r\n            gl.deleteTexture(texture.internal);\r\n        }\r\n        this._freeUnit(gl, texture.unit);\r\n    }\r\n\r\n    public static setTextureProperties(gl: WebGL2RenderingContext, texture: Texture, props: TextureProperties): void {\r\n\r\n        const activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE);\r\n        if (activeTexture !== texture.unit) {\r\n            gl.activeTexture(gl.TEXTURE0 + texture.unit);\r\n            gl.bindTexture(props.target, texture.internal);\r\n        }\r\n\r\n        const lod = props.lod ?? 0;\r\n\r\n        const pixels = props.pixels;\r\n        if (pixels == null) {\r\n            gl.texImage2D(props.target, lod, props.internalFormat, props.width, props.height, 0, props.format, props.type, null);\r\n        }\r\n        else {\r\n            if (\"xPos\" in pixels) {\r\n                gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_X, lod, props.internalFormat, props.width, props.height, 0, props.format, props.type, pixels.xPos as any);\r\n                gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_X, lod, props.internalFormat, props.width, props.height, 0, props.format, props.type, pixels.xNeg as any);\r\n                gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Y, lod, props.internalFormat, props.width, props.height, 0, props.format, props.type, pixels.yPos as any);\r\n                gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Y, lod, props.internalFormat, props.width, props.height, 0, props.format, props.type, pixels.yNeg as any);\r\n                gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Z, lod, props.internalFormat, props.width, props.height, 0, props.format, props.type, pixels.zPos as any);\r\n                gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Z, lod, props.internalFormat, props.width, props.height, 0, props.format, props.type, pixels.zNeg as any);\r\n            }\r\n            else {\r\n                if (typeof props.subimage !== \"undefined\") {\r\n                    gl.texImage2D(props.target, lod, props.internalFormat, props.width, props.height, 0, props.format, props.type, props.pixels as ArrayBufferView);\r\n                    gl.texSubImage2D(props.target, lod, props.subimage.xoffset, props.subimage.yoffset, props.subimage.width, props.subimage.height, props.format, props.type, props.pixels as any);\r\n                }\r\n                else {\r\n                    gl.texImage2D(props.target, lod, props.internalFormat, props.width, props.height, 0, props.format, props.type, props.pixels as ArrayBufferView);\r\n                }\r\n            }\r\n            gl.generateMipmap(props.target);\r\n        }\r\n\r\n        Object.assign(\r\n            texture, {\r\n            pixels: props.pixels,\r\n            target: props.target,\r\n            subimage: props.subimage,\r\n            lod: props.lod,\r\n            width: props.width,\r\n            height: props.height,\r\n            format: props.format,\r\n            internalFormat: props.internalFormat,\r\n            type: props.type\r\n        });\r\n    }\r\n\r\n    public static setTextureParameters(gl: WebGL2RenderingContext, texture: Texture, param: TextureParameters): void {\r\n\r\n        const activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE);\r\n        if (activeTexture !== texture.unit) {\r\n            gl.activeTexture(gl.TEXTURE0 + texture.unit);\r\n            gl.bindTexture(texture.target, texture.internal);\r\n        }\r\n\r\n        if (typeof param.min !== \"undefined\")\r\n            gl.texParameteri(texture.target, TextureParameter.TEXTURE_MIN_FILTER, param.min);\r\n        if (typeof param.mag !== \"undefined\")\r\n            gl.texParameteri(texture.target, TextureParameter.TEXTURE_MAG_FILTER, param.mag);\r\n        if (typeof param.wrapS !== \"undefined\")\r\n            gl.texParameteri(texture.target, TextureParameter.TEXTURE_WRAP_S, param.wrapS);\r\n        if (typeof param.wrapT !== \"undefined\")\r\n            gl.texParameteri(texture.target, TextureParameter.TEXTURE_WRAP_T, param.wrapT);\r\n        if (typeof param.wrapR !== \"undefined\")\r\n            gl.texParameteri(texture.target, TextureParameter.TEXTURE_WRAP_R, param.wrapR);\r\n        if (typeof param.baseMipmapLevel !== \"undefined\")\r\n            gl.texParameteri(texture.target, TextureParameter.TEXTURE_BASE_LEVEL, param.baseMipmapLevel);\r\n        if (typeof param.maxMipmapLevel !== \"undefined\")\r\n            gl.texParameteri(texture.target, TextureParameter.TEXTURE_MAX_LEVEL, param.maxMipmapLevel);\r\n        if (typeof param.compareFunction !== \"undefined\")\r\n            gl.texParameteri(texture.target, TextureParameter.TEXTURE_COMPARE_FUNC, param.compareFunction);\r\n        if (typeof param.compareMode !== \"undefined\")\r\n            gl.texParameteri(texture.target, TextureParameter.TEXTURE_COMPARE_MODE, param.compareMode);\r\n        if (typeof param.minLod !== \"undefined\")\r\n            gl.texParameterf(texture.target, TextureParameter.TEXTURE_MIN_LOD, param.minLod);\r\n        if (typeof param.maxLod !== \"undefined\")\r\n            gl.texParameterf(texture.target, TextureParameter.TEXTURE_MAX_LOD, param.maxLod);\r\n\r\n        Object.assign(texture, {\r\n            min: param.min,\r\n            mag: param.mag,\r\n            wrapS: param.wrapS,\r\n            wrapT: param.wrapT,\r\n            wrapR: param.wrapR,\r\n            baseMipmapLevel: param.baseMipmapLevel,\r\n            maxMipmapLevel: param.maxMipmapLevel,\r\n            compareFunction: param.compareFunction,\r\n            compareMode: param.compareMode,\r\n            minLod: param.minLod,\r\n            maxLod: param.maxLod\r\n        });\r\n    }\r\n    \r\n    private static _units: Map<WebGL2RenderingContext, boolean[]> = new Map();\r\n\r\n    private static _freeUnit(gl: WebGL2RenderingContext, unit: number): number | null {\r\n        const units = this._units.get(gl);\r\n        if (typeof units !== \"undefined\") {\r\n            if (units.length < 0) {\r\n                units[unit] = false;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private static _allocateUnit(gl: WebGL2RenderingContext): number {\r\n        const maxUnits = gl.MAX_TEXTURE_IMAGE_UNITS;\r\n        let units = this._units.get(gl);\r\n        if (typeof units === \"undefined\") {\r\n            units = new Array(maxUnits);\r\n            this._units.set(gl, units);\r\n        }\r\n        for (let i = 1; i < maxUnits; i++) {\r\n            if (!units[i]) {\r\n                units[i] = true;\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n}","import { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\nimport { Texture } from \"./WebGLTextureUtilities\";\r\n\r\nexport { UniformValue };\r\nexport { UniformProperties };\r\nexport { Uniform };\r\nexport { UniformsList };\r\nexport { UniformSetter };\r\nexport { UniformsListSetter };\r\nexport { WebGLUniformUtilities };\r\n\r\nexport enum UniformType {\r\n    BOOL = 0x8B56,\r\n    BOOL_VEC2 = 0x8B57,\t \r\n    BOOL_VEC3 = 0x8B58,\t \r\n    BOOL_VEC4 = 0x8B59,\r\n    INT = 0x1404,\r\n    INT_VEC2 = 0x8B53,\t \r\n    INT_VEC3 = 0x8B54,\t \r\n    INT_VEC4 = 0x8B55,\t \r\n    INT_SAMPLER_2D = 0x8DCA,\r\n    INT_SAMPLER_3D = 0x8DCB,\r\n    INT_SAMPLER_CUBE = 0x8DCC,\r\n    INT_SAMPLER_2D_ARRAY = 0x8DCF,\r\n    UNSIGNED_INT_SAMPLER_2D = 0x8DD2,\r\n    UNSIGNED_INT_SAMPLER_3D = 0x8DD3,\r\n    UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4,\r\n    UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7,\r\n    UNSIGNED_INT = 0x1405,\r\n    UNSIGNED_INT_VEC2 = 0x8DC6,\r\n    UNSIGNED_INT_VEC3 = 0x8DC7,\r\n    UNSIGNED_INT_VEC4 = 0x8DC8,\r\n    FLOAT = 0x1406,\r\n    FLOAT_VEC2 = 0x8B50,\t \r\n    FLOAT_VEC3 = 0x8B51,\t \r\n    FLOAT_VEC4 = 0x8B52,\r\n    FLOAT_MAT2 = 0x8B5A,\t \r\n    FLOAT_MAT3 = 0x8B5B,\t \r\n    FLOAT_MAT4 = 0x8B5C,\t \r\n    FLOAT_MAT2x3 = 0x8B65,\r\n    FLOAT_MAT2x4 = 0x8B66,\r\n    FLOAT_MAT3x2 = 0x8B67,\r\n    FLOAT_MAT3x4 = 0x8B68,\r\n    FLOAT_MAT4x2 = 0x8B69,\r\n    FLOAT_MAT4x3 = 0x8B6A,\r\n    SAMPLER_2D = 0x8B5E,\t \r\n    SAMPLER_3D = 0x8B5F,\r\n    SAMPLER_CUBE = 0x8B60,\r\n    SAMPLER_2D_SHADOW = 0x8B62,\r\n    SAMPLER_2D_ARRAY = 0x8DC1,\r\n    SAMPLER_2D_ARRAY_SHADOW = 0x8DC4,\r\n    SAMPLER_CUBE_SHADOW = 0x8DC5\r\n}\r\n\r\ntype UniformValue = number | Float32List | Uint32List | Int32List | Texture;\r\n\r\ntype UniformProperties = {\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n    transpose?: boolean;\r\n}\r\n\r\ntype Uniform = {\r\n    value: UniformValue;\r\n    props?: UniformProperties;\r\n}\r\n\r\ntype UniformsList = {\r\n    [name: string]: Uniform\r\n};\r\n\r\ntype UniformSetter = {\r\n    type: UniformType;\r\n    set: (value: any) => void;\r\n}\r\n\r\ntype UniformsListSetter = {\r\n    setters: {\r\n        [name: string]: UniformSetter | null;\r\n    };\r\n    program: Program;\r\n}\r\n\r\nclass WebGLUniformUtilities {\r\n\r\n    private constructor() {}\r\n\r\n    public static getUniformValueByteLength(uniformValue: UniformValue): number {\r\n        if (typeof uniformValue === \"object\") {\r\n            if (\"buffer\" in uniformValue) {\r\n                return uniformValue.byteLength;\r\n            }\r\n            else if (\"unit\" in uniformValue) {\r\n                return 32;\r\n            }\r\n            else {\r\n                return uniformValue.length * 32;\r\n            }\r\n        }\r\n        return 32;\r\n    }\r\n\r\n    public static getUniformValueArrayBufferView(uniformValue: UniformValue): ArrayBufferView {\r\n        if (typeof uniformValue === \"object\") {\r\n            if (\"buffer\" in uniformValue) {\r\n                return uniformValue;\r\n            }\r\n            else if (\"unit\" in uniformValue) {\r\n                return new Float32Array(uniformValue.unit);\r\n            }\r\n            else {\r\n                return new Float32Array(uniformValue);\r\n            }\r\n        }\r\n        return new Float32Array([uniformValue]);\r\n    }\r\n\r\n    public static getUniformSetter(gl: WebGL2RenderingContext, uniform: Uniform, location: WebGLUniformLocation , uniformType: UniformType): UniformSetter | null { \r\n        const uniformValue = uniform.value;\r\n        const uniformProps = (typeof uniform.props === \"undefined\") ? {\r\n            srcOffset: undefined,\r\n            srcLength: undefined,\r\n            transpose: false\r\n        } : {\r\n            srcOffset: uniform.props.srcOffset || undefined,\r\n            srcLength: uniform.props.srcLength || undefined,\r\n            transpose: uniform.props.transpose || false    \r\n        };\r\n\r\n        switch (uniformType) {\r\n            case UniformType.FLOAT:\r\n                if (typeof uniformValue === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1f(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT:\r\n                if (typeof uniformValue === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1ui(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL:\r\n            case UniformType.INT:\r\n                if (typeof uniformValue === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1i(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.INT_SAMPLER_2D:\r\n            case UniformType.INT_SAMPLER_2D_ARRAY:\r\n            case UniformType.INT_SAMPLER_3D:\r\n            case UniformType.INT_SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D:\r\n            case UniformType.SAMPLER_3D:\r\n            case UniformType.SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D_SHADOW:\r\n            case UniformType.SAMPLER_2D_ARRAY:\r\n            case UniformType.SAMPLER_2D_ARRAY_SHADOW:\r\n            case UniformType.SAMPLER_CUBE_SHADOW:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_3D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_CUBE:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D_ARRAY:\r\n                if (typeof uniformValue !== \"number\" && \"unit\" in uniformValue) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (tex: Texture) => {\r\n                            gl.activeTexture(gl.TEXTURE0 + tex.unit);\r\n                            gl.bindTexture(tex.target, tex.internal);\r\n                            gl.uniform1i(location, tex.unit);\r\n                        }\r\n                    };\r\n                }\r\n                else if (typeof uniformValue !== \"number\" && \"unit\" in uniformValue) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (tex: Texture) => {\r\n                            gl.activeTexture(gl.TEXTURE0 + tex.unit);\r\n                            gl.bindTexture(tex.target, tex.internal);\r\n                            gl.uniform1i(location, tex.unit);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC2:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform2fv(location, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC2:\r\n            case UniformType.INT_VEC2:\r\n                if (uniformValue instanceof Int32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform2iv(location, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC2:\r\n                if (uniformValue instanceof Uint32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform2uiv(location, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC3:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform3fv(location, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC3:\r\n            case UniformType.INT_VEC3:\t\r\n                if (uniformValue instanceof Int32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform3iv(location, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC3:\r\n                if (uniformValue instanceof Uint32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform3uiv(location, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC4:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform4fv(location, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC4:\r\n            case UniformType.INT_VEC4:\r\n                if (uniformValue instanceof Int32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform4iv(location, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC4:\r\n                if (uniformValue instanceof Uint32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform4uiv(location, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2fv(location, uniformProps.transpose, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3fv(location, uniformProps.transpose, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4:\t\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4fv(location, uniformProps.transpose, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x3:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x3fv(location, uniformProps.transpose, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x4:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x4fv(location, uniformProps.transpose, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x2:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x2fv(location, uniformProps.transpose, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x4:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x4fv(location, uniformProps.transpose, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x2:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x2fv(location, uniformProps.transpose, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x3:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x3fv(location, uniformProps.transpose, list, uniformProps.srcOffset, uniformProps.srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public static getUniformsListSetter(gl: WebGL2RenderingContext, program: Program, list: UniformsList): UniformsListSetter | null {\r\n        const settersList = {\r\n            setters: {}\r\n        } as UniformsListSetter;\r\n        \r\n        const uniformsNames = Object.keys(list);\r\n        const uniformIndices = gl.getUniformIndices(program.internal, uniformsNames);\r\n        if (uniformIndices == null) {\r\n            console.error(`Uniform indices for ${uniformsNames} could not be found.`);\r\n            return null;\r\n        }\r\n\r\n        const uniformsTypes = gl.getActiveUniforms(program.internal, uniformIndices, gl.UNIFORM_TYPE);\r\n        uniformsNames.forEach((uniformName, uniformIndex) => {\r\n            const uniform = list[uniformName];\r\n\r\n            const location = gl.getUniformLocation(program.internal, uniformName);\r\n            if (location == null) {\r\n                console.error(`Uniform ${uniformName} could not be located.`);\r\n                return null;\r\n            }\r\n\r\n            settersList.setters[uniformName] = this.getUniformSetter(gl, uniform, location, uniformsTypes[uniformIndex]);\r\n        });\r\n        \r\n        settersList.program = program;\r\n\r\n        return settersList;\r\n    }\r\n\r\n    public static setUniformsListValues(gl: WebGL2RenderingContext, setter: UniformsListSetter, list: UniformsList): void {\r\n        WebGLProgramUtilities.useProgram(gl, setter.program);\r\n        \r\n        Object.keys(list).forEach((name) => {\r\n            const uniformSetter = setter.setters[name];\r\n            const uniform = list[name];\r\n            if (uniformSetter) {\r\n                uniformSetter.set(uniform.value);\r\n            }\r\n            else {\r\n                console.warn(`Uniform ${name} does not match any of the given setters.`);\r\n            }\r\n        });\r\n    }\r\n}","export enum StencilAction {\r\n    KEEP = 0x1E00,\r\n    REPLACE\t= 0x1E01,\r\n    INCR = 0x1E02,\r\n    DECR = 0x1E03,\r\n    INVERT = 0x150A,\r\n    INCR_WRAP = 0x8507,\r\n    DECR_WRAP = 0x8508\r\n}\r\n\r\nexport enum BufferMask {\r\n    DEPTH_BUFFER_BIT = 0x00000100,\r\n    STENCIL_BUFFER_BIT = 0x00000400,\r\n    COLOR_BUFFER_BIT = 0x00004000\r\n}\r\n\r\nexport enum TestFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207,\r\n}\r\n\r\nexport enum BlendingMode {\r\n    ZERO = 0,\r\n    ONE = 1,\r\n    SRC_COLOR = 0x0300,\r\n    ONE_MINUS_SRC_COLOR = 0x0301,\r\n    SRC_ALPHA = 0x0302,\r\n    ONE_MINUS_SRC_ALPHA\t= 0x0303,\r\n    DST_ALPHA = 0x0304,\r\n    ONE_MINUS_DST_ALPHA = 0x0305,\r\n    DST_COLOR = 0x0306,\r\n    ONE_MINUS_DST_COLOR = 0x0307,\r\n    SRC_ALPHA_SATURATE = 0x0308,\r\n    CONSTANT_COLOR = 0x8001,\r\n    ONE_MINUS_CONSTANT_COLOR = 0x8002,\r\n    CONSTANT_ALPHA = 0x8003,\r\n    ONE_MINUS_CONSTANT_ALPHA = 0x8004\r\n}\r\n\r\nexport enum BlendingEquation {\r\n    FUNC_ADD = 0x8006,\r\n    FUNC_SUBTRACT = 0x800A,\r\n    FUNC_REVERSE_SUBTRACT = 0x800B,\r\n    MIN = 0x8007,\r\n    MAX = 0x8008,\r\n}\r\n\r\nexport enum Capabilities {\r\n    BLEND = 0x0BE2,\r\n    CULL_FACE = 0x0B44,\r\n    DEPTH_TEST = 0x0B71,\r\n    DITHER = 0x0BD0,\r\n    POLYGON_OFFSET_FILL = 0x8037,\r\n    SAMPLE_ALPHA_TO_COVERAGE = 0x809E,\r\n    SAMPLE_COVERAGE = 0x80A0,\r\n    SCISSOR_TEST = 0x0C11,\r\n    STENCIL_TEST= 0x0B90,\r\n    RASTERIZER_DISCARD = 0x8C89\r\n}\r\n\r\nexport enum Face {\r\n    FRONT = 0x0404,\r\n    BACK = 0x0405,\r\n    FRONT_AND_BACK = 0x0408\r\n}\r\n\r\nexport enum WindingOrder {\r\n    CW = 0x0900,\r\n    CCW = 0x0901\r\n}\r\n\r\nexport class WebGLRendererUtilities {\r\n\r\n    private constructor() {}\r\n\r\n    public static frontFace(gl: WebGL2RenderingContext, winding: WindingOrder): void {\r\n        gl.frontFace(winding);\r\n    }\r\n\r\n    public static scissor(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.scissor(x, y, width, height);\r\n    }\r\n\r\n    public static viewport(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.viewport(x, y, width, height);\r\n    }\r\n\r\n    public static clearColor(gl: WebGL2RenderingContext, color: [number, ...number[]] & { length: 4 }): void {\r\n        gl.clearColor(color[0], color[1], color[2], color[3]);\r\n    }\r\n\r\n    public static depthFunction(gl: WebGL2RenderingContext, func: TestFunction): void {\r\n        gl.depthFunc(func);\r\n    }\r\n\r\n    public static blendEquation(gl: WebGL2RenderingContext, equ: BlendingEquation): void {\r\n        gl.blendEquation(equ);\r\n    }\r\n\r\n    public static blendFunction(gl: WebGL2RenderingContext, srcFunc: BlendingMode, dstFunc: BlendingMode): void {\r\n        gl.blendFunc(srcFunc, dstFunc);\r\n    }\r\n\r\n    public static stencilFunction(gl: WebGL2RenderingContext, func: TestFunction, ref: number, mask: number, face: Face): void {\r\n        gl.stencilFuncSeparate(face, func, ref, mask);\r\n    }\r\n\r\n    public static stencilOperations(gl: WebGL2RenderingContext, fail: StencilAction, zFail: StencilAction, zPass: StencilAction, face: Face) {\r\n        gl.stencilOpSeparate(face, fail, zFail, zPass);\r\n    }\r\n\r\n    public static stencilMask(gl: WebGL2RenderingContext, mask: number, face: Face) {\r\n        gl.stencilMaskSeparate(face, mask);\r\n    }\r\n\r\n    public static colorMask(gl: WebGL2RenderingContext, red: boolean, green: boolean, blue: boolean, alpha: boolean) {\r\n        gl.colorMask(red, green, blue, alpha);\r\n    }\r\n\r\n    public static enable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.enable(capability);\r\n    }\r\n\r\n    public static disable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.disable(capability);\r\n    }\r\n\r\n    public static clear(gl: WebGL2RenderingContext, buffer: BufferMask): void {\r\n        gl.clear(buffer);\r\n    }\r\n\r\n    public static getViewport(gl: WebGL2RenderingContext): Int32Array {\r\n        return gl.getParameter(gl.VIEWPORT) as Int32Array;\r\n    }\r\n\r\n    public static getMaxSamples(gl: WebGL2RenderingContext): number {\r\n        return gl.getParameter(gl.MAX_SAMPLES) as number;\r\n    }\r\n}","import { Matrix3 } from \"../../../../../libs/maths/algebra/matrices/Matrix3\";\r\nimport { Space } from \"../../../../../libs/maths/geometry/space/Space\";\r\nimport { buildArrayFromIndexedArrays } from \"../../../../../utils/Snippets\";\r\nimport { GeometryBase } from \"../geometry\";\r\nimport { GeometryBuilder } from \"../GeometryBuilder\";\r\n\r\nexport { QuadGeometry };\r\n\r\nclass QuadGeometry extends GeometryBase {\r\n\twidth: number;\r\n\theight: number;\r\n\twidthSegment: number;\r\n\theightSegment: number;\r\n\r\n\tconstructor(properties?: {width?: number, height?: number, widthSegment?: number, heightSegment?: number}) {\r\n\t\tsuper();\r\n\t\tthis.width = properties?.width ?? 2;\r\n\t\tthis.height = properties?.height ?? 2;\r\n\t\tthis.widthSegment = properties?.widthSegment ?? 1;\r\n\t\tthis.heightSegment = properties?.heightSegment ?? 1;\r\n\t}\r\n\t\r\n\tpublic toBuilder(): GeometryBuilder {\r\n\t\tconst builder = new class extends GeometryBuilder {\r\n\t\t\tpublic tangentsArray(): Float32Array {\r\n\t\t\t\tconsole.log(\"tangents\");\r\n\t\t\t\treturn new Float32Array([0, 1, 0]);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tpublic verticesNormalsArray(): Float32Array {\r\n\t\t\t\tconsole.log(\"verticesNormalsArray\");\r\n\t\t\t\treturn new Float32Array([0, 0, 1]);\r\n\t\t\t}\r\n\t\t};\r\n\t\tconst vertices = builder.vertices;\r\n\t\tconst {heightSegment, widthSegment, width, height} = this;\r\n\t\t\r\n\t\tconst segmentVertexWidth = width / widthSegment;\r\n\t\tconst segmentVertexHeight = height / heightSegment;\r\n\t\tconst segmentUvWidth = 1 / widthSegment;\r\n\t\tconst segmentUvHeight = 1 / heightSegment;\r\n\t\tconst vertexOrigin = [-(this.width / 2), -(this.height / 2)];\r\n\t\tconst uvOrigin = [0, 0];\r\n\t\tconst vertexPosition = [...vertexOrigin];\r\n\t\tconst uvPosition = [...uvOrigin];\r\n\t\tconst uvs = [];\r\n\t\t\r\n\t\tfor (let hi = 0; hi <= heightSegment; hi++) {\r\n\t\t\tbuilder.addVertex([vertexPosition[0], vertexPosition[1], 0]);\r\n\t\t\tuvs.push([uvPosition[0], uvPosition[1]]);\r\n\t\t\tvertexPosition[1] += segmentVertexHeight;\r\n\t\t\tuvPosition[1] += segmentUvHeight;\r\n\t\t}\r\n\t\tvertexPosition[1] = vertexOrigin[1];\r\n\r\n\t\tfor (let wi = 0; wi < widthSegment; wi++) {\r\n\t\t\tvertexPosition[1] = vertexOrigin[1];\r\n\t\t\tuvPosition[1] = uvOrigin[1];\r\n\r\n\t\t\tbuilder.addVertex([vertexPosition[0] + segmentVertexWidth, vertexPosition[1], 0]);\r\n\t\t\tuvs.push([uvPosition[0] + segmentUvWidth, uvPosition[1]]);\r\n\t\t\tfor (let hi = 0; hi < heightSegment; hi++) {\r\n\t\t\t\tconst verticesCount = vertices.length;\r\n\t\t\t\tbuilder.addVertex([vertexPosition[0] + segmentVertexWidth, vertexPosition[1] + segmentVertexHeight, 0]);\r\n\t\t\t\tuvs.push([uvPosition[0] + segmentUvWidth, uvPosition[1] + segmentUvHeight]);\r\n\t\t\t\tbuilder.addQuadFace(\r\n\t\t\t\t\tvertices[verticesCount - (heightSegment + 1)],\r\n\t\t\t\t\tvertices[verticesCount - (heightSegment + 1) - 1],\r\n\t\t\t\t\tvertices[verticesCount - 1],\r\n\t\t\t\t\tvertices[verticesCount], {\r\n\t\t\t\t\t\tuv: [\r\n\t\t\t\t\t\t\tuvs[verticesCount - (heightSegment + 1)],\r\n\t\t\t\t\t\t\tuvs[verticesCount - (heightSegment + 1) - 1],\r\n\t\t\t\t\t\t\tuvs[verticesCount - 1],\r\n\t\t\t\t\t\t\tuvs[verticesCount]\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tvertexPosition[1] += segmentVertexHeight;\r\n\t\t\t\tuvPosition[1] += segmentUvHeight;\r\n\t\t\t}\r\n\t\t\tvertexPosition[0] += segmentVertexWidth;\r\n\t\t\tuvPosition[0] += segmentUvWidth;\r\n\t\t}\r\n\t\treturn builder;\r\n\t}\r\n}","import { UniformsList, WebGLUniformUtilities } from \"./WebGLUniformUtilities\";\r\nimport { BufferProperties, Buffer, BufferDataUsage } from \"./WebGLBufferUtilities\";\r\nimport { Program } from \"./WebGLProgramUtilities\";\r\n\r\nexport type UniformBlock = {\r\n    name: string;\r\n    program: Program;\r\n    layout: UniformBlockLayout;\r\n    blockSize: number;\r\n    bindingPoint: number;\r\n}\r\n\r\nexport type UniformBlockLayout = {\r\n    [name: string]: {\r\n        offset: number;\r\n    }\r\n};\r\n\r\nexport type UniformBuffer = Buffer & {\r\n    rangeOffset?: number;\r\n    rangeSize?: number;\r\n}\r\n\r\nexport type UniformBufferProperties = Omit<BufferProperties, \"target\"> & {\r\n    rangeOffset?: number;\r\n    rangeSize?: number;\r\n}\r\n\r\nexport type UniformBlocksBindingsContext = {\r\n    maxBindingPoints: number;\r\n    registeredBindingPoints: Array<boolean>;\r\n}\r\n\r\nexport class WebGLUniformBlockUtilities {\r\n    \r\n    private constructor() {}\r\n    \r\n    public static createUniformBuffer(gl: WebGL2RenderingContext, program: Program, blockName: string, usage?: BufferDataUsage, byteLength?: number, rangeOffset?: number, rangeSize?: number): UniformBuffer | null {\r\n        const buffer = gl.createBuffer();\r\n        if (buffer == null) {\r\n            console.error(\"Could not create WebGLBuffer.\");\r\n            return null;\r\n        }\r\n        \r\n        const target = gl.UNIFORM_BUFFER;\r\n        gl.bindBuffer(target, buffer);\r\n\r\n        const blockIndex = gl.getUniformBlockIndex(program.internal, blockName);\r\n        if (blockIndex === gl.INVALID_INDEX) {\r\n            console.error(`Block '${blockName}' does not identify a valid uniform block.`);\r\n            return null;\r\n        }\r\n\r\n        const blockSize = gl.getActiveUniformBlockParameter(program.internal, blockIndex, gl.UNIFORM_BLOCK_DATA_SIZE) as number;\r\n        byteLength = Math.min(byteLength ?? 0, 0) || blockSize;\r\n\r\n        usage = usage ?? gl.DYNAMIC_DRAW;\r\n        rangeOffset = rangeOffset ?? 0;\r\n        rangeSize = rangeSize ?? blockSize - rangeOffset;\r\n\r\n        gl.bufferData(target, byteLength, usage);\r\n\r\n        return {\r\n            internal: buffer,\r\n            target: target,\r\n            usage: usage,\r\n            byteLength: byteLength,\r\n            rangeOffset: rangeOffset,\r\n            rangeSize: rangeSize\r\n        };\r\n    }\r\n\r\n    public static setUniformBufferValues(gl: WebGL2RenderingContext, layout: UniformBlockLayout, buffer: UniformBuffer, uniforms: UniformsList): void {\r\n        const currentUniformBuffer = gl.getParameter(gl.UNIFORM_BUFFER_BINDING);\r\n        if (currentUniformBuffer !== buffer.internal) {\r\n            gl.bindBuffer(gl.UNIFORM_BUFFER, buffer.internal);\r\n        }\r\n        \r\n        Object.keys(uniforms).forEach((uniformName) => {\r\n            const uniformLayout = layout[uniformName];\r\n            const newValue = WebGLUniformUtilities.getUniformValueArrayBufferView(uniforms[uniformName].value);\r\n            gl.bufferSubData(gl.UNIFORM_BUFFER, uniformLayout.offset, newValue);\r\n        });\r\n    }\r\n\r\n    public static bindUniformBuffer(gl: WebGL2RenderingContext, block: UniformBlock, buffer: UniformBuffer): void {\r\n        const rangeOffset = buffer.rangeOffset || 0;\r\n        const rangeSize = buffer.rangeSize || (buffer.byteLength - (rangeOffset || 0));\r\n        \r\n        if (typeof buffer.rangeOffset !== \"undefined\" || typeof buffer.rangeSize !== \"undefined\") {\r\n            gl.bindBufferRange(gl.UNIFORM_BUFFER, block.bindingPoint, buffer.internal, rangeOffset, rangeSize);\r\n        }\r\n        else {\r\n            gl.bindBufferBase(gl.UNIFORM_BUFFER, block.bindingPoint, buffer.internal);\r\n        }\r\n    }\r\n\r\n    public static createUniformBlock(gl: WebGL2RenderingContext, program: Program, name: string): UniformBlock | null {\r\n        const bindingPoint = this._allocateBindingPoint(gl);\r\n        if (bindingPoint === null) {\r\n            console.error(`Could not bind another uniform buffer object. Max (${gl.MAX_UNIFORM_BUFFER_BINDINGS}) was reached.`);\r\n            return null;\r\n        }\r\n\r\n        const blockIndex = gl.getUniformBlockIndex(program.internal, name);\r\n        if (blockIndex === gl.INVALID_INDEX) {\r\n            console.error(`Block '${name}' does not identify a valid uniform block.`);\r\n            return null;\r\n        }\r\n\r\n        gl.uniformBlockBinding(program.internal, blockIndex, bindingPoint);\r\n\r\n        const blockSize = gl.getActiveUniformBlockParameter(program.internal, blockIndex, gl.UNIFORM_BLOCK_DATA_SIZE);\r\n\r\n        const layout: UniformBlockLayout = {};\r\n        const blockUniformsIndices = gl.getActiveUniformBlockParameter(program.internal, blockIndex, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES);\r\n        gl.getActiveUniforms(program.internal, blockUniformsIndices, gl.UNIFORM_OFFSET).forEach(\r\n            (uniformOffset: number, idx: number) => {\r\n                const uniformIndex = blockUniformsIndices[idx];\r\n                const uniformInfo = gl.getActiveUniform(program.internal, uniformIndex);\r\n\r\n                if (uniformInfo !== null) {\r\n                    const uniformFullName = uniformInfo.name;\r\n                    const bracketIndex = uniformFullName.indexOf(\"[\");\r\n                    if (bracketIndex > -1) {\r\n                        const uniformName = uniformFullName.substring(0, bracketIndex);\r\n                        if (typeof layout[uniformName] === \"undefined\") {\r\n                            layout[uniformName] = {\r\n                                offset: uniformOffset\r\n                            };\r\n                        }\r\n                    }\r\n                    else {\r\n                        layout[uniformFullName] = {\r\n                            offset: uniformOffset\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        );\r\n\r\n        return {\r\n            name: name,\r\n            bindingPoint: bindingPoint,\r\n            blockSize: blockSize,\r\n            layout: layout,\r\n            program: program\r\n        };\r\n    }\r\n\r\n    private static _bindingPoints: Map<WebGL2RenderingContext, boolean[]> = new Map();\r\n\r\n    private static _freeBindingPoint(gl: WebGL2RenderingContext, bindingPoint: number): number | null {\r\n        const maxBindings = this._bindingPoints.get(gl);\r\n        if (typeof maxBindings !== \"undefined\") {\r\n            if (maxBindings.length < 0) {\r\n                maxBindings[bindingPoint] = false;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private static _allocateBindingPoint(gl: WebGL2RenderingContext): number {\r\n        const maxBindings = gl.MAX_UNIFORM_BUFFER_BINDINGS;\r\n        let bindingPoints = this._bindingPoints.get(gl);\r\n        if (typeof bindingPoints === \"undefined\") {\r\n            bindingPoints = new Array(maxBindings);\r\n            this._bindingPoints.set(gl, bindingPoints);\r\n        }\r\n        for (let i = 1; i < maxBindings; i++) {\r\n            if (!bindingPoints[i]) {\r\n                bindingPoints[i] = true;\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n}","import { VertexArray, VertexArrayValues, VertexArrayProperties, WebGLVertexArrayUtilities, DrawMode } from \"./WebGLVertexArrayUtilities\"\r\nimport { Texture, TextureParameters, TextureProperties, WebGLTextureUtilities } from \"./WebGLTextureUtilities\"\r\nimport { UniformBlock, UniformBuffer, UniformBufferProperties, WebGLUniformBlockUtilities } from \"./WebGLUniformBlockUtilities\"\r\nimport { UniformsList, UniformsListSetter, WebGLUniformUtilities } from \"./WebGLUniformUtilities\"\r\nimport { Program } from \"./WebGLProgramUtilities\"\r\n\r\nexport type PacketProperties = {\r\n    vertexArray?: VertexArrayProperties;\r\n    uniforms?: UniformsList;\r\n    textures?: {\r\n        texture: Texture;\r\n        props?: TextureProperties;\r\n        params?: TextureParameters;\r\n    }[];\r\n    uniformBlocks?: {\r\n        block: UniformBlock;\r\n        buffer?: UniformBuffer | UniformBufferProperties;\r\n        uniforms?: UniformsList;\r\n    }[];\r\n    options?: {\r\n        drawMode?: DrawMode;\r\n        instanceCount?: number;\r\n    };\r\n}\r\n\r\nexport type PacketValues = {\r\n    vertexArray?: VertexArrayValues;\r\n    uniforms?: UniformsList;\r\n    textures?: {\r\n        texture: Texture;\r\n        props?: TextureProperties;\r\n        params?: TextureParameters;\r\n    }[];\r\n    uniformBlocks?: {\r\n        block: UniformBlock;\r\n        buffer: UniformBuffer;\r\n        uniforms: UniformsList;\r\n    }[];\r\n}\r\n\r\nexport type PacketBindingsProperties = {\r\n    program: Program;\r\n    textures?: {\r\n        [name: string]: TextureProperties & TextureParameters;\r\n    };\r\n    uniformBlocks?: string[];\r\n}\r\n\r\nexport type PacketBindings = {\r\n    textures: {\r\n        [name: string]: Texture;\r\n    };\r\n    uniformBlocks: {\r\n        [name: string]: UniformBlock;\r\n    };\r\n}\r\n\r\nexport type Packet = {\r\n    vertexArray?: VertexArray;\r\n    uniformsSetter?: UniformsListSetter;\r\n    uniformBlocks?: {\r\n        [name: string]: {\r\n            block: UniformBlock;\r\n            buffer: UniformBuffer;\r\n        }\r\n    };\r\n    bindings?: PacketBindings;\r\n    drawMode: DrawMode;\r\n    instanceCount?: number;\r\n}\r\n\r\nexport class WebGLPacketUtilities {\r\n\r\n    private constructor() {}\r\n\r\n    public static createBindings(gl: WebGL2RenderingContext, props: PacketBindingsProperties): PacketBindings | null {\r\n        const textures: {\r\n            [key: string]: Texture\r\n        } = {};\r\n        const uniformBlocks: {\r\n            [key: string]: UniformBlock\r\n        } = {};\r\n\r\n        const texturesInfo = props.textures;\r\n        const uniformBlocksInfo = props.uniformBlocks;\r\n        \r\n        if (typeof texturesInfo !== \"undefined\") {\r\n            Object.entries(texturesInfo).forEach(([textureName, textureInfo]) => {\r\n                const texture = WebGLTextureUtilities.createTexture(gl, textureInfo);\r\n                if (texture == null) {\r\n                    return null;\r\n                }\r\n                textures[textureName] = texture;\r\n            });\r\n        }\r\n\r\n        if (typeof uniformBlocksInfo !== \"undefined\") {\r\n            uniformBlocksInfo.forEach((blockName) => {\r\n                const uniformBlock = WebGLUniformBlockUtilities.createUniformBlock(\r\n                    gl, props.program, blockName\r\n                );\r\n                if (uniformBlock == null) {\r\n                    return null;\r\n                }\r\n                uniformBlocks[blockName] = uniformBlock;\r\n            });\r\n        }\r\n\r\n        return {\r\n            textures: textures,\r\n            uniformBlocks: uniformBlocks\r\n        };\r\n    }\r\n\r\n    public static createPacket(gl: WebGL2RenderingContext, program: Program, packet: PacketProperties): Packet | null {\r\n        const drawMode = packet.options?.drawMode || DrawMode.TRIANGLES;\r\n        const instanceCount = packet.options?.instanceCount;\r\n\r\n        let vertexArray: VertexArray | null | undefined = void 0;\r\n        if (typeof packet.vertexArray !== \"undefined\") {\r\n            vertexArray = WebGLVertexArrayUtilities.createVertexArray(gl, program, packet.vertexArray);\r\n            if (vertexArray == null) {\r\n                return null;\r\n            }\r\n        }\r\n      \r\n        let uniformsSetter: UniformsListSetter | null | undefined = void 0;\r\n        if (typeof packet.uniforms !== \"undefined\") {\r\n            uniformsSetter = WebGLUniformUtilities.getUniformsListSetter(gl, program, packet.uniforms);\r\n            if (uniformsSetter == null) {\r\n                return null;\r\n            }\r\n            WebGLUniformUtilities.setUniformsListValues(gl, uniformsSetter, packet.uniforms);\r\n        }\r\n\r\n        let uniformBlocks: {\r\n            [name: string]: {\r\n                block: UniformBlock;\r\n                buffer: UniformBuffer;\r\n            }\r\n        } | null | undefined = void 0;\r\n\r\n        if (typeof packet.uniformBlocks !== \"undefined\") {\r\n            uniformBlocks = {};\r\n            packet.uniformBlocks.forEach((uniformBlock) => {\r\n                const block = uniformBlock.block;\r\n                let buffer: UniformBuffer | null = null;\r\n                if (typeof uniformBlock.buffer === \"undefined\") {\r\n                    buffer = WebGLUniformBlockUtilities.createUniformBuffer(gl, program, block.name);\r\n                }\r\n                else if (!(\"internal\" in uniformBlock.buffer)) {\r\n                    const bufferProps = uniformBlock.buffer;\r\n                    buffer = WebGLUniformBlockUtilities.createUniformBuffer(gl, program, block.name,\r\n                        bufferProps.usage, bufferProps.byteLength, bufferProps.rangeOffset, bufferProps.rangeSize\r\n                    );\r\n                }\r\n                else {\r\n                    buffer = uniformBlock.buffer;\r\n                }\r\n                if (buffer === null) {\r\n                    return null;\r\n                }\r\n                if (typeof uniformBlock.uniforms !== \"undefined\") {\r\n                    WebGLUniformBlockUtilities.setUniformBufferValues(gl, block.layout, buffer, uniformBlock.uniforms);\r\n                }\r\n                WebGLUniformBlockUtilities.bindUniformBuffer(gl, block, buffer);\r\n                uniformBlocks![block.name] = {\r\n                    block: block,\r\n                    buffer: buffer\r\n                };\r\n            });\r\n        }\r\n\r\n        if (typeof packet.textures !== \"undefined\") {\r\n            packet.textures.forEach((texture) => {\r\n                if (typeof texture.props !== \"undefined\") {\r\n                    WebGLTextureUtilities.setTextureProperties(gl, texture.texture, texture.props);\r\n                }\r\n                if (typeof texture.params !== \"undefined\") {\r\n                    WebGLTextureUtilities.setTextureParameters(gl, texture.texture, texture.params);\r\n                }\r\n            });\r\n        }\r\n\r\n        return {\r\n            vertexArray: vertexArray,\r\n            uniformsSetter: uniformsSetter,\r\n            uniformBlocks: uniformBlocks,\r\n            drawMode: drawMode,\r\n            instanceCount: instanceCount\r\n        };\r\n    }\r\n\r\n    public static setPacketValues(gl: WebGL2RenderingContext, packet: Packet, values: PacketValues): void {\r\n\r\n        if (typeof values.vertexArray !== \"undefined\" && typeof packet.vertexArray !== \"undefined\") {\r\n            WebGLVertexArrayUtilities.setVertexArrayValues(gl, packet.vertexArray, values.vertexArray);\r\n        }\r\n\r\n        if (typeof values.uniforms !== \"undefined\" && typeof packet.uniformsSetter !== \"undefined\") {\r\n            WebGLUniformUtilities.setUniformsListValues(gl, packet.uniformsSetter, values.uniforms);\r\n        }\r\n\r\n        if (typeof values.uniformBlocks !== \"undefined\") {\r\n            values.uniformBlocks.forEach((uniformBlock) => {\r\n                WebGLUniformBlockUtilities.setUniformBufferValues(gl, uniformBlock.block.layout, uniformBlock.buffer, uniformBlock.uniforms);\r\n            });\r\n        }\r\n\r\n        if (typeof values.textures !== \"undefined\") {\r\n            values.textures.forEach((texture) => {\r\n                if (typeof texture.props !== \"undefined\") {\r\n                    WebGLTextureUtilities.setTextureProperties(gl, texture.texture, texture.props);\r\n                }\r\n                if (typeof texture.params !== \"undefined\") {\r\n                    WebGLTextureUtilities.setTextureParameters(gl, texture.texture, texture.params);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public static drawPacket(gl: WebGL2RenderingContext, packet: Packet): void {\r\n        const vertexArray = packet.vertexArray;\r\n        const uniformBlocks = packet.uniformBlocks;\r\n\r\n        if (typeof uniformBlocks !== \"undefined\") {\r\n            Object.values(uniformBlocks).forEach((uniformBlock) => {\r\n                WebGLUniformBlockUtilities.bindUniformBuffer(gl, uniformBlock.block, uniformBlock.buffer);\r\n            });\r\n        }\r\n\r\n        if (typeof vertexArray !== \"undefined\") {\r\n            WebGLVertexArrayUtilities.drawVertexArray(gl, vertexArray, packet.drawMode, packet.instanceCount);\r\n        }\r\n        else {\r\n            console.error(\"No vertex array to draw.\");\r\n        }\r\n    }\r\n}","export { ColorValues };\r\nexport { Color };\r\nexport { ColorBase };\r\n\r\ntype ColorValues = [number, number, number, number];\r\n\r\ninterface ColorConstructor {\r\n    readonly prototype: Color;\r\n    new(): Color;\r\n    new(values: ColorValues): Color;\r\n    new(values?: ColorValues): Color;\r\n    readonly BLACK: Color;\r\n    readonly RED: Color;\r\n    readonly GREEN: Color;\r\n    readonly BLUE: Color;\r\n    readonly WHITE: Color;\r\n    rgb(r: number, g: number, b: number): Color;\r\n    rgba(r: number, g: number, b: number, a: number): Color;\r\n    array(...colors: Color[]): number[];\r\n}\r\n\r\ninterface Color {\r\n    array: WritableArrayLike<number>;\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n    a: number;\r\n    copy(color: Color): Color;\r\n    clone(): Color;\r\n    getValues(): ColorValues;\r\n    setValues(c: ColorValues): Color;\r\n    lerp(color: Color, t: number): Color;\r\n    valuesNormalized(): ColorValues;\r\n}\r\n\r\nclass ColorBase implements Color {\r\n    private _array: TypedArray;\r\n\r\n\tconstructor()\r\n\tconstructor(type: new(length: number) => TypedArray)\r\n\tconstructor(type?: new(length: number) => TypedArray) {\r\n\t\tthis._array = new (type || Uint8Array)(9);\r\n    }\r\n    \r\n    public static readonly BLACK = ColorBase.rgb(0, 0, 0);\r\n    public static readonly RED = ColorBase.rgb(255, 0, 0);\r\n    public static readonly GREEN = ColorBase.rgb(0, 255, 0);\r\n    public static readonly BLUE = ColorBase.rgb(0, 0, 255);\r\n    public static readonly WHITE = ColorBase.rgb(255, 255, 255);\r\n\r\n    public static rgb(r: number, g: number, b: number): ColorBase {\r\n        const color =  new ColorBase()\r\n        color.setValues([r, g, b, 255]);\r\n        return color;\r\n    }\r\n\r\n    public static rgba(r: number, g: number, b: number, a: number): ColorBase {\r\n        const color =  new ColorBase()\r\n        color.setValues([r, g, b, a]);\r\n        return color;\r\n    }\r\n\r\n    public static array(...colors: ColorBase[]): number[] {\r\n        const a = new Array<number>(colors.length * 4);\r\n        let c;\r\n        let i = 0;\r\n        for (const color of colors) {\r\n            c = color._array;\r\n            a[i + 0] = c[0];\r\n            a[i + 1] = c[1];\r\n            a[i + 2] = c[2];\r\n            a[i + 3] = c[3];\r\n            i += 4;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    public get array(): WritableArrayLike<number> {\r\n        return this._array;\r\n    }\r\n\r\n    public get r(): number {\r\n        return this._array[0];\r\n    }\r\n\r\n    public set r(r: number) {\r\n        this._array[0] = r;\r\n    }\r\n\r\n    public get g(): number {\r\n        return this._array[1];\r\n    }\r\n\r\n    public set g(g: number) {\r\n        this._array[1] = g;\r\n    }\r\n\r\n    public get b(): number {\r\n        return this._array[2];\r\n    }\r\n\r\n    public set b(b: number) {\r\n        this._array[2] = b;\r\n    }\r\n\r\n    public get a(): number {\r\n        return this._array[3];\r\n    }\r\n\r\n    public set a(a: number) {\r\n        this._array[3] = a;\r\n    }\r\n\r\n    public setValues(c: ColorValues): ColorBase {\r\n\t\tconst o = this._array;\r\n\r\n\t\to[0] = c[0];\r\n\t\to[1] = c[1];\r\n\t\to[2] = c[2];\r\n\t\to[3] = c[3];\r\n\r\n\t\treturn this;\r\n    }\r\n    \r\n    public getValues(): ColorValues {\r\n\t\tconst c = this._array;\r\n\t\t\r\n\t\treturn [\r\n\t\t\tc[0], c[1], c[2], c[3]\r\n\t\t];\r\n\t}\r\n    \r\n    public copy(color: ColorBase): ColorBase {\r\n        const o = this._array;\r\n\r\n        o[0] = color.r;\r\n        o[1] = color.g;\r\n        o[2] = color.b;\r\n        o[3] = color.a;\r\n\r\n        return this;\r\n\t}\r\n\r\n\tpublic clone(): ColorBase {\r\n\t\treturn new ColorBase().copy(this);\r\n    }\r\n    \r\n    public lerp(color: ColorBase, t: number): ColorBase {\r\n\t\tconst o = this._array;\r\n\t\tconst c = color._array;\r\n\r\n\t\to[0] = t * (c[0] - o[0]);\r\n\t\to[1] = t * (c[1] - o[1]);\r\n\t\to[2] = t * (c[2] - o[2]);\r\n\t\to[3] = t * (c[3] - o[3]);\r\n\r\n\t\treturn this;\r\n\t}\r\n    \r\n    public valuesNormalized(): ColorValues {\r\n        return [this.r / 255, this.g / 255, this.b / 255, this.a / 255];\r\n    }\r\n}\r\n\r\nconst Color: ColorConstructor = ColorBase;","import { Transform } from \"../../engine/core/general/Transform\";\r\nimport { Matrix3 } from \"../../engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Quaternion } from \"../../engine/libs/maths/algebra/quaternions/Quaternion\";\r\nimport { Vector3 } from \"../../engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Matrix3Pool } from \"../../engine/libs/maths/extensions/pools/Matrix3Pools\";\r\nimport { Space } from \"../../engine/libs/maths/geometry/space/Space\";\r\n\r\nexport type Widget = {\r\n    name: string;\r\n    data?: any;\r\n} & ({\r\n    type: \"range\";\r\n    min?: number;\r\n    max?: number;\r\n    value: number;\r\n    setter: (this: Widget, val: number) => void;\r\n} | {\r\n    type: \"checkbox\";\r\n    value: boolean;\r\n    setter: (this: Widget, val: boolean) => void;\r\n} | {\r\n    type: \"button\";\r\n    trigger: (this: Widget) => void;\r\n} | {\r\n    type: \"select\";\r\n    value: string;\r\n    options: ({\r\n        value: string;\r\n        label: string;\r\n    })[];\r\n    setter: (this: Widget, val: string) => void;\r\n});\r\n  \r\nexport function addWidgets(widgets: Widget[]) {\r\n    const container = document.getElementById(\"widgets\");\r\n    if (container) {\r\n        widgets.forEach((widget) => {\r\n        let input: HTMLInputElement | HTMLSelectElement | null = null;\r\n        let output: HTMLOutputElement | null = null;\r\n        let label: HTMLLabelElement  = document.createElement(\"label\");\r\n        label.textContent = widget.name;\r\n        switch (widget.type) {\r\n            case \"range\":\r\n                input = document.createElement(\"input\");\r\n                input.type = \"range\";\r\n                if (widget.min !== void 0) {\r\n                    input.min = widget.min.toString();\r\n                }\r\n                if (widget.max !== void 0) {\r\n                    input.max = widget.max.toString();\r\n                }\r\n                input.value = widget.value.toString();\r\n                output = document.createElement(\"output\");\r\n                output.value = widget.value.toString();\r\n                input.onchange = (event: Event) => {\r\n                    const newValue = (event.currentTarget as HTMLInputElement).value;\r\n                    widget.setter.call(widget, parseFloat(newValue));\r\n                    output!.value = newValue;\r\n                };\r\n            break;\r\n            case \"checkbox\":\r\n                input = document.createElement(\"input\");\r\n                input.type = \"checkbox\";\r\n                input.value = widget.value.toString();\r\n                input.onclick = (event: Event) => {\r\n                    widget.setter.call(widget, (event.currentTarget as HTMLInputElement).checked);\r\n                };\r\n            break;\r\n            case \"select\":\r\n                input = document.createElement(\"select\");\r\n                input.value = widget.value.toString();\r\n                input.append(\r\n                    ...widget.options.map(opt => new Option(opt.label, opt.value))\r\n                );\r\n                input.onchange = (event: Event) => {\r\n                    widget.setter.call(widget, (event.currentTarget as HTMLSelectElement).value);\r\n                };\r\n            break;\r\n            case \"button\":\r\n                input = document.createElement(\"input\");\r\n                input.value = widget.name;\r\n                input.type = \"button\";\r\n                input.onclick = () => {\r\n                    widget.trigger.call(widget);\r\n                };\r\n            break;\r\n        }\r\n        if (input) {\r\n            container.append(label, input);\r\n            if (output) {\r\n                container.append(output);\r\n            }\r\n        }\r\n        });\r\n    }\r\n}\r\n\r\nexport function createRotationWidgets(transform: Transform, name: string): Widget[] {\r\n    return [\r\n        {\r\n            name: `${name} roll`, type: \"range\",\r\n            value: 0, min: -360, max: 360,\r\n            setter: function(this, val) {\r\n                const rotationMatrix = transform.getRotation(new Quaternion()).getMatrix();\r\n                \r\n                if (!(\"data\" in this)) {\r\n                    this.data = {\r\n                        lastValue: 0\r\n                    };\r\n                }\r\n                if (typeof this.data.lastValue === \"number\") {\r\n                    const lastRotation = Matrix3.rotationX(this.data.lastValue * (Math.PI / 180));\r\n                    rotationMatrix.mult(lastRotation.transpose());\r\n                }\r\n                this.data.lastValue = val;\r\n        \r\n                const newRotation = Quaternion.fromMatrix(rotationMatrix.mult(Matrix3.rotationX(val * (Math.PI / 180))));\r\n                transform.setRotation(Quaternion.fromEuler(newRotation.pitch, newRotation.yaw, newRotation.roll));\r\n            }\r\n        },\r\n        {\r\n            name: `${name} pitch`, type: \"range\",\r\n            value: 0, min: -360, max: 360,\r\n            setter: function(this, val) {\r\n                const rotationMatrix = transform.getRotation(new Quaternion()).getMatrix();\r\n                \r\n                if (!(\"data\" in this)) {\r\n                    this.data = {\r\n                        lastValue: 0\r\n                    };\r\n                }\r\n                if (typeof this.data.lastValue === \"number\") {\r\n                    const lastRotation = Matrix3.rotationY(this.data.lastValue * (Math.PI / 180));\r\n                    rotationMatrix.mult(lastRotation.transpose());\r\n                }\r\n                this.data.lastValue = val;\r\n        \r\n                const newRotation = Quaternion.fromMatrix(rotationMatrix.mult(Matrix3.rotationY(val * (Math.PI / 180))));\r\n                transform.setRotation(Quaternion.fromEuler(newRotation.pitch, newRotation.yaw, newRotation.roll));\r\n            }\r\n        },\r\n        {\r\n            name: `${name} yaw`, type: \"range\",\r\n            value: 0, min: -360, max: 360,\r\n            setter: function(this, val) {\r\n                const rotationMatrix = transform.getRotation(new Quaternion()).getMatrix();\r\n                \r\n                if (!(\"data\" in this)) {\r\n                    this.data = {\r\n                        lastValue: 0\r\n                    };\r\n                }\r\n                if (typeof this.data.lastValue === \"number\") {\r\n                    const lastRotation = Matrix3.rotationZ(this.data.lastValue * (Math.PI / 180));\r\n                    rotationMatrix.mult(lastRotation.transpose());\r\n                }\r\n                this.data.lastValue = val;\r\n        \r\n                const newRotation = Quaternion.fromMatrix(rotationMatrix.mult(Matrix3.rotationZ(val * (Math.PI / 180))));\r\n                transform.setRotation(Quaternion.fromEuler(newRotation.pitch, newRotation.yaw, newRotation.roll));\r\n            }\r\n        }\r\n    ];\r\n}\r\n\r\nexport function createPositionWidgets(transform: Transform, name: string): Widget[] {\r\n    return [\r\n        {\r\n            name: `${name} X`, type: \"range\",\r\n            value: 0, min: -10, max: 10,\r\n            setter: function(this, val) {\r\n                if (!(\"data\" in this)) {\r\n                    this.data = {};\r\n                }\r\n                if (typeof this.data.lastValue === \"number\") {\r\n                    transform.translate(Space.right.clone().scale(this.data.lastValue).negate());\r\n                }\r\n                this.data.lastValue = val;\r\n\r\n                transform.translate(Space.right.clone().scale(val));\r\n            }\r\n        },\r\n        {\r\n            name: `${name} Y`, type: \"range\",\r\n            value: 0, min: -10, max: 10,\r\n            setter: function(this, val) {\r\n                if (!(\"data\" in this)) {\r\n                    this.data = {};\r\n                }\r\n                if (typeof this.data.lastValue === \"number\") {\r\n                    transform.translate(Space.up.clone().scale(this.data.lastValue).negate());\r\n                }\r\n                this.data.lastValue = val;\r\n\r\n                transform.translate(Space.up.clone().scale(val));\r\n            }\r\n        },\r\n        {\r\n            name: `${name} Z`, type: \"range\",\r\n            value: 0, min: -10, max: 10,\r\n            setter: function(this, val) {\r\n                if (!(\"data\" in this)) {\r\n                    this.data = {};\r\n                }\r\n                if (typeof this.data.lastValue === \"number\") {\r\n                    transform.translate(Space.forward.clone().scale(this.data.lastValue).negate());\r\n                }\r\n                this.data.lastValue = val;\r\n\r\n                transform.translate(Space.forward.clone().scale(val));\r\n            }\r\n        }\r\n    ];\r\n}\r\n\r\nexport function createRelativePositionWidgets(transform: Transform, name: string): Widget[] {\r\n    return [\r\n        {\r\n            name: `${name} right`, type: \"range\",\r\n            value: 0, min: -10, max: 10,\r\n            setter: function(this, val) {\r\n                transform.translate(transform.getRight(new Vector3()).scale(val).clone());\r\n            }\r\n        },\r\n        {\r\n            name: `${name} up`, type: \"range\",\r\n            value: 0, min: -10, max: 10,\r\n            setter: function(this, val) {\r\n                transform.translate(transform.getUp(new Vector3()).scale(val).clone());\r\n            }\r\n        },\r\n        {\r\n            name: `${name} forward`, type: \"range\",\r\n            value: 0, min: -10, max: 10,\r\n            setter: function(this, val) {\r\n                transform.translate(transform.getForward(new Vector3()).scale(val).clone());\r\n            }\r\n        }\r\n    ];\r\n}","import { ArcballCameraControl } from \"../../engine/core/controls/ArcballCameraControl\";\r\nimport { FreeCameraControl } from \"../../engine/core/controls/FreeCameraControl\";\r\nimport { Transform } from \"../../engine/core/general/Transform\";\r\nimport { Input } from \"../../engine/core/input/Input\";\r\nimport { PerspectiveCamera } from \"../../engine/core/rendering/scenes/cameras/PerspectiveCamera\";\r\nimport { QuadGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/QuadGeometry\";\r\nimport { WebGLFramebufferUtilities } from \"../../engine/core/rendering/webgl/WebGLFramebufferUtilities\";\r\nimport { WebGLPacketUtilities, PacketProperties } from \"../../engine/core/rendering/webgl/WebGLPacketUtilities\";\r\nimport { WebGLProgramUtilities } from \"../../engine/core/rendering/webgl/WebGLProgramUtilities\";\r\nimport { BufferMask, Capabilities, TestFunction, WebGLRendererUtilities } from \"../../engine/core/rendering/webgl/WebGLRendererUtilities\";\r\nimport { TexturePixelFormat, TexturePixelType, TextureMagFilter, TextureMinFilter, TextureTarget, TextureWrapMode, TextureInternalPixelFormat } from \"../../engine/core/rendering/webgl/WebGLTextureUtilities\";\r\nimport { DrawMode } from \"../../engine/core/rendering/webgl/WebGLVertexArrayUtilities\";\r\nimport { Color } from \"../../engine/libs/graphics/colors/Color\";\r\nimport { Vector3 } from \"../../engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../engine/libs/maths/geometry/space/Space\";\r\nimport { addWidgets, createPositionWidgets, createRotationWidgets } from \"./Common\";\r\n\r\nconst simpleSceneDOM = /*template*/`\r\n<!--<link rel=\"stylesheet\" href=\"./css/main.css\"/>-->\r\n  <div class=\"flex-auto flex-cols\">\r\n    <main class=\"flex-rows flex-auto\">\r\n        <section class=\"centered padded\">\r\n          <div id=\"ui\" class=\"flex-cols\">\r\n            <div class=\"flex-auto\"><span class=\"blue\">\"RigidBuddy FTW!\"</span> <span class=\"yellow\">:-)</span></div>\r\n            <div class=\"flex-none\">FPS: <span id=\"canvas-fps\">-.-</span></div>\r\n          </div>\r\n          <button id=\"playpause\">Pause</button>\r\n          <div id=\"widgets\"></div>\r\n          <canvas id=\"canvas\" tabindex=\"0\" tooltip=\"mon-canvas\" oncontextmenu=\"return false;\"></canvas>\r\n        </section>\r\n    </main>\r\n  </div>`;\r\n\r\nexport async function startMaps() {\r\n  const template = document.createElement(\"template\");\r\n  template.innerHTML = simpleSceneDOM;\r\n  document.body.insertBefore(template.content, document.body.firstChild);\r\n  launchScene();\r\n}\r\n\r\nexport async function launchScene() {\r\n  let frameRequest: number;\r\n  let render: (time: number) => void;\r\n  let fps: number = 0;\r\n  let paused = false;\r\n\r\n  const playPause = document.getElementById('playpause') as HTMLButtonElement;\r\n  if (playPause !== null) {\r\n    playPause.onclick = () => {\r\n      paused = !paused;\r\n      playPause.textContent = paused ? \"Play\" : \"Pause\";\r\n      if (!paused) {\r\n        render(0);\r\n      }\r\n    };\r\n  }\r\n\r\n  const fpsElement = document.getElementById('canvas-fps') as HTMLSpanElement;\r\n  if (!fpsElement) {\r\n    return;\r\n  }\r\n\r\n  const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n  if (!canvas) {\r\n    return;\r\n  }\r\n  \r\n  const canvasWidth = 1200;\r\n  const canvasHeight = 800;\r\n  const supersamplingRatio = 1;\r\n  canvas.width = canvasWidth * supersamplingRatio;\r\n  canvas.height = canvasHeight * supersamplingRatio;\r\n  canvas.style.width = `${canvasWidth}px`;\r\n  canvas.style.height = `${canvasHeight}px`;\r\n  \r\n  const gl = canvas.getContext(\"webgl2\"/*, {antialias: true}*//*, {preserveDrawingBuffer: true}*/);\r\n  if (!gl) {\r\n    return;\r\n  }\r\n\r\n  // Shaders\r\n  const phongVert = await fetch(\"assets/engine/shaders/common/phong.vert.glsl\").then(resp => resp.text());\r\n  const phongFrag = await fetch(\"assets/engine/shaders/common/phong.frag.glsl\").then(resp => resp.text());\r\n  const phongGlProgram = WebGLProgramUtilities.createProgram(gl, phongVert, phongFrag)!;\r\n  const linesVertex = await fetch(\"assets/engine/shaders/common/lines.vert.glsl\").then(resp => resp.text());\r\n  const linesFragment = await fetch(\"assets/engine/shaders/common/lines.frag.glsl\").then(resp => resp.text());\r\n  const linesProgram = WebGLProgramUtilities.createProgram(gl, linesVertex, linesFragment)!;\r\n  \r\n  async function fetchImage(url: string) {\r\n    return fetch(url).then((resp) => {\r\n      if (resp.ok) {\r\n        return new Promise<HTMLImageElement>((resolve) => {\r\n          const img = new Image();\r\n          img.onload = () => {\r\n            resolve(img);\r\n          };\r\n          img.src = url;\r\n        })\r\n      }\r\n      else {\r\n        throw new Error(`Image '${url}' not found.`);\r\n      }\r\n    });\r\n  }\r\n  // Images\r\n  const albedoMapImg = await fetchImage(\"assets/engine/img/brickwall.jpg\");\r\n  const normalMapImg = await fetchImage(\"assets/engine/img/NormalMap_0.png\");\r\n  const heightMapImg = await fetchImage(\"assets/engine/img/HeightMap_0.png\");\r\n  const skyboxXPosImg = await fetchImage(\"assets/engine/img/skybox_x_pos.png\");\r\n  const skyboxXNegImg = await fetchImage(\"assets/engine/img/skybox_x_neg.png\");\r\n  const skyboxYPosImg = await fetchImage(\"assets/engine/img/skybox_y_pos.png\");\r\n  const skyboxYNegImg = await fetchImage(\"assets/engine/img/skybox_y_neg.png\");\r\n  const skyboxZPosImg = await fetchImage(\"assets/engine/img/skybox_z_pos.png\");\r\n  const skyboxZNegImg = await fetchImage(\"assets/engine/img/skybox_z_neg.png\");\r\n\r\n  const phongPacketBindings = WebGLPacketUtilities.createBindings(gl, {\r\n    textures: {\r\n      albedoMap: {\r\n        pixels: albedoMapImg,\r\n        width: albedoMapImg.width, height: albedoMapImg.height,\r\n        target: TextureTarget.TEXTURE_2D,\r\n        type: TexturePixelType.UNSIGNED_BYTE,\r\n        format: TexturePixelFormat.RGB,\r\n        internalFormat: TextureInternalPixelFormat.RGB8\r\n      },\r\n      normalMap: {\r\n        pixels: normalMapImg,\r\n        width: normalMapImg.width, height: normalMapImg.height,\r\n        target: TextureTarget.TEXTURE_2D,\r\n        type: TexturePixelType.UNSIGNED_BYTE,\r\n        format: TexturePixelFormat.RGB,\r\n        internalFormat: TextureInternalPixelFormat.RGB8,\r\n        min: TextureMinFilter.LINEAR_MIPMAP_LINEAR,\r\n        mag: TextureMagFilter.LINEAR\r\n      },\r\n      heightMap: {\r\n        pixels: heightMapImg,\r\n        width: heightMapImg.width, height: heightMapImg.height,\r\n        target: TextureTarget.TEXTURE_2D,\r\n        type: TexturePixelType.UNSIGNED_BYTE,\r\n        format: TexturePixelFormat.RGB,\r\n        internalFormat: TextureInternalPixelFormat.RGB8,\r\n        min: TextureMinFilter.LINEAR_MIPMAP_LINEAR,\r\n        mag: TextureMagFilter.LINEAR\r\n      }\r\n    },\r\n    program: phongGlProgram,\r\n    uniformBlocks: [\"worldViewBlock\", \"lightsBlock\", \"phongBlock\"]\r\n  })!;\r\n\r\n  const linesBindings = WebGLPacketUtilities.createBindings(gl, {\r\n    program: linesProgram,\r\n    uniformBlocks: [\"viewBlock\", \"linesBlock\"]\r\n  })!;\r\n\r\n  const worldViewBlock = phongPacketBindings.uniformBlocks.worldViewBlock;\r\n  const lightsBlock = phongPacketBindings.uniformBlocks.lightsBlock;\r\n  const phongBlock = phongPacketBindings.uniformBlocks.phongBlock;\r\n\r\n  const albedoMap = phongPacketBindings.textures.albedoMap;\r\n  const normalMap = phongPacketBindings.textures.normalMap;\r\n  const heightMap = phongPacketBindings.textures.heightMap;\r\n\r\n  const anisotropicExtension = gl.getExtension(\"EXT_texture_filter_anisotropic\");\r\n  if (anisotropicExtension) {\r\n    console.log(`Extension EXT_texture_filter_anisotropic activated.`);\r\n    const maxFiltering = gl.getParameter(anisotropicExtension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n    const textures = [albedoMap, normalMap];\r\n    textures.forEach((texture) => {\r\n      gl.activeTexture(gl.TEXTURE0 + texture.unit);\r\n      gl.bindTexture(texture.target, texture.internal);\r\n      gl.texParameterf(gl.TEXTURE_2D, anisotropicExtension.TEXTURE_MAX_ANISOTROPY_EXT, maxFiltering);\r\n    });\r\n  }\r\n\r\n  const quadTransform = new Transform();\r\n\r\n  const fov = (1 / 3) * Math.PI;\r\n  const aspect = gl.canvas.width / gl.canvas.height;\r\n  const zNear = 0.02;\r\n  const zFar = 200;\r\n\r\n  const camera = new PerspectiveCamera(fov, aspect, zNear, zFar);\r\n\r\n  const lightTransform = new Transform();\r\n  lightTransform.setTranslation(new Vector3([0, 2, 2]));\r\n  lightTransform.setScaling(new Vector3([0.2, 0.2, 0.2]));\r\n\r\n  camera.transform.setTranslation(Space.forward.clone().scale(2));\r\n  camera.transform.lookAt(new Vector3([0, 0, 0]), Space.up);\r\n\r\n  addWidgets([\r\n    ...createRotationWidgets(quadTransform, \"Quad\"),\r\n    ...createPositionWidgets(quadTransform, \"Quad\"),\r\n  ]);\r\n\r\n  function getDelta(timers: [string, Date][]): Date {\r\n    return new Date(\r\n      new Date().getTime() - timers[timers.length - 1][1].getTime()\r\n    );\r\n  }\r\n\r\n  const timers: [string, Date][] = [\r\n    [\"t0\", new Date()]\r\n  ];\r\n  const quadGeometry = new QuadGeometry({widthSegment: 128, heightSegment: 128});\r\n  timers.push([\"constructor()\", getDelta(timers)]);\r\n  const quadGeometryBuilder = quadGeometry.toBuilder();\r\n  timers.push([\"toBuilder()\", getDelta(timers)]);\r\n  const quadIndices = quadGeometryBuilder.indicesArray();\r\n  timers.push([\"indicesArray()\", getDelta(timers)]);\r\n  const quadVertices = quadGeometryBuilder.verticesArray();\r\n  timers.push([\"verticesArray()\", getDelta(timers)]);\r\n  const quadNormals = quadGeometryBuilder.verticesNormalsArray();\r\n  timers.push([\"verticesNormalsArray()\", getDelta(timers)]);\r\n  const quadUVs = quadGeometryBuilder.uvsArray();\r\n  timers.push([\"uvsArray()\", getDelta(timers)]);\r\n  const quadTangents = quadGeometryBuilder.tangentsArray();\r\n  timers.push([\"tangentsArray()\", getDelta(timers)]);\r\n  const quadLines = quadGeometryBuilder.linesArray();\r\n  timers.push([\"linesArray()\", getDelta(timers)]);\r\n\r\n  timers.forEach((timer) => {\r\n    console.log(`${timer[0]} : ${(timer[1].getMilliseconds()).toFixed(4)}ms`);\r\n  });\r\n\r\n  const linesPacketProperties: PacketProperties = {\r\n    vertexArray: {\r\n      attributes: {\r\n        a_position: {\r\n          array: quadLines,\r\n          numComponents: 3,\r\n        }\r\n      },\r\n      numElements: quadLines.length / 2\r\n    },\r\n    uniformBlocks: [\r\n      {\r\n        block: linesBindings.uniformBlocks.viewBlock,\r\n        uniforms: {\r\n          u_worldViewProjection: {\r\n            value: new Float32Array(camera.viewProjection.clone().mult(quadTransform.matrix).array),\r\n          }\r\n        }\r\n      },\r\n      {\r\n        block:  linesBindings.uniformBlocks.linesBlock,\r\n        uniforms: {\r\n          u_color: {\r\n            value: new Float32Array([255, 0, 0]),\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    options: {\r\n      drawMode: DrawMode.LINES\r\n    }\r\n  };\r\n  const linesPacket = WebGLPacketUtilities.createPacket(gl, linesProgram, linesPacketProperties)!;\r\n\r\n  const phongPacketProperties: PacketProperties = {\r\n    vertexArray: {\r\n      attributes: {\r\n        a_position: { array: quadVertices, numComponents: 3 },\r\n        a_normal: { array: quadNormals, numComponents: 3, constant: true },\r\n        a_tangent: { array: quadTangents, numComponents: 3, constant: true },\r\n        a_uv: { array: quadUVs, numComponents: 2 },\r\n      },\r\n      indices: quadIndices,\r\n      numElements: quadIndices.length\r\n    },\r\n    uniformBlocks: [\r\n      {\r\n        block: worldViewBlock,\r\n        uniforms: {\r\n          u_model: { value: new Float32Array(quadTransform.matrix.array) },\r\n          u_modelView: { value: new Float32Array(camera.view.mult(quadTransform.matrix).array) },\r\n          u_normal: { value: new Float32Array(camera.view.mult(quadTransform.matrix).invert().transpose().array) },\r\n          u_view: { value: new Float32Array(camera.view.array) },\r\n          u_camera: { value: new Float32Array(camera.transform.matrix.array) },\r\n          u_projection: { value: new Float32Array(camera.projection.array) },\r\n        }\r\n      },\r\n      {\r\n        block: lightsBlock,\r\n        uniforms: {\r\n          u_lightWorldPos: { value: Array.from(lightTransform.getTranslation(new Vector3()).array) },\r\n          u_lightColor: { value: [1, 0.8, 0.8] },\r\n        }\r\n      },\r\n      {\r\n        block: phongBlock,\r\n        uniforms: {\r\n          u_ambientColor: { value: [0.1, 0.1, 0.1] },\r\n          u_diffuseColor: { value: [0.8, 0.8, 0.8] },\r\n          u_specularColor: { value: [1, 1, 1] },\r\n          u_ambientFactor: { value: 1 },\r\n          u_diffuseFactor: { value: 1 },\r\n          u_specularFactor: { value: 1 },\r\n          u_shininess: { value: 60 },\r\n        }\r\n      }\r\n    ],\r\n    uniforms: {\r\n      u_albedo: { value: albedoMap },\r\n      u_normalMap: { value: normalMap },\r\n      u_heightMap: { value: heightMap }\r\n    }\r\n  };\r\n\r\n  const phongPacket = WebGLPacketUtilities.createPacket(gl, phongGlProgram, phongPacketProperties)!;\r\n  WebGLRendererUtilities.viewport(gl, 0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n  //WebGLRendererUtilities.frontFace(gl, WindingOrder.CW);\r\n  WebGLRendererUtilities.enable(gl, Capabilities.DEPTH_TEST);\r\n  WebGLRendererUtilities.enable(gl, Capabilities.CULL_FACE);\r\n  \r\n  let lastFrameTime = 0;\r\n  let deltaTime = 0;\r\n\r\n  await Input.initialize(gl.canvas);\r\n  \r\n  WebGLFramebufferUtilities.unbindFramebuffer(gl);\r\n\r\n  const cameraControl = new FreeCameraControl(camera);\r\n  \r\n  render = function(frameTime: number) {\r\n    if (paused) {\r\n      return;\r\n    }\r\n    \r\n    frameTime *= 0.001;\r\n\r\n    deltaTime = frameTime - lastFrameTime;\r\n    lastFrameTime = frameTime;\r\n    fps = 1 / deltaTime;\r\n\r\n    fpsElement.textContent = fps.toFixed(2);\r\n\r\n    cameraControl.update(deltaTime);\r\n    \r\n    WebGLRendererUtilities.clearColor(gl, Color.GREEN.valuesNormalized());\r\n    WebGLRendererUtilities.clear(gl, BufferMask.COLOR_BUFFER_BIT | BufferMask.DEPTH_BUFFER_BIT);\r\n\r\n    WebGLRendererUtilities.clear(gl, BufferMask.COLOR_BUFFER_BIT | BufferMask.DEPTH_BUFFER_BIT);\r\n    WebGLRendererUtilities.depthFunction(gl, TestFunction.LESS);\r\n\r\n    WebGLPacketUtilities.setPacketValues(gl, phongPacket, {\r\n      uniformBlocks: [{\r\n          block: worldViewBlock,\r\n          buffer: phongPacket.uniformBlocks!.worldViewBlock.buffer,\r\n          uniforms: {\r\n            u_model: { value: new Float32Array(quadTransform.matrix.array) },\r\n            u_modelView: { value: new Float32Array(camera.view.mult(quadTransform.matrix).array) },\r\n            u_camera: { value: new Float32Array(camera.transform.matrix.array) },\r\n            u_view: { value: new Float32Array(camera.view.array) },\r\n            u_normal: { value: new Float32Array(camera.view.mult(quadTransform.matrix).invert().transpose().array) },\r\n            u_projection: { value: new Float32Array(camera.projection.array) },\r\n          }\r\n      }]\r\n    });\r\n    WebGLPacketUtilities.drawPacket(gl, phongPacket);\r\n\r\n    /*WebGLPacketUtilities.setPacketValues(gl, linesPacket, {\r\n      uniformBlocks: [\r\n        {\r\n          block: linesBindings.uniformBlocks.viewBlock,\r\n          buffer: linesPacket.uniformBlocks!.viewBlock.buffer,\r\n          uniforms: {\r\n            u_worldViewProjection: { value: new Float32Array(camera.viewProjection.mult(quadTransform.matrix).array) }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    WebGLPacketUtilities.drawPacket(gl, linesPacket);*/\r\n\r\n    Input.clear();\r\n\r\n    frameRequest = requestAnimationFrame(render);\r\n  }\r\n\r\n  render(0);\r\n}","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../libs/maths/geometry/space/Space\";\r\nimport { Input, MouseButton, Key } from \"../input/Input\";\r\nimport { Camera } from \"../rendering/scenes/cameras/Camera\";\r\n\r\nexport { FreeCameraControl };\r\n\r\ninterface FreeCameraControlConstructor {\r\n    readonly prototype: FreeCameraControl;\r\n    new(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}): FreeCameraControl;\r\n}\r\n\r\ninterface FreeCameraControl {\r\n    update(deltaTime: number): void;\r\n}\r\n\r\nclass FreeCameraControlBase {\r\n    camera: Camera;\r\n    rotationSpeed: number;\r\n    translationSpeed: number;\r\n\r\n    lastPointerPosition: Vector2;\r\n\r\n    constructor(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}) {\r\n        this.camera = camera;\r\n        this.rotationSpeed = params?.rotationSpeed ?? 50;\r\n        this.translationSpeed = params?.translationSpeed ?? 8;\r\n        this.lastPointerPosition = new Vector2();\r\n    }\r\n\r\n    public update(deltaTime: number) {\r\n        const cameraTransform = this.camera.transform;\r\n        const cameraPosition = cameraTransform.getTranslation(new Vector3());\r\n        const cameraForward = cameraTransform.getBackward(new Vector3());\r\n        const cameraForwardArray = cameraForward.array;\r\n        const lastPointerPosition = this.lastPointerPosition;\r\n        const rotationSpeed = this.rotationSpeed;\r\n        const translationSpeed = this.translationSpeed;\r\n        let cameraUpSign = cameraTransform.getUp(new Vector3()).dot(Space.up);\r\n      \r\n        if (Input.getKey(Key.Z) || Input.getKey(Key.ARROW_UP)) {\r\n            const forward = cameraTransform.getBackward(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(forward);\r\n        }\r\n        if (Input.getKey(Key.Q) || Input.getKey(Key.ARROW_LEFT)) {\r\n            const left = cameraTransform.getLeft(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(left);\r\n        }\r\n        if (Input.getKey(Key.S) || Input.getKey(Key.ARROW_DOWN)) {\r\n            const backward = cameraTransform.getForward(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(backward);\r\n        }\r\n        if (Input.getKey(Key.D) || Input.getKey(Key.ARROW_RIGHT)) {\r\n            const right = cameraTransform.getRight(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(right);\r\n        }\r\n\r\n        if (Input.getMouseButtonDown(MouseButton.RIGHT)) {\r\n            lastPointerPosition.copy(Input.getPointerScreenPosition());\r\n        }\r\n        \r\n        if (Input.getMouseButton(MouseButton.RIGHT)) {\r\n            const newPointerPosition = Input.getPointerScreenPosition();\r\n            if (!newPointerPosition.equals(lastPointerPosition)) {\r\n                const dx = (lastPointerPosition.x - newPointerPosition.x) * rotationSpeed * deltaTime;\r\n                const dy = (lastPointerPosition.y - newPointerPosition.y) * rotationSpeed * deltaTime;\r\n                cameraPosition.copy(cameraTransform.getTranslation(new Vector3()));\r\n                if (dx !== 0 || dy !== 0) {\r\n                    cameraUpSign = Math.sign(cameraTransform.getUp(new Vector3()).dot(Space.up));\r\n                    cameraForward.toSpherical(Space.origin);\r\n                    const theta = cameraForwardArray[1];\r\n                    const phi = cameraForwardArray[2];\r\n                    const newTheta = theta + cameraUpSign * -dy;\r\n                    if (newTheta <= 0 || newTheta >= Math.PI) {\r\n                        cameraForwardArray[2] = (phi - dx + Math.PI) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = newTheta < 0 ? -newTheta : Math.PI - (newTheta - Math.PI);\r\n                        cameraUpSign *= -1;\r\n                    }\r\n                    else {\r\n                        cameraForwardArray[2] = (phi - dx) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = theta + cameraUpSign * -dy;\r\n                    }\r\n                    cameraForward.toCartesian(Space.origin);\r\n                    cameraTransform.lookAt(cameraPosition.add(cameraForward), (cameraUpSign > 0) ? Space.up : Space.down);\r\n                }\r\n                lastPointerPosition.copy(newPointerPosition);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar FreeCameraControl: FreeCameraControlConstructor = FreeCameraControlBase;","import { Entity } from \"./src/engine/core/general/Entity\";\r\nimport { Scene } from \"./src/engine/core/general/Scene\";\r\nimport { FaceHalfEdgesIterator, FaceVerticesIterator, GeometryBuilderBase, Vertex, VertexFacesIterator } from \"./src/engine/core/rendering/scenes/geometries/GeometryBuilder\";\r\nimport { QuadGeometry } from \"./src/engine/core/rendering/scenes/geometries/lib/QuadGeometry\";\r\nimport { Matrix3 } from \"./src/engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"./src/engine/libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector2 } from \"./src/engine/libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"./src/engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector4 } from \"./src/engine/libs/maths/algebra/vectors/Vector4\";\r\nimport { GOLDEN_RATIO } from \"./src/engine/libs/maths/geometry/GeometryConstants\";\r\nimport { Triangle } from \"./src/engine/libs/maths/geometry/primitives/Triangle\";\r\nimport { Space } from \"./src/engine/libs/maths/geometry/space/Space\";\r\nimport { buildArrayFromIndexedArrays } from \"./src/engine/utils/Snippets\";\r\nimport { instanced } from \"./src/samples/scenes/Instanced\";\r\nimport { startMaps } from \"./src/samples/scenes/Maps\";\r\nimport { start } from \"./src/samples/scenes/SimpleScene\";\r\nimport { wireframe } from \"./src/samples/scenes/Wireframe\";\r\n/*\r\nfunction windingOrder(v0: Vector3, v1: Vector3, v2: Vector3) {\r\n    const triangle = new Triangle(v0, v1, v2);\r\n    const centroid = triangle.getMidpoint(new Vector3());\r\n    const normal = triangle.getNormal(new Vector3());\r\n    \r\n    const e1 = v1.clone().sub(v0);\r\n    const e2 = e1.clone().cross(normal);\r\n\r\n    e1.normalize();\r\n    e2.normalize();\r\n\r\n    const v0_centered = v0.clone().sub(centroid);\r\n    const v1_centered = v1.clone().sub(centroid);\r\n    const v2_centered = v2.clone().sub(centroid);\r\n\r\n    const v0_t1 = e1.dot(v0_centered);\r\n    const v0_t2 = e2.dot(v0_centered);\r\n\r\n    const v1_t1 = e1.dot(v1_centered);\r\n    const v1_t2 = e2.dot(v1_centered);\r\n\r\n    const v2_t1 = e1.dot(v2_centered);\r\n    const v2_t2 = e2.dot(v2_centered);\r\n\r\n    const det = (v1_t1 - v0_t1) * (v2_t2 - v0_t2) - (v1_t2 - v0_t2) * (v2_t1 - v0_t1);\r\n    console.log(det < 0 ? \"CW\" : \"CCW\");\r\n\r\n    // const v0_out = new Vector2([v0_t1, v0_t2]);\r\n    // const v1_out = new Vector2([v1_t1, v1_t2]);\r\n    // const v2_out = new Vector2([v2_t1, v2_t2]);\r\n    // const v0_angle = Math.atan2(v0_out.y, v0_out.x);\r\n    // const v1_angle = Math.atan2(v1_out.y, v1_out.x);\r\n    // const v2_angle = Math.atan2(v2_out.y, v2_out.x);\r\n    \r\n    // const angles = [v0_angle, v1_angle, v2_angle];\r\n}*/\r\n\r\nexport async function main() {\r\n    //console.clear();\r\n    //instanced();\r\n    //wireframe();\r\n    //start();\r\n    startMaps();\r\n    // const button = document.createElement(\"button\");\r\n    // button.textContent = \"Get bin\";\r\n    // document.body.insertAdjacentElement(\"beforebegin\", button);\r\n    // button.onclick = () => {\r\n    //     const anchor = document.createElement(\"a\");\r\n    //     const myData = new Float32Array([32.20, 1]);\r\n    //     const myBlob = new Blob([myData]);\r\n    //     anchor.download = \"dat.bin\";\r\n    //     anchor.href = URL.createObjectURL(myBlob);\r\n    //     anchor.click();\r\n    // };\r\n    // const input = document.createElement(\"input\");\r\n    // input.type = \"file\";\r\n    // input.oninput = () => {\r\n    //     if (input.files) {\r\n    //         Array.from(input.files).forEach((file) => {\r\n    //             file.arrayBuffer().then((arr) => {\r\n    //                 console.log(Array.from(new Float32Array(arr)).map(val => val.toFixed(3)));\r\n    //             });\r\n    //         });\r\n    //     }\r\n    // };\r\n    // document.body.insertAdjacentElement(\"beforebegin\", input);\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Injector","constructor","args","this","_defaultCtor","defaultCtor","_onDefaultOverride","onDefaultOverride","_constructors","Map","overrideDefaultCtor","forceQualifier","qualifier","_forcedQualifier","unforceQualifier","getConstructor","qualifierValue","Error","inject","Array","from","register","has","set","Vector2Base","values","array","Float32Array","x","y","setValues","v","equals","vec","copy","clone","setUnit","setZeros","add","addScalar","k","sub","lerp","t","clamp","min","max","l","g","Math","multScalar","cross","a","b","dot","length","sqrt","lengthSquared","dist","dx","dy","distSquared","normalize","lenSq","len","Number","EPSILON","negate","mult","arg0","Vector2","m","addScaled","writeIntoArray","out","offset","readFromArray","arr","copyAndSub","vecA","vecB","ctor","Vector3Base","toString","join","static","vectorA","vectorB","temp","acos","z","vector","to","scale","t0","t1","t2","distance","dz","hypot","distanceSquared","toSpherical","center","thisArray","centerArray","roh","theta","phi","atan2","toCartesian","sin","cos","mat","copyAndCross","iterator","i","next","done","Key","Space","origin","right","left","up","down","forward","backward","KEYS_COUNT","keys","KeyModifier","MouseButton","MOUSE_BUTTONS_COUNT","MOUSE_BUTTONS_INDICES","freeze","reduce","map","button","index","assign","KEYS_INDICES","PoolAutoExtendPolicy","Input","keyFlags","fill","mouseFlags","pointerPosition","wheelDelta","canvas","canvasRectangle","initialize","getBoundingClientRect","addEventListener","getCanvasRect","rect","clear","handleEvent","event","eventIndex","type","canvasRect","clientX","clientY","top","deltaY","getKey","getKeyUp","getKeyDown","getMouseButton","getPointerPosition","getPointerScreenPosition","positionAray","width","height","getWheelDelta","getMouseButtonDown","getMouseButtonUp","MathError","name","StackPool","policy","_ctor","_autoExtendPolicy","AUTO_EXTEND_ONE","_autoExtendTicks","autoExtendPolicy","autoExtend","extend","AUTO_EXTEND_POW2","pow","options","super","_objects","size","_top","acquire","count","target","slice","release","console","warn","push","PI","_bytes","ArrayBuffer","BYTES_PER_ELEMENT","_floatView","_intView","Uint32Array","Matrix3Base","checkArray","row1","row","row2","row3","col1","col","col2","col3","m11","val","m12","m13","m21","m22","m23","m31","m32","m33","getValues","other","setIdentity","det","trace","transpose","invert","t11","t12","t13","t21","t22","t23","t31","t32","t33","d","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","angle","setRotationX","cosAngle","sinAngle","setRotationY","setRotationZ","solve","bx","by","bz","rx","ry","rz","solve2","Matrix3","QuaternionBase","_array","_checkArray","w","pitch","sinPitch","abs","sign","asin","yaw","sinYawCosPitch","cosYawCosPitch","roll","sinRollCosPitch","cosRollCosPitch","axis","setAxisAngle","setEuler","quat","q","quatArray","getAxis","outArray","den","halfx","qSqrt","getMatrix","s","xs","ys","zs","wx","wy","wz","xx","xy","xz","yy","yz","zz","rotate","vectorArray","vx","vy","vz","qx","qy","qz","qw","tx","ty","tz","tw","toVector","cosYaw","sinYaw","cosPitch","cosRoll","sinRoll","axisLength","halfSin","axisArray","setMatrix","matrix","matrixArray","lookAt","source","dest","Quaternion","setVectors","crossArray","fromLength","toLength","angleTo","rotation","rotateTowards","slerp","conjugate","ax","ay","az","aw","bw","scalar","fromArray","toArray","cosHalfTheta","halfTheta","sinHalfTheta","trunc","ratioA","ratioB","copyIntoArray","QuaternionPool","Matrix4Base","m41","m42","m43","m14","m24","m34","m44","getRotation","setTRS","translation","scaling","rotationArray","translationArray","scalingArray","x2","y2","z2","sx","sy","sz","setRotation","quaternion","quaternionArray","matArray","det2_01_01","det2_01_02","det2_01_03","det2_01_12","det2_01_13","det2_01_23","det3_201_012","det3_201_013","det3_201_023","A","a41","a42","a43","a14","a24","a34","a44","o00","o01","o02","o03","o10","o11","o12","o13","o20","o21","o22","o23","o30","o31","o32","o33","t00","t01","t02","t03","t04","t05","t06","t07","t08","t09","t10","invDet","B","b41","b42","b43","b14","b24","b34","b44","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","bX","bY","bZ","bW","solve3","setTranslation","vecArray","translate","t3","t4","rotateX","t5","t6","t7","t8","rotateY","sinAngles","rotateZ","c","C","t9","setScaling","eye","eyeArray","upArray","targetArray","e0","e1","e2","u0","u1","u2","x0","x1","y0","y1","z0","z1","transformPoint","point","pointArray","transformDirection","direction","directionArray","transformNormal","normal","normalArray","thisInvArray","fov","aspect","zNear","zFar","setPerspective","tan","rangeInv","bottom","near","far","setOrthographic","setFrustrum","invWidth","invHeight","invDepth","Matrix4","Vector3Pool","_buffer","_bufferViews","subarray","_extensions","UUIDGenerator","_count","newUUID","TransformBase","owner","uuid","localArray","localMatrix","_hasChanged","getLocalMatrix","thisLocalArray","setLocalMatrix","getRight","getLeft","getUp","getDown","getForward","getBackward","hasChanged","getTranslation","getScaling","thisRotation","transformVector","thisPosition","Transform","PlaneBase","constant","_normal","_constant","setFromNormalAndConstant","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","plane","point1","point2","point3","distanceToPoint","normalized","inverseNormalLength","PlaneInjector","FrustrumBase","planeCtor","_nearPlane","_farPlane","_topPlane","_bottomPlane","_leftPlane","_rightPlane","nearPlane","farPlane","topPlane","bottomPlane","leftPlane","rightPlane","frustrum","setFromPerspectiveMatrix","intersectsSphere","sphere","radius","intersectsBox","box","intersects","boxMax","boxMin","containsPoint","GeometryPropertyKeys","Frustrum","PerspectiveCamera","transform","projection","_projection","_frustrum","view","viewProjection","isViewing","mesh","updateFrustrum","perspective","FramebufferStatus","FramebufferTextureTarget","FramebufferAttachment","RenderbufferPixelFormat","BufferDataUsage","BufferTarget","ShaderType","DrawMode","ArrayDataType","ElementArrayDataType","TexturePixelFormat","TextureInternalPixelFormat","TexturePixelType","TextureParameter","TextureTarget","TextureMagFilter","TextureMinFilter","TextureCompareMode","TextureWrapMode","TextureCompareFunction","UniformType","StencilAction","BufferMask","TestFunction","BlendingMode","BlendingEquation","Capabilities","Face","WindingOrder","FaceHalfEdgesIterator","face","_face","_halfEdge","reset","current","firstHalfEdge","halfEdge","nextHalfEdge","FaceVerticesIterator","prev","firstVertex","vertex","VertexFacesIterator","_vertex","twin","QuadGeometry","properties","widthSegment","heightSegment","toBuilder","builder","halfEdges","vertices","faces","linesArray","flatMap","faceVertices","v0","v1","v2","v3","verticesArray","tangentsArray","faceUvs","uv","p0","p1","p2","uv0","uv1","uv2","edge1","p1_i","edge2","deltaUV1","uv1_i","deltaUV2","f","tangent","edge1_i","tangent_i","verticesNormalsArray","components","_","ni","pi","normal_i","uvsArray","flat","indicesArray","verticesCount","Uint8Array","Uint16Array","indices","concat","addFaceVertices","addedVertices","find","vert","every","addVertex","addFace","addTriangleFaceVertices","_v0","_v1","_v2","addTriangleFace","addQuadFaceVertices","_v3","addQuadFace","previousHalfEdge","existingHalfEdge","twinHalfEdge","log","segmentVertexWidth","segmentVertexHeight","segmentUvWidth","segmentUvHeight","vertexOrigin","uvOrigin","vertexPosition","uvPosition","uvs","hi","wi","WebGLProgramUtilities","gl","shader","createShader","error","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","internal","shaderInfoLog","getShaderInfoLog","deleteShader","isShader","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","programInfoLog","getProgramInfoLog","vsInfoLog","fsInfoLog","deleteProgram","isProgram","getParameter","CURRENT_PROGRAM","useProgram","WebGLVertexArrayUtilities","attribute","Int32Array","FLOAT","Int16Array","SHORT","UNSIGNED_SHORT","Int8Array","BYTE","UNSIGNED_BYTE","vertexArray","_vertexArray","createVertexArray","bindVertexArray","attributesEntries","entries","attributes","buffersProps","forEach","bufferUsage","usage","STATIC_DRAW","bufferIndex","findIndex","bufferProps","byteLength","attributesSetters","buffers","indicesBuffer","indexType","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","bufferBytesOffset","filter","attributeName","srcOffset","srcLength","bufferSubData","location","getAttribLocation","getAttributeDataType","stride","numComponents","divisor","vertexAttribPointer","vertexAttribDivisor","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","enableVertexAttribArray","getElementArrayBufferType","ELEMENT_ARRAY_BUFFER","attributeSetters","verticesBuffers","numElements","isVertexArray","deleteVertexArray","mode","instanceCount","VERTEX_ARRAY_BINDING","drawElementsInstanced","drawElements","drawArraysInstanced","drawArrays","attributeSetter","verticesBuffer","ARRAY_BUFFER_BINDING","ELEMENT_ARRAY_BUFFER_BINDING","UNSIGNED_INT","WebGLTextureUtilities","props","texture","createTexture","unit","_allocateUnit","MAX_TEXTURE_IMAGE_UNITS","tex","setTextureProperties","setTextureParameters","isTexture","deleteTexture","_freeUnit","ACTIVE_TEXTURE","activeTexture","TEXTURE0","bindTexture","lod","pixels","texImage2D","internalFormat","format","TEXTURE_CUBE_MAP_POSITIVE_X","xPos","TEXTURE_CUBE_MAP_NEGATIVE_X","xNeg","TEXTURE_CUBE_MAP_POSITIVE_Y","yPos","TEXTURE_CUBE_MAP_NEGATIVE_Y","yNeg","TEXTURE_CUBE_MAP_POSITIVE_Z","zPos","TEXTURE_CUBE_MAP_NEGATIVE_Z","zNeg","subimage","texSubImage2D","xoffset","yoffset","generateMipmap","param","texParameteri","TEXTURE_MIN_FILTER","mag","TEXTURE_MAG_FILTER","wrapS","TEXTURE_WRAP_S","wrapT","TEXTURE_WRAP_T","wrapR","TEXTURE_WRAP_R","baseMipmapLevel","TEXTURE_BASE_LEVEL","maxMipmapLevel","TEXTURE_MAX_LEVEL","compareFunction","TEXTURE_COMPARE_FUNC","compareMode","TEXTURE_COMPARE_MODE","minLod","texParameterf","TEXTURE_MIN_LOD","maxLod","TEXTURE_MAX_LOD","units","_units","maxUnits","WebGLUniformUtilities","uniformValue","uniform","uniformType","uniformProps","undefined","num","uniform1f","uniform1ui","BOOL","INT","uniform1i","INT_SAMPLER_2D","INT_SAMPLER_2D_ARRAY","INT_SAMPLER_3D","INT_SAMPLER_CUBE","SAMPLER_2D","SAMPLER_3D","SAMPLER_CUBE","SAMPLER_2D_SHADOW","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","FLOAT_VEC2","isArray","list","uniform2fv","BOOL_VEC2","INT_VEC2","uniform2iv","UNSIGNED_INT_VEC2","uniform2uiv","FLOAT_VEC3","uniform3fv","BOOL_VEC3","INT_VEC3","uniform3iv","UNSIGNED_INT_VEC3","uniform3uiv","FLOAT_VEC4","uniform4fv","BOOL_VEC4","INT_VEC4","uniform4iv","UNSIGNED_INT_VEC4","uniform4uiv","FLOAT_MAT2","uniformMatrix2fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","FLOAT_MAT2x3","uniformMatrix2x3fv","FLOAT_MAT2x4","uniformMatrix2x4fv","FLOAT_MAT3x2","uniformMatrix3x2fv","FLOAT_MAT3x4","uniformMatrix3x4fv","FLOAT_MAT4x2","uniformMatrix4x2fv","FLOAT_MAT4x3","uniformMatrix4x3fv","settersList","setters","uniformsNames","uniformIndices","getUniformIndices","uniformsTypes","getActiveUniforms","UNIFORM_TYPE","uniformName","uniformIndex","getUniformLocation","getUniformSetter","setter","uniformSetter","WebGLUniformBlockUtilities","blockName","rangeOffset","rangeSize","UNIFORM_BUFFER","blockIndex","getUniformBlockIndex","INVALID_INDEX","blockSize","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","DYNAMIC_DRAW","layout","uniforms","UNIFORM_BUFFER_BINDING","uniformLayout","newValue","getUniformValueArrayBufferView","block","bindBufferRange","bindingPoint","bindBufferBase","_allocateBindingPoint","MAX_UNIFORM_BUFFER_BINDINGS","uniformBlockBinding","blockUniformsIndices","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","UNIFORM_OFFSET","uniformOffset","idx","uniformInfo","getActiveUniform","uniformFullName","bracketIndex","indexOf","substring","maxBindings","_bindingPoints","bindingPoints","WebGLPacketUtilities","textures","uniformBlocks","texturesInfo","uniformBlocksInfo","textureName","textureInfo","uniformBlock","createUniformBlock","packet","drawMode","TRIANGLES","uniformsSetter","getUniformsListSetter","setUniformsListValues","createUniformBuffer","setUniformBufferValues","bindUniformBuffer","params","setVertexArrayValues","drawVertexArray","WebGLRendererUtilities","winding","frontFace","scissor","viewport","color","clearColor","func","depthFunc","equ","blendEquation","srcFunc","dstFunc","blendFunc","ref","mask","stencilFuncSeparate","fail","zFail","zPass","stencilOpSeparate","stencilMaskSeparate","red","green","blue","alpha","colorMask","capability","enable","disable","VIEWPORT","MAX_SAMPLES","ColorBase","r","colors","valuesNormalized","BLACK","rgb","RED","GREEN","BLUE","WHITE","Color","createPositionWidgets","data","lastValue","async","startMaps","template","document","createElement","innerHTML","body","insertBefore","content","firstChild","frameRequest","render","fps","paused","playPause","getElementById","onclick","textContent","fpsElement","canvasWidth","canvasHeight","style","getContext","phongVert","fetch","then","resp","text","phongFrag","phongGlProgram","linesVertex","linesFragment","linesProgram","fetchImage","url","ok","Promise","resolve","img","Image","onload","src","albedoMapImg","normalMapImg","heightMapImg","phongPacketBindings","createBindings","albedoMap","TEXTURE_2D","RGB","RGB8","normalMap","LINEAR_MIPMAP_LINEAR","LINEAR","heightMap","linesBindings","worldViewBlock","lightsBlock","phongBlock","anisotropicExtension","getExtension","maxFiltering","MAX_TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_MAX_ANISOTROPY_EXT","quadTransform","camera","lightTransform","getDelta","timers","Date","getTime","widgets","container","widget","input","output","label","onchange","currentTarget","parseFloat","checked","append","opt","Option","trigger","addWidgets","rotationMatrix","lastRotation","rotationX","newRotation","fromMatrix","fromEuler","rotationY","rotationZ","quadGeometry","quadGeometryBuilder","quadIndices","quadVertices","quadNormals","quadUVs","quadTangents","quadLines","timer","getMilliseconds","toFixed","linesPacketProperties","a_position","viewBlock","u_worldViewProjection","linesBlock","u_color","LINES","phongPacketProperties","createPacket","a_normal","a_tangent","a_uv","u_model","u_modelView","u_normal","u_view","u_camera","u_projection","u_lightWorldPos","u_lightColor","u_ambientColor","u_diffuseColor","u_specularColor","u_ambientFactor","u_diffuseFactor","u_specularFactor","u_shininess","u_albedo","u_normalMap","u_heightMap","phongPacket","DEPTH_TEST","CULL_FACE","lastFrameTime","deltaTime","framebuffer","createFramebuffer","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","samples","renderbufferStorageMultisample","renderbufferStorage","FRAMEBUFFER_BINDING","bindFramebuffer","FRAMEBUFFER","attachments","framebufferTexture2D","attachment","textureTarget","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","framebufferRenderbuffer","readFramebuffer","drawFramebuffer","readRectangle","drawRectangle","READ_FRAMEBUFFER_BINDING","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER_BINDING","DRAW_FRAMEBUFFER","blitFramebuffer","readPixels","isFramebuffer","deleteFramebuffer","isRenderbuffer","deleteRenderbuffer","unbindFramebuffer","cameraControl","rotationSpeed","translationSpeed","lastPointerPosition","update","cameraTransform","cameraPosition","cameraForward","cameraForwardArray","cameraUpSign","Z","ARROW_UP","Q","ARROW_LEFT","S","ARROW_DOWN","D","ARROW_RIGHT","RIGHT","newPointerPosition","newTheta","frameTime","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","depthFunction","LESS","setPacketValues","drawPacket","requestAnimationFrame","launchScene","main"],"sourceRoot":""}