{"version":3,"file":"main.js","mappings":"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","sources":["webpack://main/webpack/bootstrap","webpack://main/webpack/runtime/define property getters","webpack://main/webpack/runtime/hasOwnProperty shorthand","webpack://main/webpack/runtime/make namespace object","webpack://main/./src/engine/libs/patterns/injectors/Injector.ts","webpack://main/./src/engine/libs/maths/MathError.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector2.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector3.ts","webpack://main/./src/engine/core/input/Input.ts","webpack://main/./src/engine/libs/maths/geometry/space/Space.ts","webpack://main/./src/engine/libs/graphics/colors/Color.ts","webpack://main/./src/engine/libs/patterns/pools/Pool.ts","webpack://main/./src/engine/libs/patterns/pools/StackPool.ts","webpack://main/./src/engine/libs/maths/extensions/pools/Vector3Pools.ts","webpack://main/./src/engine/libs/maths/geometry/primitives/Plane.ts","webpack://main/./src/engine/core/rendering/hl/Mesh.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLBufferUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLVertexArrayUtilities.ts","webpack://main/./src/engine/core/rendering/hl/WireframeMaterial.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/GeometryBuffer.ts","webpack://main/./src/engine/core/rendering/helpers/CameraHelper.ts","webpack://main/./src/engine/core/rendering/helpers/GridHelper.ts","webpack://main/./src/engine/libs/maths/Snippets.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix3.ts","webpack://main/./src/engine/libs/maths/algebra/quaternions/Quaternion.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix4.ts","webpack://main/./src/engine/libs/maths/statistics/random/UUIDGenerator.ts","webpack://main/./src/engine/libs/physics/collisions/Frustrum.ts","webpack://main/./src/engine/core/general/Transform.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/PerspectiveCamera.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/Camera.ts","webpack://main/./src/engine/core/rendering/scenes/objects/Object3D.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/bounding/BoundingBox.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/lib/Octree.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/Geometry.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/bounding/BoundingSphere.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/GeometryBuilder.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/lib/polyhedron/CubeGeometry.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLTextureUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLProgramUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformBlockUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLRendererUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLPacketUtilities.ts","webpack://main/./main.ts","webpack://main/./src/samples/scenes/Octree.ts","webpack://main/./src/engine/core/controls/FreeCameraControl.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { Injector };\r\nexport { InjectorBase };\r\nexport { Inject };\r\nexport { Register };\r\n\r\ninterface InjectorConstructor {\r\n    readonly prototype: Injector;\r\n    new<C extends Constructor<any>>(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}): Injector<C>;\r\n}\r\n\r\ninterface Injector<C extends Constructor<any> = Constructor<any>> {\r\n    readonly defaultCtor: C;\r\n    overrideDefaultCtor(constructor: C): void;\r\n    forceQualifier(qualifier: string): void;\r\n    unforceQualifier(): void;\r\n    getConstructor(qualifier?: string): C;\r\n    inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C>;\r\n    register(constructor: C, qualifier: string): void; \r\n}\r\n\r\nclass InjectorBase<C extends Constructor<any> = Constructor<any>> implements Injector<C> {\r\n    private _forcedQualifier?: string;\r\n    private _constructors: Map<string, C>;\r\n    private _defaultCtor: C;\r\n    private _onDefaultOverride: (constructor: C) => void;\r\n\r\n    get defaultCtor(): C {\r\n        return this._defaultCtor;\r\n    }\r\n\r\n    overrideDefaultCtor(constructor: C): void {\r\n        this._defaultCtor = constructor;\r\n        this._onDefaultOverride(constructor);\r\n    }\r\n\r\n    constructor(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}) {\r\n        this._defaultCtor = args.defaultCtor;\r\n        this._onDefaultOverride = args.onDefaultOverride;\r\n        this._constructors = new Map();\r\n    }\r\n\r\n    forceQualifier(qualifier: string): void {\r\n        this._forcedQualifier = qualifier;\r\n    }\r\n\r\n    unforceQualifier(): void {\r\n        delete this._forcedQualifier;\r\n    }\r\n\r\n    getConstructor(qualifier?: string): C {\r\n        const qualifierValue = this._forcedQualifier || qualifier;\r\n        if (typeof qualifierValue === 'undefined') {\r\n            return this._defaultCtor;\r\n        }\r\n        const constructor = this._constructors.get(qualifierValue);\r\n        if (typeof constructor === 'undefined') {\r\n            throw new Error(`No constructor for qualifier ${qualifierValue}`);\r\n        }\r\n        return constructor;\r\n    }\r\n\r\n    inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C> {\r\n        const constructor = this.getConstructor(args?.qualifier);\r\n        if (args?.args) {\r\n            const parameters = Array.from(args.args);\r\n            return new constructor(...parameters);\r\n        }\r\n        return new constructor();\r\n    }\r\n\r\n    register(constructor: C, qualifier: string): void {\r\n        if (!this._constructors.has(qualifier)) {\r\n            this._constructors.set(qualifier, constructor);\r\n        }\r\n    }\r\n}\r\n\r\nconst Injector: InjectorConstructor = InjectorBase;\r\n\r\ntype UnwrappedInjectorConstructor<I> = I extends Injector<infer C> ? C : never;\r\n\r\ninterface RegisterDecorator {\r\n    <I extends Injector>(injector: I, qualifier?: string): <C extends UnwrappedInjectorConstructor<I>>(ctor: C) => C;\r\n}\r\n\r\nconst Register: RegisterDecorator = function<\r\n    I extends Injector\r\n>(injector: I, qualifier?: string): any {\r\n    return <C extends UnwrappedInjectorConstructor<I>>(\r\n        ctor: C\r\n    ) => {\r\n        if (typeof qualifier !== 'undefined') {\r\n            injector.register(ctor, qualifier);\r\n        }\r\n        injector.register(ctor, ctor.name);\r\n        return ctor;\r\n    }\r\n}\r\n\r\nfunction Inject<\r\n    I extends Injector,\r\n    P extends ConstructorParameters<UnwrappedInjectorConstructor<I>>,\r\n>(injector: I, options?: {qualifier?: string, args?: P}): any {\r\n    return (\r\n        target: any,\r\n        propertyKey: string\r\n    ) => {\r\n        const instance = injector.inject(options);\r\n\r\n        Object.defineProperty(target, propertyKey, {\r\n            value: instance\r\n        });\r\n    }\r\n}","export class MathError extends Error {\r\n    name = 'MathError';\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Matrix2 } from \"../matrices/Matrix2\";\r\n\r\nexport { Vector2Injector };\r\nexport { Vector2 };\r\nexport { Vector2Base };\r\n\r\nexport type Vector2Values = [number, ...number[]] & { length: 2 };\r\n\r\ninterface Vector2Constructor {\r\n\treadonly prototype: Vector2;\r\n\tnew(): Vector2;\r\n\tnew(a: number, y: number): Vector2;\r\n  \tnew(array: ArrayLike<number>): Vector2;\r\n}\r\n\r\ninterface Vector2 {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector2Values;\r\n\tx: number;\r\n\ty: number;\r\n\tsetValues(x: number, y: number): this;\r\n\tcopy(vec: Vector2): this;\r\n\tclone(): this;\r\n\tequals(vec: Vector2): boolean;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\tadd(vec: Vector2): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector2): this;\r\n\tlerp(vec: Vector2, t: number): this;\r\n\tclamp(min: Vector2, max: Vector2): this;\r\n\tmultScalar(k: number): this;\r\n\tcross(vec: Vector2): number;\r\n\tdot(vec: Vector2): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdist(vec: Vector2): number;\r\n\tdistSquared(vec: Vector2): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector2): this;\r\n\tmult(mat: Matrix2): this\r\n\taddScaled(vec: Vector2, k: number): this;\r\n\tcopyAndSub(vecA: Vector2, vecB: Vector2): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector2Base {\r\n\treadonly array: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(array: ArrayLike<number>)\r\n\t  constructor(\r\n\t  x: number, y: number\r\n\t)\r\n\tconstructor(\r\n\t  ...args: any[]\r\n\t) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([args[0], args[1]]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tconst array = args[0];\r\n\t\t\tif (array.length < 2) {\r\n\t\t\t\tthrow new MathError(`Array must be of length 2 at least.`);\r\n\t\t\t}\r\n\t\t\tif (array instanceof Float32Array) {\r\n\t\t\t\tthis.array = array;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.array = new Float32Array(array);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([0, 0]);\r\n\t\t}\r\n\t}\r\n\r\n\tget values(): Vector2Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1]\r\n\t\t];\r\n\t}\r\n\r\n\tset values(values: Vector2Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tsetValues(x: number, y: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = x;\r\n\t\to[1] = y;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tequals(vec: Vector2Base): boolean {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\t\t\r\n\t\treturn v[0] === o[0]\r\n\t\t\t&& v[1] === o[1];\r\n\t}\r\n\r\n\tcopy(vec: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\to[0] = v[0];\r\n\t\to[1] = v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new Vector2Base(this.values) as this;\r\n\t}\r\n\r\n\tsetUnit(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 1;\r\n\t\to[1] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetZeros(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 0;\r\n\t\to[1] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0];\r\n\t\to[1] = o[1] + v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + k;\r\n\t\to[1] = o[1] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] - v[0];\r\n\t\to[1] = o[1] - v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(vec: Vector2Base, t: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = t * (v[0] - o[0]);\r\n\t\to[1] = t * (v[1] - o[1]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min: Vector2Base, max: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst l = min.array;\r\n\t\tconst g = max.array;\r\n\r\n\t\to[0] = Math.min(g[0], Math.min(o[0], l[0])),\r\n\t\to[1] = Math.min(g[1], Math.min(o[1], l[1]))\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmultScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] * k;\r\n\t\to[1] = o[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcross(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn a[0] * b[1] - a[1] * b[0];\r\n\t}\r\n\r\n\tdot(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]);\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn v[0] * v[0] + v[1] * v[1];\r\n\t}\r\n\r\n\tdist(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn Math.sqrt(dx * dx + dy * dy);\r\n\t}\r\n\r\n\tdistSquared(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn dx * dx + dy * dy;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\tconst lenSq = o[0] * o[0] + o[1] * o[1];\r\n\t\tconst len = Math.sqrt(lenSq);\r\n\t\tif (len > Number.EPSILON) {\r\n\t\t\to[0] = o[0] / len;\r\n\t\t\to[1] = o[1] / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\to[0] = 0;\r\n\t\t\to[1] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = -o[0];\r\n\t\to[1] = -o[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(mat: Matrix2): this\r\n\tmult(vec: Vector2): this\r\n\tmult(arg0: Matrix2 | Vector2): this {\r\n\t\tif (arg0 instanceof Vector2) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tthis.array[0] = this.array[0] * v[0];\r\n\t\t\tthis.array[1] = this.array[1] * v[1];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst x = this.x;\r\n\t\t\tconst y = this.y;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[2];\r\n\t\t\tthis.y = x * m[1] + y * m[3];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\taddScaled(vec: Vector2Base, k: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0] * k;\r\n\t\to[1] = o[1] + v[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n    }\r\n    \r\n    readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = arr[offset    ];\r\n\t\to[1] = arr[offset + 1];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tcopyAndSub(vecA: Vector2Base, vecB: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\to[0] = a[0] - b[0];\r\n\t\to[1] = a[1] - b[1];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nvar Vector2: Vector2Constructor = Vector2Base;\r\nconst Vector2Injector: Injector<Vector2Constructor> = new Injector({\r\n\tdefaultCtor: Vector2Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector2Constructor) => {\r\n\t\t\tVector2 = ctor;\r\n\t\t}\r\n});","import { Matrix3 } from \"engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\n\r\nexport { Vector3Constructor };\r\nexport { Vector3 };\r\nexport { Vector3Base };\r\nexport { Vector3Injector };\r\n\r\nexport type Vector3Values = [number, ...number[]] & { length: 3 };\r\n\r\ninterface Vector3Constructor {\r\n\treadonly prototype: Vector3;\r\n\tnew(): Vector3;\r\n\tnew(x: number, y: number, z: number): Vector3;\r\n  \tnew(array: ArrayLike<number>): Vector3;\r\n\tangle(vectorA: Vector3, vectorB: Vector3): number;\r\n}\r\n\r\ninterface Vector3 extends Iterable<number> {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector3Values;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\ttoString(): string;\r\n\tsetValues(\r\n\t\tx: number,\r\n\t\ty: number,\r\n\t\tz: number\r\n\t): this;\r\n\tequals(vec: Vector3): boolean;\r\n\tcopy(vec: Vector3): this;\r\n\tclone(): this;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\ttoCartesian(center: Vector3): this;\r\n\ttoSpherical(center: Vector3): this;\r\n\tadd(vec: Vector3): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector3): this;\r\n\tlerp(from: Vector3, to: Vector3, t: number): this;\r\n\tmax(vecB: Vector3): this;\r\n\tmin(vecB: Vector3): this;\r\n\tclamp(min: Vector3, max: Vector3): this;\r\n\tscale(k: number): this;\r\n\tcross(vec: Vector3): this;\r\n\tdot(vec: Vector3): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdistance(vec: Vector3): number;\r\n\tdistanceSquared(vec: Vector3): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector3): this;\r\n\tmult(mat: Matrix3): this;\r\n\taddScaled(vec: Vector3, k: number): this;\r\n\tcopyAndSub(vecA: Vector3, vecB: Vector3): this;\r\n\tcopyAndCross(vecA: Vector3, vecB: Vector3): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector3Base implements Vector3 {\r\n\treadonly array: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(array: ArrayLike<number>)\r\n\t  constructor(\r\n\t  x: number, y: number, z: number\r\n\t)\r\n\tconstructor(\r\n\t  ...args: any[]\r\n\t) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([args[0], args[2], args[1]]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tconst array = args[0];\r\n\t\t\tif (array.length < 3) {\r\n\t\t\t\tthrow new MathError(`Array must be of length 3 at least.`);\r\n\t\t\t}\r\n\t\t\tif (array instanceof Float32Array) {\r\n\t\t\t\tthis.array = array;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.array = new Float32Array(array);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([0, 0, 0]);\r\n\t\t}\r\n\t}\r\n\r\n\ttoString(): string {\r\n\t\treturn `Vector3([${Array.from(this.array).join(\", \")}])`;\r\n\t}\r\n\r\n\tstatic angle(vectorA: Vector3, vectorB: Vector3): number {\r\n\t\tconst temp = new Vector3();\r\n\t\treturn Math.acos(temp.copy(vectorA).dot(vectorB) / (Math.sqrt(temp.copy(vectorA).dot(vectorA)) * Math.sqrt(temp.copy(vectorB).dot(vectorB))));\r\n\t}\r\n\r\n\tget values(): Vector3Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1],\r\n\t\t\tthis.array[2]\r\n\t\t];\r\n\t}\r\n\r\n\tset values(values: Vector3Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t\tthis.array[2] = values[2];\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tget z() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n\tset z(z: number) {\r\n\t\tthis.array[2] = z;\r\n\t}\r\n\r\n\tsetValues(x: number, y: number, z: number): this {\r\n\t\tthis.array[0] = x;\r\n\t\tthis.array[1] = y;\r\n\t\tthis.array[2] = z;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcopy(vec: Vector3): this {\r\n\t\tconst v = vec.array;\r\n\r\n\t\tthis.array[0] = v[0];\r\n\t\tthis.array[1] = v[1];\r\n\t\tthis.array[2] = v[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new Vector3Base(this.values) as this;\r\n\t}\r\n\r\n\tequals(vector: Vector3): boolean {\r\n\t\treturn vector.array[0] === this.array[0]\r\n\t\t\t&& vector.array[1] === this.array[1]\r\n\t\t\t&& vector.array[2] === this.array[2];\r\n\t}\r\n\r\n\tsetZeros(): this {\r\n\t\tthis.array[0] = 0;\r\n\t\tthis.array[1] = 0;\r\n\t\tthis.array[2] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetUnit(): this {\r\n\t\tthis.array[0] = 1;\r\n\t\tthis.array[1] = 1;\r\n\t\tthis.array[2] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0];\r\n\t\tthis.array[1] = this.array[1] + vector.array[1];\r\n\t\tthis.array[2] = this.array[2] + vector.array[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(k: number): this {\r\n\t\tthis.array[0] = this.array[0] + k;\r\n\t\tthis.array[1] = this.array[1] + k;\r\n\t\tthis.array[2] = this.array[2] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] - vector.array[0];\r\n\t\tthis.array[1] = this.array[1] - vector.array[1];\r\n\t\tthis.array[2] = this.array[2] - vector.array[2];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(from: Vector3, to: Vector3, t: number): this {\r\n\t\t\r\n\t\tthis.array[0] = (1 - t) * from.x + t * (to.x - from.x);\r\n\t\tthis.array[1] = (1 - t) * from.y + t * (to.y - from.y);\r\n\t\tthis.array[2] = (1 - t) * from.z + t * (to.z - from.z);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmax(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.max(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.max(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.max(this.array[2], vectorB.array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmin(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.min(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.min(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.min(this.array[2], vectorB.array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min: Vector3, max: Vector3): this {\r\n\t\tthis.array[0] = Math.min(max.array[0], Math.max(this.array[0], min.array[0]));\r\n\t\tthis.array[1] = Math.min(max.array[1], Math.max(this.array[1], min.array[1]));\r\n\t\tthis.array[2] = Math.min(max.array[2], Math.max(this.array[2], min.array[2]));\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tscale(k: number): this {\r\n\t\tthis.array[0] = this.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcross(vector: Vector3): this {\r\n\t\tconst t0 = this.array[1] * vector.array[2] - this.array[2] * vector.array[1];\r\n\t\tconst t1 = this.array[2] * vector.array[0] - this.array[0] * vector.array[2];\r\n\t\tconst t2 = this.array[0] * vector.array[1] - this.array[1] * vector.array[0];\r\n\t\t\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdot(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst a = this.array;\r\n\r\n\t\treturn Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst a = this.array;\r\n\t\t\r\n\t\treturn a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\r\n\t}\r\n\r\n\tdistance(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn Math.hypot(dx, dy, dz);\r\n\t}\r\n\r\n\tdistanceSquared(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst {array} = this;\r\n\t\tconst length = this.length();\r\n\t\tif (length > Number.EPSILON) {\r\n\t\t\tarray[0] /= length;\r\n\t\t\tarray[1] /= length;\r\n\t\t\tarray[2] /= length;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tarray[0] = 0;\r\n\t\t\tarray[1] = 0;\r\n\t\t\tarray[2] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate(): this {\r\n\t\tconst {array} = this;\r\n\t\tarray[0] *= -1;\r\n\t\tarray[1] *= -1;\r\n\t\tarray[2] *= -1;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(mat: Matrix3): this\r\n\tmult(vec: Vector3): this\r\n\tmult(arg0: Matrix3 | Vector3): this {\r\n\t\tconst {array} = this;\r\n\t\tif (arg0 instanceof Vector3) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tarray[0] = array[0] * v[0];\r\n\t\t\tarray[1] = array[1] * v[1];\r\n\t\t\tarray[2] = array[2] * v[2];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst [x, y, z] = this;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[3] + z * m[6];\r\n\t\t\tthis.y = x * m[1] + y * m[4] + z * m[7];\r\n\t\t\tthis.z = x * m[2] + y * m[5] + z * m[8];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\ttoSpherical(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const x = thisArray[0] - centerArray[0];\r\n        const y = thisArray[1] - centerArray[1];\r\n        const z = thisArray[2] - centerArray[2];\r\n\r\n        const roh = Math.hypot(x, y, z);\r\n        const theta = Math.acos(y / roh);\r\n        const phi = Math.atan2(z, x);\r\n        thisArray[0] = roh;\r\n        thisArray[1] = theta;\r\n        thisArray[2] = phi;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n    toCartesian(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const roh = thisArray[0];\r\n        const theta = thisArray[1];\r\n        const phi = thisArray[2];\r\n\r\n        const x = roh * Math.sin(theta) * Math.cos(phi) + centerArray[0];\r\n        const y = roh * Math.cos(theta) + centerArray[1];\r\n        const z = roh * Math.sin(theta) * Math.sin(phi) + centerArray[2];\r\n        thisArray[0] = x;\r\n        thisArray[1] = y;\r\n        thisArray[2] = z;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tstatic mult(mat: Matrix3, vec: Vector3): Vector3 {\r\n\t\tconst m = mat.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\treturn new Vector3Base([\r\n\t\t\tm[0] * v[0] + m[1] * v[1] + m[2] * v[2],\r\n\t\t\tm[3] * v[0] + m[4] * v[1] + m[5] * v[2],\r\n\t\t\tm[6] * v[0] + m[7] * v[1] + m[8] * v[2]\r\n\t\t]);\r\n\t}\r\n\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n\t\tout[offset + 2] = v[2];\r\n    }\r\n    \r\n    readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tthis.array[0] = arr[offset    ];\r\n\t\tthis.array[1] = arr[offset + 1];\r\n\t\tthis.array[2] = arr[offset + 2];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\taddScaled(vector: Vector3, k: number): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] + vector.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] + vector.array[2] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcopyAndSub(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\tthis.array[0] = a[0] - b[0];\r\n\t\tthis.array[1] = a[1] - b[1];\r\n\t\tthis.array[2] = a[2] - b[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcopyAndCross(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\t\r\n\t\tconst t0 = a[1] * b[2] - a[2] * b[1];\r\n\t\tconst t1 = a[2] * b[0] - a[0] * b[2];\r\n\t\tconst t2 = a[0] * b[1] - a[1] * b[0];\r\n\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\t[Symbol.iterator] (): Iterator<number> {\r\n\t\tconst {array} = this;\r\n\t\tconst {length} = array;\r\n\t\tlet i = 0;\r\n\t\treturn {\r\n\t\t\tnext() {\r\n\t\t\t\tif (i < length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: array[i++], done: false\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: undefined, done: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar Vector3: Vector3Constructor = Vector3Base;\r\n\r\nconst Vector3Injector: Injector<Vector3Constructor> = new Injector({\r\n\tdefaultCtor: Vector3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector3Constructor) => {\r\n\t\t\tVector3 = ctor;\r\n\t\t}\r\n});","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\n\r\nexport { Key };\r\nexport { KeyModifier };\r\nexport { HotKey };\r\nexport { MouseButton };\r\nexport { Input };\r\n\r\nenum Key {\r\n    A = \"a\",\r\n    B = \"b\",\r\n    C = \"c\",\r\n    D = \"d\",\r\n    E = \"e\",\r\n    F = \"f\",\r\n    G = \"g\",\r\n    H = \"h\",\r\n    I = \"i\",\r\n    J = \"j\",\r\n    K = \"k\",\r\n    L = \"l\",\r\n    M = \"m\",\r\n    O = \"o\",\r\n    P = \"p\",\r\n    Q = \"q\",\r\n    R = \"r\",\r\n    S = \"s\",\r\n    T = \"t\",\r\n    U = \"u\",\r\n    V = \"v\",\r\n    W = \"w\",\r\n    X = \"x\",\r\n    Y = \"y\",\r\n    Z = \"z\",\r\n    ENTER = \"Enter\",\r\n    BACKSPACE = \"Backspace\",\r\n    ARROW_DOWN = \"ArrowDown\",\r\n    ARROW_LEFT = \"ArrowLeft\",\r\n    ARROW_RIGHT = \"ArrowRight\",\r\n    ARROW_UP = \"ArrowUp\",\r\n    SHIFT = \"Shift\"\r\n}\r\n\r\nconst KEYS_COUNT = Object.keys(Key).length;\r\n\r\nenum KeyModifier {\r\n    Alt = \"Alt\",\r\n    Control = \"Control\",\r\n    Shift = \"Shift\",\r\n}\r\n\r\nfunction displayKeyModifier(mode: KeyModifier): string {\r\n    switch (mode) {\r\n        case KeyModifier.Control:\r\n            return \"Ctrl\";\r\n        default:\r\n            return mode;\r\n    }\r\n}\r\n\r\nenum MouseButton {\r\n    LEFT = 0,\r\n    WHEEL = 1,\r\n    RIGHT = 2,\r\n    FORWARD = 3,\r\n    BACK = 4\r\n}\r\n\r\nconst MOUSE_BUTTONS_COUNT = Object.keys(MouseButton).length;\r\n\r\nconst MOUSE_BUTTONS_INDICES = Object.freeze(\r\n    Object.values(MouseButton).reduce(\r\n        (map, button, index) => Object.assign(map, {[button]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst KEYS_INDICES = Object.freeze(\r\n    Object.values(Key).reduce(\r\n        (map, key, index) => Object.assign(map, {[key]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst INPUT_EVENT_UP = 0;\r\nconst INPUT_EVENT_DOWN = 1;\r\nconst INPUT_EVENT_REPEAT = 2;\r\n\r\nconst testKeyModifier = (mod: KeyModifier, event: KeyboardEvent) => {\r\n    switch (mod) {\r\n        case \"Alt\":\r\n            return event.altKey;\r\n        case \"Control\":\r\n            return event.ctrlKey;\r\n        case \"Shift\":\r\n            return event.shiftKey;\r\n        default:\r\n            return () => true;\r\n    }\r\n}\r\n\r\nclass HotKey {\r\n\r\n    readonly key: Key;\r\n    readonly mod1?: KeyModifier;\r\n    readonly mod2?: KeyModifier;\r\n\r\n    constructor(key: Key, mod1?: KeyModifier, mod2?: KeyModifier) {\r\n        this.key = key;\r\n        this.mod1 = mod1;\r\n        this.mod2 = mod2;\r\n    }\r\n\r\n    toString(): string {\r\n        return `${this.mod1 ? `${displayKeyModifier(this.mod1)}+` : ''}${this.mod2 ? `${displayKeyModifier(this.mod2)}+` : ''}${(this.key.length === 1) ? this.key.toUpperCase() : this.key}`;\r\n    }\r\n\r\n    /*static fromString(str: string): HotKey | null {\r\n        const keys = Object.values(Key);\r\n        const keyModifiers = Object.values(KeyModifier);\r\n\r\n        let key: Key;\r\n        let mod1: KeyModifier | undefined;\r\n        let mod2: KeyModifier | undefined;\r\n\r\n        const keysStr = str.split(' + ');\r\n        if (keysStr.length >= 1) {\r\n            key = keysStr[0] as Key;\r\n            if (!keys.indexOf(key)) {\r\n                return null;\r\n            }\r\n            if (keysStr.length >= 2) {\r\n                mod1 = keysStr[1] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod1)) {\r\n                    return null;\r\n                }\r\n            }\r\n            if (keysStr.length >= 3) {\r\n                mod2 = keysStr[2] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod2)) {\r\n                    return null;\r\n                }\r\n            }\r\n            return new HotKey(key, mod1, mod2);\r\n        }\r\n        return null;\r\n    }*/\r\n\r\n    test(event: KeyboardEvent): boolean {\r\n        return ((!this.mod1 || testKeyModifier(this.mod1, event)) && (!this.mod2 || testKeyModifier(this.mod2, event)) && event.key === this.key);\r\n    }\r\n}\r\n\r\ninterface Input {\r\n    initialize(canvas: HTMLCanvasElement): void;\r\n    clear(): void;\r\n    getKey(key: Key): boolean;\r\n    getKeyUp(key: Key): boolean;\r\n    getKeyDown(key: Key): boolean;\r\n    getMouseButton(button: MouseButton): boolean;\r\n    getPointerPosition(): Vector2;\r\n    getPointerScreenPosition(): Vector2;\r\n    getWheelDelta(): number;\r\n    getMouseButtonDown(button: MouseButton): boolean;\r\n    getMouseButtonUp(button: MouseButton): boolean;\r\n}\r\n\r\nclass InputBase implements Input {\r\n    private readonly keyFlags = new Array<boolean>(3 * KEYS_COUNT).fill(false);\r\n    private readonly mouseFlags = new Array<boolean>(3 * MOUSE_BUTTONS_COUNT).fill(false);\r\n    private readonly pointerPosition = new Vector2();\r\n    private wheelDelta = 0;\r\n    private canvas: HTMLCanvasElement | null = null;\r\n    private canvasRectangle: DOMRect | null = null;\r\n\r\n    initialize(canvas: HTMLCanvasElement): void {\r\n        this.canvas = canvas;\r\n        this.canvasRectangle = canvas.getBoundingClientRect();\r\n        canvas.addEventListener(\"pointerdown\", this);\r\n        canvas.addEventListener(\"pointerup\", this);\r\n        canvas.addEventListener(\"contextmenu\", this);\r\n        canvas.addEventListener(\"pointermove\", this);\r\n        canvas.addEventListener(\"wheel\", this);\r\n        canvas.addEventListener(\"keydown\", this);\r\n        canvas.addEventListener(\"keyup\", this);\r\n        canvas.addEventListener(\"focusout\", this);\r\n    }\r\n\r\n    getCanvasRect(): DOMRect {\r\n        const rect = this.canvasRectangle;\r\n        if (rect === null) {\r\n            throw new Error(`Input manager not initialized.`);\r\n        }\r\n        return rect;\r\n    }\r\n\r\n    clear(): void {\r\n        this.keyFlags.fill(false, 0, INPUT_EVENT_REPEAT * KEYS_COUNT);\r\n        this.mouseFlags.fill(false, 0, INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT);\r\n        this.wheelDelta = 0;\r\n    }\r\n    \r\n    handleEvent(event: Event): void {\r\n        let eventIndex = -1;\r\n        switch (event.type) {\r\n            case \"pointerdown\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"pointerup\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"pointermove\":\r\n                const canvasRect = this.getCanvasRect();\r\n                this.pointerPosition.setValues(\r\n                    ((event as MouseEvent).clientX - canvasRect.left),\r\n                    ((event as MouseEvent).clientY - canvasRect.top),\r\n                );\r\n                break;\r\n            case \"wheel\":\r\n                this.wheelDelta = (event as WheelEvent).deltaY / 100;\r\n                break;\r\n            case \"keydown\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"keyup\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"focusout\":\r\n                this.keyFlags.fill(false);\r\n                this.mouseFlags.fill(false);\r\n                this.wheelDelta = 0;\r\n                this.pointerPosition.setZeros();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    /*static getAxis(axisName: string) {\r\n\r\n    }\r\n\r\n    static getButton(buttonName: string) {\r\n\r\n    }\r\n\r\n    static getButtonUp(buttonName: string) {\r\n\r\n    }\r\n\r\n    static getButtonDown(buttonName: string) {\r\n\r\n    }*/\r\n\r\n    getKey(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getKeyUp(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getKeyDown(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getMouseButton(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    getPointerPosition(): Vector2 {\r\n        return this.pointerPosition.clone();\r\n    }\r\n\r\n    getPointerScreenPosition(): Vector2 {\r\n        const positionAray = this.pointerPosition.array;\r\n        const canvasRect = this.getCanvasRect();\r\n        const x = (positionAray[0] / canvasRect.width) * 2 - 1;\r\n        const y = (positionAray[1] / canvasRect.height) * 2 - 1;\r\n        return new Vector2([x, y]);\r\n    }\r\n\r\n    getWheelDelta(): number {\r\n        return this.wheelDelta;\r\n    }\r\n\r\n    getMouseButtonDown(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    getMouseButtonUp(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n}\r\n\r\nvar Input: Input = new InputBase();","import { Vector3 } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport class Space {\r\n\r\n    private constructor () {};\r\n    \r\n    static readonly origin:      Vector3 = new Vector3([ 0,  0,  0]);\r\n    static readonly right:       Vector3 = new Vector3([ 1,  0,  0]);\r\n    static readonly left:        Vector3 = new Vector3([-1,  0,  0]);\r\n    static readonly up:          Vector3 = new Vector3([ 0,  1,  0]);\r\n    static readonly down:        Vector3 = new Vector3([ 0, -1,  0]);\r\n    static readonly forward:     Vector3 = new Vector3([ 0,  0,  1]);\r\n    static readonly backward:    Vector3 = new Vector3([ 0,  0, -1]);\r\n}","export { ColorValues };\r\nexport { Color };\r\n\r\ntype ColorValues = [number, number, number];\r\n\r\ninterface ColorConstructor {\r\n    readonly prototype: Color;\r\n    new(): Color;\r\n    new(r: number, g: number, b: number): Color;\r\n    new(r: number, g: number, b: number, a: number): Color;\r\n    readonly BLACK: Color;\r\n    readonly RED: Color;\r\n    readonly GREEN: Color;\r\n    readonly BLUE: Color;\r\n    readonly WHITE: Color;\r\n    array(...colors: Color[]): number[];\r\n    lerp(a: Color, b: Color, t: number): Color;\r\n    rgb(r: number, g: number, b: number): Color;\r\n    rgba(rgb: Color): Color;\r\n    rgba(rgb: Color, a: number): Color;\r\n    rgba(r: number, g: number, b: number, a: number): Color;\r\n}\r\n\r\ninterface Color extends ArrayLike<number>, Iterable<number> {\r\n    readonly array: Float32Array;\r\n    readonly length: number;\r\n    0: number;\r\n    1: number;\r\n    2: number;\r\n    3: number;\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n    a: number;\r\n    copy(color: Color): Color;\r\n    clone(): Color;\r\n    getValues(): ColorValues;\r\n    setValues(\r\n        r: number,\r\n        g: number,\r\n        b: number,\r\n        a?: number\r\n    ): Color;\r\n    lerp(color: Color, t: number): Color;\r\n    normalize(): Color;\r\n}\r\n\r\nclass ColorBase implements Color {\r\n    [index: number]: number;\r\n    readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n    constructor(r: number, g: number, b: number)\r\n    constructor(r: number, g: number, b: number, a: number)\r\n    constructor(r?: number, g?: number, b?: number, a?: number) {\r\n\t\tthis.array = a !== undefined ? new Float32Array([\r\n            r ?? 0, g ?? 0, b ?? 0, a\r\n        ]) : new Float32Array([\r\n            r ?? 0, g ?? 0, b ?? 0\r\n        ]);\r\n    }\r\n    \r\n    static readonly BLACK = new ColorBase(0, 0, 0);\r\n    static readonly RED = new ColorBase(1, 0, 0);\r\n    static readonly GREEN = new ColorBase(0, 1, 0);\r\n    static readonly BLUE = new ColorBase(0, 0, 1);\r\n    static readonly WHITE = new ColorBase(1, 1, 1);\r\n\r\n    static rgb(r: number, g: number, b: number): Color {\r\n        return new Color(r, g, b);\r\n    }\r\n\r\n    static rgba(rgb: Color): Color;\r\n    static rgba(rgb: Color, a: number): Color;\r\n    static rgba(r: number, g: number, b: number, a: number): Color;\r\n    static rgba(rgbOrR: any, aOrG?: number, b?: number, a?: number): Color {\r\n        if (rgbOrR instanceof Color) {\r\n            const {r, g, b} = rgbOrR;\r\n            return aOrG !== undefined ?\r\n                new Color(r, g, b, aOrG) :\r\n                new Color(r, g, b, 1.0);\r\n        }\r\n        else {\r\n            return new Color(rgbOrR, aOrG!, b!, a!);\r\n        }\r\n    }\r\n\r\n    static array(...colors: Color[]): number[] {\r\n        const a = new Array<number>(colors.length * 4);\r\n        let c;\r\n        let i = 0;\r\n        for (const color of colors) {\r\n            c = color.array;\r\n            a[i + 0] = c[0];\r\n            a[i + 1] = c[1];\r\n            a[i + 2] = c[2];\r\n            i += 3;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    get length(): number {\r\n        return 3;\r\n    }\r\n\r\n    get r(): number {\r\n        return this.array[0];\r\n    }\r\n\r\n    set r(r: number) {\r\n        this.array[0] = r;\r\n    }\r\n\r\n    get g(): number {\r\n        return this.array[1];\r\n    }\r\n\r\n    set g(g: number) {\r\n        this.array[1] = g;\r\n    }\r\n\r\n    get b(): number {\r\n        return this.array[2];\r\n    }\r\n\r\n    set b(b: number) {\r\n        this.array[2] = b;\r\n    }\r\n\r\n    get a(): number {\r\n        return this.array[3];\r\n    }\r\n\r\n    set a(a: number) {\r\n        this.array[3] = a;\r\n    }\r\n\r\n    get 0(): number {\r\n        return this.array[0];\r\n    }\r\n\r\n    set 0(r: number) {\r\n        this.array[0] = r;\r\n    }\r\n\r\n    get 1(): number {\r\n        return this.array[1];\r\n    }\r\n\r\n    set 1(g: number) {\r\n        this.array[1] = g;\r\n    }\r\n\r\n    get 2(): number {\r\n        return this.array[2];\r\n    }\r\n\r\n    set 2(b: number) {\r\n        this.array[2] = b;\r\n    }\r\n\r\n    get 3(): number {\r\n        return this.array[3];\r\n    }\r\n\r\n    set 3(a: number) {\r\n        this.array[3] = a;\r\n    }\r\n\r\n    setValues(r: number, g: number, b: number): this {\r\n\t\tconst {array} = this;\r\n\r\n\t\tarray[0] = r;\r\n\t\tarray[1] = g;\r\n\t\tarray[2] = b;\r\n\r\n\t\treturn this;\r\n    }\r\n    \r\n    getValues(): ColorValues {\r\n\t\tconst {array} = this;\r\n\t\t\r\n\t\treturn [\r\n\t\t\tarray[0], array[1], array[2]\r\n\t\t];\r\n\t}\r\n    \r\n    copy(color: Color): this {\r\n        const {array} = this;\r\n        const {r, g, b} = color;\r\n\r\n        array[0] = r;\r\n        array[1] = g;\r\n        array[2] = b;\r\n\r\n        return this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn <this>(new ColorBase()).copy(this);\r\n    }\r\n\r\n    static lerp(a: Color, b: Color, t: number): Color {\r\n\t\treturn a.lerp(b, t);\r\n\t}\r\n    \r\n    lerp(color: Color, t: number): this {\r\n        const {array} = this;\r\n        const {r, g, b} = color;\r\n\r\n\t\tarray[0] = t * (r - array[0]);\r\n\t\tarray[1] = t * (g - array[1]);\r\n\t\tarray[2] = t * (b - array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n    \r\n\tnormalize(): this {\r\n\t\tconst {array} = this;\r\n\t\tconst length = 255;\r\n        array[0] /= length;\r\n        array[1] /= length;\r\n        array[2] /= length;\r\n\t\treturn this;\r\n\t}\r\n\r\n    [Symbol.iterator] (): Iterator<number> {\r\n\t\tconst {array} = this;\r\n\t\tconst {length} = array;\r\n\t\tlet i = 0;\r\n\t\treturn {\r\n\t\t\tnext() {\r\n\t\t\t\tif (i < length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: array[i++], done: false\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: undefined, done: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst Color: ColorConstructor = ColorBase;","export { PoolAutoExtendPolicy };\r\nexport { Pool };\r\nexport { PoolBase };\r\n\r\nenum PoolAutoExtendPolicy {\r\n    NO_AUTO_EXTEND = 0,\r\n    AUTO_EXTEND_ONE = 1,\r\n    AUTO_EXTEND_POW2 = 2\r\n}\r\n\r\ninterface PoolConstructor {\r\n    readonly prototype: Pool;\r\n    new<O extends object>(constructor: Constructor<O>, policy?: PoolAutoExtendPolicy): Pool<O>;\r\n}\r\n\r\ninterface Pool<O extends object = object> {\r\n    readonly ctor: Constructor<O>;\r\n    readonly autoExtendPolicy: PoolAutoExtendPolicy;\r\n    autoExtend(): void;\r\n    acquire(count: number): O[];\r\n    release(...args: any[]): void;\r\n    extend(count: number): void;\r\n    clear(): void;\r\n}\r\n\r\nclass PoolBase<O extends object = object> implements Pool<O> {\r\n    readonly ctor: Constructor<O>;\r\n    autoExtendPolicy: PoolAutoExtendPolicy;\r\n    autoExtendTicks: number;\r\n\r\n    constructor(constructor: Constructor<O>, policy?: PoolAutoExtendPolicy) {\r\n        this.ctor = constructor;\r\n        this.autoExtendPolicy = policy || PoolAutoExtendPolicy.AUTO_EXTEND_ONE;\r\n        this.autoExtendTicks = 0;\r\n    }\r\n\r\n    autoExtend(): void {\r\n        switch (this.autoExtendPolicy) {\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_ONE:\r\n                this.extend(1);\r\n                break;\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_POW2:\r\n                this.extend(Math.pow(2, this.autoExtendTicks));\r\n                break;\r\n        }\r\n        this.autoExtendTicks++;\r\n    }\r\n\r\n    acquire(count: number): O[] {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    release(...args: any[]): void {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    extend(count: number): void {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    clear(): void {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n}\r\n\r\nvar Pool: PoolConstructor = PoolBase;","import { PoolAutoExtendPolicy, PoolBase, Pool } from \"./Pool\";\r\n\r\nexport { StackPool };\r\n\r\ninterface StackPool<O extends object = object> extends Pool<O> {\r\n    release(count: number): void;\r\n}\r\n\r\ninterface StackPoolConstructor {\r\n    readonly prototype: StackPool;\r\n    new<O extends object>(constructor: Constructor<O>, options?: {args?: ConstructorParameters<Constructor<O>>, policy?: PoolAutoExtendPolicy, size?: number}): StackPool<O>;\r\n}\r\n\r\nclass StackPoolBase<O extends object = object> extends PoolBase<O> implements Pool<O> {\r\n    objects: Array<O>;\r\n    top: number;\r\n\r\n    constructor(constructor: Constructor<O>, options?: {args?: any, policy?: PoolAutoExtendPolicy, size?: number}) {\r\n        super(constructor, options?.policy);\r\n        this.objects = new Array(options?.size || 0).fill(0).map(() => {\r\n            return new this.ctor(options?.args);\r\n        });\r\n        this.top = 0;\r\n    }\r\n    \r\n    acquire(count: number): O[] {\r\n        const top = this.top;\r\n        const target = top + count;\r\n\r\n        if (this.autoExtendPolicy) {\r\n            while (this.objects.length < target) {\r\n                this.autoExtend();\r\n            }\r\n        }\r\n        this.top = target;\r\n        \r\n        return this.objects.slice(top, target);\r\n    }\r\n\r\n    release(count: number): void {\r\n        const top = this.top;\r\n        if (count > top) {\r\n            console.warn(\"Releasing under zero.\");\r\n        }\r\n        this.top = Math.max(top - count, 0);\r\n    }\r\n\r\n    extend(count: number): void {\r\n        this.objects.push(...Array(count).fill(0).map(() => {\r\n            return new this.ctor();\r\n        }));\r\n    }\r\n    \r\n    clear(): void {\r\n        this.objects = [];\r\n        this.top = 0;\r\n        this.autoExtendTicks = 0;\r\n    }\r\n}\r\n\r\nvar StackPool: StackPoolConstructor = StackPoolBase;","import { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Matrix4 } from \"../../algebra/matrices/Matrix4\";\r\nimport { Vector3, Vector3Constructor } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport { Vector3Pool };\r\n\r\nclass Vector3PoolBase extends StackPool<Vector3> implements StackPool<Vector3> {\r\n    private _buffer: Float32Array;\r\n    private _bufferViews: Array<WritableArrayLike<number>>;\r\n    private _extensions: Array<WritableArrayLike<number>>;\r\n\r\n    constructor(ctor: Vector3Constructor, options?: any) {\r\n        super(ctor, options);\r\n        this._buffer = new Float32Array(0);\r\n        this._bufferViews = Array(options?.size || 0).fill(0).map(() => {\r\n            return this._buffer.subarray();\r\n        });\r\n        this._extensions = [];\r\n    }\r\n}\r\n\r\nconst Vector3Pool: StackPool<Vector3> = new Vector3PoolBase(Vector3);","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3 } from \"../../algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\n\r\nexport { Plane };\r\nexport { PlaneInjector };\r\nexport { PlaneBase };\r\n\r\ninterface Plane {\r\n    readonly normal: Vector3;\r\n    constant: number;\r\n    copy(plane: Plane): Plane;\r\n    set(x: number, y: number, z: number, constant: number): Plane;\r\n    setFromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n\tsetFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n\tsetFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): Plane;\r\n\tdistanceToPoint(point: Vector3): number;\r\n    normalized(): Plane;\r\n}\r\n\r\ninterface PlaneConstructor {\r\n    readonly prototype: Plane;\r\n    new(): Plane;\r\n    new(normal: Vector3, constant: number): Plane;\r\n    new(normal?: Vector3, constant?: number): Plane;\r\n    fromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n    fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n    fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane;\r\n    intersection(a: Plane, b: Plane, c: Plane, result: Vector3): Vector3;\r\n}\r\n\r\nclass PlaneBase implements Plane {\r\n\r\n    readonly normal: Vector3;\r\n    constant: number;\r\n\r\n    constructor()\r\n    constructor(normal: Vector3, constant: number)\r\n    constructor(normal?: Vector3, constant?: number) {\r\n        this.normal = normal ?? new Vector3();\r\n        this.constant = constant ?? 0;\r\n    }\r\n\r\n    static fromNormalAndConstant(normal: Vector3, constant: number): Plane {\r\n        return new PlaneBase().setFromNormalAndConstant(normal, constant);\r\n    }\r\n\r\n\tstatic fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane {\r\n\t\treturn new PlaneBase().setFromNormalAndCoplanarPoint(normal, point);\r\n\t}\r\n\r\n\tstatic fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane {\r\n        return new PlaneBase().setFromCoplanarPoints(a, b, c);\r\n    }\r\n\r\n    copy(plane: PlaneBase): PlaneBase {\r\n        this.normal.copy(plane.normal);\r\n        this.constant = plane.constant;\r\n        return this;\r\n    }\r\n\r\n    set(x: number, y: number, z: number, constant: number): PlaneBase {\r\n        this.normal.setValues(x, y, z);\r\n        this.constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n    setFromNormalAndConstant(normal: Vector3, constant: number): PlaneBase {\r\n        this.normal.copy(normal);\r\n        this.constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n\tsetFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): PlaneBase {\r\n\t\tthis.normal.copy(normal);\r\n        this.constant = -point.dot(this.normal);\r\n        \r\n        return this;\r\n\t}\r\n\r\n\tsetFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): PlaneBase {\r\n        const normal = point3.clone();\r\n        const [temp] = Vector3Pool.acquire(1);\r\n        temp.copy(point1);\r\n        normal.sub(point2).cross(temp.sub(point2)).normalize();\r\n        this.setFromNormalAndCoplanarPoint(normal, point1);\r\n        Vector3Pool.release(1);\r\n\t\treturn this;\r\n    }\r\n\r\n\tdistanceToPoint(point: Vector3): number {\r\n\t\treturn this.normal.dot(point) + this.constant;\r\n\t}\r\n    \r\n    normalized(): PlaneBase {\r\n        const inverseNormalLength = 1.0 / this.normal.length();\r\n        this.normal.scale(inverseNormalLength);\r\n\t\tthis.constant *= inverseNormalLength;\r\n\t\treturn this;\r\n\t}\r\n\r\n    static intersection(a: Plane, b: Plane, c: Plane, result: Vector3): Vector3 {\r\n        const {normal: aNormal, constant: aConstant} = a;\r\n        const {normal: bNormal, constant: bConstant} = b;\r\n        const {normal: cNormal, constant: cConstant} = c;\r\n        result.copy(bNormal).cross(cNormal);\r\n        const f = -aNormal.dot(result);\r\n        const [v1x, v1y, v1z] = result.scale(aConstant).array;\r\n        result.copy(cNormal).cross(aNormal);\r\n        const [v2x, v2y, v2z] = result.scale(bConstant).array;\r\n        result.copy(aNormal).cross(bNormal);\r\n        const [v3x, v3y, v3z] = result.scale(cConstant).array;\r\n        result.setValues(\r\n          (v1x + v2x + v3x) / f,\r\n          (v1y + v2y + v3y) / f,\r\n          (v1z + v2z + v3z) / f\r\n        );\r\n        return result;\r\n    }\r\n}\r\n\r\nvar Plane: PlaneConstructor = PlaneBase;\r\nconst PlaneInjector: Injector<PlaneConstructor> = new Injector({\r\n\tdefaultCtor: PlaneBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: PlaneConstructor) => {\r\n\t\t\tPlane = ctor;\r\n\t\t}\r\n});","import { GeometryBuffer } from \"../scenes/geometries/GeometryBuffer\";\r\n\r\nexport { Mesh };\r\n\r\ninterface MeshProperties {\r\n    geometry: GeometryBuffer;\r\n    material: Object;\r\n}\r\n\r\ninterface MeshConstructor {\r\n    prototype: Mesh;\r\n    new(properties: MeshProperties): Mesh;\r\n}\r\n\r\ninterface Mesh {\r\n    geometry: GeometryBuffer;\r\n    material: Object;\r\n}\r\n\r\nclass MeshBase implements Mesh {\r\n    geometry: GeometryBuffer;\r\n    material: Object;\r\n\r\n    constructor(properties: MeshProperties) {\r\n        this.geometry = properties.geometry;\r\n        this.material = properties.material;\r\n    }\r\n}\r\n\r\nvar Mesh: MeshConstructor = MeshBase;","export { Buffer };\r\n\r\nexport enum BufferDataUsage {\r\n    STATIC_DRAW = 0x88E4,\r\n    DYNAMIC_DRAW = 0x88E8,\r\n    STREAM_DRAW = 0x88E0,\r\n    STATIC_READ = 0x88E5,\r\n    DYNAMIC_READ = 0x88E9,\r\n    STREAM_READ = 0x88E1,\r\n    STATIC_COPY = 0x88E6,\r\n    DYNAMIC_COPY = 0x88EA,\r\n    STREAM_COPY = 0x88E2\r\n}\r\n\r\nexport enum BufferTarget {\r\n    ARRAY_BUFFER = 0x8892,\r\n    ELEMENT_ARRAY_BUFFER = 0x8893,\r\n    TRANSFORM_FEEDBACK_BUFFER = 0x8C8E,\r\n    UNIFORM_BUFFER = 0x8A11,\r\n}\r\n\r\ntype Buffer = {\r\n    internalBuffer: WebGLBuffer;\r\n    target: BufferTarget;\r\n    usage: BufferDataUsage;\r\n    byteLength: number;\r\n}","import { BufferDataUsage, Buffer } from \"./WebGLBufferUtilities\";\r\nimport { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\n\r\nexport { VertexAttributeValue };\r\nexport { VertexAttributeProperties };\r\nexport { VertexArrayProperties };\r\nexport { VertexArrayValues };\r\nexport { VertexArray };\r\nexport { WebGLVertexArrayUtilities };\r\n\r\nexport enum DrawMode {\r\n    POINTS = 0x0000,\r\n    LINES = 0x0001,\r\n    LINE_LOOP = 0x0002,\r\n    LINE_STRIP = 0x0003,\r\n    TRIANGLES = 0x0004,\r\n    TRIANGLE_STRIP = 0x0005,\r\n    TRIANGLE_FAN = 0x0006\r\n}\r\n\r\nexport enum DataComponentType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406\r\n}\r\n\r\nexport enum AttributeDataType {\r\n    VEC2 = \"VEC2\",\r\n    VEC3 = \"VEC3\",\r\n    VEC4 = \"VEC4\",\r\n}\r\n\r\nexport enum ElementArrayDataType {\r\n    UNSIGNED_BYTE = 0x1401,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    UNSIGNED_INT = 0x1405\r\n}\r\n\r\nexport type AttributeArray =\r\n    Float32Array | Int32Array | Uint32Array |\r\n    Int16Array | Uint16Array |\r\n    Int8Array | Uint8Array;\r\n\r\ntype VertexAttributeProperties = {\r\n    type: AttributeDataType;\r\n    array?: AttributeArray;\r\n    componentType?: DataComponentType;\r\n    byteLength?: number;\r\n    buffer?: number;\r\n    divisor?: number;\r\n    normalize?: boolean;\r\n    constant?: boolean;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n}\r\n\r\ntype VertexAttributeValue = {\r\n    array: AttributeArray;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n    constant?: boolean;\r\n}\r\n\r\ntype VertexAttribute = {\r\n    divisor: number;\r\n    componentType: DataComponentType;\r\n    numComponents: number;\r\n    constant: boolean;\r\n    constantValue?: AttributeArray;\r\n    byteOffset: number;\r\n    bytesPerElement: number;\r\n    type: AttributeDataType;\r\n    normalize: boolean;\r\n}\r\n\r\ntype VertexArrayProperties = {\r\n    vertexBuffers?: (VertexArrayBuffer | VertexArrayBufferProperties)[];\r\n    vertexAttributes?: Record<string, VertexAttributeProperties>;\r\n    elementBuffer?: VertexElementArrayBuffer | VertexElementArrayBufferProperties;\r\n    elementIndices?: Uint8Array | Uint16Array | Uint32Array;\r\n}\r\n\r\ntype VertexArrayValues = {\r\n    attributes: Record<string, VertexAttributeValue>;\r\n    drawMode?: DrawMode;\r\n    elementsCount?: number;\r\n    instanceCount?: number;\r\n}\r\n\r\ntype VertexArray = {\r\n    internalVertexArray: WebGLVertexArrayObject;\r\n    program: Program;\r\n    verticesBuffers: VertexArrayBuffer[];\r\n    elementBuffer?: VertexElementArrayBuffer;\r\n}\r\n\r\nexport type VertexArrayBuffer = Buffer & {\r\n    vertexAttributes: Record<string, VertexAttribute>;\r\n    byteLength: number;\r\n    byteStride: number;\r\n    interleaved: boolean;\r\n}\r\n\r\nexport type VertexArrayBufferProperties = {\r\n    usage?: BufferDataUsage;\r\n    interleaved?: boolean;\r\n}\r\n\r\nexport type VertexElementArrayBuffer = Buffer & {\r\n    indexType: ElementArrayDataType;\r\n};\r\n\r\nexport type VertexElementArrayBufferProperties = {\r\n    usage?: BufferDataUsage;\r\n}\r\n\r\nexport type VertexArrayBufferLayout = Record<string, {\r\n    byteOffset: number;\r\n    bytesPerElement: number;\r\n}>;\r\n\r\nclass WebGLVertexArrayUtilities {\r\n\r\n    static getDataTypeNumComponents(type: AttributeDataType): number {\r\n        switch (type) {\r\n            case AttributeDataType.VEC2:\r\n                return 2;\r\n            case AttributeDataType.VEC3:\r\n                return 3;\r\n            case AttributeDataType.VEC4:\r\n                return 4;\r\n        }\r\n    }\r\n\r\n    static getComponentTypeArrayConstructor(type: DataComponentType):\r\n        Float32ArrayConstructor | Int32ArrayConstructor | Uint32ArrayConstructor |\r\n        Int16ArrayConstructor | Uint16ArrayConstructor |\r\n        Int8ArrayConstructor | Uint8ArrayConstructor {\r\n        switch (type) {\r\n            case DataComponentType.FLOAT:\r\n                return Float32Array;\r\n            case DataComponentType.BYTE:\r\n                return Uint8Array;\r\n            case DataComponentType.UNSIGNED_BYTE:\r\n                return Uint8Array;\r\n            case DataComponentType.SHORT:\r\n                return Int16Array;\r\n            case DataComponentType.UNSIGNED_SHORT:\r\n                return Uint16Array;\r\n            case DataComponentType.INT:\r\n                return Int32Array;\r\n            case DataComponentType.UNSIGNED_INT:\r\n                return Uint32Array;\r\n        }\r\n    }\r\n\r\n    static getArrayComponentType(array: AttributeArray): DataComponentType {\r\n        if (array instanceof Float32Array) {\r\n            return DataComponentType.FLOAT;\r\n        }\r\n        else if (array instanceof Int32Array) {\r\n            return DataComponentType.INT;\r\n        }\r\n        else if (array instanceof Uint32Array) {\r\n            return DataComponentType.UNSIGNED_INT;\r\n        }\r\n        else if (array instanceof Int16Array) {\r\n            return DataComponentType.SHORT;\r\n        }\r\n        else if (array instanceof Uint16Array) {\r\n            return DataComponentType.UNSIGNED_SHORT;\r\n        }\r\n        else if (array instanceof Int8Array) {\r\n            return DataComponentType.BYTE;\r\n        }\r\n        else {\r\n            return DataComponentType.UNSIGNED_BYTE;\r\n        }\r\n    }\r\n\r\n    static createVertexElementArrayBuffer(gl: WebGL2RenderingContext, indices: Uint8Array | Uint16Array | Uint32Array): VertexElementArrayBuffer | null {\r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n        const usage = BufferDataUsage.STATIC_READ;\r\n        const target = gl.ELEMENT_ARRAY_BUFFER;\r\n        const {byteLength} = indices;\r\n        const indexType = this.getElementArrayBufferType(indices);\r\n\r\n        gl.bindBuffer(target, internalBuffer);\r\n        gl.bufferData(target, indices, usage);\r\n\r\n        return {\r\n            internalBuffer,\r\n            target,\r\n            usage,\r\n            byteLength,\r\n            indexType\r\n        };\r\n    }\r\n    \r\n    static createVertexArrayBuffer(gl: WebGL2RenderingContext, program: Program, attributes: Record<string, VertexAttributeProperties>, usage?: BufferDataUsage, interleaved?: boolean): VertexArrayBuffer | null {\r\n        const {internalProgram} = program;\r\n\r\n        const DEFAULT_USAGE = BufferDataUsage.STATIC_READ;\r\n        const DEFAULT_INTERLEAVED = false;\r\n        interleaved = interleaved ?? DEFAULT_INTERLEAVED;\r\n        usage = usage ?? DEFAULT_USAGE;\r\n\r\n        const attributesEntries = attributes ? Object.entries(attributes) : null;\r\n        const byteLength = (attributesEntries !== null) ? attributesEntries.reduce(\r\n            (byteLength, [_, attribute]) => byteLength + (attribute.array?.byteLength ?? attribute.byteLength ?? 0), 0\r\n        ) : 0;\r\n        \r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n\r\n        const target = gl.ARRAY_BUFFER;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        const dataBuffer = new ArrayBuffer(byteLength);\r\n        let byteStride = 0;\r\n\r\n        const vertexAttributes: Record<string, VertexAttribute> = {};\r\n        if (attributesEntries !== null) {\r\n\r\n            attributesEntries.forEach(([_, attribute]) => {\r\n                const {array, componentType, byteLength} = attribute;\r\n                if (!array && !(componentType && byteLength)) {\r\n                    throw new Error(\"Every attribute requires either an array or a componentType and a byteLength\");\r\n                }\r\n            });\r\n\r\n            byteStride = interleaved ? attributesEntries.reduce(\r\n                (stride, [_, attribute]) => {\r\n                    const {constant} = attribute;\r\n                    if (!constant) {\r\n                        const {array, type, componentType} = attribute;\r\n                        const {BYTES_PER_ELEMENT} = array ?? this.getComponentTypeArrayConstructor(componentType!);\r\n                        const numComponents = this.getDataTypeNumComponents(type);\r\n                        return stride + BYTES_PER_ELEMENT * numComponents;\r\n                    }\r\n                    return stride;\r\n                }, 0\r\n            ) : 0;\r\n            const bufferSlices = interleaved ? Math.trunc(byteLength / byteStride) : 0;\r\n            let byteOffset = 0;\r\n            let constantValue: AttributeArray | undefined;\r\n    \r\n            attributesEntries.forEach(([attributeName, attribute]) => {\r\n                const {array, type} = attribute;\r\n                let {constant, divisor, normalize, componentType} = attribute;\r\n                constant = constant ?? false;\r\n                componentType = array?this.getArrayComponentType(array) : componentType!;\r\n\r\n                const location = gl.getAttribLocation(internalProgram, attributeName);\r\n                if (location === -1) {\r\n                    console.warn(`Attribute ${attributeName} could not be located.`);\r\n                    return;\r\n                }\r\n\r\n                const numComponents = this.getDataTypeNumComponents(type);\r\n                divisor = divisor ?? 0;\r\n                normalize = normalize ?? false;\r\n                \r\n                gl.vertexAttribPointer(location, numComponents, componentType, normalize, byteStride, byteOffset);\r\n                if (divisor > 0) {\r\n                    gl.vertexAttribDivisor(location, divisor);\r\n                }\r\n                if (constant) {\r\n                    if (!array) {\r\n                        throw new Error(\"constant flag requires an array parameter\");\r\n                    }\r\n                    constantValue = array;\r\n                    switch (numComponents) {\r\n                        case 1:\r\n                            gl.vertexAttrib1fv(location, constantValue);\r\n                            break;\r\n                        case 2:\r\n                            gl.vertexAttrib2fv(location, constantValue);\r\n                            break;\r\n                        case 3:\r\n                            gl.vertexAttrib3fv(location, constantValue);\r\n                            break;\r\n                        case 4:\r\n                            gl.vertexAttrib4fv(location, constantValue);\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    if (!constant) {\r\n                        const {array, type} = attribute;\r\n                        const numComponents = this.getDataTypeNumComponents(type);\r\n                        let byteLength = 0;\r\n                        let bytesPerElement = 0;\r\n                        if (interleaved) {\r\n                            if (array) {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement, byteLength} = array);\r\n                                const bufferArrayConstructor = this.getComponentTypeArrayConstructor(\r\n                                    this.getArrayComponentType(array)\r\n                                );\r\n                                const bufferArray = new bufferArrayConstructor(dataBuffer, byteOffset);\r\n                                const arrayStrideOffset = byteStride / bytesPerElement;\r\n                                for (let i = 0; i < bufferSlices; i++) {\r\n                                    let arraySliceIndex = i * numComponents;\r\n                                    bufferArray.set(\r\n                                        array.slice(\r\n                                            arraySliceIndex,\r\n                                            arraySliceIndex + numComponents\r\n                                        ),\r\n                                        i * arrayStrideOffset\r\n                                    );\r\n                                }\r\n                            }\r\n                            else {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement} = this.getComponentTypeArrayConstructor(componentType!));\r\n                                byteLength = attribute.byteLength!;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (array) {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement, byteLength} = array);\r\n                                const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                                    WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                                );\r\n                                const bufferArray = new bufferArrayConstructor(dataBuffer, byteOffset);\r\n                                bufferArray.set(array);\r\n                            }\r\n                            else {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement} = this.getComponentTypeArrayConstructor(componentType!));\r\n                                byteLength = attribute.byteLength!;\r\n                            }\r\n                        }\r\n                        vertexAttributes[attributeName] = {\r\n                            constantValue,\r\n                            numComponents,\r\n                            divisor,\r\n                            componentType,\r\n                            constant,\r\n                            byteOffset,\r\n                            bytesPerElement,\r\n                            type,\r\n                            normalize\r\n                        };\r\n                        byteOffset += interleaved ? bytesPerElement * numComponents : byteLength;\r\n                    }\r\n                    gl.enableVertexAttribArray(location);\r\n                }\r\n            });\r\n        }\r\n        gl.bufferData(target, dataBuffer, usage);\r\n        return {\r\n            internalBuffer,\r\n            target,\r\n            usage,\r\n            byteLength,\r\n            interleaved,\r\n            byteStride,\r\n            vertexAttributes\r\n        };\r\n    }\r\n\r\n    static setVertexArrayValues(gl: WebGL2RenderingContext, vertexArray: VertexArray, values: VertexArrayValues): void {\r\n        const {attributes, elementsCount} = values;\r\n        \r\n        const attributesRecords = Object.keys(attributes);\r\n        attributesRecords.forEach((attributeRecord) => {\r\n            const {verticesBuffers} = vertexArray;\r\n            const verticesBuffer = verticesBuffers.find(\r\n                (verticesBuffer) => attributeRecord in verticesBuffer.vertexAttributes\r\n            );\r\n            if (verticesBuffer) {\r\n                const {internalBuffer, target, byteStride, interleaved, vertexAttributes} = verticesBuffer;\r\n                const currentArrayBufferBinding = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\r\n                if (currentArrayBufferBinding !== internalBuffer) {\r\n                    gl.bindBuffer(target, internalBuffer);\r\n                }\r\n                const attribute = attributes[attributeRecord];\r\n                const {byteOffset, numComponents} = vertexAttributes[attributeRecord];\r\n                let {array, srcOffset, srcLength} = attribute;\r\n                const {length} = array;\r\n                let dstOffset = byteOffset;\r\n                if (interleaved) {\r\n                    if (srcOffset || srcLength) {\r\n                        array = array.slice(srcOffset ?? 0, srcLength);\r\n                    }\r\n                    const slices = interleaved ? Math.trunc(length / numComponents) : 0;\r\n                    let sliceOffset = 0;\r\n                    for (let i = 0; i < slices; i++) {\r\n                        gl.bufferSubData(target, dstOffset, array, sliceOffset, numComponents);\r\n                        sliceOffset += numComponents;\r\n                        dstOffset += byteStride;\r\n                    }\r\n                }\r\n                else {\r\n                    srcOffset = srcOffset ?? 0;\r\n                    srcLength = srcLength ?? length;\r\n                    gl.bufferSubData(target, 0, array, srcOffset, srcLength);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static setVertexArrayBufferData(gl: WebGL2RenderingContext, buffer: VertexArrayBuffer | VertexElementArrayBuffer, data: ArrayBufferView, dstByteOffset?: number, srcOffset?: number, length?: number): void {\r\n        const {internalBuffer, target} = buffer;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        dstByteOffset = dstByteOffset ?? 0;\r\n        srcOffset = srcOffset ?? 0;\r\n        gl.bufferSubData(target, dstByteOffset, data, srcOffset, length);\r\n    }\r\n\r\n    static createVertexArray(gl: WebGL2RenderingContext, program: Program, vertexArray: VertexArrayProperties): VertexArray | null {\r\n        const {vertexAttributes, vertexBuffers, elementIndices, elementBuffer: elementBufferOrBufferProperties} = vertexArray;\r\n        \r\n        const internalVertexArray = gl.createVertexArray();\r\n        if (internalVertexArray === null) {\r\n            return null;\r\n        }\r\n        gl.bindVertexArray(internalVertexArray);\r\n\r\n        const attributesEntries = vertexAttributes ? Object.entries(vertexAttributes) : [];\r\n        \r\n        const {internalProgram} = program;\r\n        const verticesBuffers: VertexArray[\"verticesBuffers\"] = [];\r\n        if (vertexBuffers) {\r\n            vertexBuffers.forEach((buffer_i, i) => {\r\n                const attributes = Object.fromEntries(attributesEntries.filter(\r\n                    ([_, attribute_i]) => attribute_i.buffer == i \r\n                ));\r\n                let buffer: VertexArrayBuffer | null = null;\r\n                if (buffer_i !== undefined) {\r\n                    if (\"internalBuffer\" in buffer_i) {\r\n                        const {target, internalBuffer} = buffer_i;\r\n                        buffer = buffer_i;\r\n                        gl.bindBuffer(target, internalBuffer);\r\n                        const {byteStride, vertexAttributes} = buffer;\r\n                        Object.entries(vertexAttributes).forEach(([attributeName, setter]) => {\r\n                            const {numComponents, componentType, normalize, byteOffset, divisor, constant, constantValue} = setter;\r\n                            const location = gl.getAttribLocation(internalProgram, attributeName);\r\n                            if (location > -1) {\r\n                                gl.vertexAttribPointer(location, numComponents, componentType, normalize, byteStride, byteOffset);\r\n                                if (divisor > 0) {\r\n                                    gl.vertexAttribDivisor(location, divisor);\r\n                                }\r\n                                if (constant && constantValue) {\r\n                                    switch (numComponents) {\r\n                                        case 1:\r\n                                            gl.vertexAttrib1fv(location, constantValue);\r\n                                            break;\r\n                                        case 2:\r\n                                            gl.vertexAttrib2fv(location, constantValue);\r\n                                            break;\r\n                                        case 3:\r\n                                            gl.vertexAttrib3fv(location, constantValue);\r\n                                            break;\r\n                                        case 4:\r\n                                            gl.vertexAttrib4fv(location, constantValue);\r\n                                            break;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    gl.enableVertexAttribArray(location);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (attributes) {\r\n                        const {usage, interleaved} = buffer_i;\r\n                        buffer = this.createVertexArrayBuffer(gl, program, attributes, usage, interleaved);\r\n                    }\r\n                }\r\n                else if (attributes) {\r\n                    buffer = this.createVertexArrayBuffer(gl, program, attributes);\r\n                }\r\n                if (buffer === null) {\r\n                    return null;\r\n                }\r\n                verticesBuffers.push(buffer);\r\n            });\r\n        }\r\n        else if (vertexAttributes) {\r\n            let buffer: VertexArrayBuffer | null = null;\r\n            buffer = this.createVertexArrayBuffer(gl, program, vertexAttributes);\r\n            if (buffer === null) {\r\n                return null;\r\n            }\r\n            verticesBuffers.push(buffer);\r\n        }\r\n        \r\n        let elementBuffer: VertexElementArrayBuffer | null | undefined = undefined;\r\n        if (elementBufferOrBufferProperties !== undefined) {\r\n            if (\"internalBuffer\" in elementBufferOrBufferProperties) {\r\n                const {target, internalBuffer} = elementBufferOrBufferProperties;\r\n                elementBuffer = elementBufferOrBufferProperties;\r\n                gl.bindBuffer(target, internalBuffer);\r\n            }\r\n            else if (elementIndices) {\r\n                elementBuffer = this.createVertexElementArrayBuffer(gl, elementIndices);\r\n            }\r\n        }\r\n        else if (elementIndices) {\r\n            elementBuffer = this.createVertexElementArrayBuffer(gl, elementIndices);\r\n        }\r\n        if (elementBuffer === null) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            verticesBuffers,\r\n            elementBuffer,\r\n            program,\r\n            internalVertexArray\r\n        };\r\n    }\r\n\r\n    static deleteVertexArray(gl: WebGL2RenderingContext, vertexArray: VertexArray): void {\r\n        const {internalVertexArray} = vertexArray;\r\n        if (gl.isVertexArray(internalVertexArray)) {\r\n            gl.deleteVertexArray(internalVertexArray);\r\n        }\r\n    }\r\n\r\n    static getElementArrayBufferType(indices: Uint8Array | Uint16Array | Uint32Array): ElementArrayDataType {\r\n        if (indices instanceof Uint8Array) {\r\n            return ElementArrayDataType.UNSIGNED_BYTE;\r\n        }\r\n        else if (indices instanceof Uint16Array) {\r\n            return ElementArrayDataType.UNSIGNED_SHORT;\r\n        }\r\n        else {\r\n            return ElementArrayDataType.UNSIGNED_INT;\r\n        }\r\n    }\r\n}","import { Color } from \"../../../libs/graphics/colors/Color\";\r\n\r\nexport { WireframeMaterial };\r\n\r\ndeclare global {\r\n    interface Materials {\r\n        \"wireframe\": WireframeMaterial;\r\n    }\r\n}\r\n\r\ninterface WireframeMaterialProperties {\r\n    color?: Color;\r\n}\r\n\r\ninterface WireframeMaterialConstructor {\r\n    prototype: WireframeMaterial;\r\n    new(properties?: WireframeMaterialProperties): WireframeMaterial;\r\n}\r\n\r\ninterface WireframeMaterial {\r\n    color: Color;\r\n}\r\n\r\nclass WireframeMaterialBase implements WireframeMaterial {\r\n    color: Color;\r\n\r\n    constructor(properties?: WireframeMaterialProperties) {\r\n        const DEFAULT_COLOR = Color.RED;\r\n        if (properties !== undefined) {\r\n            this.color = properties.color ?? DEFAULT_COLOR;\r\n        }\r\n        this.color = DEFAULT_COLOR;\r\n    }\r\n}\r\n\r\nvar WireframeMaterial: WireframeMaterialConstructor = WireframeMaterialBase;","import { AttributeArray, AttributeDataType, DataComponentType, WebGLVertexArrayUtilities } from \"../../webgl/WebGLVertexArrayUtilities\";\r\n\r\nexport { GeometryBuffer };\r\n\r\ninterface GeometryBufferConstructor {\r\n    readonly prototype: GeometryBuffer;\r\n    new(): GeometryBuffer;\r\n    new(\r\n        attributes: Record<string, GeometryBufferAttribute>,\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    ): GeometryBuffer;\r\n    fromBlob(blob: Blob): Promise<GeometryBuffer>;\r\n}\r\n\r\ninterface GeometryBuffer {\r\n    interleaved: boolean;\r\n    buffer: ArrayBuffer;\r\n    stride: number;\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    attributes: Record<string, {\r\n        type: AttributeDataType;\r\n        componentType: DataComponentType;\r\n        byteOffset: number;\r\n        byteLength: number;\r\n        constant?: boolean;\r\n        normalize?: boolean;\r\n    }>;\r\n    getAttribute(name: string): GeometryBufferAttribute | null;\r\n    toBlob(): Blob;\r\n}\r\n\r\ninterface GeometryBufferAttribute {\r\n    array: AttributeArray,\r\n    type: AttributeDataType;\r\n    constant?: boolean;\r\n    normalize?: boolean;\r\n}\r\n\r\nclass GeometryBufferBase implements GeometryBuffer {\r\n    buffer: ArrayBuffer;\r\n    attributes: Record<string, {\r\n        type: AttributeDataType;\r\n        componentType: DataComponentType;\r\n        byteOffset: number;\r\n        byteLength: number;\r\n        constant?: boolean;\r\n        normalize?: boolean;\r\n    }>;\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    interleaved: boolean;\r\n    stride: number;\r\n\r\n    constructor()\r\n    constructor(\r\n        attributes: Record<string, GeometryBufferAttribute>,\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    )\r\n    constructor(\r\n        attributes: Record<string, GeometryBufferAttribute> = {},\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    ) {\r\n        if (attributes) {\r\n            const attributesEntries = Object.entries(attributes);\r\n            const bufferByteLength = attributesEntries.reduce(\r\n                (byteLength, [_, attribute]) => byteLength + attribute.array.byteLength, 0\r\n            );\r\n            const buffer = new ArrayBuffer(bufferByteLength);\r\n            const stride = (interleaved) ? attributesEntries.reduce(\r\n                (stride, [_, attribute]) => {\r\n                    const {array, type} = attribute;\r\n                    return stride + array.BYTES_PER_ELEMENT * WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n                }, 0\r\n            ) : 0;\r\n            const bufferSlices = Math.trunc(bufferByteLength / stride);\r\n            \r\n            this.attributes = {};\r\n            this.indices = indices;\r\n            this.interleaved = interleaved ?? false;\r\n            this.stride = stride;\r\n            this.buffer = buffer;\r\n            \r\n            let byteOffset = 0;\r\n            if (interleaved) {\r\n                Object.entries(attributes).forEach(([name, attribute]) => {\r\n                    const {array, type, constant, normalize} = attribute;\r\n                    const componentType = WebGLVertexArrayUtilities.getArrayComponentType(array);\r\n                    const numComponents = WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n                    const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                        WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                    );\r\n                    const {byteLength, BYTES_PER_ELEMENT} = array;\r\n                    const bufferArray = new bufferArrayConstructor(buffer, byteOffset);\r\n                    const arrayStrideOffset = stride / BYTES_PER_ELEMENT;\r\n                    for (let i = 0; i < bufferSlices; i++) {\r\n                        let arraySliceIndex = i * numComponents;\r\n                        bufferArray.set(\r\n                            array.slice(\r\n                                arraySliceIndex,\r\n                                arraySliceIndex + numComponents\r\n                            ),\r\n                            i * arrayStrideOffset\r\n                        );\r\n                    }\r\n                    this.attributes[name] = {\r\n                        type,\r\n                        byteOffset,\r\n                        byteLength,\r\n                        componentType,\r\n                        constant,\r\n                        normalize\r\n                    };\r\n                    byteOffset += numComponents * BYTES_PER_ELEMENT;\r\n                });\r\n            }\r\n            else {\r\n                Object.entries(attributes).forEach(([name, attribute]) => {\r\n                    const {array, type} = attribute;\r\n                    const {byteLength} = array;\r\n                    const componentType = WebGLVertexArrayUtilities.getArrayComponentType(array);\r\n                    const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                        WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                    );\r\n                    const bufferArray = new bufferArrayConstructor(buffer, byteOffset);\r\n                    bufferArray.set(array);\r\n                    this.attributes[name] = {\r\n                        byteOffset,\r\n                        byteLength,\r\n                        type,\r\n                        componentType\r\n                    };\r\n                    byteOffset += byteLength;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.attributes = {};\r\n            this.indices = undefined;\r\n            this.interleaved = false;\r\n            this.stride = 0;\r\n            this.buffer = new ArrayBuffer(0);\r\n        }\r\n    }\r\n\r\n    toBlob(): Blob {\r\n        const {attributes, buffer, stride, interleaved, indices} = this;\r\n        const bufferData = new Uint8Array(buffer);\r\n        const {length: bufferLength} = bufferData;\r\n        const indicesData = Uint8Array.from(indices ?? []);\r\n        const indicesLength = indices?.length ?? 0;\r\n        const headerData = new TextEncoder().encode(JSON.stringify({attributes, stride, interleaved}));\r\n        const {length: headerLength} = headerData;\r\n\r\n        const blobDataView = new Uint8Array(4 + headerLength + indicesLength + bufferLength);\r\n        const {buffer: blobDataViewBuffer} = blobDataView;\r\n        const blobDataHeaderView = new Uint16Array(blobDataViewBuffer, 0, 2);\r\n        const blobDataHeaderLength = blobDataHeaderView.length * (Uint16Array.BYTES_PER_ELEMENT / Uint8Array.BYTES_PER_ELEMENT);\r\n        blobDataHeaderView[0] = headerLength;\r\n        blobDataHeaderView[1] = indicesLength;\r\n        blobDataView.set(headerData, blobDataHeaderLength);\r\n        blobDataView.set(indicesData, blobDataHeaderLength + headerLength);\r\n        blobDataView.set(bufferData, blobDataHeaderLength + headerLength + indicesLength);\r\n\r\n        return new Blob([blobDataView], {type: \"application/octet-stream\"});\r\n    }\r\n\r\n    static async fromBlob(blob: Blob): Promise<GeometryBuffer> {\r\n        const arrayBuffer = await blob.arrayBuffer();\r\n        const blobDataHeaderView = new Uint16Array(arrayBuffer, 0, 2);\r\n        const {byteLength: blobDataHeaderByteLength} = blobDataHeaderView;\r\n        const headerLength = blobDataHeaderView[0];\r\n        const indicesLength = blobDataHeaderView[1];\r\n        const headerData = new Uint8Array(arrayBuffer, blobDataHeaderByteLength, headerLength);\r\n        const arrayConstructor = (indicesLength < Math.pow(2, 8)) ? Uint8Array : (indicesLength < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        const indices = new arrayConstructor(arrayBuffer.slice(blobDataHeaderByteLength + headerLength * Uint8Array.BYTES_PER_ELEMENT, indicesLength * arrayConstructor.BYTES_PER_ELEMENT));\r\n        const buffer = arrayBuffer.slice(blobDataHeaderByteLength + (indicesLength + headerLength) * Uint8Array.BYTES_PER_ELEMENT);\r\n        const header = <Pick<GeometryBuffer, \"attributes\" | \"stride\" | \"interleaved\">>JSON.parse(new TextDecoder().decode(headerData));\r\n        const {attributes, interleaved, stride} = header;\r\n        const geometryBuffer = new GeometryBuffer();\r\n        geometryBuffer.buffer = buffer;\r\n        geometryBuffer.attributes = attributes;\r\n        geometryBuffer.interleaved = interleaved;\r\n        geometryBuffer.stride = stride;\r\n        geometryBuffer.indices = indices;\r\n        return geometryBuffer;\r\n    }\r\n\r\n    getAttribute(name: string): GeometryBufferAttribute | null {\r\n        const {attributes} = this;\r\n        const attribute = attributes[name];\r\n        if (attribute) {\r\n            const {buffer, interleaved, stride} = this;\r\n            const {type, byteOffset, byteLength, componentType} = attribute;\r\n            const attributeArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(componentType);\r\n            const bytesPerElement = attributeArrayConstructor.BYTES_PER_ELEMENT;\r\n            const length = byteLength / bytesPerElement;\r\n            const numComponents = WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n            const {byteLength: bufferByteLength} = buffer;\r\n            const {BYTES_PER_ELEMENT} = attributeArrayConstructor;\r\n            const attributeArray = new attributeArrayConstructor(length);\r\n            if (interleaved) {\r\n                const bufferArray = new attributeArrayConstructor(buffer, byteOffset);\r\n                const bufferStride = stride;\r\n                const bufferSlices = Math.trunc(bufferByteLength / bufferStride);\r\n                const arrayStrideOffset = bufferStride / BYTES_PER_ELEMENT;\r\n                for (let i = 0; i < bufferSlices; i++) {\r\n                    let bufferArraySliceIndex = arrayStrideOffset * i;\r\n                    attributeArray.set(\r\n                        bufferArray.slice(\r\n                            bufferArraySliceIndex,\r\n                            bufferArraySliceIndex + numComponents\r\n                        ),\r\n                        numComponents * i\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                const bufferArray = new attributeArrayConstructor(buffer, byteOffset, length);\r\n                attributeArray.set(bufferArray);\r\n            }\r\n            return {\r\n                array: attributeArray,\r\n                type: type\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nvar GeometryBuffer: GeometryBufferConstructor = GeometryBufferBase;","import { Color } from \"../../../libs/graphics/colors/Color\";\r\nimport { Matrix3 } from \"../../../libs/maths/algebra/matrices/Matrix3\";\r\nimport { Vector3 } from \"../../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector4 } from \"../../../libs/maths/algebra/vectors/Vector4\";\r\nimport { Plane } from \"../../../libs/maths/geometry/primitives/Plane\";\r\nimport { Mesh } from \"../hl/Mesh\";\r\nimport { WireframeMaterial } from \"../hl/WireframeMaterial\";\r\nimport { Camera } from \"../scenes/cameras/Camera\";\r\nimport { GeometryBuffer } from \"../scenes/geometries/GeometryBuffer\";\r\nimport { AttributeDataType } from \"../webgl/WebGLVertexArrayUtilities\";\r\n\r\nexport { CameraHelper };\r\n\r\ninterface CameraHelperConstructor {\r\n    prototype: CameraHelper;\r\n    new(camera: Camera): CameraHelper;\r\n}\r\n\r\ninterface CameraHelper extends Mesh {\r\n    readonly camera: Camera;\r\n}\r\n\r\nclass CameraHelperBase extends Mesh implements CameraHelper {\r\n    readonly camera: Camera;\r\n\r\n    constructor(camera: Camera) {\r\n        /*const {viewProjection} = camera;\r\n        const viewProjectionInvert = viewProjection.invert();\r\n        const clipPoints = [\r\n            new Vector4(-1, -1, 0, 1),\r\n            new Vector4(-1, 1, 0, 1),\r\n            new Vector4(1, 1, 0, 1),\r\n            new Vector4(1, -1, 0, 1),\r\n            new Vector4(-1, -1, 1, 1),\r\n            new Vector4(-1, 1, 1, 1),\r\n            new Vector4(1, 1, 1, 1),\r\n            new Vector4(1, -1, 1, 1),\r\n        ];\r\n        clipPoints.forEach((point) => {\r\n            viewProjectionInvert.transformPoint4(point);\r\n            console.log(point.w);\r\n            point.multScalar(1 / point.w);\r\n        });\r\n        const [\r\n            leftBottomNear, leftTopNear, rightTopNear, rightBottomNear,\r\n            leftBottomFar, leftTopFar, rightTopFar, rightBottomFar\r\n        ] = clipPoints.map((vector) => {\r\n            const [x, y, z] = vector.array;\r\n            return new Vector3(x, y, z);\r\n        });*/\r\n        const {frustrum} = camera;\r\n        const {nearPlane, farPlane, bottomPlane, topPlane, leftPlane, rightPlane} = frustrum;\r\n        const leftBottomNear = Plane.intersection(leftPlane, bottomPlane, nearPlane, new Vector3());\r\n        const leftTopNear = Plane.intersection(leftPlane, topPlane, nearPlane, new Vector3());\r\n        const rightBottomNear = Plane.intersection(rightPlane, bottomPlane, nearPlane, new Vector3());\r\n        const rightTopNear = Plane.intersection(rightPlane, topPlane, nearPlane, new Vector3());\r\n        const leftBottomFar  = Plane.intersection(leftPlane, bottomPlane, farPlane, new Vector3());\r\n        const leftTopFar = Plane.intersection(leftPlane, topPlane, farPlane, new Vector3());\r\n        const rightBottomFar = Plane.intersection(rightPlane, bottomPlane, farPlane, new Vector3());\r\n        const rightTopFar = Plane.intersection(rightPlane, topPlane, farPlane, new Vector3());\r\n\r\n        const vertices = [\r\n            ...leftBottomNear, ...leftTopNear,\r\n            ...leftTopNear, ...rightTopNear,\r\n            ...rightTopNear, ...rightBottomNear,\r\n            ...rightBottomNear, ...leftBottomNear,\r\n            \r\n            ...leftBottomNear, ...leftBottomFar,\r\n            ...leftTopNear, ...leftTopFar,\r\n            ...rightBottomNear, ...rightBottomFar,\r\n            ...rightTopNear, ...rightTopFar,\r\n\r\n            ...leftBottomFar, ...leftTopFar,\r\n            ...leftTopFar, ...rightTopFar,\r\n            ...rightTopFar, ...rightBottomFar,\r\n            ...rightBottomFar, ...leftBottomFar,\r\n        ];\r\n\r\n        const nearColor = Color.RED;\r\n        const farColor = Color.GREEN;\r\n        const sideColor = Color.BLUE;\r\n\r\n        const colors = [\r\n            ...nearColor, ...nearColor,\r\n            ...nearColor, ...nearColor,\r\n            ...nearColor, ...nearColor,\r\n            ...nearColor, ...nearColor,\r\n\r\n            ...sideColor, ...sideColor,\r\n            ...sideColor, ...sideColor,\r\n            ...sideColor, ...sideColor,\r\n            ...sideColor, ...sideColor,\r\n\r\n            ...farColor, ...farColor,\r\n            ...farColor, ...farColor,\r\n            ...farColor, ...farColor,\r\n            ...farColor, ...farColor,\r\n        ];\r\n        \r\n\t\tconst geometry = new GeometryBuffer({\r\n            \"a_position\": {\r\n                array: new Float32Array(vertices),\r\n                type: AttributeDataType.VEC3\r\n            },\r\n            \"a_color\": {\r\n                array: new Float32Array(colors),\r\n                type: AttributeDataType.VEC3\r\n            }\r\n        });\r\n        \r\n\t\tconst material = new WireframeMaterial();\r\n        super({geometry, material});\r\n\r\n        this.camera = camera;\r\n    }\r\n}\r\n\r\nvar CameraHelper: CameraHelperConstructor = CameraHelperBase;","import { Color } from \"../../../libs/graphics/colors/Color\";\r\nimport { Mesh } from \"../hl/Mesh\";\r\nimport { WireframeMaterial } from \"../hl/WireframeMaterial\";\r\nimport { GeometryBuffer } from \"../scenes/geometries/GeometryBuffer\";\r\nimport { AttributeDataType } from \"../webgl/WebGLVertexArrayUtilities\";\r\n\r\nexport { GridHelper };\r\n\r\ninterface GridHelperConstructor {\r\n    prototype: GridHelper;\r\n    new(properties?: {\r\n        size?: number, divisions?: number, color1?: Color, color2?: Color\r\n    }): GridHelper; \r\n}\r\n\r\ninterface GridHelper extends Mesh {\r\n    readonly size: number;\r\n    readonly divisions: number;\r\n    readonly color1: Color;\r\n    readonly color2: Color;\r\n}\r\n\r\nclass GridHelperBase extends Mesh implements GridHelper {\r\n    readonly size: number;\r\n    readonly divisions: number;\r\n    readonly color1: Color;\r\n    readonly color2: Color;\r\n\r\n    constructor(properties?: {\r\n        size?: number, divisions?: number, color1?: Color, color2?: Color\r\n    }) {\r\n        properties = properties ?? {};\r\n        let {size, divisions, color1, color2} = properties;\r\n\r\n\t\tcolor1 = color1 ? color1 : Color.RED;\r\n\t\tcolor2 = color2 ? color2 : Color.GREEN;\r\n\r\n        divisions = divisions ?? 10;\r\n        size = size ?? 10;\r\n\r\n\t\tconst center = divisions / 2;\r\n\t\tconst step = size / divisions;\r\n\t\tconst halfSize = size / 2;\r\n\r\n\t\tconst vertices = [];\r\n        const colors: number[] = [];\r\n\r\n\t\tfor (let i = 0, k = -halfSize; i <= divisions; i++, k += step) {\r\n\t\t\tvertices.push(-halfSize, 0, k, halfSize, 0, k);\r\n\t\t\tvertices.push(k, 0, -halfSize, k, 0, halfSize);\r\n\t\t\tconst color = i % 4 == 0 || i === center ? color1 : color2;\r\n            colors.push(...[...color, ...color, ...color, ...color]);\r\n\t\t}  \r\n\r\n\t\tconst geometry = new GeometryBuffer({\r\n            \"a_position\": {\r\n                array: new Float32Array(vertices),\r\n                type: AttributeDataType.VEC3\r\n            },\r\n            \"a_color\": {\r\n                array: new Float32Array(colors),\r\n                type: AttributeDataType.VEC3\r\n            }\r\n        });\r\n\r\n\t\tconst material = new WireframeMaterial();\r\n        super({geometry, material});\r\n\r\n        this.color1 = color1;\r\n        this.color2 = color2;\r\n        this.divisions = divisions;\r\n        this.size = size;\r\n    }\r\n}\r\n\r\nvar GridHelper: GridHelperConstructor = GridHelperBase;","\r\nexport { deg2Rad };\r\nexport { rad2Deg };\r\nexport { qSqrt };\r\nexport { pow2 };\r\nexport { inRange };\r\nexport { clamp };\r\nexport { lerp };\r\nexport { smoothstep };\r\nexport { smootherstep };\r\nexport { randInt };\r\nexport { randFloat };\r\nexport { randFloatSpread };\r\nexport { degToRad };\r\nexport { radToDeg };\r\nexport { isPowerOfTwo };\r\nexport { ceilPowerOfTwo };\r\nexport { floorPowerOfTwo };\r\n\r\nconst DEG2RAD = Math.PI / 180;\r\nconst RAD2DEG = 180 / Math.PI;\r\n\r\nconst deg2Rad = function(deg: number): number {\r\n\treturn DEG2RAD * deg;\r\n}\r\n\r\nconst rad2Deg = function(rad: number): number {\r\n\treturn RAD2DEG / rad;\r\n}\r\n\r\nconst _bytes = new ArrayBuffer(Float32Array.BYTES_PER_ELEMENT);\r\nconst _floatView = new Float32Array(_bytes);\r\nconst _intView = new Uint32Array(_bytes);\r\n\r\nconst qSqrt = function(x: number) {\r\n\tconst halfx = x * 0.5;\r\n\r\n\t_floatView[0] = x;\r\n\t_intView[0] = 0x5f3759df -(_intView[0] >> 1);\r\n\r\n\tlet y = _floatView[0];\r\n\ty = y * (1.5 - (halfx * y * y));\r\n\r\n\treturn y;\r\n}\r\n\r\nconst pow2 = function(k: number): number {\r\n\treturn 1 << k;\r\n}\r\n\t\r\nconst inRange = function(x: number, min: number, max: number): boolean {\r\n\treturn (min <= x) && (x <= max);\r\n}\r\n\r\nconst clamp = function(value: number, min: number, max: number): number {\r\n\treturn Math.max(min, Math.min(max, value));\r\n}\r\n\r\nconst lerp = function(x: number, y: number, t: number): number {\r\n\treturn (1 - t) * x + t * y;\r\n}\r\n\r\nconst smoothstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * (3 - 2 * x);\r\n}\r\n\r\nconst smootherstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * x * ( x * ( x * 6 - 15) + 10);\r\n}\r\n\r\nconst randInt = function(low: number, high: number): number {\r\n\treturn low + Math.floor(Math.random() * (high - low + 1));\r\n}\r\n\r\nconst randFloat = function(low: number, high: number): number {\r\n\treturn low + Math.random() * (high - low);\r\n}\r\n\r\nconst randFloatSpread = function(range: number): number {\r\n\treturn range * (0.5 - Math.random());\r\n}\r\n\r\nconst degToRad = function(degrees: number): number {\r\n\treturn degrees * DEG2RAD;\r\n}\r\n\r\nconst radToDeg = function(radians: number): number {\r\n\treturn radians * RAD2DEG;\r\n}\r\nconst isPowerOfTwo = function(value: number): boolean {\r\n\treturn (value & (value - 1)) === 0 && value !== 0;\r\n}\r\n\r\nconst ceilPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\r\n}\r\n\r\nconst floorPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3Values, Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { Matrix3Values };\r\nexport { Matrix3 };\r\nexport { Matrix3Injector };\r\nexport { Matrix3Base };\r\n\r\ntype Matrix3Values = [\r\n  number, number, number,\r\n  number, number, number,\r\n  number, number, number\r\n];\r\n\r\ninterface Matrix3Constructor {\r\n\treadonly prototype: Matrix3;\r\n\tnew(): Matrix3;\r\n\tnew(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): Matrix3;\r\n  new(array: ArrayLike<number>): Matrix3;\r\n  rotationX(angle: number): Matrix3;\r\n  rotationY(angle: number): Matrix3;\r\n  rotationZ(angle: number): Matrix3;\r\n}\r\n\r\ninterface Matrix3 {\r\n  readonly array: WritableArrayLike<number>;\r\n  setValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this;\r\n  getValues(): Matrix3Values;\r\n  row1: Vector3Values;\r\n  row2: Vector3Values;\r\n  row3: Vector3Values;\r\n  col1: Vector3Values;\r\n  col2: Vector3Values;\r\n  col3: Vector3Values;\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  setRotationX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n\r\n  equals(mat: Matrix3): boolean;\r\n  copy(mat: Matrix3): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix3): this;\r\n  sub(mat: Matrix3): this;\r\n  mult(mat: Matrix3): this;\r\n  multScalar(k: number): this;\r\n  solve(vecB: Vector3): Vector3Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass Matrix3Base implements Matrix3 {\r\n  readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  )\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[0], args[1], args[2],\r\n        args[3], args[4], args[5],\r\n        args[6], args[7], args[8]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([\r\n        0, 0, 0,\r\n        0, 0, 0,\r\n        0, 0, 0\r\n      ]);\r\n\t\t}\r\n  }\r\n\r\n  get row1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[3],\r\n      this.array[6]\r\n    ];\r\n\t}\r\n\r\n\tset row1(row: Vector3Values) {\r\n    this.array[0] = row[0];\r\n    this.array[3] = row[1];\r\n    this.array[6] = row[2];\r\n  }\r\n\r\n  get row2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[1],\r\n      this.array[4],\r\n      this.array[7]\r\n    ];\r\n\t}\r\n\r\n\tset row2(row: Vector3Values) {\r\n    this.array[1] = row[0];\r\n    this.array[4] = row[1];\r\n    this.array[7] = row[2]\r\n  }\r\n\r\n  get row3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[2],\r\n      this.array[5],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tset row3(row: Vector3Values) {\r\n    this.array[2] = row[0];\r\n    this.array[5] = row[1];\r\n    this.array[8] = row[2]\r\n  }\r\n\r\n  get col1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[1],\r\n      this.array[2]\r\n    ];\r\n\t}\r\n\r\n\tset col1(col: Vector3Values) {\r\n    this.array[0] = col[0];\r\n    this.array[1] = col[1];\r\n    this.array[2] = col[2];\r\n  }\r\n\r\n  get col2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[3],\r\n      this.array[4],\r\n      this.array[5]\r\n    ];\r\n\t}\r\n\r\n\tset col2(col: Vector3Values) {\r\n    this.array[3] = col[0];\r\n    this.array[4] = col[1];\r\n    this.array[5] = col[2]\r\n  }\r\n\r\n  get col3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[6],\r\n      this.array[7],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tset col3(col: Vector3Values) {\r\n    this.array[6] = col[0];\r\n    this.array[7] = col[1];\r\n    this.array[8] = col[2];\r\n  }\r\n\r\n  get m11() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  get m12() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset m12(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  get m13() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tset m13(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  get m22() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tset m22(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  get m23() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tset m23(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  get m32() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tset m32(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  get m33() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n  set m33(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 9) {\r\n\t\t\tthrow new MathError(`Array must be of length 9 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n  getValues(): Matrix3Values {\r\n\t\treturn [\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8],\r\n    ];\r\n\t}\r\n\r\n\tsetValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this {\r\n    this.array[0] = m11;\r\n    this.array[1] = m21;\r\n    this.array[2] = m31;\r\n    this.array[3] = m12;\r\n    this.array[4] = m22;\r\n    this.array[5] = m32;\r\n    this.array[6] = m13;\r\n    this.array[7] = m23;\r\n    this.array[8] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n\tequals(other: Matrix3): boolean {\r\n    const o = other.array;\r\n    return this.array[0] === o[0]\r\n      && this.array[1] === o[1]\r\n      && this.array[2] === o[2]\r\n      && this.array[3] === o[3]\r\n      && this.array[4] === o[4]\r\n      && this.array[5] === o[5]\r\n      && this.array[6] === o[6]\r\n      && this.array[7] === o[7]\r\n      && this.array[8] === o[8];\r\n  }\r\n\r\n  copy(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = m[0];\r\n    o[1] = m[1];\r\n    o[2] = m[2];\r\n    o[3] = m[3];\r\n    o[4] = m[4];\r\n    o[5] = m[5];\r\n    o[6] = m[6];\r\n    o[7] = m[7];\r\n    o[8] = m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  clone(): this {\r\n    return new Matrix3Base(\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8]\r\n    ) as this;\r\n  }\r\n\r\n  setIdentity(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 1;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 1;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  setZeros(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 0;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 0;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  det(): number {\r\n    const o = this.array;\r\n\r\n    const x = o[0] * ((o[4] * o[8]) - (o[5] * o[7]));\r\n    const y = o[1] * ((o[3] * o[8]) - (o[5] * o[6]));\r\n    const z = o[2] * ((o[3] * o[7]) - (o[4] * o[6]));\r\n\r\n    return x - y + z;\r\n  }\r\n\r\n  trace(): number {\r\n    const o = this.array;\r\n    \r\n    return o[0] + o[4] + o[8];\r\n  }\r\n\r\n  negate(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = -o[0];\r\n    o[1] = -o[1];\r\n    o[2] = -o[2];\r\n    o[3] = -o[3];\r\n    o[4] = -o[4];\r\n    o[5] = -o[5];\r\n    o[6] = -o[6];\r\n    o[7] = -o[7];\r\n    o[8] = -o[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  transpose(): this {\r\n    const o = this.array;\r\n\r\n    let t;\r\n\r\n    t = o[1];\r\n    o[1] = o[3];\r\n    o[3] = t;\r\n\r\n    t = o[2];\r\n    o[2] = o[6];\r\n    o[6] = t;\r\n\r\n    t = o[5];\r\n    o[5] = o[7];\r\n    o[7] = t;\r\n    \r\n    return this;\r\n  }\r\n\r\n  invert(): this {\r\n    const o = this.array;\r\n\r\n    const t11 = o[1 * 3 + 1] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 1];\r\n    const t12 = o[0 * 3 + 1] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 1];\r\n    const t13 = o[0 * 3 + 1] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 1];\r\n\r\n    const t21 = o[1 * 3 + 0] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 0];\r\n    const t22 = o[0 * 3 + 0] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 0];\r\n    const t23 = o[0 * 3 + 0] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 0];\r\n\r\n    const t31 = o[1 * 3 + 0] * o[2 * 3 + 1] - o[1 * 3 + 1] * o[2 * 3 + 0];\r\n    const t32 = o[0 * 3 + 0] * o[2 * 3 + 1] - o[0 * 3 + 1] * o[2 * 3 + 0];\r\n    const t33 = o[0 * 3 + 0] * o[1 * 3 + 1] - o[0 * 3 + 1] * o[1 * 3 + 0];\r\n\r\n    const d = 1.0 / (o[0 * 3 + 0] * t11 - o[1 * 3 + 0] * t12 + o[2 * 3 + 0] * t13);\r\n\r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    o[0] = d * t11;\r\n    o[1] = -d * t12;\r\n    o[2] = d * t13;\r\n\r\n    o[3] = -d * t21;\r\n    o[4] = d * t22;\r\n    o[5] = -d * t23;\r\n\r\n    o[6] = d * t31;\r\n    o[7] = -d * t32;\r\n    o[8] = d * t33;\r\n\r\n    return this;\r\n  }\r\n\r\n  add(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] + m[0];\r\n    o[1] = o[1] + m[1];\r\n    o[2] = o[2] + m[2];\r\n    o[3] = o[3] + m[3];\r\n    o[4] = o[4] + m[4];\r\n    o[5] = o[5] + m[5];\r\n    o[6] = o[6] + m[6];\r\n    o[7] = o[7] + m[7];\r\n    o[8] = o[8] + m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  sub(mat: Matrix3Base): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] - m[0];\r\n    o[1] = o[1] - m[1];\r\n    o[2] = o[2] - m[2];\r\n    o[3] = o[3] - m[3];\r\n    o[4] = o[4] - m[4];\r\n    o[5] = o[5] - m[5];\r\n    o[6] = o[6] - m[6];\r\n    o[7] = o[7] - m[7];\r\n    o[8] = o[8] - m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  mult(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    const a11 = o[0 * 3 + 0];\r\n    const a12 = o[0 * 3 + 1];\r\n    const a13 = o[0 * 3 + 2];\r\n    const a21 = o[1 * 3 + 0];\r\n    const a22 = o[1 * 3 + 1];\r\n    const a23 = o[1 * 3 + 2];\r\n    const a31 = o[2 * 3 + 0];\r\n    const a32 = o[2 * 3 + 1];\r\n    const a33 = o[2 * 3 + 2];\r\n    const b11 = m[0 * 3 + 0];\r\n    const b12 = m[0 * 3 + 1];\r\n    const b13 = m[0 * 3 + 2];\r\n    const b21 = m[1 * 3 + 0];\r\n    const b22 = m[1 * 3 + 1];\r\n    const b23 = m[1 * 3 + 2];\r\n    const b31 = m[2 * 3 + 0];\r\n    const b32 = m[2 * 3 + 1];\r\n    const b33 = m[2 * 3 + 2];\r\n\r\n    o[0] = b11 * a11 + b12 * a21 + b13 * a31;\r\n    o[1] = b11 * a12 + b12 * a22 + b13 * a32;\r\n    o[2] = b11 * a13 + b12 * a23 + b13 * a33;\r\n    o[3] = b21 * a11 + b22 * a21 + b23 * a31;\r\n    o[4] = b21 * a12 + b22 * a22 + b23 * a32;\r\n    o[5] = b21 * a13 + b22 * a23 + b23 * a33;\r\n    o[6] = b31 * a11 + b32 * a21 + b33 * a31;\r\n    o[7] = b31 * a12 + b32 * a22 + b33 * a32;\r\n    o[8] = b31 * a13 + b32 * a23 + b33 * a33;\r\n\r\n    return this;\r\n  }\r\n\r\n  multScalar(k: number): this {\r\n    const o = this.array;\r\n\r\n    o[0] = o[0] * k;\r\n    o[1] = o[1] * k;\r\n    o[2] = o[2] * k;\r\n    o[3] = o[3] * k;\r\n    o[4] = o[4] * k;\r\n    o[5] = o[5] * k;\r\n    o[6] = o[6] * k;\r\n    o[7] = o[7] * k;\r\n    o[8] = o[8] * k;\r\n\r\n    return this;\r\n  }\r\n\r\n  writeIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst m = this.array;\r\n\r\n\t\tout[offset     ] = m[ 0];\r\n\t\tout[offset +  1] = m[ 1];\r\n    out[offset +  2] = m[ 2];\r\n    out[offset +  3] = m[ 3];\r\n\t\tout[offset +  4] = m[ 4];\r\n    out[offset +  5] = m[ 5];\r\n    out[offset +  6] = m[ 6];\r\n\t\tout[offset +  7] = m[ 7];\r\n    out[offset +  8] = m[ 8];\r\n  }\r\n    \r\n  readFromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[ 0] = arr[offset     ];\r\n\t\to[ 1] = arr[offset +  1];\r\n    o[ 2] = arr[offset +  2];\r\n    o[ 3] = arr[offset +  3];\r\n    o[ 4] = arr[offset +  4];\r\n    o[ 5] = arr[offset +  5];\r\n    o[ 6] = arr[offset +  6];\r\n\t\to[ 7] = arr[offset +  7];\r\n    o[ 8] = arr[offset +  8];\r\n  }\r\n\r\n  static rotationX(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationX(angle);\r\n  }\r\n\r\n  setRotationX(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = 1;\r\n    this.array[1] = 0;\r\n    this.array[2] = 0;\r\n    this.array[3] = 0;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = sinAngle;\r\n    this.array[6] = 0;\r\n    this.array[7] = -sinAngle;\r\n    this.array[8] = cosAngle;\r\n\r\n    return this;\r\n  }\r\n  \r\n  static rotationY(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationY(angle);\r\n  }\r\n\r\n  setRotationY(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n    \r\n    this.array[0] = cosAngle;\r\n    this.array[1] = 0;\r\n    this.array[2] = -sinAngle;\r\n    this.array[3] = 0;\r\n    this.array[4] = 1;\r\n    this.array[5] = 0;\r\n    this.array[6] = sinAngle;\r\n    this.array[7] = 0;\r\n    this.array[8] = cosAngle;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static rotationZ(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationZ(angle);\r\n  }\r\n\r\n  setRotationZ(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = cosAngle;\r\n    this.array[1] = sinAngle;\r\n    this.array[2] = 0;\r\n    this.array[3] = -sinAngle;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = 0;\r\n    this.array[6] = 0;\r\n    this.array[7] = 0;\r\n    this.array[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  solve(b: Vector3): Vector3Values {\r\n    const a  = this.array;\r\n\r\n    const A0x = a[0];\r\n    const A0y = a[3];\r\n    const A0z = a[6];\r\n    const A1x = a[1];\r\n    const A1y = a[4];\r\n    const A1z = a[7];\r\n    const A2x = a[2];\r\n    const A2y = a[5];\r\n    const A2z = a[8];\r\n    let rx, ry, rz;\r\n    let det;\r\n\r\n    // Column1 cross Column 2\r\n    rx = A1y * A2z - A1z * A2y;\r\n    ry = A1z * A2x - A1x * A2z;\r\n    rz = A1x * A2y - A1y * A2x;\r\n\r\n    // A.getColumn(0).dot(x)\r\n    det = A0x * rx + A0y * ry + A0z * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    // b dot [Column1 cross Column 2]\r\n    const x_ = det * (b.x * rx + b.y * ry + b.z * rz);\r\n\r\n    // Column2 cross b\r\n    rx = -(A2y * b.z - A2z * b.y);\r\n    ry = -(A2z * b.x - A2x * b.z);\r\n    rz = -(A2x * b.y - A2y * b.x);\r\n    // Column0 dot -[Column2 cross b (Column3)]\r\n    const y_ = det * (A0x * rx + A0y * ry + A0z * rz);\r\n\r\n    // b cross Column 1\r\n    rx = -(b.y * A1z - b.z * A1y);\r\n    ry = -(b.z * A1x - b.x * A1z);\r\n    rz = -(b.x * A1y - b.y * A1x);\r\n    // Column0 dot -[b cross Column 1]\r\n    const z_ = det * (A0x * rx + A0y * ry + A0z * rz);\r\n    return [x_, y_, z_];\r\n    /*const a = this.array;\r\n    \r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a13 = a[2];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const a23 = a[5];\r\n    const a31 = a[6];\r\n    const a32 = a[7];\r\n    const a33 = a[8];\r\n    const bx = vecB.x;\r\n    const by = vecB.y;\r\n    const bz = vecB.z;\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n  \r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n    \r\n    return [\r\n      x, y, z\r\n    ];*/\r\n  }\r\n\r\n  solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const bx = vecB.x - a[4];\r\n    const by = vecB.y - a[7];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by)\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n}\r\n\r\nvar Matrix3: Matrix3Constructor = Matrix3Base;\r\nconst Matrix3Injector: Injector<Matrix3Constructor> = new Injector({\r\n\tdefaultCtor: Matrix3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix3Constructor) => {\r\n\t\t\tMatrix3 = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Space } from \"../../geometry/space/Space\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { qSqrt } from \"../../Snippets\";\r\nimport { Matrix3 } from \"../matrices/Matrix3\";\r\nimport { Matrix4 } from \"../matrices/Matrix4\";\r\nimport { Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { QuaternionValues };\r\nexport { Quaternion };\r\nexport { QuaternionInjector };\r\nexport { QuaternionPool };\r\n\r\ntype QuaternionValues = [number, ...number[]] & { length: 4 };\r\n\r\ninterface QuaternionConstructor {\r\n\treadonly prototype: Quaternion;\r\n\tnew(): Quaternion;\r\n\tnew(x: number, y: number, z: number, w: number): Quaternion;\r\n\tnew(array: WritableArrayLike<number>): Quaternion;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tslerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tfromArray(vector: ArrayLike<number>): Quaternion;\r\n\tfromAxisAngle(axis: Vector3, angle?: number): Quaternion;\r\n\tfromEuler(pitch: number, yaw: number, roll: number): Quaternion;\r\n\tfromVector(vector: Vector3): Quaternion;\r\n\tfromMatrix(matrix: Matrix3): Quaternion;\r\n}\r\n// TODO?:\r\n// roll => pitch\r\n// pitch => yaw\r\n// yaw => roll\r\ninterface Quaternion {\r\n\treadonly array: WritableArrayLike<number>;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\tw: number;\r\n\tpitch: number;\r\n\tyaw: number;\r\n\troll: number;\r\n\tgetValues(): QuaternionValues;\r\n\tsetValues(\r\n\t  x: number, y: number,\r\n\t  z: number, w: number\r\n\t): this;\r\n\t//setArray(array: WritableArrayLike<number>): this;\r\n\tlookAt(source: Vector3, dest: Vector3): Quaternion ;\r\n\tsetEuler(pitch: number, yaw: number, roll: number): this;\r\n\r\n\tsetMatrix(matrix: Matrix3): Quaternion;\r\n\tsetMatrix(matrix: Matrix4): Quaternion;\r\n\r\n\tsetAxisAngle(axis: Vector3, angle: number): this;\r\n\tsetVectors(from: Vector3, to: Vector3): this;\r\n\t\r\n\tcopy(quat: Quaternion): this;\r\n\tclone(): this;\r\n\tgetAxis(out: Vector3): Vector3;\r\n\r\n\tgetMatrix3(matrix: Matrix3): Matrix3;\r\n\tgetMatrix4(matrix: Matrix4): Matrix4;\r\n\r\n\trotate(vec: Vector3): Vector3;\r\n\ttoVector(): Vector3;\r\n\r\n\tangleTo(quat: Quaternion): number;\r\n\trotateTowards(quat: Quaternion): this;\r\n\tinvert(): this;\r\n\tconjugate(): this;\r\n\tdot(quat: Quaternion): number;\r\n\tlengthSquared(): number;\r\n\tlength(): number;\r\n\tnormalize(): this;\r\n\tadd(quat: Quaternion): this;\r\n\tsub(quat: Quaternion): this;\r\n\tmult(quat: Quaternion): this;\r\n\tscale(scalar: number): this;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): this;\r\n\tequals(quat: Quaternion): boolean;\r\n\tcopyIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass QuaternionBase {\r\n\tprivate _array: WritableArrayLike<number>;\r\n\r\n\tget array(): WritableArrayLike<number> {\r\n\t\treturn this._array;\r\n\t}\r\n\r\n\tconstructor()\r\n\tconstructor(array: WritableArrayLike<number>)\r\n\tconstructor(x: number, y: number, z: number, w: number)\r\n\tconstructor(...args: any[]) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis._array = [\r\n\t\t\t\targs[0], args[1], args[2], args[3]\r\n\t\t\t];\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tthis._checkArray(args[0]);\r\n\t\t\tthis._array = args[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._array = [0, 0, 0, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tget x(): number {\r\n        return this._array[0];\r\n    }\r\n\r\n    set x(x: number) {\r\n\t\tthis._array[0] = x;\r\n    }\r\n\r\n    get y(): number {\r\n        return this._array[1];\r\n    }\r\n\r\n    set y(y: number) {\r\n\t\tthis._array[1] = y;\r\n    }\r\n\r\n    set z(z: number) {\r\n\t\tthis._array[2] = z;\r\n\t}\r\n\t\r\n    get z(): number {\r\n\t\treturn this._array[2];\r\n    }\r\n\r\n    set w(w: number) {\r\n\t\tthis._array[3] = w;\r\n\t}\r\n\r\n    get w(): number {\r\n\t\treturn this._array[3];\r\n\t}\r\n\t\r\n\tget pitch(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinPitch = 2 * (w * y - z * x);\r\n\t\tif (Math.abs(sinPitch) >= 1) {\r\n            return Math.sign(sinPitch) * (Math.PI / 2);\r\n        }\r\n\t\telse {\r\n            return Math.asin(sinPitch);\r\n        }\r\n\t}\r\n\r\n\tget yaw(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinYawCosPitch = 2 * (w * z + x * y);\r\n\t\tconst cosYawCosPitch = 1 - 2 * (y * y + z * z);\r\n\t\treturn Math.atan2(sinYawCosPitch, cosYawCosPitch);\r\n\t}\r\n\r\n\tget roll(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinRollCosPitch = 2 * (w * x + y * z);\r\n\t\tconst cosRollCosPitch = 1 - 2 * (x * x + y * y);\r\n\t\treturn Math.atan2(sinRollCosPitch, cosRollCosPitch);\r\n\t}\r\n\r\n\tgetValues(): QuaternionValues {\r\n\t\treturn [\r\n\t\t\tthis._array[0],\r\n\t\t\tthis._array[1],\r\n\t\t\tthis._array[2],\r\n\t\t\tthis._array[3]\r\n\t\t];\r\n\t}\r\n\r\n\tsetValues(x: number, y: number, z: number, w: number): this {\r\n\t\tthis._array[0] = x;\r\n\t\tthis._array[1] = y;\r\n\t\tthis._array[2] = z;\r\n\t\tthis._array[3] = w;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate _checkArray(array: WritableArrayLike<number>): void {\r\n\t\tif (array.length < 4) {\r\n\t\t\tthrow new MathError(`Array must be of length 4 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t/*setArray(array: WritableArrayLike<number>): this {\r\n\t\tthis._checkArray(array);\r\n\t\tthis._array = array;\r\n\t\treturn this;\r\n\t}*/\r\n\r\n\tstatic fromArray(array: WritableArrayLike<number>): QuaternionBase {\r\n\t\treturn new QuaternionBase(array);\r\n\t}\r\n\r\n\tstatic fromAxisAngle(axis: Vector3, angle: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setAxisAngle(axis, angle);\r\n\t}\r\n\r\n\tstatic fromVector(vector: Vector3): QuaternionBase {\r\n\t\treturn new QuaternionBase(vector.x, vector.y, vector.z, 1);\r\n\t}\r\n\t\r\n\tstatic fromEuler(yaw: number, pitch: number, roll: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setEuler(yaw, pitch, roll);\r\n\t}\r\n\r\n\tcopy(quat: Quaternion): this {\r\n\t\tconst o = this._array;\r\n\t\tconst q = quat.array;\r\n\r\n\t\to[0] = q[0];\r\n\t\to[1] = q[1];\r\n\t\to[2] = q[2];\r\n\t\to[3] = q[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new QuaternionBase(this.x, this.y, this.z, this.w) as this;\r\n\t}\r\n\r\n\tequals(quat: Quaternion): boolean {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\treturn (thisArray[0] === quatArray[0])\r\n\t\t\t&& (thisArray[1] === quatArray[1])\r\n\t\t\t&& (thisArray[2] === quatArray[2])\r\n\t\t\t&& (thisArray[3] === quatArray[3]);\r\n\t}\r\n\r\n\tgetAxis(out: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst outArray = out.array;\r\n\r\n\t\tconst den = 1 - (thisArray[3] * thisArray[3]);\r\n\r\n\t\tif (den < Number.EPSILON) {\r\n\t\t  return out.setZeros();\r\n\t\t}\r\n\t  \r\n\t\tconst scale = qSqrt(den);\r\n\t\t\r\n\t\toutArray[0] = thisArray[0] * scale;\r\n\t\toutArray[1] = thisArray[1] * scale;\r\n\t\toutArray[2] = thisArray[2] * scale;\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\tgetMatrix3(matrix: Matrix3): Matrix3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst thisLengthSquared = this.lengthSquared();\r\n\t\tconst s = 2.0 / thisLengthSquared;\r\n\r\n\t\tconst x = thisArray[0];\r\n\t\tconst y = thisArray[1];\r\n\t\tconst z = thisArray[2];\r\n\t\tconst w = thisArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n\t\treturn matrix.setValues(\r\n\t\t\t1 - (yy + zz),\txy + wz,\t\txz - wy,\r\n\t\t\txy - wz,\t\t1 - (xx + zz),\tyz + wx,\r\n\t\t\txz + wy,\t\tyz - wx,\t\t1 - (xx + yy)\r\n\t\t);\r\n\t}\r\n\r\n\tgetMatrix4(matrix: Matrix4): Matrix4 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst thisLengthSquared = this.lengthSquared();\r\n\t\tconst s = 2.0 / thisLengthSquared;\r\n\r\n\t\tconst x = thisArray[0];\r\n\t\tconst y = thisArray[1];\r\n\t\tconst z = thisArray[2];\r\n\t\tconst w = thisArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n\t\treturn matrix.setValues(\r\n\t\t\t1 - (yy + zz),\txy + wz,\t\txz - wy, \t\t0,\r\n\t\t\txy - wz,\t\t1 - (xx + zz),\tyz + wx, \t\t0,\r\n\t\t\txz + wy,\t\tyz - wx,\t\t1 - (xx + yy), \t0,\r\n\t\t\t0, \t\t\t\t0, \t\t\t\t0, \t\t\t\t1\r\n\t\t);\r\n\t}\r\n\r\n\trotate(vector: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst vectorArray = vector.array;\r\n\r\n\t\tconst vx = vectorArray[0];\r\n\t\tconst vy = vectorArray[1];\r\n\t\tconst vz = vectorArray[2];\t\t\r\n\t\t\r\n\t\tconst qx = thisArray[0];\r\n\t\tconst qy = thisArray[1];\r\n\t\tconst qz = thisArray[2];\r\n\t\tconst qw = thisArray[3];\r\n\r\n\t\tconst tx = qw * vx + -qx * 0 + -qy * vz + qz * vy;\r\n\t\tconst ty = qw * vy + -qy * 0 + -qz * vx + qx * vz;\r\n\t\tconst tz = qw * vz + -qz * 0 + -qx * vy + qy * vx;\r\n\t\tconst tw = qx * vx + qw * 0 + qy * vy + qz * vz;\r\n\r\n\t\tvectorArray[0] = tw * qz + tz * qw + tx * qy - ty * qx;\r\n\t\tvectorArray[1] = tw * qy + ty * qw + tz * qx - tx * qz;\r\n\t\tvectorArray[2] = tw * qx + tx * qw + ty * qz - tz * qy;\r\n\r\n\t\treturn vector;\r\n\t}\r\n\r\n\ttoVector(): Vector3 {\r\n\t\treturn new Vector3([\r\n\t\t\tthis.x, this.y, this.z\r\n\t\t]);\r\n\t}\r\n\t\r\n\tsetEuler(pitch: number, yaw: number, roll: number): this {\r\n\t\tconst cosYaw = Math.cos(yaw * 0.5);\r\n\t\tconst sinYaw = Math.sin(yaw * 0.5);\r\n\t\tconst cosPitch = Math.cos(pitch * 0.5);\r\n\t\tconst sinPitch = Math.sin(pitch * 0.5);\r\n\t\tconst cosRoll = Math.cos(roll * 0.5);\r\n\t\tconst sinRoll = Math.sin(roll * 0.5);\r\n\t\tconst thisArray = this.array;\r\n\r\n        thisArray[0] = sinRoll * cosPitch * cosYaw - cosRoll * sinPitch * sinYaw;\r\n        thisArray[1] = cosRoll * sinPitch * cosYaw + sinRoll * cosPitch * sinYaw;\r\n        thisArray[2] = cosRoll * cosPitch * sinYaw - sinRoll * sinPitch * cosYaw;\r\n\t\tthisArray[3] = cosRoll * cosPitch * cosYaw + sinRoll * sinPitch * sinYaw;\r\n        \r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetAxisAngle(axis: Vector3, angle: number = 0): this {\r\n\t\tconst axisLength = axis.length();\r\n\t\tif (axisLength === 0) {\r\n\t\t  return this;\r\n\t\t}\r\n\t\tconst halfSin = Math.sin(angle * 0.5) / axisLength;\r\n\t\tconst axisArray = axis.array;\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] = axisArray[0] * halfSin;\r\n\t\tthisArray[1] = axisArray[1] * halfSin;\r\n\t\tthisArray[2] = axisArray[2] * halfSin;\r\n\t\tthisArray[3] = Math.cos(angle * 0.5);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetMatrix(matrix: Matrix3): this\r\n\tsetMatrix(matrix: Matrix4): this\r\n\tsetMatrix(matrix: Matrix3 | Matrix4): this {\r\n\t\tconst matrixArray = matrix.array;\r\n\t\tlet m11 = 0, m12 = 0, m13 = 0,\r\n\t\t\tm21 = 0, m22 = 0, m23 = 0,\r\n\t\t\tm31 = 0, m32 = 0, m33 = 0;\r\n\r\n\t\tif (matrix instanceof Matrix3) {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[3], m13 = matrixArray[6],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[4], m23 = matrixArray[7],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[5], m33 = matrixArray[8];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[4], m13 = matrixArray[ 8],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[5], m23 = matrixArray[ 9],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[6], m33 = matrixArray[10];\r\n\t\t}\r\n\r\n\t\tconst trace = m11 + m22 + m33;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tif (trace > 0) {\r\n\t\t\tconst s = Math.sqrt(trace + 1) * 2;\r\n\t\t\tthisArray[3] = 0.25 * s;\r\n\t\t\tthisArray[0] = (m32 - m23) / s;\r\n\t\t\tthisArray[1] = (m13 - m31) / s;\r\n\t\t\tthisArray[2] = (m21 - m12) / s;\r\n\t\t}\r\n\t\telse if (m11 > m22 && m11 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n\t\t\tthisArray[3] = (m32 - m23) / s;\r\n\t\t\tthisArray[0] = 0.25 * s;\r\n\t\t\tthisArray[1] = (m12 + m21) / s;\r\n\t\t\tthisArray[2] = (m13 + m31) / s;\r\n\t\t}\r\n\t\telse if (m22 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n\t\t\tthisArray[3] = (m13 - m31) / s;\r\n\t\t\tthisArray[0] = (m12 + m21) / s;\r\n\t\t\tthisArray[1] = 0.25 * s;\r\n\t\t\tthisArray[2] = (m23 + m32) / s;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n\t\t\tthisArray[3] = (m21 - m12) / s;\r\n\t\t\tthisArray[0] = (m13 + m31) / s;\r\n\t\t\tthisArray[1] = (m23 + m32) / s;\r\n\t\t\tthisArray[2] = 0.25 * s;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlookAt(source: Vector3, dest: Vector3): Quaternion {\r\n\t\tconst forward = dest.clone().sub(source).normalize();\r\n\r\n\t\tconst axis = Space.forward.clone().cross(forward);\r\n\t\tconst dot = Space.forward.dot(forward);\r\n\r\n\t\treturn new Quaternion(axis.x, axis.y, axis.z, dot + 1).normalize();\r\n\t}\r\n\r\n\tstatic fromMatrix(matrix: Matrix3): QuaternionBase {\r\n\t\treturn new QuaternionBase().setMatrix(matrix);\r\n\t}\r\n\r\n\tsetVectors(from: Vector3, to: Vector3): this {\r\n\t\tconst dot = from.dot(to);\r\n\t\tconst cross = from.cross(to);\r\n\t\tconst crossArray = cross.array;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = crossArray[0];\r\n\t\tthisArray[1] = crossArray[1];\r\n\t\tthisArray[2] = crossArray[2];\r\n\r\n\t\tconst fromLength = from.length();\r\n\t\tconst toLength = from.length();\r\n\r\n\t\tthisArray[3] = Math.sqrt(fromLength * fromLength * toLength * toLength) + dot;\r\n\r\n\t\treturn this.normalize();\r\n\t}\r\n\r\n\tdot(quat: Quaternion): number {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\treturn thisArray[0] * quatArray[0] + thisArray[1] * quatArray[1] + thisArray[2] * quatArray[2] + thisArray[3] * quatArray[3];\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn thisArray[0] ** 2 + thisArray[1] ** 2 + thisArray[2] ** 2 + thisArray[3] ** 2;\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn Math.hypot(thisArray[0], thisArray[1], thisArray[2], thisArray[3]);\r\n\t}\r\n\r\n\tangleTo(rotation: Quaternion): number {\r\n\t\treturn 2 * Math.acos(Math.abs(Math.max(-1, Math.min(1, this.dot(rotation)))));\r\n\t}\r\n\r\n\trotateTowards(rotation: Quaternion): this {\r\n\t\tconst angle = this.angleTo(rotation);\r\n\r\n\t\tif (angle === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconst t = Math.min(1, angle);\r\n\t\tthis.slerp(this, rotation, t);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tinvert(): this {\r\n\t\treturn this.conjugate();\r\n\t}\r\n\t\r\n\tconjugate(): this {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] *= -1;\r\n\t\tthisArray[1] *= -1;\r\n\t\tthisArray[2] *= -1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tlet length = this.length();\r\n\r\n\t\tif (length === 0) {\r\n\t\t\tthisArray[0] = 0;\r\n\t\t\tthisArray[1] = 0;\r\n\t\t\tthisArray[2] = 0;\r\n\t\t\tthisArray[3] = 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlength = 1 / length;\r\n\t\t\tthisArray[0] *= length;\r\n\t\t\tthisArray[1] *= length;\r\n\t\t\tthisArray[2] *= length;\r\n\t\t\tthisArray[3] *= length;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tadd(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] += quatArray[0];\r\n\t\tthisArray[1] += quatArray[1];\r\n\t\tthisArray[2] += quatArray[2];\r\n\t\tthisArray[3] += quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] -= quatArray[0];\r\n\t\tthisArray[1] -= quatArray[1];\r\n\t\tthisArray[2] -= quatArray[2];\r\n\t\tthisArray[3] -= quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\tconst ax = thisArray[0], ay = thisArray[1], az = thisArray[2], aw = thisArray[3];\r\n\t\tconst bx = quatArray[0], by = quatArray[1], bz = quatArray[2], bw = quatArray[3];\r\n\r\n\t\tthisArray[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n\t\tthisArray[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n\t\tthisArray[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n\t\tthisArray[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tscale(scalar: number): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] *= scalar;\r\n\t\tthisArray[1] *= scalar;\r\n\t\tthisArray[2] *= scalar;\r\n\t\tthisArray[3] *= scalar;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number, out?: Quaternion): Quaternion {\r\n\t\tif (!(out instanceof Quaternion)) {\r\n\t\t\tout = new Quaternion();\r\n\t\t}\r\n\t\tif (t === 0) return out.copy(from);\r\n\t\tif (t === 1) return out.copy(to);\r\n\r\n\t\tconst outArray = out.array;\r\n\t\tconst fromArray = from.array;\r\n\t\tconst toArray = to.array;\r\n\r\n\t\tconst cosHalfTheta = fromArray[3] * toArray[3] + fromArray[0] * toArray[0] + fromArray[1] * toArray[1] + fromArray[2] * toArray[2];\r\n\t\t\r\n\t\tif (Math.abs(cosHalfTheta) >= 1) {\r\n\t\t\toutArray[3] = fromArray[3];\r\n\t\t\toutArray[0] = fromArray[0];\r\n\t\t\toutArray[1] = fromArray[1];\r\n\t\t\toutArray[2] = fromArray[2];\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst halfTheta = Math.acos(cosHalfTheta);\r\n\t\tconst sinHalfTheta = Math.sqrt(1 - cosHalfTheta * cosHalfTheta);\r\n\t\t\r\n\t\tif (Math.abs(sinHalfTheta - Math.trunc(sinHalfTheta)) < Number.EPSILON) {\r\n\t\t\toutArray[3] = (fromArray[3] * 0.5 + toArray[3] * 0.5);\r\n\t\t\toutArray[0] = (fromArray[0] * 0.5 + toArray[0] * 0.5);\r\n\t\t\toutArray[1] = (fromArray[1] * 0.5 + toArray[1] * 0.5);\r\n\t\t\toutArray[2] = (fromArray[2] * 0.5 + toArray[2] * 0.5);\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta;\r\n\t\tconst ratioB = Math.sin(t * halfTheta) / sinHalfTheta; \r\n\t\toutArray[3] = (fromArray[3] * ratioA + toArray[3] * ratioB);\r\n\t\toutArray[0] = (fromArray[0] * ratioA + toArray[0] * ratioB);\r\n\t\toutArray[1] = (fromArray[1] * ratioA + toArray[1] * ratioB);\r\n\t\toutArray[2] = (fromArray[2] * ratioA + toArray[2] * ratioB);\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * https://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t */\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): this {\r\n\t\treturn Quaternion.slerp(from, to, t, this) as this;\r\n\t}\r\n\r\n\tcopyIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tarray[offset    ] = thisArray[0];\r\n\t\tarray[offset + 1] = thisArray[1];\r\n\t\tarray[offset + 2] = thisArray[2];\r\n\t\tarray[offset + 3] = thisArray[3];\r\n    }\r\n    \r\n    readFromArray(array: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = array[offset    ];\r\n\t\tthisArray[1] = array[offset + 1];\r\n\t\tthisArray[2] = array[offset + 2];\r\n\t\tthisArray[3] = array[offset + 3];\r\n    }\r\n}\r\n\r\nvar Quaternion: QuaternionConstructor = QuaternionBase;\r\nconst QuaternionPool: StackPool<Quaternion> = new StackPool(QuaternionBase);\r\nconst QuaternionInjector: Injector<QuaternionConstructor> = new Injector({\r\n\tdefaultCtor: QuaternionBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: QuaternionConstructor) => {\r\n\t\t\tQuaternion = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Quaternion } from \"../quaternions/Quaternion\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"../vectors/Vector3\";\r\nimport { Vector4, Vector4Values } from \"../vectors/Vector4\";\r\nimport { Matrix3, Matrix3Values } from \"./Matrix3\";\r\n\r\nexport { Matrix4Values };\r\nexport { Matrix4 };\r\nexport { Matrix4Injector };\r\nexport { Matrix4Base };\r\n\r\ntype Matrix4Values = [\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number\r\n];\r\n\r\ninterface Matrix4Constructor {\r\n\treadonly prototype: Matrix4;\r\n\tnew(): Matrix4;\r\n\tnew(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  new(array: ArrayLike<number>): Matrix4;\r\n\r\n  fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  fromArray(array: ArrayLike<number>): Matrix4;\r\n\r\n  invert(A: Matrix4, out: Matrix4): Matrix4;\r\n  transpose(A: Matrix4, out: Matrix4): Matrix4;\r\n  add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n\r\n  identity(): Matrix4;\r\n  zeros(): Matrix4;\r\n\r\n  translation(vector: Vector3): Matrix4;\r\n  rotationX(angle: number): Matrix4;\r\n  rotationY(angle: number): Matrix4;\r\n  rotationZ(angle: number): Matrix4;\r\n  rotation(matrix: Matrix3): Matrix4;\r\n  scaling(vector: Vector3): Matrix4;\r\n  \r\n  perspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): Matrix4;\r\n  orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n  frustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n}\r\n\r\n/**\r\n * 4x4 matrix. Values are stored in column major order.\r\n */\r\ninterface Matrix4 {\r\n  readonly array: Float32Array;\r\n  getValues(): Matrix4Values\r\n  setValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this;\r\n  /*row1: Vector4Values;\r\n  row2: Vector4Values;\r\n  row3: Vector4Values;\r\n  row4: Vector4Values;\r\n  col1: Vector4Values;\r\n  col2: Vector4Values;\r\n  col3: Vector4Values;\r\n  col4: Vector4Values;*/\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m14: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m24: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  m34: number;\r\n  m41: number;\r\n  m42: number;\r\n  m43: number;\r\n  m44: number;\r\n  //setArray(array: WritableArrayLike<number>): this;\r\n  getRotation(): Quaternion;\r\n  setRotation(rotation: Quaternion): this;\r\n  setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this;\r\n  equals(mat: Matrix4): boolean;\r\n  copy(mat: Matrix4): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix4): this;\r\n  sub(mat: Matrix4): this;\r\n  mult(mat: Matrix4): this;\r\n\r\n  getMaxScaleOnAxis(): number;\r\n  solve(vecB: Vector4): Vector4Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  solve3(vecB: Vector3): Vector3Values;\r\n\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n\r\n  setTranslation(vector: Vector3): this;\r\n  translate(vector: Vector3): this;\r\n\r\n  setRotationX(angle: number): this;\r\n  rotateX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  rotateY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n  rotateZ(angle: number): this;\r\n\r\n  rotate(vector: Vector3, angle: number): this\r\n  rotation(matrix: Matrix3): this;\r\n\r\n  setScaling(vector: Vector3): this;\r\n  scale(vector: Vector3): this;\r\n\r\n  lookAt(eye: Vector3 | Vector3Values, target: Vector3, up: Vector3): this;\r\n\r\n  transformPoint(point: Vector3): Vector3;\r\n  transformPoint4(point: Vector4): Vector4;\r\n  transformDirection(direction: Vector3): Vector3;\r\n  transformNormal(normal: Vector3): Vector3;\r\n  \r\n  setFrustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n  setPerspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): this;\r\n  setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n}\r\n\r\nclass Matrix4Base implements Matrix4 {\r\n  readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  )\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[ 0], args[ 1], args[ 2], args[ 3],\r\n        args[ 4], args[ 5], args[ 6], args[ 7],\r\n        args[ 8], args[ 9], args[10], args[11],\r\n        args[12], args[13], args[14], args[15]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array(16);\r\n\t\t}\r\n  }\r\n\r\n  static fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4Base {\r\n    return new Matrix4Base(\r\n      m11, m21, m31, m41,\r\n      m12, m22, m32, m42,\r\n      m13, m23, m33, m43,\r\n      m14, m24, m34, m44\r\n    );\r\n  }\r\n\r\n  static fromArray(array: ArrayLike<number>): Matrix4Base {\r\n    if (array.length < 16) {\r\n      throw new Error(`Matrix4 needs an array of size 16 at least.`);\r\n    }\r\n    return new Matrix4Base(array);\r\n  }\r\n\r\n  getValues(): Matrix4Values {\r\n    const thisArray = this.array;\r\n\t\treturn [\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ];\r\n\t}\r\n\r\n\tsetValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 3] = m41;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 7] = m42;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n    thisArray[11] = m43;\r\n    thisArray[12] = m14;\r\n    thisArray[13] = m24;\r\n    thisArray[14] = m34;\r\n    thisArray[15] = m44;\r\n\r\n    return this;\r\n  }\r\n  \r\n  get m11(): number {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  get m12() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tset m12(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  get m13() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n\tset m13(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n  \r\n  get m14() {\r\n\t\treturn this.array[12];\r\n\t}\r\n\r\n\tset m14(val: number) {\r\n\t\tthis.array[12] = val;\r\n  }\r\n  \r\n  get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  get m22() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tset m22(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  get m23() {\r\n\t\treturn this.array[9];\r\n\t}\r\n\r\n\tset m23(val: number) {\r\n\t\tthis.array[9] = val;\r\n  }\r\n  \r\n  get m24() {\r\n\t\treturn this.array[13];\r\n\t}\r\n\r\n\tset m24(val: number) {\r\n\t\tthis.array[13] = val;\r\n  }\r\n  \r\n  get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  get m32() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tset m32(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  get m33() {\r\n\t\treturn this.array[10];\r\n\t}\r\n\r\n  set m33(val: number) {\r\n\t\tthis.array[10] = val;\r\n  }\r\n  \r\n  get m34() {\r\n\t\treturn this.array[14];\r\n\t}\r\n\r\n\tset m34(m34: number) {\r\n\t\tthis.array[14] = m34;\r\n  }\r\n  \r\n  get m41() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset m41(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  get m42() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tset m42(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  get m43() {\r\n\t\treturn this.array[11];\r\n\t}\r\n\r\n\tset m43(val: number) {\r\n\t\tthis.array[11] = val;\r\n  }\r\n  \r\n  get m44() {\r\n\t\treturn this.array[15];\r\n\t}\r\n\r\n\tset m44(m44: number) {\r\n\t\tthis.array[15] = m44;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 16) {\r\n\t\t\tthrow new MathError(`Array must be of length 16 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t// setArray(array: WritableArrayLike<number>): this {\r\n\t// \tthis._checkArray(array);\r\n\t// \tthisArray = array;\r\n\t// \treturn this;\r\n\t// }\r\n\r\n  getRotation(): Quaternion {\r\n    const thisArray = this.array;\r\n    const m11 = thisArray[0], m12 = thisArray[4], m13 = thisArray[ 8],\r\n          m21 = thisArray[1], m22 = thisArray[5], m23 = thisArray[ 9],\r\n          m31 = thisArray[2], m32 = thisArray[6], m33 = thisArray[10];\r\n    const trace = m11 + m22 + m33;\r\n    \r\n    let x = 0;\r\n    let y = 0;\r\n    let z = 0;\r\n    let w = 0;\r\n\r\n    if (trace > 0) {\r\n      const s = Math.sqrt(trace + 1) * 2;\r\n      w = 0.25 * s;\r\n      x = (m32 - m23) / s;\r\n      y = (m13 - m31) / s;\r\n      z = (m21 - m12) / s;\r\n    }\r\n    else if (m11 > m22 && m11 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n      w = (m32 - m23) / s;\r\n      x = 0.25 * s;\r\n      y = (m12 + m21) / s;\r\n      z = (m13 + m31) / s;\r\n    }\r\n    else if (m22 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n      w = (m13 - m31) / s;\r\n      x = (m12 + m21) / s;\r\n      y = 0.25 * s;\r\n      z = (m23 + m32) / s;\r\n    }\r\n    else {\r\n      const s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n      w = (m21 - m12) / s;\r\n      x = (m13 + m31) / s;\r\n      y = (m23 + m32) / s;\r\n      z = 0.25 * s;\r\n    }\r\n    \r\n    return new Quaternion(x, y, z, w);\r\n  }\r\n\r\n  setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this {\r\n    const thisArray = this.array;\r\n    const rotationArray = rotation.array;\r\n    const translationArray = translation.array;\r\n    const scalingArray = scaling.array;\r\n\r\n    const x = rotationArray[0];\r\n    const y = rotationArray[1];\r\n    const z = rotationArray[2];\r\n    const w = rotationArray[3];\r\n\r\n    const x2 = x + x;\r\n    const y2 = y + y;\r\n    const z2 = z + z;\r\n\r\n    const xx = x * x2;\r\n    const xy = x * y2;\r\n    const xz = x * z2;\r\n    const yy = y * y2;\r\n    const yz = y * z2;\r\n    const zz = z * z2;\r\n    const wx = w * x2;\r\n    const wy = w * y2;\r\n    const wz = w * z2;\r\n    const sx = scalingArray[0];\r\n    const sy = scalingArray[1];\r\n    const sz = scalingArray[2];\r\n\r\n    thisArray[0] = (1 - (yy + zz)) * sx;\r\n    thisArray[1] = (xy + wz) * sx;\r\n    thisArray[2] = (xz - wy) * sx;\r\n    thisArray[3] = 0;\r\n    thisArray[4] = (xy - wz) * sy;\r\n    thisArray[5] = (1 - (xx + zz)) * sy;\r\n    thisArray[6] = (yz + wx) * sy;\r\n    thisArray[7] = 0;\r\n    thisArray[8] = (xz + wy) * sz;\r\n    thisArray[9] = (yz - wx) * sz;\r\n    thisArray[10] = (1 - (xx + yy)) * sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = translationArray[0];\r\n    thisArray[13] = translationArray[1];\r\n    thisArray[14] = translationArray[2];\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n  \r\n  setRotation(quaternion: Quaternion): this {\r\n    const thisArray = this.array;\r\n    const quaternionArray = quaternion.array;\r\n\t\tconst quaternionLengthSquared = quaternion.lengthSquared();\r\n\t\tconst s = 2.0 / quaternionLengthSquared;\r\n\r\n\t\tconst x = quaternionArray[0];\r\n\t\tconst y = quaternionArray[1];\r\n\t\tconst z = quaternionArray[2];\r\n\t\tconst w = quaternionArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n    const m11 = 1 - (yy + zz);\r\n    const m21 = xy + wz;\r\n    const m31 = xz - wy;\r\n    const m12 = xy - wz;\r\n    const m22 = 1 - (xx + zz);\r\n    const m32 = yz + wx;\r\n    const m13 = xz + wy;\r\n    const m23 = yz - wx;\r\n    const m33 = 1 - (xx + yy);\r\n\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n  equals(mat: Matrix4): boolean {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n    return thisArray[ 0] === matArray[ 0]\r\n      && thisArray[ 1] === matArray[ 1]\r\n      && thisArray[ 2] === matArray[ 2]\r\n      && thisArray[ 3] === matArray[ 3]\r\n      && thisArray[ 4] === matArray[ 4]\r\n      && thisArray[ 5] === matArray[ 5]\r\n      && thisArray[ 6] === matArray[ 6]\r\n      && thisArray[ 7] === matArray[ 7]\r\n      && thisArray[ 8] === matArray[ 8]\r\n      && thisArray[ 9] === matArray[ 9]\r\n      && thisArray[10] === matArray[10]\r\n      && thisArray[11] === matArray[11]\r\n      && thisArray[12] === matArray[12]\r\n      && thisArray[13] === matArray[13]\r\n      && thisArray[14] === matArray[14]\r\n      && thisArray[15] === matArray[15];\r\n  }\r\n\r\n  copy(mat: Matrix4): this {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n\r\n    thisArray[ 0] = matArray[ 0];\r\n    thisArray[ 1] = matArray[ 1];\r\n    thisArray[ 2] = matArray[ 2];\r\n    thisArray[ 3] = matArray[ 3];\r\n    thisArray[ 4] = matArray[ 4];\r\n    thisArray[ 5] = matArray[ 5];\r\n    thisArray[ 6] = matArray[ 6];\r\n    thisArray[ 7] = matArray[ 7];\r\n    thisArray[ 8] = matArray[ 8];\r\n    thisArray[ 9] = matArray[ 9];\r\n    thisArray[10] = matArray[10];\r\n    thisArray[11] = matArray[11];\r\n    thisArray[12] = matArray[12];\r\n    thisArray[13] = matArray[13];\r\n    thisArray[14] = matArray[14];\r\n    thisArray[15] = matArray[15];\r\n\r\n    return this;\r\n  }\r\n\r\n  clone(): this {\r\n    const thisArray = this.array;\r\n    return new Matrix4Base(\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ) as this;\r\n  }\r\n\r\n  static identity(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      1, 0, 0, 0,\r\n      0, 1, 0, 0,\r\n      0, 0, 1, 0,\r\n      0, 0, 0, 1\r\n    );\r\n  }\r\n\r\n  setIdentity(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  static zeros(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0\r\n    );\r\n  }\r\n\r\n  setZeros(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 0;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 0;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 0;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  det(): number {\r\n    const thisArray = this.array;\r\n    const det2_01_01 = thisArray[0] * thisArray[5] - thisArray[1] * thisArray[4];\r\n    const det2_01_02 = thisArray[0] * thisArray[6] - thisArray[2] * thisArray[4];\r\n    const det2_01_03 = thisArray[0] * thisArray[7] - thisArray[3] * thisArray[4];\r\n    const det2_01_12 = thisArray[1] * thisArray[6] - thisArray[2] * thisArray[5];\r\n    const det2_01_13 = thisArray[1] * thisArray[7] - thisArray[3] * thisArray[5];\r\n    const det2_01_23 = thisArray[2] * thisArray[7] - thisArray[3] * thisArray[6];\r\n    const det3_201_012 = thisArray[8] * det2_01_12 - thisArray[ 9] * det2_01_02 + thisArray[10] * det2_01_01;\r\n    const det3_201_013 = thisArray[8] * det2_01_13 - thisArray[ 9] * det2_01_03 + thisArray[11] * det2_01_01;\r\n    const det3_201_023 = thisArray[8] * det2_01_23 - thisArray[10] * det2_01_03 + thisArray[11] * det2_01_02;\r\n    const det3_201_123 = thisArray[9] * det2_01_23 - thisArray[10] * det2_01_13 + thisArray[11] * det2_01_12;\r\n\r\n    return -det3_201_123 * thisArray[12] + det3_201_023 * thisArray[13]\r\n      - det3_201_013 * thisArray[14] + det3_201_012 * thisArray[15];\r\n  }\r\n\r\n  trace(): number {\r\n    const thisArray = this.array;\r\n    return thisArray[0] + thisArray[5] + thisArray[10] + thisArray[15];\r\n  }\r\n\r\n  static negate(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = -a[ 0];\r\n    o[ 1] = -a[ 1];\r\n    o[ 2] = -a[ 2];\r\n    o[ 3] = -a[ 3];\r\n    o[ 4] = -a[ 4];\r\n    o[ 5] = -a[ 5];\r\n    o[ 6] = -a[ 6];\r\n    o[ 7] = -a[ 7];\r\n    o[ 8] = -a[ 8];\r\n    o[ 9] = -a[ 9];\r\n    o[10] = -a[10];\r\n    o[11] = -a[11];\r\n    o[12] = -a[12];\r\n    o[13] = -a[13];\r\n    o[14] = -a[14];\r\n    o[15] = -a[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  negate(): this {\r\n    return Matrix4Base.negate(this, this) as this;\r\n  }\r\n\r\n  static transpose(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    o[ 0] = a11;\r\n    o[ 1] = a12;\r\n    o[ 2] = a13;\r\n    o[ 3] = a14;\r\n    o[ 4] = a21;\r\n    o[ 5] = a22;\r\n    o[ 6] = a23;\r\n    o[ 7] = a24;\r\n    o[ 8] = a31;\r\n    o[ 9] = a32;\r\n    o[10] = a33;\r\n    o[11] = a34;\r\n    o[12] = a41;\r\n    o[13] = a42;\r\n    o[14] = a43;\r\n    o[15] = a44;\r\n    \r\n    return out;\r\n  }\r\n\r\n  transpose(): this {\r\n    return Matrix4Base.transpose(this, this) as this;\r\n  }\r\n\r\n  static invert(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const o00 = a[ 0];\r\n    const o01 = a[ 1];\r\n    const o02 = a[ 2];\r\n    const o03 = a[ 3];\r\n    const o10 = a[ 4];\r\n    const o11 = a[ 5];\r\n    const o12 = a[ 6];\r\n    const o13 = a[ 7];\r\n    const o20 = a[ 8];\r\n    const o21 = a[ 9];\r\n    const o22 = a[10];\r\n    const o23 = a[11];\r\n    const o30 = a[12];\r\n    const o31 = a[13];\r\n    const o32 = a[14];\r\n    const o33 = a[15];\r\n\r\n    const t00 = o00 * o11 - o01 * o10;\r\n    const t01 = o00 * o12 - o02 * o10;\r\n    const t02 = o00 * o13 - o03 * o10;\r\n    const t03 = o01 * o12 - o02 * o11;\r\n    const t04 = o01 * o13 - o03 * o11;\r\n    const t05 = o02 * o13 - o03 * o12;\r\n    const t06 = o20 * o31 - o21 * o30;\r\n    const t07 = o20 * o32 - o22 * o30;\r\n    const t08 = o20 * o33 - o23 * o30;\r\n    const t09 = o21 * o32 - o22 * o31;\r\n    const t10 = o21 * o33 - o23 * o31;\r\n    const t11 = o22 * o33 - o23 * o32;\r\n\r\n    const d = (t00 * t11 - t01 * t10 + t02 * t09 + t03 * t08 - t04 * t07 + t05 * t06);\r\n    \r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    const invDet = 1 / d;\r\n\r\n    o[ 0] = (o11 * t11 - o12 * t10 + o13 * t09) * invDet;\r\n    o[ 1] = (-o01 * t11 + o02 * t10 - o03 * t09) * invDet;\r\n    o[ 2] = (o31 * t05 - o32 * t04 + o33 * t03) * invDet;\r\n    o[ 3] = (-o21 * t05 + o22 * t04 - o23 * t03) * invDet;\r\n    o[ 4] = (-o10 * t11 + o12 * t08 - o13 * t07) * invDet;\r\n    o[ 5] = (o00 * t11 - o02 * t08 + o03 * t07) * invDet;\r\n    o[ 6] = (-o30 * t05 + o32 * t02 - o33 * t01) * invDet;\r\n    o[ 7] = (o20 * t05 - o22 * t02 + o23 * t01) * invDet;\r\n    o[ 8] = (o10 * t10 - o11 * t08 + o13 * t06) * invDet;\r\n    o[ 9] = (-o00 * t10 + o01 * t08 - o03 * t06) * invDet;\r\n    o[10] = (o30 * t04 - o31 * t02 + o33 * t00) * invDet;\r\n    o[11] = (-o20 * t04 + o21 * t02 - o23 * t00) * invDet;\r\n    o[12] = (-o10 * t09 + o11 * t07 - o12 * t06) * invDet;\r\n    o[13] = (o00 * t09 - o01 * t07 + o02 * t06) * invDet;\r\n    o[14] = (-o30 * t03 + o31 * t01 - o32 * t00) * invDet;\r\n    o[15] = (o20 * t03 - o21 * t01 + o22 * t00) * invDet;\r\n\r\n    return out;\r\n  }\r\n\r\n  invert(): this {\r\n    return Matrix4Base.invert(this, this) as this;\r\n  }\r\n\r\n  static add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] + b[ 0];\r\n    o[ 1] = a[ 1] + b[ 1];\r\n    o[ 2] = a[ 2] + b[ 2];\r\n    o[ 3] = a[ 3] + b[ 3];\r\n    o[ 4] = a[ 4] + b[ 4];\r\n    o[ 5] = a[ 5] + b[ 5];\r\n    o[ 6] = a[ 6] + b[ 6];\r\n    o[ 7] = a[ 7] + b[ 7];\r\n    o[ 8] = a[ 8] + b[ 8];\r\n    o[ 9] = a[ 9] + b[ 9];\r\n    o[10] = a[10] + b[10];\r\n    o[11] = a[11] + b[11];\r\n    o[12] = a[12] + b[12];\r\n    o[13] = a[13] + b[13];\r\n    o[14] = a[14] + b[14];\r\n    o[15] = a[15] + b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  add(matrix: Matrix4): this {\r\n    return Matrix4Base.add(this, matrix, this) as this;\r\n  }\r\n\r\n  static sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] - b[ 0];\r\n    o[ 1] = a[ 1] - b[ 1];\r\n    o[ 2] = a[ 2] - b[ 2];\r\n    o[ 3] = a[ 3] - b[ 3];\r\n    o[ 4] = a[ 4] - b[ 4];\r\n    o[ 5] = a[ 5] - b[ 5];\r\n    o[ 6] = a[ 6] - b[ 6];\r\n    o[ 7] = a[ 7] - b[ 7];\r\n    o[ 8] = a[ 8] - b[ 8];\r\n    o[ 9] = a[ 9] - b[ 9];\r\n    o[10] = a[10] - b[10];\r\n    o[11] = a[11] - b[11];\r\n    o[12] = a[12] - b[12];\r\n    o[13] = a[13] - b[13];\r\n    o[14] = a[14] - b[14];\r\n    o[15] = a[15] - b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  sub(matrix: Matrix4): this {\r\n    return Matrix4Base.sub(this, matrix, this) as this;\r\n  }\r\n\r\n  static mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    const b11 = b[ 0];\r\n    const b21 = b[ 1];\r\n    const b31 = b[ 2];\r\n    const b41 = b[ 3];\r\n    const b12 = b[ 4];\r\n    const b22 = b[ 5];\r\n    const b32 = b[ 6];\r\n    const b42 = b[ 7];\r\n    const b13 = b[ 8];\r\n    const b23 = b[ 9];\r\n    const b33 = b[10];\r\n    const b43 = b[11];\r\n    const b14 = b[12];\r\n    const b24 = b[13];\r\n    const b34 = b[14];\r\n    const b44 = b[15];\r\n\r\n    o[ 0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n    o[ 1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n    o[ 2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n    o[ 3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n    o[ 4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n    o[ 5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n    o[ 6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n    o[ 7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n    o[ 8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n    o[ 9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n    o[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n    o[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n    o[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n    o[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n    o[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n    o[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n    return out;\r\n  }\r\n\r\n  mult(matrix: Matrix4): this {\r\n    return Matrix4Base.mult(this, matrix, this) as this;\r\n  }\r\n\r\n\tgetMaxScaleOnAxis(): number {\r\n    const thisArray = this.array;\r\n    const scaleXSq = thisArray[ 0] * thisArray[ 0] + thisArray[ 1] * thisArray[ 1] + thisArray[ 2] * thisArray[ 2];\r\n    const scaleYSq = thisArray[ 4] * thisArray[ 4] + thisArray[ 5] * thisArray[ 5] + thisArray[ 6] * thisArray[ 6];\r\n    const scaleZSq = thisArray[ 8] * thisArray[ 8] + thisArray[ 9] * thisArray[ 9] + thisArray[10] * thisArray[10];\r\n\r\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\r\n  }\r\n\r\n  writeIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n    const thisArray = this.array;\r\n\t\tarray[offset     ] = thisArray[ 0];\r\n\t\tarray[offset +  1] = thisArray[ 1];\r\n    array[offset +  2] = thisArray[ 2];\r\n    array[offset +  3] = thisArray[ 3];\r\n\t\tarray[offset +  4] = thisArray[ 4];\r\n    array[offset +  5] = thisArray[ 5];\r\n    array[offset +  6] = thisArray[ 6];\r\n\t\tarray[offset +  7] = thisArray[ 7];\r\n    array[offset +  8] = thisArray[ 8];\r\n    array[offset +  9] = thisArray[ 9];\r\n\t\tarray[offset + 10] = thisArray[10];\r\n    array[offset + 11] = thisArray[11];\r\n    array[offset + 12] = thisArray[12];\r\n\t\tarray[offset + 13] = thisArray[13];\r\n    array[offset + 14] = thisArray[14];\r\n    array[offset + 15] = thisArray[15];\r\n  }\r\n    \r\n  readFromArray(array: ArrayLike<number>, offset: number = 0): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = array[offset     ];\r\n    thisArray[ 1] = array[offset +  1];\r\n    thisArray[ 2] = array[offset +  2];\r\n    thisArray[ 3] = array[offset +  3];\r\n    thisArray[ 4] = array[offset +  4];\r\n    thisArray[ 5] = array[offset +  5];\r\n    thisArray[ 6] = array[offset +  6];\r\n    thisArray[ 7] = array[offset +  7];\r\n    thisArray[ 8] = array[offset +  8];\r\n    thisArray[ 9] = array[offset +  9];\r\n    thisArray[10] = array[offset + 10];\r\n    thisArray[11] = array[offset + 11];\r\n    thisArray[12] = array[offset + 12];\r\n    thisArray[13] = array[offset + 13];\r\n    thisArray[14] = array[offset + 14];\r\n    thisArray[15] = array[offset + 15];\r\n\r\n    return this;\r\n  }\r\n\r\n  solve(vecB: Vector4): Vector4Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a14 = a[ 3];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a24 = a[ 7];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const a34 = a[11];\r\n    const a41 = a[12];\r\n    const a42 = a[13];\r\n    const a43 = a[14];\r\n    const a44 = a[15];\r\n    const b00 = a11 * a22 - a12 * a21;\r\n    const b01 = a11 * a23 - a13 * a21;\r\n    const b02 = a11 * a24 - a14 * a21;\r\n    const b03 = a12 * a23 - a13 * a22;\r\n    const b04 = a12 * a24 - a14 * a22;\r\n    const b05 = a13 * a24 - a14 * a23;\r\n    const b06 = a31 * a42 - a32 * a41;\r\n    const b07 = a31 * a43 - a33 * a41;\r\n    const b08 = a31 * a44 - a34 * a41;\r\n    const b09 = a32 * a43 - a33 * a42;\r\n    const b10 = a32 * a44 - a34 * a42;\r\n    const b11 = a33 * a44 - a34 * a43;\r\n\r\n    const bX = vecB.x;\r\n    const bY = vecB.y;\r\n    const bZ = vecB.z;\r\n    const bW = vecB.w;\r\n\r\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (det != 0) {\r\n      det = 1 / det;\r\n    }\r\n\r\n    const x = det *\r\n      ((a22 * b11 - a23 * b10 + a24 * b09) * bX -\r\n      (a21 * b11 - a23 * b08 + a24 * b07) * bY +\r\n      (a21 * b10 - a22 * b08 + a24 * b06) * bZ -\r\n      (a21 * b09 - a22 * b07 + a23 * b06) * bW)\r\n    const y = det *\r\n      -((a12 * b11 - a13 * b10 + a14 * b09) * bX -\r\n      (a11 * b11 - a13 * b08 + a14 * b07) * bY +\r\n      (a11 * b10 - a12 * b08 + a14 * b06) * bZ -\r\n      (a11 * b09 - a12 * b07 + a13 * b06) * bW)\r\n    const z = det *\r\n      ((a42 * b05 - a43 * b04 + a44 * b03) * bX -\r\n      (a41 * b05 - a43 * b02 + a44 * b01) * bY +\r\n      (a41 * b04 - a42 * b02 + a44 * b00) * bZ -\r\n      (a41 * b03 - a42 * b01 + a43 * b00) * bW)\r\n    const w = det *\r\n      -((a32 * b05 - a33 * b04 + a34 * b03) * bX -\r\n      (a31 * b05 - a33 * b02 + a34 * b01) * bY +\r\n      (a31 * b04 - a32 * b02 + a34 * b00) * bZ -\r\n      (a31 * b03 - a32 * b01 + a33 * b00) * bW);\r\n    \r\n    return [\r\n      x, y, z, w\r\n    ];\r\n  }\r\n\r\n  solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[4];\r\n    const a22 = a[5];\r\n    const bx = vecB.x - a[8];\r\n    const by = vecB.y - a[9];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by);\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n\r\n  solve3(vecB: Vector3): Vector3Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const bx = vecB.x - a[12];\r\n    const by = vecB.y - a[13];\r\n    const bz = vecB.z - a[14];\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n\r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n\r\n    return [\r\n      x, y, z\r\n    ];\r\n  }\r\n\r\n  static translation(vector: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setTranslation(vector);\r\n  }\r\n\r\n  setTranslation(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n\r\n    const x = vecArray[0];\r\n    const y = vecArray[1];\r\n    const z = vecArray[2];\r\n\r\n    /*thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;*/\r\n    thisArray[12] = x;\r\n    thisArray[13] = y;\r\n    thisArray[14] = z;\r\n    //thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  translate(vector: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vectorArray = vector.array;\r\n\r\n    const tx = vectorArray[0];\r\n    const ty = vectorArray[1];\r\n    const tz = vectorArray[2];\r\n    const tw = 1;\r\n\r\n    const t1 = thisArray[0] * tx + thisArray[4] * ty + thisArray[ 8] * tz + thisArray[12] * tw;\r\n    const t2 = thisArray[1] * tx + thisArray[5] * ty + thisArray[ 9] * tz + thisArray[13] * tw;\r\n    const t3 = thisArray[2] * tx + thisArray[6] * ty + thisArray[10] * tz + thisArray[14] * tw;\r\n    const t4 = thisArray[3] * tx + thisArray[7] * ty + thisArray[11] * tz + thisArray[15] * tw;\r\n\r\n    thisArray[12] = t1;\r\n    thisArray[13] = t2;\r\n    thisArray[14] = t3;\r\n    thisArray[15] = t4;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationX(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationX(angle);\r\n  }\r\n\r\n  setRotationX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = sinAngle;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = -sinAngle;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  rotateX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[4] *  cosAngle + thisArray[ 8] * sinAngle;\r\n    const t2 = thisArray[5] *  cosAngle + thisArray[ 9] * sinAngle;\r\n    const t3 = thisArray[6] *  cosAngle + thisArray[10] * sinAngle;\r\n    const t4 = thisArray[7] *  cosAngle + thisArray[11] * sinAngle;\r\n    const t5 = thisArray[4] * -sinAngle + thisArray[ 8] * cosAngle;\r\n    const t6 = thisArray[5] * -sinAngle + thisArray[ 9] * cosAngle;\r\n    const t7 = thisArray[6] * -sinAngle + thisArray[10] * cosAngle;\r\n    const t8 = thisArray[7] * -sinAngle + thisArray[11] * cosAngle;\r\n\r\n    thisArray[ 4] = t1;\r\n    thisArray[ 5] = t2;\r\n    thisArray[ 6] = t3;\r\n    thisArray[ 7] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationY(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationY(angle);\r\n  }\r\n\r\n  setRotationY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = -sinAngle;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = sinAngle;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  rotateY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[ 0] * cosAngle + thisArray[ 8] * -sinAngle;\r\n    const t2 = thisArray[ 1] * cosAngle + thisArray[ 9] * -sinAngle;\r\n    const t3 = thisArray[ 2] * cosAngle + thisArray[10] * -sinAngle;\r\n    const t4 = thisArray[ 3] * cosAngle + thisArray[11] * -sinAngle;\r\n    const t5 = thisArray[ 0] * sinAngle + thisArray[ 8] *  cosAngle;\r\n    const t6 = thisArray[ 1] * sinAngle + thisArray[ 9] *  cosAngle;\r\n    const t7 = thisArray[ 2] * sinAngle + thisArray[10] *  cosAngle;\r\n    const t8 = thisArray[ 3] * sinAngle + thisArray[11] *  cosAngle;\r\n\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationZ(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationZ(angle);\r\n  }\r\n\r\n  setRotationZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngles = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = sinAngles;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = -sinAngles;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  rotateZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[0] *  cosAngle + thisArray[4] * sinAngle;\r\n    const t2 = thisArray[1] *  cosAngle + thisArray[5] * sinAngle;\r\n    const t3 = thisArray[2] *  cosAngle + thisArray[6] * sinAngle;\r\n    const t4 = thisArray[3] *  cosAngle + thisArray[7] * sinAngle;\r\n    const t5 = thisArray[0] * -sinAngle + thisArray[4] * cosAngle;\r\n    const t6 = thisArray[1] * -sinAngle + thisArray[5] * cosAngle;\r\n    const t7 = thisArray[2] * -sinAngle + thisArray[6] * cosAngle;\r\n    const t8 = thisArray[3] * -sinAngle + thisArray[7] * cosAngle;\r\n    \r\n    thisArray[0] = t1;\r\n    thisArray[1] = t2;\r\n    thisArray[2] = t3;\r\n    thisArray[3] = t4;\r\n    thisArray[4] = t5;\r\n    thisArray[5] = t6;\r\n    thisArray[6] = t7;\r\n    thisArray[7] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotation(matrix: Matrix3): Matrix4Base {\r\n    return new Matrix4Base().rotation(matrix);\r\n  }\r\n\r\n  rotation(matrix: Matrix3): this {\r\n    const thisArray = this.array;\r\n    const matArray = matrix.array;\r\n\r\n    thisArray[ 0] = matArray[0];\r\n    thisArray[ 1] = matArray[1];\r\n    thisArray[ 2] = matArray[2];\r\n    thisArray[ 4] = matArray[3];\r\n    thisArray[ 5] = matArray[4];\r\n    thisArray[ 6] = matArray[5];\r\n    thisArray[ 8] = matArray[6];\r\n    thisArray[ 9] = matArray[7];\r\n    thisArray[10] = matArray[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  rotate(axis: Vector3, angle: number): this {\r\n    const thisArray = this.array;\r\n    const axisArray = axis.array;\r\n    const axisLength = axis.length();\r\n    const x = axisArray[0] / axisLength;\r\n    const y = axisArray[1] / axisLength;\r\n    const z = axisArray[2] / axisLength;\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n    const C = 1.0 - c;\r\n    const m11 = x * x * C + c;\r\n    const m12 = x * y * C - z * s;\r\n    const m13 = x * z * C + y * s;\r\n    const m21 = y * x * C + z * s;\r\n    const m22 = y * y * C + c;\r\n    const m23 = y * z * C - x * s;\r\n    const m31 = z * x * C - y * s;\r\n    const m32 = z * y * C + x * s;\r\n    const m33 = z * z * C + c;\r\n    const t1  = thisArray[0] * m11 + thisArray[4] * m21 + thisArray[8] * m31;\r\n    const t2  = thisArray[1] * m11 + thisArray[5] * m21 + thisArray[9] * m31;\r\n    const t3  = thisArray[2] * m11 + thisArray[6] * m21 + thisArray[10] * m31;\r\n    const t4  = thisArray[3] * m11 + thisArray[7] * m21 + thisArray[11] * m31;\r\n    const t5  = thisArray[0] * m12 + thisArray[4] * m22 + thisArray[8] * m32;\r\n    const t6  = thisArray[1] * m12 + thisArray[5] * m22 + thisArray[9] * m32;\r\n    const t7  = thisArray[2] * m12 + thisArray[6] * m22 + thisArray[10] * m32;\r\n    const t8  = thisArray[3] * m12 + thisArray[7] * m22 + thisArray[11] * m32;\r\n    const t9  = thisArray[0] * m13 + thisArray[4] * m23 + thisArray[8] * m33;\r\n    const t10 = thisArray[1] * m13 + thisArray[5] * m23 + thisArray[9] * m33;\r\n    const t11 = thisArray[2] * m13 + thisArray[6] * m23 + thisArray[10] * m33;\r\n    const t12 = thisArray[3] * m13 + thisArray[7] * m23 + thisArray[11] * m33;\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 4] = t5;\r\n    thisArray[ 5] = t6;\r\n    thisArray[ 6] = t7;\r\n    thisArray[ 7] = t8;\r\n    thisArray[ 8] = t9;\r\n    thisArray[ 9] = t10;\r\n    thisArray[10] = t11;\r\n    thisArray[11] = t12;\r\n\r\n    return this;\r\n  }\r\n\r\n  static scaling(vec: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setScaling(vec);\r\n  }\r\n\r\n  setScaling(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] = sx;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = sy;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  scale(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] *= sx;\r\n    thisArray[ 1] *= sx;\r\n    thisArray[ 2] *= sx;\r\n    thisArray[ 3] *= sx;\r\n    thisArray[ 4] *= sy;\r\n    thisArray[ 5] *= sy;\r\n    thisArray[ 6] *= sy;\r\n    thisArray[ 7] *= sy;\r\n    thisArray[ 8] *= sz;\r\n    thisArray[ 9] *= sz;\r\n    thisArray[10] *= sz;\r\n    thisArray[11] *= sz;\r\n    thisArray[12] *= sw;\r\n    thisArray[13] *= sw;\r\n    thisArray[14] *= sw;\r\n    thisArray[15] *= sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4): Matrix4 {\r\n    const eyeArray = eye.array;\r\n    const upArray = up.array;\r\n    const targetArray = target.array;\r\n    const outArray = out.array;\r\n    const e0 = eyeArray[0];\r\n    const e1 = eyeArray[1];\r\n    const e2 = eyeArray[2];\r\n    const u0 = upArray[0];\r\n    const u1 = upArray[1];\r\n    const u2 = upArray[2];\r\n    const t0 = targetArray[0];\r\n    const t1 = targetArray[1];\r\n    const t2 = targetArray[2];\r\n    let x0, x1, x2, y0, y1, y2, z0, z1, z2, length;\r\n\r\n    z0 = e0 - t0;\r\n    z1 = e1 - t1;\r\n    z2 = e2 - t2;\r\n    length = Math.hypot(z0, z1, z2);\r\n    if (length > 0) {\r\n      length = 1 / Math.hypot(z0, z1, z2);\r\n      z0 *= length;\r\n      z1 *= length;\r\n      z2 *= length;\r\n    }\r\n  \r\n    x0 = u1 * z2 - u2 * z1;\r\n    x1 = u2 * z0 - u0 * z2;\r\n    x2 = u0 * z1 - u1 * z0;\r\n    length = Math.hypot(x0, x1, x2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      x0 *= length;\r\n      x1 *= length;\r\n      x2 *= length;\r\n    }\r\n\r\n    y0 = z1 * x2 - z2 * x1;\r\n    y1 = z2 * x0 - z0 * x2;\r\n    y2 = z0 * x1 - z1 * x0;\r\n    length = Math.hypot(y0, y1, y2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      y0 *= length;\r\n      y1 *= length;\r\n      y2 *= length;\r\n    }\r\n  \r\n    outArray[ 0] = x0;\r\n    outArray[ 1] = x1;\r\n    outArray[ 2] = x2;\r\n    outArray[ 3] = 0;\r\n    outArray[ 4] = y0;\r\n    outArray[ 5] = y1;\r\n    outArray[ 6] = y2;\r\n    outArray[ 7] = 0;\r\n    outArray[ 8] = z0;\r\n    outArray[ 9] = z1;\r\n    outArray[10] = z2;\r\n    outArray[11] = 0;\r\n    outArray[12] = e0;\r\n    outArray[13] = e1;\r\n    outArray[14] = e2;\r\n    outArray[15] = 1;\r\n  \r\n    return out;\r\n  }\r\n\r\n  lookAt(eye: Vector3, target: Vector3, up: Vector3): this {\r\n    return Matrix4Base.lookAt(eye, target, up, this) as this;\r\n  }\r\n\r\n  transformPoint(point: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const pointArray = point.array;\r\n\r\n    const x = pointArray[0];\r\n    const y = pointArray[1];\r\n    const z = pointArray[2];\r\n\r\n    const d = x * thisArray[3] + y * thisArray[7] + z * thisArray[11] + thisArray[15];\r\n\r\n    point.setValues(\r\n      (x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8] + thisArray[12]) / d,\r\n      (x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9] + thisArray[13]) / d,\r\n      (x * thisArray[2] + y * thisArray[6] + z * thisArray[10] + thisArray[14]) / d\r\n    );\r\n\r\n    return point;\r\n  }\r\n\r\n  transformPoint4(point: Vector4): Vector4 {\r\n    const thisArray = this.array;\r\n    const pointArray = point.array;\r\n\r\n    const x = pointArray[0];\r\n    const y = pointArray[1];\r\n    const z = pointArray[2];\r\n    const w = pointArray[3];\r\n\r\n    const d = x * thisArray[3] + y * thisArray[7] + z * thisArray[11] + w * thisArray[15];\r\n\r\n    point.setValues(\r\n      (x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8] + thisArray[12]) / d,\r\n      (x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9] + thisArray[13]) / d,\r\n      (x * thisArray[2] + y * thisArray[6] + z * thisArray[10] + thisArray[14]) / d,\r\n      (x * thisArray[3] + y * thisArray[7] + z * thisArray[11] + thisArray[15]) / d\r\n    );\r\n\r\n    return point;\r\n  }\r\n\r\n  transformDirection(direction: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const directionArray = direction.array;\r\n\r\n    const x = directionArray[0];\r\n    const y = directionArray[1];\r\n    const z = directionArray[2];\r\n\r\n    direction.setValues(\r\n      x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8],\r\n      x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9],\r\n      x * thisArray[2] + y * thisArray[6] + z * thisArray[10]\r\n    );\r\n\r\n    return direction;\r\n  }\r\n\r\n  transformNormal(normal: Vector3): Vector3 {\r\n    const normalArray = normal.array;\r\n\r\n    const thisInvArray = this.invert().array;\r\n\r\n    const x = normalArray[0];\r\n    const y = normalArray[1];\r\n    const z = normalArray[2];\r\n\r\n    normal.setValues(\r\n      x * thisInvArray[0] + y * thisInvArray[4] + z * thisInvArray[ 8],\r\n      x * thisInvArray[1] + y * thisInvArray[5] + z * thisInvArray[ 9],\r\n      x * thisInvArray[2] + y * thisInvArray[6] + z * thisInvArray[10]\r\n    );\r\n\r\n    this.invert();\r\n\r\n    return normal;\r\n  }\r\n\r\n  static perspective(fov: number, aspect: number, zNear: number, zFar: number): Matrix4Base {\r\n    return new Matrix4Base().setPerspective(fov, aspect, zNear, zFar);\r\n  }\r\n\r\n  setPerspective(fov: number, aspect: number, zNear: number, zFar: number): this {\r\n    const thisArray = this.array;\r\n    const width = Math.tan(Math.PI * 0.5 - 0.5 * fov);\r\n    const height = width / aspect;\r\n    const rangeInv = 1 / (zNear - zFar);\r\n\r\n    thisArray[ 0] = height;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = width;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = (zNear + zFar) * rangeInv;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = (2 * zNear * zFar) * rangeInv;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setOrthographic(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 2 / (right - left);\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 2 / (top - bottom);\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 2 / (near - far);\r\n    thisArray[11] = 0;\r\n    thisArray[12] = (right + left) / (left - right);\r\n    thisArray[13] = (top + bottom) / (bottom - top);\r\n    thisArray[14] = (far + near) / (near - far);\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static frustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setFrustrum(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  setFrustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    const invWidth = 1 / (right - left);\r\n    const invHeight = 1 / (top - bottom);\r\n    const invDepth = 1 / (near - far);\r\n\r\n    thisArray[ 0] = near * 2 * invWidth;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = near * 2 * invHeight;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = (right + left) * invWidth;\r\n    thisArray [9] = (top + bottom) * invHeight;\r\n    thisArray[10] = (far + near) * invDepth;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = far * near * 2 * invDepth;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n}\r\n\r\nvar Matrix4: Matrix4Constructor = Matrix4Base;\r\n\r\nconst Matrix4Injector: Injector<Matrix4Constructor> = new Injector({\r\n\tdefaultCtor: Matrix4Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix4Constructor) => {\r\n\t\t\tMatrix4 = ctor;\r\n\t\t}\r\n});","export { UUID };\r\nexport { Identifiable };\r\nexport { UUIDGeneratorBase };\r\nexport { UUIDGenerator };\r\n\r\ntype UUID = string;\r\n\r\ninterface Identifiable {\r\n    readonly uuid: UUID;\r\n}\r\n\r\ninterface UUIDGenerator {\r\n    newUUID(): UUID;\r\n}\r\n\r\nclass UUIDGeneratorBase {\r\n\r\n    private _count: number;\r\n\r\n    constructor() {\r\n        this._count = 0\r\n    }\r\n\r\n    newUUID(): UUID {\r\n        return (++this._count).toString(16);\r\n    }\r\n}\r\n\r\nconst UUIDGenerator: UUIDGenerator = new UUIDGeneratorBase();","import { BoundingBox } from \"../../../core/rendering/scenes/geometries/bounding/BoundingBox\";\r\nimport { Matrix4 } from \"../../maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../maths/algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../maths/extensions/pools/Vector3Pools\";\r\nimport { Plane } from \"../../maths/geometry/primitives/Plane\";\r\nimport { Injector } from \"../../patterns/injectors/Injector\";\r\nimport { BoundingSphere } from \"./BoundingSphere\";\r\n\r\nexport { Frustrum };\r\nexport { FrustrumInjector };\r\n\r\nconst tempVector = new Vector3();\r\n\r\ninterface Frustrum {\r\n    readonly nearPlane: Plane;\r\n    readonly farPlane: Plane;\r\n    readonly topPlane: Plane;\r\n    readonly bottomPlane: Plane;\r\n    readonly leftPlane: Plane;\r\n    readonly rightPlane: Plane;\r\n    copy(frustrum: Frustrum): Frustrum;\r\n\tclone(): Frustrum;\r\n\tsetFromPerspectiveMatrix(matrix: Matrix4): Frustrum;\r\n\tset(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane\r\n    ): Frustrum;\r\n\tintersectsSphere(sphere: BoundingSphere): boolean;\r\n\tintersectsBox(box: BoundingBox): boolean;\r\n\tcontainsPoint(point: Vector3): boolean;\r\n}\r\n\r\ninterface FrustrumConstructor {\r\n    readonly prototype: Frustrum;\r\n    new(): Frustrum;\r\n}\r\n\r\nclass FrustrumBase implements Frustrum {\r\n    readonly nearPlane: Plane;\r\n    readonly farPlane: Plane;\r\n    readonly topPlane: Plane;\r\n    readonly bottomPlane: Plane;\r\n    readonly leftPlane: Plane;\r\n    readonly rightPlane: Plane;\r\n\r\n    constructor() {\r\n\t\tthis.nearPlane = new Plane();\r\n        this.farPlane = new Plane();\r\n        this.topPlane = new Plane();\r\n        this.bottomPlane = new Plane();\r\n        this.leftPlane = new Plane();\r\n        this.rightPlane = new Plane();\r\n    }\r\n\r\n    set(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane): Frustrum {\r\n\r\n\t\tthis.nearPlane.copy(nearPlane);\r\n\t\tthis.farPlane.copy(farPlane);\r\n        this.topPlane.copy(topPlane);\r\n        this.bottomPlane.copy(bottomPlane);\r\n        this.leftPlane.copy(leftPlane);\r\n        this.rightPlane.copy(rightPlane);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n    copy(frustrum: FrustrumBase): FrustrumBase {\r\n        this.set(\r\n            frustrum.nearPlane,\r\n            frustrum.farPlane,\r\n            frustrum.topPlane,\r\n            frustrum.bottomPlane,\r\n            frustrum.leftPlane,\r\n            frustrum.rightPlane\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n\tclone(): FrustrumBase {\r\n\t\treturn new FrustrumBase().copy(this);\r\n    }\r\n    \r\n\tsetFromPerspectiveMatrix(matrix: Matrix4): FrustrumBase {\r\n        const m11 = matrix.m11;\r\n        const m12 = matrix.m12;\r\n        const m13 = matrix.m13;\r\n        const m14 = matrix.m14;\r\n        const m21 = matrix.m21;\r\n        const m22 = matrix.m22;\r\n        const m23 = matrix.m23;\r\n        const m24 = matrix.m24;\r\n        const m31 = matrix.m31;\r\n        const m32 = matrix.m32;\r\n        const m33 = matrix.m33;\r\n        const m34 = matrix.m34;\r\n        const m41 = matrix.m41;\r\n        const m42 = matrix.m42;\r\n        const m43 = matrix.m43;\r\n        const m44 = matrix.m44;\r\n\r\n        this.nearPlane.set(m31 + m41, m32 + m42, m33 + m43, m34 + m44).normalized();\r\n        this.farPlane.set(-m31 + m41, -m32 + m42, -m33 + m43, -m34 + m44).normalized();\r\n        this.bottomPlane.set(m21 + m41, m22 + m42, m23 + m43, m24 + m44).normalized();\r\n        this.topPlane.set(-m21 + m41, -m22 + m42, -m23 + m43, -m24 + m44).normalized();\r\n        this.leftPlane.set(m11 + m41, m12 + m42, m13 + m43, m14 + m44).normalized();\r\n        this.rightPlane.set(-m11 + m41, -m12 + m42, -m13 + m43, -m14 + m44).normalized();\r\n        \r\n\t\treturn this;\r\n    }\r\n    \r\n\tintersectsSphere(sphere: BoundingSphere): boolean {\r\n        const center = sphere.center;\r\n        const radius = sphere.radius;\r\n        return center.dot(this.nearPlane.normal) + this.nearPlane.constant + radius <= 0 ||\r\n            center.dot(this.farPlane.normal) + this.farPlane.constant + radius <= 0 ||\r\n            center.dot(this.bottomPlane.normal) + this.bottomPlane.constant + radius <= 0 ||\r\n            center.dot(this.topPlane.normal) + this.topPlane.constant + radius <= 0 ||\r\n            center.dot(this.leftPlane.normal) + this.leftPlane.constant + radius <= 0 ||\r\n            center.dot(this.rightPlane.normal) + this.rightPlane.constant + radius <= 0;\r\n\t}\r\n\r\n\tintersectsBox(box: BoundingBox): boolean {\r\n        let intersects = true;\r\n\r\n        const {max: boxMax, min: boxMin} = box;\r\n        const {nearPlane, farPlane, bottomPlane, topPlane, leftPlane, rightPlane} = this;\r\n        intersects = \r\n            nearPlane.distanceToPoint(tempVector.setValues(\r\n                nearPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                nearPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                nearPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            farPlane.distanceToPoint(tempVector.setValues(\r\n                farPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                farPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                farPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            bottomPlane.distanceToPoint(tempVector.setValues(\r\n                bottomPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                bottomPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                bottomPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            topPlane.distanceToPoint(tempVector.setValues(\r\n                topPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                topPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                topPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            leftPlane.distanceToPoint(tempVector.setValues(\r\n                leftPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                leftPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                leftPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            rightPlane.distanceToPoint(tempVector.setValues(\r\n                rightPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                rightPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                rightPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0;\r\n\r\n\t\treturn intersects;\r\n\t}\r\n\r\n\tcontainsPoint(point: Vector3): boolean {\r\n        return this.nearPlane.distanceToPoint(point) >= 0 &&\r\n            this.farPlane.distanceToPoint(point) >= 0 &&\r\n            this.bottomPlane.distanceToPoint(point) >= 0 &&\r\n            this.topPlane.distanceToPoint(point) >= 0 &&\r\n            this.leftPlane.distanceToPoint(point) >= 0 &&\r\n            this.rightPlane.distanceToPoint(point) >= 0;\r\n    }\r\n}\r\n\r\nvar Frustrum: FrustrumConstructor = FrustrumBase;\r\nconst FrustrumInjector: Injector<FrustrumConstructor> = new Injector({\r\n\tdefaultCtor: FrustrumBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: FrustrumConstructor) => {\r\n\t\t\tFrustrum = ctor;\r\n\t\t}\r\n});","import { EulerAngles } from \"../../libs/maths/algebra/angles/EulerAngles\";\r\nimport { Matrix3 } from \"../../libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Quaternion, QuaternionPool } from \"../../libs/maths/algebra/quaternions/Quaternion\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../libs/maths/extensions/pools/Vector3Pools\";\r\nimport { UUID, UUIDGenerator } from \"../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Object3D } from \"../rendering/scenes/objects/Object3D\";\r\n\r\nexport { Transform };\r\nexport { TransformBase };\r\n\r\ninterface TransformConstructor {\r\n    readonly prototype: Transform;\r\n    new(): Transform;\r\n    new(owner: Object3D): Transform;\r\n}\r\n\r\nconst tempMatrix = new Matrix4();\r\n\r\ninterface Transform {\r\n    hasChanged: boolean;\r\n\r\n    readonly localArray: Float32Array;\r\n    readonly array: Float32Array;\r\n    readonly uuid: UUID;\r\n    readonly owner: Object3D | null;\r\n\r\n    localMatrix: Matrix4;\r\n    matrix: Matrix4;\r\n\r\n    getMatrix(matrix: Matrix4): Matrix4;\r\n    setMatrix(matrix: Matrix4): this;\r\n    getLocalMatrix(matrix: Matrix4): Matrix4;\r\n    setLocalMatrix(matrix: Matrix4): this;\r\n\r\n    getRight(vector: Vector3): Vector3;\r\n    getLeft(vector: Vector3): Vector3;\r\n    getUp(vector: Vector3): Vector3;\r\n    getDown(vector: Vector3): Vector3;\r\n    getForward(vector: Vector3): Vector3;\r\n    getBackward(vector: Vector3): Vector3;\r\n\r\n    getTranslation(vector: Vector3): Vector3;\r\n    setTranslation(vector: Vector3): this;\r\n    translate(vector: Vector3): this;\r\n\r\n    getRotation(rotation: Quaternion): Quaternion;\r\n    setRotation(rotation: Quaternion): this;\r\n    rotate(rotation: Quaternion): this;\r\n\r\n    getScaling(scaling: Vector3): Vector3;\r\n    setScaling(scaling: Vector3): this;\r\n    scale(scaling: Vector3): this;\r\n    \r\n    lookAt(target: Vector3, up: Vector3): this;\r\n}\r\n\r\nclass TransformBase implements Transform {\r\n    readonly localArray: Float32Array;\r\n    readonly array: Float32Array;\r\n    readonly uuid: UUID;\r\n    readonly owner: Object3D | null;\r\n\r\n    readonly matrix: Matrix4;\r\n    readonly localMatrix: Matrix4;;\r\n\r\n    hasChanged: boolean;\r\n    readonly isStatic: boolean;\r\n\r\n    constructor(owner?: Object3D, isStatic?: boolean) {\r\n        this.uuid = UUIDGenerator.newUUID();\r\n        this.owner = owner || null;\r\n\r\n        this.isStatic = isStatic ?? false;\r\n        \r\n        this.array = new Float32Array(16);\r\n        this.localArray = new Float32Array(16);\r\n\r\n        this.matrix = new Matrix4(this.array).setIdentity();\r\n        this.localMatrix = new Matrix4(this.localArray).setIdentity();\r\n\r\n        this.hasChanged = false;\r\n    }\r\n\r\n    getMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisArray[ 0];\r\n        matrixArray[ 1] = thisArray[ 1];\r\n        matrixArray[ 2] = thisArray[ 2];\r\n        matrixArray[ 3] = thisArray[ 3];\r\n        matrixArray[ 4] = thisArray[ 4];\r\n        matrixArray[ 5] = thisArray[ 5];\r\n        matrixArray[ 6] = thisArray[ 6];\r\n        matrixArray[ 7] = thisArray[ 7];\r\n        matrixArray[ 8] = thisArray[ 8];\r\n        matrixArray[ 9] = thisArray[ 9];\r\n        matrixArray[10] = thisArray[10];\r\n        matrixArray[11] = thisArray[11];\r\n        matrixArray[12] = thisArray[12];\r\n        matrixArray[13] = thisArray[13];\r\n        matrixArray[14] = thisArray[14];\r\n        matrixArray[15] = thisArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    setMatrix(matrix: Matrix4): this {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        thisArray[ 0] = matrixArray[ 0];\r\n        thisArray[ 1] = matrixArray[ 1];\r\n        thisArray[ 2] = matrixArray[ 2];\r\n        thisArray[ 3] = matrixArray[ 3];\r\n        thisArray[ 4] = matrixArray[ 4];\r\n        thisArray[ 5] = matrixArray[ 5];\r\n        thisArray[ 6] = matrixArray[ 6];\r\n        thisArray[ 7] = matrixArray[ 7];\r\n        thisArray[ 8] = matrixArray[ 8];\r\n        thisArray[ 9] = matrixArray[ 9];\r\n        thisArray[10] = matrixArray[10];\r\n        thisArray[11] = matrixArray[11];\r\n        thisArray[12] = matrixArray[12];\r\n        thisArray[13] = matrixArray[13];\r\n        thisArray[14] = matrixArray[14];\r\n        thisArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    getLocalMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisLocalArray[ 0];\r\n        matrixArray[ 1] = thisLocalArray[ 1];\r\n        matrixArray[ 2] = thisLocalArray[ 2];\r\n        matrixArray[ 3] = thisLocalArray[ 3];\r\n        matrixArray[ 4] = thisLocalArray[ 4];\r\n        matrixArray[ 5] = thisLocalArray[ 5];\r\n        matrixArray[ 6] = thisLocalArray[ 6];\r\n        matrixArray[ 7] = thisLocalArray[ 7];\r\n        matrixArray[ 8] = thisLocalArray[ 8];\r\n        matrixArray[ 9] = thisLocalArray[ 9];\r\n        matrixArray[10] = thisLocalArray[10];\r\n        matrixArray[11] = thisLocalArray[11];\r\n        matrixArray[12] = thisLocalArray[12];\r\n        matrixArray[13] = thisLocalArray[13];\r\n        matrixArray[14] = thisLocalArray[14];\r\n        matrixArray[15] = thisLocalArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    setLocalMatrix(matrix: Matrix4): this {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        thisLocalArray[ 0] = matrixArray[ 0];\r\n        thisLocalArray[ 1] = matrixArray[ 1];\r\n        thisLocalArray[ 2] = matrixArray[ 2];\r\n        thisLocalArray[ 3] = matrixArray[ 3];\r\n        thisLocalArray[ 4] = matrixArray[ 4];\r\n        thisLocalArray[ 5] = matrixArray[ 5];\r\n        thisLocalArray[ 6] = matrixArray[ 6];\r\n        thisLocalArray[ 7] = matrixArray[ 7];\r\n        thisLocalArray[ 8] = matrixArray[ 8];\r\n        thisLocalArray[ 9] = matrixArray[ 9];\r\n        thisLocalArray[10] = matrixArray[10];\r\n        thisLocalArray[11] = matrixArray[11];\r\n        thisLocalArray[12] = matrixArray[12];\r\n        thisLocalArray[13] = matrixArray[13];\r\n        thisLocalArray[14] = matrixArray[14];\r\n        thisLocalArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    getRight(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[0];\r\n        vectorArray[1] = thisArray[1];\r\n        vectorArray[2] = thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    getLeft(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[0];\r\n        vectorArray[1] = -thisArray[1];\r\n        vectorArray[2] = -thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    getUp(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[4];\r\n        vectorArray[1] = thisArray[5];\r\n        vectorArray[2] = thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    getDown(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[4];\r\n        vectorArray[1] = -thisArray[5];\r\n        vectorArray[2] = -thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    getForward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 8];\r\n        vectorArray[1] = thisArray[ 9];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    getBackward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[ 8];\r\n        vectorArray[1] = -thisArray[ 9];\r\n        vectorArray[2] = -thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    getTranslation(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[12];\r\n        vectorArray[1] = thisArray[13];\r\n        vectorArray[2] = thisArray[14];\r\n        return vector;\r\n    }\r\n\r\n    setTranslation(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] = vectorArray[0];\r\n        thisArray[13] = vectorArray[1];\r\n        thisArray[14] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    translate(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] += vectorArray[0];\r\n        thisArray[13] += vectorArray[1];\r\n        thisArray[14] += vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    getScaling(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 0];\r\n        vectorArray[1] = thisArray[ 5];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    setScaling(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] = vectorArray[0];\r\n        thisArray[ 5] = vectorArray[1];\r\n        thisArray[10] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    scale(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] *= vectorArray[0];\r\n        thisArray[ 5] *= vectorArray[1];\r\n        thisArray[10] *= vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    getRotation(rotation: Quaternion): Quaternion {\r\n        rotation.setMatrix(this.matrix);\r\n        return rotation;\r\n    }\r\n    \r\n    setRotation(rotation: Quaternion): this {\r\n        this.matrix.setRotation(rotation);\r\n        return this;\r\n    }\r\n\r\n    rotate(rotation: Quaternion): this {\r\n        this.matrix.mult(\r\n            rotation.getMatrix4(tempMatrix)\r\n        );\r\n        return this;\r\n    }\r\n\r\n    transformPoint(point: Vector3): Vector3 {\r\n        return point;\r\n    }\r\n\r\n    transformDirection(direction: Vector3): Vector3 {\r\n        return direction;\r\n    }\r\n\r\n    transformVector(vector: Vector3): Vector3 {\r\n        return vector;\r\n    }\r\n\r\n    lookAt(target: Vector3, up: Vector3): this {\r\n        const thisPosition = this.getTranslation(Vector3Pool.acquire(1)[0]);\r\n        this.matrix.lookAt(thisPosition, target, up);\r\n        Vector3Pool.release(1);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Transform: TransformConstructor = TransformBase;","import { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { CameraBase } from \"./Camera\";\r\n\r\nexport class PerspectiveCamera extends CameraBase {\r\n    \r\n    constructor(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number) {\r\n        super(Matrix4.perspective(fov, aspect, zNear, zFar));\r\n    }\r\n\r\n    setValues(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number): PerspectiveCamera\r\n    {\r\n        this.projection.setPerspective(fov, aspect, zNear, zFar);\r\n        this.updateFrustrum();\r\n        return this;\r\n    }\r\n}","import { Vector3 } from \"engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Space } from \"../../../../libs/maths/geometry/space/Space\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Frustrum } from \"../../../../libs/physics/collisions/Frustrum\";\r\nimport { Mesh } from \"../objects/meshes/Mesh\";\r\nimport { Object3D, Object3DBase } from \"../objects/Object3D\";\r\n\r\nexport { Camera };\r\nexport { CameraBase };\r\n\r\ninterface Camera extends Object3D {\r\n  readonly uuid: UUID;\r\n  readonly viewProjection: Matrix4;\r\n  readonly projection: Matrix4;\r\n  readonly view: Matrix4;\r\n  readonly frustrum: Frustrum;\r\n  isViewing(mesh: Mesh): boolean;\r\n}\r\n\r\nclass CameraBase extends Object3DBase {\r\n    readonly uuid: UUID;\r\n    readonly projection: Matrix4;\r\n    readonly frustrum: Frustrum;\r\n  \r\n    constructor()\r\n    constructor(projection: Matrix4)\r\n    constructor(projection?: Matrix4) {\r\n      super();\r\n      this.uuid = UUIDGenerator.newUUID();\r\n      this.projection = projection || new Matrix4();\r\n      this.frustrum = new Frustrum().setFromPerspectiveMatrix(this.projection);\r\n    }\r\n\r\n    getFront(vector: Vector3): Vector3 {\r\n      return this.transform.getBackward(vector);\r\n    }\r\n\r\n    get view(): Matrix4 {\r\n      return this.transform.matrix.clone().invert();\r\n    }\r\n\r\n    get viewProjection(): Matrix4 {\r\n      return this.projection.clone().mult(this.view);\r\n    }\r\n\r\n    isViewing(mesh: Mesh): boolean {\r\n      /*if (typeof mesh.geometry.boundingBox === 'undefined') {\r\n        const boundingBox = mesh.geometry.computeBoundingBox();\r\n        return this._frustrum.intersectsBox(boundingBox);\r\n      }\r\n      return this._frustrum.intersectsBox(mesh.geometry.boundingBox);*/\r\n      return true;\r\n    }\r\n\r\n    protected updateFrustrum(): void {\r\n      this.frustrum.setFromPerspectiveMatrix(this.projection);\r\n    }\r\n}","import { Transform } from \"../../../general/Transform\";\r\n\r\nexport { Object3D };\r\nexport { Object3DBase };\r\n\r\ninterface Object3D {\r\n    transform: Transform;\r\n}\r\n\r\nclass Object3DBase implements Object3D {\r\n    readonly transform: Transform;\r\n\r\n    constructor() {\r\n        this.transform = new Transform(this);\r\n    }\r\n}","import { Matrix4 } from \"../../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../../../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Frustrum } from \"../../../../../libs/physics/collisions/Frustrum\";\r\n\r\nexport { BoundingBox };\r\n\r\nconst corners = new Array(8).fill(0).map(_ => new Vector3());\r\n\r\ninterface BoundingBoxConstructor {\r\n    prototype: BoundingBox;\r\n    new(\r\n        min: Vector3,\r\n        max: Vector3\r\n    ): BoundingBox;\r\n}\r\n\r\ninterface BoundingBox {\r\n    readonly min: Vector3;\r\n    readonly max: Vector3;\r\n    hits(other: BoundingBox): boolean;\r\n    transform(matrix: Matrix4): BoundingBox;\r\n    transformed(matrix: Matrix4): BoundingBox;\r\n}\r\n\r\nclass BoundingBoxBase {\r\n    readonly min: Vector3;\r\n    readonly max: Vector3;\r\n\r\n    constructor(\r\n        min: Vector3,\r\n        max: Vector3\r\n    ) {\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n\r\n    static fromBoxes(...boxes: BoundingBox[]) {\r\n        const positiveInfinity = Number.POSITIVE_INFINITY;\r\n        const negativeInfinity = Number.NEGATIVE_INFINITY;\r\n        let minX = positiveInfinity;\r\n        let minY = positiveInfinity;\r\n        let minZ = positiveInfinity;\r\n        let maxX = negativeInfinity;\r\n        let maxY = negativeInfinity;\r\n        let maxZ = negativeInfinity;\r\n        boxes.forEach((box_i) => {\r\n            const {min: boxMin, max: boxMax} = box_i;\r\n            const {x: boxMinX, y: boxMinY, z: boxMinZ} = boxMin;\r\n            const {x: boxMaxX, y: boxMaxY, z: boxMaxZ} = boxMax;\r\n            if (boxMinX < minX) minX = boxMinX;\r\n            else if (boxMaxX > maxX) maxX = boxMaxX;\r\n            if (boxMinY < minY) minY = boxMinY;\r\n            else if (boxMaxY > maxY) maxY = boxMaxY;\r\n            if (boxMinZ < minZ) minZ = boxMinZ;\r\n            else if (boxMaxZ > maxZ) maxZ = boxMaxZ;\r\n        });\r\n        return new BoundingBox(\r\n            new Vector3(minX, minY, minZ),\r\n            new Vector3(maxX, maxY, maxZ)\r\n        );\r\n    }\r\n\r\n    hits(other: BoundingBox): boolean {\r\n        const {min, max} = this;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        const {min: otherMin, max: otherMax} = other;\r\n        const {x: otherMinX, y: otherMinY, z: otherMinZ} = otherMin;\r\n        const {x: otherMaxX, y: otherMaxY, z: otherMaxZ} = otherMax;\r\n        return (minX <= otherMaxX && maxX >= otherMinX) &&\r\n            (minY <= otherMaxY && maxY >= otherMinY) &&\r\n            (minZ <= otherMaxZ && maxZ >= otherMinZ);\r\n    }\r\n\r\n    transform(matrix: Matrix4): BoundingBox {\r\n        const {min, max} = this;\r\n        let {x: minX, y: minY, z: minZ} = min;\r\n        let {x: maxX, y: maxY, z: maxZ} = max;\r\n        corners[0].setValues(minX, minY, minZ);\r\n        corners[1].setValues(minX, minY, maxZ);\r\n        corners[2].setValues(minX, maxY, minZ);\r\n        corners[3].setValues(maxX, minY, minZ);\r\n        corners[4].setValues(minX, maxY, maxZ);\r\n        corners[5].setValues(maxX, minY, maxZ);\r\n        corners[6].setValues(maxX, maxY, minZ);\r\n        corners[7].setValues(maxX, maxY, maxZ);\r\n        const {POSITIVE_INFINITY, NEGATIVE_INFINITY} = Number;\r\n        minX = minY = minZ = POSITIVE_INFINITY;\r\n        maxX = maxY = maxZ = NEGATIVE_INFINITY;\r\n        corners.forEach((corner_i) => {\r\n            matrix.transformPoint(corner_i);\r\n            const [x, y, z] = corner_i;\r\n            if (x < minX) minX = x;\r\n            else if (x > maxX) maxX = x;\r\n            if (y < minY) minY = y;\r\n            else if (y > maxY) maxY = y;\r\n            if (z < minZ) minZ = z;\r\n            else if (z > maxZ) maxZ = z;\r\n        });\r\n        min.setValues(minX, minY, minZ);\r\n        max.setValues(maxX, maxY, maxZ);\r\n        return this;\r\n    }\r\n\r\n    transformed(matrix: Matrix4): BoundingBox {\r\n        const {min, max} = this;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        return new BoundingBox(\r\n            new Vector3(minX, minY, minZ),\r\n            new Vector3(maxX, maxY, maxZ)\r\n        ).transform(matrix);\r\n    }\r\n}\r\n\r\nvar BoundingBox: BoundingBoxConstructor = BoundingBoxBase;","import { Vector3 } from \"../../../../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Frustrum } from \"../../../../../libs/physics/collisions/Frustrum\";\r\nimport { BoundingBox } from \"../bounding/BoundingBox\";\r\n\r\nconst tempVector = new Vector3();\r\n\r\ninterface OctreeEntity {\r\n    box: BoundingBox;\r\n}\r\n\r\nexport class Octree {\r\n    region: BoundingBox;\r\n    \r\n    parent: Octree | null;\r\n    octants: Octree[];\r\n\r\n    MAX_DEPTH = 3;\r\n    MAX_ENTITES = 10;\r\n\r\n    nonStaticEntities: OctreeEntity[];\r\n    staticEntities: OctreeEntity[];\r\n    \r\n    expanded: boolean;\r\n    id: number;\r\n\r\n    static count = 0;\r\n\r\n    constructor(region: BoundingBox, parent?: Octree | null, nonStaticEntities?: OctreeEntity[], staticEntities?: OctreeEntity[]) {\r\n        this.id = Octree.count++;\r\n        this.region = region;\r\n        this.parent = parent ?? null;\r\n        this.nonStaticEntities = nonStaticEntities ?? [];\r\n        this.staticEntities = staticEntities ?? [];\r\n        this.octants = new Array(8);\r\n        this.expanded = false;\r\n    }\r\n\r\n    get depth(): number {\r\n        return (this.parent?.depth ?? -1) + 1;\r\n    }\r\n\r\n    innerOctants(): Octree[] {\r\n        return [this, ...this.octants.flatMap(octant => octant.innerOctants())];\r\n    }\r\n\r\n    /*set(region: BoundingBox, parent?: Octree, nonStaticEntities?: OctreeEntity[], staticEntities?: OctreeEntity[]) {\r\n        this.region = region;\r\n        this.parent = parent ?? null;\r\n        this.nonStaticEntities = nonStaticEntities ?? [];\r\n        this.staticEntities = staticEntities ?? [];\r\n        const {octants} = this;\r\n        const {min, max} = region;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        const centerX = (minX + maxX) / 2;\r\n        const centerY = (minY + maxY) / 2;\r\n        const centerZ = (minZ + maxZ) / 2;\r\n        const center = new Vector3(centerX, centerY, centerZ);\r\n        octants.forEach((octant_i, i) => {\r\n            const {region: octantRegion} = octant_i;\r\n            const {min: octantMin, max: octantMax} = octantRegion;\r\n            switch (i) {\r\n                case 0: {\r\n                    octantMin.copy(min);\r\n                    octantMax.copy(center);\r\n                    break;\r\n                }\r\n                case 1: {\r\n                    octantMin.setValues(centerX, minY, minZ);\r\n                    octantMax.setValues(maxX, centerY, centerZ);\r\n                    break;\r\n                }\r\n                case 2: {\r\n                    octantMin.setValues(centerX, minY, centerZ);\r\n                    octantMax.setValues(maxX, centerY, maxZ);\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    octantMin.setValues(minX, minY, centerZ);\r\n                    octantMax.setValues(centerX, centerY, maxZ);\r\n                    break;\r\n                }\r\n                case 4: {\r\n                    octantMin.setValues(minX, centerY, minZ);\r\n                    octantMax.setValues(centerX, maxY, centerZ);\r\n                    break;\r\n                }\r\n                case 5: {\r\n                    octantMin.setValues(centerX, centerY, minZ);\r\n                    octantMax.setValues(maxX, maxY, centerZ);\r\n                    break;\r\n                }\r\n                case 6: {\r\n                    octantMin.copy(center);\r\n                    octantMax.copy(max);\r\n                    break;\r\n                }\r\n                case 7: {\r\n                    octantMin.setValues(minX, centerY, centerZ);\r\n                    octantMax.setValues(centerX, maxY, maxZ);\r\n                    break;\r\n                }\r\n            };\r\n        });\r\n    }*/\r\n\r\n    *entitiesWithinFrustrum(frustrum: Frustrum): IterableIterator<OctreeEntity> {\r\n        const {region, expanded, octants, staticEntities, nonStaticEntities} = this;\r\n\r\n        const {nearPlane, farPlane, bottomPlane, topPlane, leftPlane, rightPlane} = frustrum;\r\n        const {normal: nearPlaneNormal} = nearPlane;\r\n        const {normal: farPlaneNormal} = farPlane;\r\n        const {normal: bottomPlaneNormal} = bottomPlane;\r\n        const {normal: topPlaneNormal} = topPlane;\r\n        const {normal: leftPlaneNormal} = leftPlane;\r\n        const {normal: rightPlaneNormal} = rightPlane;\r\n\r\n        const intersectsWithFrustrum = (box: BoundingBox) => {\r\n            const {min, max} = box;\r\n            const {x: minX, y: minY, z: minZ} = min;\r\n            const {x: maxX, y: maxY, z: maxZ} = max;\r\n            return nearPlane.distanceToPoint(tempVector.setValues(\r\n                nearPlaneNormal.x > 0 ? maxX : minX,\r\n                nearPlaneNormal.y > 0 ? maxY : minY,\r\n                nearPlaneNormal.z > 0 ? maxZ : minZ\r\n            )) >= 0 &&\r\n            farPlane.distanceToPoint(tempVector.setValues(\r\n                farPlaneNormal.x > 0 ? maxX : minX,\r\n                farPlaneNormal.y > 0 ? maxY : minY,\r\n                farPlaneNormal.z > 0 ? maxZ : minZ\r\n            )) >= 0 &&\r\n            leftPlane.distanceToPoint(tempVector.setValues(\r\n                leftPlaneNormal.x > 0 ? maxX : minX,\r\n                leftPlaneNormal.y > 0 ? maxY : minY,\r\n                leftPlaneNormal.z > 0 ? maxZ : minZ\r\n            )) >= 0 &&\r\n            rightPlane.distanceToPoint(tempVector.setValues(\r\n                rightPlaneNormal.x > 0 ? maxX : minX,\r\n                rightPlaneNormal.y > 0 ? maxY : minY,\r\n                rightPlaneNormal.z > 0 ? maxZ : minZ\r\n            )) >= 0 &&\r\n            topPlane.distanceToPoint(tempVector.setValues(\r\n                topPlaneNormal.x > 0 ? maxX : minX,\r\n                topPlaneNormal.y > 0 ? maxY : minY,\r\n                topPlaneNormal.z > 0 ? maxZ : minZ\r\n            )) >= 0 &&\r\n            bottomPlane.distanceToPoint(tempVector.setValues(\r\n                bottomPlaneNormal.x > 0 ? maxX : minX,\r\n                bottomPlaneNormal.y > 0 ? maxY : minY,\r\n                bottomPlaneNormal.z > 0 ? maxZ : minZ\r\n            )) >= 0;\r\n        };\r\n        if (intersectsWithFrustrum(region)) {\r\n            if (expanded) {\r\n                octants.forEach(octant => octant.entitiesWithinFrustrum(frustrum));\r\n            }\r\n            else {\r\n                yield *[...staticEntities, ...nonStaticEntities];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(): void {\r\n        const {nonStaticEntities, staticEntities} = this;\r\n        if (nonStaticEntities.length + staticEntities.length > this.MAX_ENTITES) {\r\n            this.expand();\r\n        }\r\n    }\r\n\r\n    update(): void {\r\n        let octree: Octree = this;\r\n        const {octants, nonStaticEntities, expanded} = this;\r\n        nonStaticEntities.forEach((entity_i, i) => {\r\n            while (!entity_i.box.hits(octree.region) && octree.parent) {\r\n                octree = octree.parent;\r\n            }\r\n            if (octree && octree !== this) {\r\n                nonStaticEntities.copyWithin(i, i + 1);\r\n                nonStaticEntities.length--;\r\n                const octreeEntitiesCount = octree.nonStaticEntities.push(entity_i);\r\n                if (octreeEntitiesCount > this.MAX_ENTITES) {\r\n                    octree.expand();\r\n                }\r\n            }\r\n        });\r\n        if (expanded) {\r\n            octants.forEach((octant) => {\r\n                octant.update();\r\n            });\r\n            const entitiesCount = octants.reduce((count, octant) => {\r\n                const {nonStaticEntities, staticEntities} = octant;\r\n                return count + nonStaticEntities.length + staticEntities.length;\r\n            }, 0);\r\n            if (entitiesCount < this.MAX_ENTITES) {\r\n                this.collapse();\r\n            }\r\n        }\r\n    }\r\n\r\n    expand(): void {\r\n        const {expanded, depth} = this;\r\n        if (!expanded) {\r\n            const {region} = this;\r\n            const {min, max} = region;\r\n            if (/*min.distance(max) > SQRT3 **/ depth < this.MAX_DEPTH) {\r\n                console.log(\"expand\");\r\n                const {octants, staticEntities, nonStaticEntities} = this;\r\n                const {x: minX, y: minY, z: minZ} = min;\r\n                const {x: maxX, y: maxY, z: maxZ} = max;\r\n                const centerX = (minX + maxX) / 2;\r\n                const centerY = (minY + maxY) / 2;\r\n                const centerZ = (minZ + maxZ) / 2;\r\n                octants[0] = new Octree(new BoundingBox(new Vector3(minX, minY, minZ), new Vector3(centerX, centerY, centerZ)), this);\r\n                octants[1] = new Octree(new BoundingBox(new Vector3(centerX, minY, minZ), new Vector3(maxX, centerY, centerZ)), this);\r\n                octants[2] = new Octree(new BoundingBox(new Vector3(centerX, minY, centerZ), new Vector3(maxX, centerY, maxZ)), this);\r\n                octants[3] = new Octree(new BoundingBox(new Vector3(minX, minY, centerZ), new Vector3(centerX, centerY, maxZ)), this);\r\n                octants[4] = new Octree(new BoundingBox(new Vector3(minX, centerY, minZ), new Vector3(centerX, maxY, centerZ)), this);\r\n                octants[5] = new Octree(new BoundingBox(new Vector3(centerX, centerY, minZ), new Vector3(maxX, maxY, centerZ)), this);\r\n                octants[6] = new Octree(new BoundingBox(new Vector3(centerX, centerY, centerZ), new Vector3(maxX, maxY, maxZ)), this);\r\n                octants[7] = new Octree(new BoundingBox(new Vector3(minX, centerY, centerZ), new Vector3(centerX, maxY, maxZ)), this);\r\n                staticEntities.forEach((entity) => {\r\n                    const enclosingOctants = octants.filter(\r\n                        octant => octant.region.hits(entity.box)\r\n                    );\r\n                    if (enclosingOctants) {\r\n                        enclosingOctants.forEach(\r\n                            (octant) => octant.staticEntities.push(entity)\r\n                        );\r\n                    }\r\n                });\r\n                nonStaticEntities.forEach((entity) => {\r\n                    const enclosingOctants = octants.filter(\r\n                        octant => octant.region.hits(entity.box)\r\n                    );\r\n                    if (enclosingOctants) {\r\n                        enclosingOctants.forEach(\r\n                            (octant) => octant.nonStaticEntities.push(entity)\r\n                        );\r\n                    }\r\n                });\r\n                staticEntities.length = 0;\r\n                nonStaticEntities.length = 0;\r\n                octants.forEach((octant) => {\r\n                    const {staticEntities, nonStaticEntities} = octant;\r\n                    if (staticEntities.length + nonStaticEntities.length > this.MAX_ENTITES) {\r\n                        octant.expand();\r\n                    }\r\n                });\r\n                this.expanded = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    collapse(): void {\r\n        const {expanded} = this;\r\n        if (expanded) {\r\n            console.log(\"collapse\");\r\n            const {octants, staticEntities, nonStaticEntities} = this;\r\n            octants.forEach((octant) => {\r\n                const {staticEntities: octantStaticEntities, nonStaticEntities: octantNonStaticEntities} = octant;\r\n                staticEntities.push(...octantStaticEntities);\r\n                nonStaticEntities.push(...octantNonStaticEntities);\r\n                octantStaticEntities.splice(0);\r\n                octantNonStaticEntities.splice(0);\r\n            });\r\n            this.expanded = false;\r\n        }\r\n    }\r\n}","\r\n\r\n// Vertices : counter clock-wise ordered\r\n\r\nimport { TriangleList } from \"../../../../libs/maths/extensions/lists/TriangleList\";\r\nimport { Vector2List } from \"../../../../libs/maths/extensions/lists/Vector2List\";\r\nimport { Vector3List } from \"../../../../libs/maths/extensions/lists/Vector3List\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { BoundingBox } from \"../../../../libs/physics/collisions/AxisAlignedBoundingBox\";\r\nimport { BoundingSphere } from \"../../../../libs/physics/collisions/BoundingSphere\";\r\nimport { GeometryBuffer } from \"./GeometryBuffer\";\r\nimport { GeometryBuilder } from \"./GeometryBuilder\";\r\nimport { GeometryUtils } from \"./GeometryUtils\";\r\n\r\n// FaceIndices : 3 vertices indices\r\n// FaceArea : triangle.getArea()\r\n// FaceNormal : triangle.getNormal()\r\n// FaceUV / FaceColor ?\r\n\r\n// VertexNormal => Weighted (by area) average of the normals of the faces containing the vertex (=> Varying)\r\n// - Clone the vertex array, read the face indices array\r\n\r\n// VertexIndices\r\n\r\n// PerVertex Animation / MorphTargets\r\n\r\n// SkeletalAnimation\r\n\r\n// Bones are a hierarchical tree\r\n\r\n// bonesWeights\r\n// bonesIndices\r\n\r\n// MorphTarget Animation\r\n\r\n// MorphTargets are a copy of each face, being transformed over time\r\n\r\n// morphIndices\r\n// morphTargets = []; MorphTargets are a transformed copy of faces\r\n// morphNormals = [];\r\n\r\nexport { Geometry };\r\nexport { GeometryBase };\r\n\r\nenum GeometryAttributes {\r\n    VERTICES,\r\n    UVS,\r\n    NORMALS,\r\n    TANGENTS\r\n}\r\n\r\ninterface GeometryConstructor {\r\n    \r\n}\r\n\r\ninterface Geometry {\r\n\r\n}\r\n\r\nclass GeometryBase implements Geometry {\r\n\r\n    toBuilder(): GeometryBuilder {\r\n        throw new Error(\"No builder defined.\");\r\n    }\r\n}\r\n\r\nvar Geometry: GeometryConstructor = GeometryBase;","import { Matrix4 } from \"../../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../../../../libs/maths/algebra/vectors/Vector3\";\r\nimport { BoundingBox } from \"./BoundingBox\";\r\n\r\nexport class BoundingSphere {\r\n    center: Vector3;\r\n    radius: number;\r\n\r\n    constructor(\r\n        center: Vector3,\r\n        radius: number\r\n    ) {\r\n        this.center = center;\r\n        this.radius = radius;\r\n    }\r\n\r\n    transform(matrix: Matrix4): void {\r\n        const {center} = this;\r\n        matrix.transformPoint(center);\r\n    }\r\n    \r\n    containsPoint(point: Vector3): boolean {\r\n        const {center, radius} = this;\r\n        return center.distance(point) < radius;\r\n    }\r\n\r\n    hitsSphere(other: BoundingSphere) {\r\n        const {center, radius} = this;\r\n        const {center: otherCenter, radius: otherRadius} = other;\r\n        return center.distance(otherCenter) < radius + otherRadius;\r\n    }\r\n\r\n    hitsBox(other: BoundingBox) {\r\n        const {center, radius} = this;\r\n        const {x: sphereX, y: sphereY, z: sphereZ} = center;\r\n        const {min, max} = other;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        // get box closest point to sphere center by clamping\r\n        const x = Math.max(minX, Math.min(sphereX, maxX));\r\n        const y = Math.max(minY, Math.min(sphereY, maxY));\r\n        const z = Math.max(minZ, Math.min(sphereZ, maxZ));\r\n\r\n        // this is the same as isPointInsideSphere\r\n        const distance = Math.sqrt((x - sphereX) * (x - sphereX) + (y - sphereY) * (y - sphereY) + (z - sphereZ) * (z - sphereZ));\r\n        return distance < radius;\r\n    }\r\n}","import { Vector3 } from \"../../../../libs/maths/algebra/vectors/Vector3\"\r\nimport { BoundingSphere } from \"./bounding/BoundingSphere\";\r\nimport { BoundingBox } from \"./bounding/BoundingBox\";\r\n\r\nexport { GeometryBuilder };\r\n\r\ninterface GeometryBuilder {\r\n    readonly halfEdges: Array<HalfEdge>;\r\n    readonly vertices: Array<Vertex>;\r\n    readonly faces: Array<Face>;\r\n    clone(): GeometryBuilder;\r\n    addTriangleFace(v0: VertexID, v1: VertexID, v2: VertexID, properties?: {[key: string]: any;}): void;\r\n    addQuadFace(v0: VertexID, v1: VertexID, v2: VertexID, v3: VertexID, properties?: {[key: string]: any;}): void;\r\n    addVertex(vertex: number[] | Float32Array | Float64Array): VertexID;\r\n    addFace(vertices: VertexID[], properties?: {[key: string]: any;}[]): void;\r\n    verticesArray(): Float32Array;\r\n    uvsArray(): Float32Array;\r\n    trianglesIndicesArray(): Uint8Array | Uint16Array | Uint32Array;\r\n    linesIndicesArray(): Uint8Array | Uint16Array | Uint32Array;\r\n    normalsArray(): Float32Array;\r\n    tangentsArray(): Float32Array;\r\n    boundingBox(): BoundingBox;\r\n    faceHalfEdgesIterator(face: FaceID): FaceHalfEdgesIterator;\r\n    faceVerticesIterator(face: FaceID): FaceHalfEdgesIterator;\r\n    vertexFacesIterator(vertex: VertexID): VertexFacesIterator;\r\n}\r\n\r\ninterface GeometryBuilderConstructor {\r\n    readonly prototype: GeometryBuilder;\r\n    new(): GeometryBuilder;\r\n}\r\n\r\nclass GeometryBuilderBase implements GeometryBuilder {\r\n    readonly halfEdges: Array<HalfEdge>;\r\n    readonly vertices: Array<Vertex>;\r\n    readonly faces: Array<Face>;\r\n\r\n    constructor() {\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n    }\r\n\r\n    clone(): GeometryBuilder {\r\n        return Object.assign(Object.create(this.constructor.prototype), structuredClone(this));\r\n    }\r\n\r\n    addTriangleFace(v0: VertexID, v1: VertexID, v2: VertexID, properties?: {[key: string]: any;}): void {\r\n        this.addFace([v0, v1, v2], properties);\r\n    }\r\n\r\n    addQuadFace(v0: VertexID, v1: VertexID, v2: VertexID, v3: VertexID, properties?: {[key: string]: any;}): void {\r\n        this.addFace([v0, v1, v2, v3], properties);\r\n    }\r\n    \r\n    addVertex(position: number[] | Float32Array | Float64Array): VertexID {\r\n        const {vertices} = this;\r\n        const vertex: Vertex = {\r\n            position: position,\r\n            halfEdgeID: null\r\n        };\r\n        return vertices.push(vertex) - 1;\r\n    }\r\n\r\n    addFace(vertices: VertexID[], properties?: {[key: string]: any;}): void {\r\n        const {halfEdges: _halfEdges, vertices: _vertices, faces: _faces} = this;\r\n        const {length: faceVerticesCount} = vertices;\r\n        if (faceVerticesCount < 2) {\r\n            console.error(`At least 2 vertices are required to create a face.`);\r\n            return;\r\n        }\r\n        const face: Face = {\r\n            halfEdgeID: null,\r\n            ...properties\r\n        };\r\n        const faceID = _faces.length;\r\n        let sourceID: VertexID | null = null;\r\n        let targetID: VertexID | null = null;\r\n        let firstHalfEdgeID: HalfEdgeID | null = null;\r\n        let halfEdge: HalfEdge | null = null;\r\n        let halfEdgeID: HalfEdgeID | null = null;\r\n        let previousHalfEdgeID: HalfEdgeID | null = null;\r\n        for (let i = 0; i < faceVerticesCount; i++) {\r\n            sourceID = vertices[i];\r\n            targetID = (i < faceVerticesCount - 1) ? vertices[i + 1] : vertices[0];\r\n            const existingHalfEdge = Array.from(this.vertexFacesIterator(sourceID)).find(\r\n                (face_i) => {\r\n                    if (face_i === null) return false;\r\n                    return Array.from(this.faceHalfEdgesIterator(face_i)).find(\r\n                        (halfEdge_i) => {\r\n                            const {targetID: targetID_i, prevID: prevID_i} = _halfEdges[halfEdge_i];\r\n                            return targetID_i === targetID && _halfEdges[prevID_i ?? -1]?.targetID === sourceID;\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n            if (existingHalfEdge) {\r\n                continue;\r\n            }\r\n            halfEdge = {\r\n                targetID: targetID,\r\n                twinID: null,\r\n                nextID: null,\r\n                prevID: null,\r\n                faceID: faceID\r\n            };\r\n            halfEdgeID = _halfEdges.length;\r\n            if (previousHalfEdgeID === null) {\r\n                face.halfEdge = halfEdgeID;\r\n                firstHalfEdgeID = halfEdgeID;\r\n            }\r\n            else {\r\n                halfEdge.prevID = previousHalfEdgeID;\r\n                _halfEdges[previousHalfEdgeID].nextID = halfEdgeID;\r\n            }\r\n            const source = _vertices[sourceID]!;\r\n            if (source.halfEdgeID === null) {\r\n                source.halfEdgeID = halfEdgeID;\r\n            }\r\n            const twinHalfEdge = _halfEdges.find(\r\n                (halfEdge_i) => {\r\n                    const {targetID: targetID_i, prevID: prevID_i} = halfEdge_i;\r\n                    return targetID_i === sourceID && _halfEdges[prevID_i ?? -1]?.targetID === targetID;\r\n                }\r\n            ) ?? null;\r\n            if (twinHalfEdge !== null) {\r\n                halfEdge.twinID = _halfEdges.indexOf(twinHalfEdge);\r\n                twinHalfEdge.twinID = halfEdgeID;\r\n            }\r\n            previousHalfEdgeID = halfEdgeID;\r\n            _halfEdges.push(halfEdge);\r\n        }\r\n        if (halfEdge !== null && firstHalfEdgeID !== null) {\r\n            _halfEdges[firstHalfEdgeID].prevID = halfEdgeID;\r\n            halfEdge.nextID = firstHalfEdgeID;\r\n        }\r\n        _faces.push(face);\r\n    }\r\n\r\n    linesArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((_, i) => {\r\n            const faceVertices = Array.from(this.faceVerticesIterator(i));\r\n            if (faceVertices.length === 4) {\r\n                const [v0, v1, v2, v3] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n                return [\r\n                    ...v0, ...v1,\r\n                    ...v1, ...v2,\r\n                    ...v2, ...v3,\r\n                    ...v3, ...v0\r\n                ];\r\n            }\r\n            else {\r\n                const [v0, v1, v2] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n                return [\r\n                    ...v0, ...v1,\r\n                    ...v1, ...v2,\r\n                    ...v2, ...v0\r\n                ];\r\n            }\r\n        }));\r\n    }\r\n\r\n    verticesArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((_, i) => {\r\n            return Array.from(this.faceVerticesIterator(i)).flatMap((vertex) => {\r\n                return Array.from(vertices[vertex].position);\r\n            });\r\n        }));\r\n    }\r\n\r\n    tangentsArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((face_i, i) => {\r\n            const faceVertices = Array.from(this.faceVerticesIterator(i));\r\n            const faceUvs = face_i.uv as Array<Array<number>>;\r\n            const [v0, v1, v2] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n            const [uv0, uv1, uv2] = faceUvs;\r\n            const edge1 = v1.map((v1_i, i) => v0[i] - v1_i);\r\n            const edge2 = v1.map((v1_i, i) => v2[i] - v1_i);\r\n            const deltaUV1 = uv1.map((uv1_i, i) => uv0[i] - uv1_i);\r\n            const deltaUV2 = uv1.map((uv1_i, i) => uv2[i] - uv1_i);\r\n            const f = 1.0 / (deltaUV1[0] * deltaUV2[1] - deltaUV1[1] * deltaUV2[0]);\r\n            const tangent = edge1.map((edge1_i, i) => -(edge1_i * deltaUV2[1] - edge2[i] * deltaUV1[1]) * f);\r\n            const length = Math.hypot(...tangent);\r\n            face_i.tangent = tangent.map(tangent_i => tangent_i / length);\r\n\r\n            return faceVertices.flatMap(() => {\r\n                return Array.from(face_i.tangent);\r\n            });\r\n        }));\r\n    }\r\n\r\n    normalsArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((face_i, i) => {\r\n            const faceVertices = Array.from(this.faceVerticesIterator(i));\r\n            const [v0, v1, v2] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n            const edge1 = v1.map((v1_i, i) => v0[i] - v1_i);\r\n            const edge2 = v1.map((v1_i, i) => v2[i] - v1_i);\r\n            const normal = edge1.map((_, i) => {\r\n                const ni = (i + 1) % 3;\r\n                const pi = ((i - 1) + 3) % 3;\r\n                return -(edge1[ni] * edge2[pi] - edge1[pi] * edge2[ni]);\r\n            });\r\n            const length = Math.hypot(...normal);\r\n            face_i.normal = normal.map(normal_i => normal_i / length);\r\n            \r\n            return faceVertices.flatMap(() => {\r\n                return Array.from(face_i.normal);\r\n            });\r\n        }));\r\n    }\r\n\r\n    uvsArray(): Float32Array {\r\n        const {faces} = this;\r\n        return new Float32Array(faces.flatMap((face) => {\r\n            return face.uv.flat(1);\r\n        }));\r\n    }\r\n\r\n    trianglesIndicesArray(): Uint8Array | Uint16Array | Uint32Array {\r\n        const {faces} = this;\r\n        const count = faces.reduce((verticesCount, _, i) => {\r\n            return verticesCount + Array.from(this.faceVerticesIterator(i)).length;\r\n        }, 0);\r\n        const arrayConstructor = (count < Math.pow(2, 8)) ? Uint8Array : (count < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        return new arrayConstructor(faces.reduce(([indices, index], face_i, i) => {\r\n            const vertices = Array.from(this.faceVerticesIterator(i));\r\n            if (vertices.length === 4) {\r\n                return [indices.concat([index, index + 1, index + 2, index + 1, index + 3, index + 2]), index + 4] as [number[], number];\r\n            }\r\n            return [indices.concat([index, index + 1, index + 2]), index + 3] as [number[], number];\r\n        }, [[], 0] as [number[], number])[0]);\r\n    }\r\n\r\n    linesIndicesArray(): Uint8Array | Uint16Array | Uint32Array {\r\n        const {faces} = this;\r\n        const count = faces.reduce((verticesCount, _, i) => {\r\n            return verticesCount + Array.from(this.faceVerticesIterator(i)).length * 2;\r\n        }, 0);\r\n        const arrayConstructor = (count < Math.pow(2, 8)) ? Uint8Array : (count < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        return new arrayConstructor(faces.reduce(([indices, index], face_i, i) => {\r\n            const vertices = Array.from(this.faceVerticesIterator(i));\r\n            if (vertices.length === 4) {\r\n                return [indices.concat([index, index + 1, index + 1, index + 3, index + 3, index + 2, index + 2, index]), index + 4] as [number[], number];\r\n            }\r\n            return [indices.concat([index, index + 1, index + 1, index + 2, index + 2, index]), index + 3] as [number[], number];\r\n        }, [[], 0] as [number[], number])[0]);\r\n    }\r\n\r\n    boundingBox(): BoundingBox {\r\n        const positiveInfinity = Number.POSITIVE_INFINITY;\r\n        const negativeInfinity = Number.NEGATIVE_INFINITY;\r\n        let minX = positiveInfinity;\r\n        let minY = positiveInfinity;\r\n        let minZ = positiveInfinity;\r\n        let maxX = negativeInfinity;\r\n        let maxY = negativeInfinity;\r\n        let maxZ = negativeInfinity;\r\n        const {vertices} = this;\r\n        if (vertices.length > 0) {\r\n            vertices.forEach((vertex_i) => {\r\n                const [x, y, z] = vertex_i.position;\r\n                if (x < minX) minX = x;\r\n                else if (x > maxX) maxX = x;\r\n                if (y < minY) minY = y;\r\n                else if (y > maxY) maxY = y;\r\n                if (z < minZ) minZ = z;\r\n                else if (z > maxZ) maxZ = z;\r\n            });\r\n        }\r\n        const min = new Vector3([minX, minY, minZ]);\r\n        const max = new Vector3([maxX, maxY, maxZ]);\r\n        return new BoundingBox(min, max);\r\n    }\r\n\r\n    boundingSphere(): BoundingSphere {\r\n        const positiveInfinity = Number.POSITIVE_INFINITY;\r\n        const negativeInfinity = Number.NEGATIVE_INFINITY;\r\n        let minX = positiveInfinity;\r\n        let minY = positiveInfinity;\r\n        let minZ = positiveInfinity;\r\n        let maxX = negativeInfinity;\r\n        let maxY = negativeInfinity;\r\n        let maxZ = negativeInfinity;\r\n        const {vertices} = this;\r\n        if (vertices.length > 0) {\r\n            vertices.forEach((vertex_i) => {\r\n                const [x, y, z] = vertex_i.position;\r\n                if (x < minX) minX = x;\r\n                else if (x > maxX) maxX = x;\r\n                if (y < minY) minY = y;\r\n                else if (y > maxY) maxY = y;\r\n                if (z < minZ) minZ = z;\r\n                else if (z > maxZ) maxZ = z;\r\n            });\r\n        }\r\n        const min = new Vector3([minX, minY, minZ]);\r\n        const max = new Vector3([maxX, maxY, maxZ]);\r\n        return new BoundingSphere(\r\n            new Vector3(), Math.max(min.length(), max.length())\r\n        );\r\n    }\r\n    \r\n    faceHalfEdgesIterator(face: FaceID): FaceHalfEdgesIterator {\r\n        return new FaceHalfEdgesIterator(this, face);\r\n    }\r\n\r\n    faceVerticesIterator(face: FaceID): FaceHalfEdgesIterator {\r\n        return new FaceVerticesIterator(this, face);\r\n    }\r\n\r\n    vertexFacesIterator(vertex: VertexID): VertexFacesIterator {\r\n        return new VertexFacesIterator(this, vertex);\r\n    }\r\n}\r\n\r\nvar GeometryBuilder: GeometryBuilderConstructor = GeometryBuilderBase;\r\n\r\nexport type HalfEdgeID = number;\r\nexport type FaceID = number;\r\nexport type VertexID = number;\r\n\r\nexport type HalfEdge = {\r\n    targetID: VertexID | null;\r\n    twinID: HalfEdgeID | null;\r\n    prevID: HalfEdgeID | null;\r\n    nextID: HalfEdgeID | null;\r\n    faceID: FaceID | null;\r\n}\r\n\r\nexport type Face = {\r\n    halfEdgeID: HalfEdgeID | null;\r\n    [key: string]: any;\r\n}\r\n\r\nexport type Vertex = {\r\n    position: number[] | Float32Array | Float64Array;\r\n    halfEdgeID: HalfEdgeID | null;\r\n    properties?: {\r\n        [key: string]: any;\r\n    }\r\n}\r\n\r\nexport class FaceHalfEdgesIterator {\r\n    geometry: GeometryBuilder;\r\n    faceID: FaceID;\r\n    halfEdgeID: HalfEdgeID | null;\r\n\r\n    constructor(geometry: GeometryBuilder, face: FaceID) {\r\n        this.geometry = geometry;\r\n        this.faceID = face;\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    reset(): void {\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    current(): HalfEdgeID | null {\r\n        return this.halfEdgeID;\r\n    }\r\n\r\n    next(): IteratorResult<HalfEdgeID> {\r\n        const {halfEdgeID, faceID, geometry} = this;\r\n        const {faces, halfEdges} = geometry;\r\n        const face = faces[faceID];\r\n        if (face !== null) {\r\n            if (halfEdgeID === null) {\r\n                const firstHalfEdgeID = face.halfEdgeID ?? null;\r\n                const nextHalfEdgeID = faces[firstHalfEdgeID ?? -1]?.nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (firstHalfEdgeID !== null) {\r\n                    return {\r\n                        value: firstHalfEdgeID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n            else if (halfEdgeID !== face.halfEdge) {\r\n                const nextHalfEdgeID = halfEdges[halfEdgeID].nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (halfEdgeID !== null) {\r\n                    return {\r\n                        value: halfEdgeID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: undefined, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<HalfEdgeID> {\r\n        this.halfEdgeID = null;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class FaceVerticesIterator {\r\n    geometry: GeometryBuilder;\r\n    faceID: FaceID;\r\n    halfEdgeID: HalfEdgeID | null;\r\n\r\n    constructor(geometry: GeometryBuilder, face: FaceID) {\r\n        this.geometry = geometry;\r\n        this.faceID = face;\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    reset(): void {\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    current(): VertexID | null {\r\n        const {halfEdgeID, geometry} = this;\r\n        const {halfEdges} = geometry;\r\n        return halfEdges[halfEdges[halfEdgeID ?? -1]?.prevID ?? -1]?.targetID ?? null;\r\n    }\r\n\r\n    next(): IteratorResult<VertexID> {\r\n        const {halfEdgeID, geometry, faceID} = this;\r\n        const {faces, halfEdges} = geometry;\r\n        const face = faces[faceID ?? -1];\r\n        if (face !== null) {\r\n            const {halfEdge: faceHalfEdgeID} = face;\r\n            if (halfEdgeID === null) {\r\n                const firstVertexID = halfEdges[halfEdges[faceHalfEdgeID ?? -1].prevID ?? -1].targetID ?? null;\r\n                const nextHalfEdgeID = halfEdges[faceHalfEdgeID ?? -1].nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (firstVertexID !== null) {\r\n                    return {\r\n                        value: firstVertexID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n            else if (halfEdgeID !== face.halfEdge) {\r\n                const vertex = halfEdges[halfEdges[halfEdgeID].prevID ?? -1].targetID ?? null;\r\n                const nextHalfEdgeID = halfEdges[halfEdgeID].nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (vertex !== null) {\r\n                    return {\r\n                        value: vertex, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: undefined, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<VertexID> {\r\n        this.halfEdgeID = null;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class VertexFacesIterator {\r\n    geometry: GeometryBuilder;\r\n    halfEdgeID: HalfEdgeID | null;\r\n    vertexID: VertexID;\r\n    \r\n    constructor(geometry: GeometryBuilder, vertex: VertexID) {\r\n        this.geometry = geometry;\r\n        this.vertexID = vertex;\r\n        this.halfEdgeID = null;\r\n    }\r\n    \r\n    reset(): void {\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    current(): FaceID | null {\r\n        const {geometry, halfEdgeID} = this;\r\n        const {halfEdges} = geometry;\r\n        return halfEdges[halfEdgeID ?? -1].faceID ?? null;\r\n    }\r\n\r\n    next(): IteratorResult<FaceID>  {\r\n        const {halfEdgeID, vertexID, geometry} = this;\r\n        const {halfEdges, vertices} = geometry;\r\n        const vertex = vertices[vertexID ?? -1];\r\n        if (vertex) {\r\n            const {halfEdgeID: vertexHalfEdgeID} = vertex;\r\n            if (halfEdgeID === null) {\r\n                const faceID = halfEdges[vertexHalfEdgeID ?? -1]?.faceID ?? null;\r\n                const nextHalfEdgeID = halfEdges[halfEdges[vertexHalfEdgeID ?? -1]?.prevID ?? -1]?.twinID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (faceID !== null) {\r\n                    return {\r\n                        value: faceID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n            else if (halfEdgeID !== vertex.halfEdgeID) {\r\n                const faceID = halfEdges[halfEdgeID]?.faceID ?? null;\r\n                const nextHalfEdgeID = halfEdges[halfEdges[halfEdgeID].prevID ?? -1].twinID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (faceID !== null) {\r\n                    return {\r\n                        value: faceID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: undefined, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<FaceID> {\r\n        this.halfEdgeID = null;\r\n        return this;\r\n    }\r\n}","import { GeometryBase } from \"../../Geometry\";\r\nimport { GeometryBuilder } from \"../../GeometryBuilder\";\r\n\r\nexport class CubeGeometry extends GeometryBase {\r\n\twidth: number;\r\n\theight: number;\r\n\tdepth: number;\r\n\twidthSegments: number;\r\n\theightSegments: number;\r\n\tdepthSegments: number;\r\n\r\n\tconstructor(properties?: {width?: number, height?: number, depth?: number, widthSegments?: number, heightSegments?: number, depthSegments?: number}) {\r\n\t\tsuper();\r\n\t\tconst {width, height, depth, widthSegments, heightSegments, depthSegments} = properties ?? {};\r\n\t\tthis.width = width ?? 1;\r\n\t\tthis.height = height ?? 1;\r\n\t\tthis.depth = depth ?? 1;\r\n\t\tthis.widthSegments = widthSegments ?? 1;\r\n\t\tthis.heightSegments = heightSegments ?? 1;\r\n\t\tthis.depthSegments = depthSegments ?? 1;\r\n\t}\r\n\t\r\n\ttoBuilder(): GeometryBuilder {\r\n\t\tconst builder = new GeometryBuilder();\r\n\t\tconst {width, height, depth} = this;\r\n\t\tlet {widthSegments, heightSegments, depthSegments} = this;\r\n\t\twidthSegments = Math.floor(widthSegments);\r\n\t\theightSegments = Math.floor(heightSegments);\r\n\t\tdepthSegments = Math.floor(depthSegments);\r\n\r\n\t\tconst indices: number[] = [];\r\n\t\tconst vertices: number[] = [];\r\n\t\tconst uvs: number[] = [];\r\n\t\tlet verticesCount = 0;\r\n\r\n\t\t[\r\n\t\t\t[2, 1, 0, -1, -1, depth, height, width, depthSegments, heightSegments],\r\n\t\t\t[2, 1, 0, +1, -1, depth, height, -width, depthSegments, heightSegments],\r\n\t\t\t[0, 2, 1, +1, +1, width, depth, height, widthSegments, depthSegments],\r\n\t\t\t[0, 2, 1, +1, -1, width, depth, -height, widthSegments, depthSegments],\r\n\t\t\t[0, 1, 2, +1, -1, width, height, depth, widthSegments, heightSegments],\r\n\t\t\t[0, 1, 2, -1, -1, width, height, -depth, widthSegments, heightSegments]\r\n\t\t].forEach(([u, v, w, udir, vdir, width, height, depth, gridX, gridY]) => {\r\n\t\t\tconst segmentWidth = width / gridX;\r\n\t\t\tconst segmentHeight = height / gridY;\r\n\t\t\tconst widthHalf = width / 2;\r\n\t\t\tconst heightHalf = height / 2;\r\n\t\t\tconst depthHalf = depth / 2;\r\n\t\t\tconst gridX1 = gridX + 1;\r\n\t\t\tconst gridY1 = gridY + 1;\r\n\t\t\tlet index = 0;\r\n\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\r\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\r\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\r\n\t\t\t\t\tconst vertex = new Array(3);\r\n\t\t\t\t\tvertex[u] = x * udir;\r\n\t\t\t\t\tvertex[v] = y * vdir;\r\n\t\t\t\t\tvertex[w] = depthHalf;\r\n\t\t\t\t\tvertices.push(\r\n\t\t\t\t\t\t...vertex\r\n\t\t\t\t\t);\r\n\t\t\t\t\tuvs.push(ix / gridX, 1 - (iy / gridY));\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let iy = 0; iy < gridY; iy++) {\r\n\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\r\n\t\t\t\t\tconst a = verticesCount + ix + gridX1 * iy;\r\n\t\t\t\t\tconst b = verticesCount + ix + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst c = verticesCount + (ix + 1) + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst d = verticesCount + (ix + 1) + gridX1 * iy;\r\n\t\t\t\t\t// indices.push(a, b, d);\r\n\t\t\t\t\t// indices.push(b, c, d);\r\n\t\t\t\t\tindices.push(a, b, d, c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tverticesCount += index;\r\n\t\t});\r\n\t\t\r\n\t\tconst {length: indicesCount} = indices;\r\n\t\tconst verticesArray: number[] = [];\r\n\t\tconst uvsArray: number[][] = [];\r\n\t\tfor (let i = 0; i < indicesCount; i += 4) {\r\n\t\t\tconst vi1 = 3 * indices[i], vi2 = 3 * indices[i + 1], vi3 = 3 * indices[i + 2], vi4 = 3 * indices[i + 3];\r\n\t\t\tconst ui1 = 2 * indices[i], ui2 = 2 * indices[i + 1], ui3 = 2 * indices[i + 2], ui4 = 2 * indices[i + 3];\r\n\t\t\tlet v1 = verticesArray[vi1], v2 = verticesArray[vi2], v3 = verticesArray[vi3], v4 = verticesArray[vi4];\r\n\t\t\tif (v1 === undefined) {\r\n\t\t\t\tv1 = builder.addVertex([vertices[vi1], vertices[vi1 + 1], vertices[vi1 + 2]]), verticesArray[vi1] = v1;\r\n\t\t\t}\r\n\t\t\tif (v2 === undefined) {\r\n\t\t\t\tv2 = builder.addVertex([vertices[vi2], vertices[vi2 + 1], vertices[vi2 + 2]]), verticesArray[vi2] = v2;\r\n\t\t\t}\r\n\t\t\tif (v3 === undefined) {\r\n\t\t\t\tv3 = builder.addVertex([vertices[vi3], vertices[vi3 + 1], vertices[vi3 + 2]]), verticesArray[vi3] = v3;\r\n\t\t\t}\r\n\t\t\t//\r\n\t\t\tif (v4 === undefined) {\r\n\t\t\t\tv4 = builder.addVertex([vertices[vi4], vertices[vi4 + 1], vertices[vi4 + 2]]), verticesArray[vi4] = v4;\r\n\t\t\t}\r\n\t\t\tlet uv1 = uvsArray[ui1], uv2 = uvsArray[ui2], uv3 = uvsArray[ui3], uv4 = uvsArray[ui4];\r\n\t\t\tif (uv1 === undefined) {\r\n\t\t\t\tuv1 = [uvs[ui1], uvs[ui1 + 1]], uvsArray[ui1] = uv1;\r\n\t\t\t}\r\n\t\t\tif (uv2 === undefined) {\r\n\t\t\t\tuv2 = [uvs[ui2], uvs[ui2 + 1]], uvsArray[ui2] = uv2;\r\n\t\t\t}\r\n\t\t\tif (uv3 === undefined) {\r\n\t\t\t\tuv3 = [uvs[ui3], uvs[ui3 + 1]], uvsArray[ui3] = uv3;\r\n\t\t\t}\r\n\t\t\t//\r\n\t\t\tif (uv4 === undefined) {\r\n\t\t\t\tuv4 = [uvs[ui4], uvs[ui4 + 1]], uvsArray[ui4] = uv4;\r\n\t\t\t}\r\n\t\t\t/*builder.addTriangleFace(v1, v2, v3, {\r\n\t\t\t\tuv: [uv1, uv2, uv3]\r\n\t\t\t});*/\r\n\t\t\tbuilder.addQuadFace(v1, v2, v3, v4, {\r\n\t\t\t\tuv: [uv1, uv2, uv3, uv4]\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn builder;\r\n\t}\r\n}","export enum TexturePixelFormat {\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    DEPTH_COMPONENT = 0x1902,\r\n    DEPTH_STENCIL = 0x84F9,\r\n    RED = 0x1903,\r\n    RG = 0x8227,\r\n    RED_INTEGER = 0x8D94,\r\n    RG_INTEGER = 0x8228,\r\n    RGB_INTEGER = 0x8D98,\r\n    RGBA_INTEGER = 0x8D99\r\n}\r\n\r\nexport enum TextureInternalPixelFormat {\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    DEPTH_COMPONENT16 = 0x81A5,\r\n    DEPTH_COMPONENT24 = 0x81A6,\r\n    DEPTH_COMPONENT32F = 0x8CAC,\r\n    DEPTH24_STENCIL8 = 0x88F0,\r\n    DEPTH32F_STENCIL8 = 0x8CAD,\r\n    R8 = 0x8229,\r\n    R8_SNORM = 0x8F94,\r\n    RG8 = 0x822B,\r\n    RG8_SNORM = 0x8F95,\r\n    RGB8 = 0x8051,\r\n    RGB8_SNORM = 0x8F96,\r\n    RGB565 = 0x8D62,\r\n    RGBA8 = 0x8058,\r\n    RGBA4 = 0x8056,\r\n    RGB5_A1 = 0x8057,\r\n    RGBA8_SNORM = 0x8F97,\r\n    RGB10_A2UI = 0x906F,\r\n    SRGB = 0x8C40,\r\n    SRGB8 = 0x8C41,\r\n    SRGB8_ALPHA8 = 0x8C43,\r\n    R16F = 0x822D,\r\n    RGB16F = 0x881B,\r\n    RGBA16F = 0x881A,\r\n    R32F = 0x822E,\r\n    RG32F = 0x8230,\r\n    RGB32F = 0x8815,\r\n    RGBA32F\t= 0x8814,\r\n    R11F_G11F_B10F = 0x8C3A,\r\n    RGB9_E5 = 0x8C3D,\r\n    R8UI = 0x8232,\r\n    R16I = 0x8233,\r\n    R16UI = 0x8234,\r\n    R32I = 0x8235,\r\n    R32UI = 0x8236,\r\n    RG8I = 0x8237,\r\n    RG8UI = 0x8238,\r\n    RG16I = 0x8239,\r\n    RG16UI = 0x823A,\r\n    RG32I = 0x823B,\r\n    RG32UI = 0x823C,\r\n    RGB8I = 0x8D8F,\r\n    RGB8UI = 0x8D7D,\r\n    RGB16I = 0x8D89,\r\n    RGB16UI = 0x8D77,\r\n    RGB32I = 0x8D83,\r\n    RGB32UI = 0x8D71,\r\n    RGBA8I = 0x8D8E,\r\n    RGBA8UI = 0x8D7C,\r\n    RGBA16I = 0x8D88,\r\n    RGBA16UI = 0x8D76,\r\n    RGBA32I = 0x8D82,\r\n    RGBA32UI = 0x8D70,\r\n}\r\n\r\nexport enum TexturePixelType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406,\r\n    HALF_FLOAT = 0x140B,\r\n    UNSIGNED_SHORT_4_4_4_4 = 0x8033,\r\n    UNSIGNED_SHORT_5_5_5_1 = 0x8034,\r\n    UNSIGNED_SHORT_5_6_5 = 0x8363,\r\n    UNSIGNED_INT_2_10_10_10_REV = 0x8368,\r\n    UNSIGNED_INT_24_8 = 0x84FA,\r\n    UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B,\r\n    UNSIGNED_INT_5_9_9_9_REV = 0x8C3E,\r\n    FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD,\r\n    INT_2_10_10_10_REV = 0x8D9F\r\n}\r\n\r\nexport enum TextureParameter {\r\n    TEXTURE_MAG_FILTER = 0x2800,\r\n    TEXTURE_MIN_FILTER = 0x2801,\r\n    TEXTURE_WRAP_S = 0x2802,\r\n    TEXTURE_WRAP_T = 0x2803,\r\n    TEXTURE_BASE_LEVEL = 0x813C,\r\n    TEXTURE_MAX_LEVEL = 0x813D,\r\n    TEXTURE_MAX_LOD = 0x813B,\r\n    TEXTURE_MIN_LOD = 0x813A,\r\n    TEXTURE_WRAP_R = 0x8072,\r\n    TEXTURE_COMPARE_FUNC = 0x884D,\r\n    TEXTURE_COMPARE_MODE = 0x884C\r\n}\r\n\r\nexport enum TextureTarget {\r\n    TEXTURE_2D = 0x0DE1,\r\n    TEXTURE_CUBE_MAP = 0x8513,\r\n    TEXTURE_3D = 0x806F,\r\n    TEXTURE_2D_ARRAY = 0x8C1A,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A\r\n}\r\n\r\nexport enum TextureMagFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600\r\n}\r\n\r\nexport enum TextureMinFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600,\r\n    NEAREST_MIPMAP_NEAREST = 0x2700, \r\n    LINEAR_MIPMAP_NEAREST = 0x2701, \r\n    NEAREST_MIPMAP_LINEAR = 0x2702,\r\n    LINEAR_MIPMAP_LINEAR = 0x2703\r\n}\r\n\r\nexport enum TextureCompareMode {\r\n    COMPARE_REF_TO_TEXTURE = 0x884E,\r\n    NONE = 0\r\n}\r\n\r\nexport enum TextureWrapMode {\r\n    REPEAT = 0x2901,\r\n    CLAMP_TO_EDGE = 0x812F, \r\n    MIRRORED_REPEAT = 0x8370\r\n}\r\n\r\nexport enum TextureCompareFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207\r\n}\r\n\r\nexport type Texture2DPixels = Uint32Array |  Uint16Array | Uint8Array | TexImageSource;\r\n\r\nexport type TextureCubeMapPixels = {\r\n    xPos: TexImageSource;\r\n    xNeg: TexImageSource;\r\n    yPos: TexImageSource;\r\n    yNeg: TexImageSource;\r\n    zPos: TexImageSource;\r\n    zNeg: TexImageSource;\r\n}\r\n\r\nexport type TextureProperties = {\r\n    target: TextureTarget;\r\n    pixels: Texture2DPixels | TextureCubeMapPixels | null;\r\n    width: number;\r\n    height: number;\r\n    format: TexturePixelFormat;\r\n    internalFormat: TextureInternalPixelFormat;\r\n    type: TexturePixelType;\r\n\r\n    depth?: number;\r\n    lod?: number;\r\n    border?: number;\r\n\r\n    subimages?: {\r\n        pixels: Texture2DPixels;\r\n        xoffset: number;\r\n        yoffset: number;\r\n        zoffset?: number;\r\n        width: number;\r\n        height: number;\r\n        depth?: number;\r\n    }[];\r\n\r\n    mipmap?: boolean;\r\n    min?: TextureMinFilter;\r\n    mag?: TextureMagFilter;\r\n\r\n    wrapS?: TextureWrapMode;\r\n    wrapT?: TextureWrapMode;\r\n    wrapR?: TextureWrapMode;\r\n\r\n    baseMipmapLevel?: number;\r\n    maxMipmapLevel?: number;\r\n\r\n    minLod?: number;\r\n    maxLod?: number;\r\n\r\n    compareFunction?: TextureCompareFunction;\r\n    compareMode?: TextureCompareMode;\r\n}\r\n\r\nexport type Texture = {\r\n    name: string;\r\n    unit: number;\r\n    internalTexture: WebGLTexture;\r\n    properties?: TextureProperties;\r\n}\r\n\r\nexport class WebGLTextureUtilities {\r\n\r\n    static #textureUnits: Map<string, number> = new Map();\r\n\r\n\r\n    static getTexturesUnitsEntries(): IterableIterator<[string, number]> {\r\n        return this.#textureUnits.entries();\r\n    }\r\n\r\n    static createTexture(gl: WebGL2RenderingContext, name: string, properties: TextureProperties): Texture | null {\r\n        const internalTexture = gl.createTexture();\r\n        if (internalTexture === null) {\r\n            return null;\r\n        }\r\n\r\n        let unit = this.#textureUnits.get(name);\r\n        if (unit == undefined) {\r\n            unit = Math.max(-1, ...this.#textureUnits.values()) + 1;\r\n            this.#textureUnits.set(name, unit);\r\n        }\r\n\r\n        const {pixels, target, subimages, width, height, format, internalFormat, type} = properties;\r\n        let {lod, border, depth, mipmap} = properties;\r\n\r\n        lod = lod ?? 0;\r\n        border = border ?? 0;\r\n        depth = depth ?? 0;\r\n        mipmap = mipmap ?? true;\r\n\r\n        const activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE);\r\n        if (activeTexture !== unit) {\r\n            gl.activeTexture(gl.TEXTURE0 + unit);\r\n            gl.bindTexture(target, internalTexture);\r\n        }\r\n        \r\n        switch (target) {\r\n            case TextureTarget.TEXTURE_2D: {\r\n                gl.texImage2D(target, lod, internalFormat, width, height, border, format, type, <ArrayBufferView | null>pixels);\r\n                if (subimages) {\r\n                    subimages.forEach((subimage_i) => {\r\n                        const {xoffset, yoffset, width, height, pixels} = subimage_i;\r\n                        gl.texSubImage2D(target, lod!, xoffset, yoffset, width, height, format, type, pixels as ArrayBufferView);\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case TextureTarget.TEXTURE_CUBE_MAP: {\r\n                if (pixels === null) {\r\n                    gl.texImage2D(target, lod, internalFormat, width, height, border, format, type, null);  \r\n                }\r\n                else {\r\n                    if (\"xPos\" in pixels) {\r\n                        const {xPos, xNeg, yPos, yNeg, zPos, zNeg} = pixels;\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_X, lod, internalFormat, width, height, border, format, type, xPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_X, lod, internalFormat, width, height, border, format, type, xNeg);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Y, lod, internalFormat, width, height, border, format, type, yPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Y, lod, internalFormat, width, height, border, format, type, yNeg);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Z, lod, internalFormat, width, height, border, format, type, zPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Z, lod, internalFormat, width, height, border, format, type, zNeg);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case TextureTarget.TEXTURE_2D_ARRAY: {\r\n                gl.texImage3D(target, lod, internalFormat, width, height,  depth, border, format, type, <ArrayBufferView | null>pixels);\r\n                if (subimages) {\r\n                    subimages.forEach((subimage_i, i) => {\r\n                        const {xoffset, yoffset, zoffset, width, height, depth, pixels} = subimage_i;\r\n                        gl.texSubImage3D(target, lod!, xoffset, yoffset, zoffset!, width, height, depth!, format, type, pixels as ArrayBufferView);\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (mipmap) {\r\n            gl.generateMipmap(target);\r\n        }\r\n\r\n        const {min, mag, wrapS, wrapT, wrapR, baseMipmapLevel, maxMipmapLevel, compareFunction, compareMode, minLod, maxLod} = properties;\r\n\r\n        if (min !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MIN_FILTER, min);\r\n        if (mag !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MAG_FILTER, mag);\r\n        if (wrapS  !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_S, wrapS);\r\n        if (wrapT !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_T, wrapT);\r\n        if (wrapR !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_R, wrapR);\r\n        if (baseMipmapLevel !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_BASE_LEVEL, baseMipmapLevel);\r\n        if (maxMipmapLevel !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MAX_LEVEL, maxMipmapLevel);\r\n        if (compareFunction !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_COMPARE_FUNC, compareFunction);\r\n        if (compareMode !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_COMPARE_MODE, compareMode);\r\n        if (minLod !== undefined)\r\n            gl.texParameterf(target, TextureParameter.TEXTURE_MIN_LOD, minLod);\r\n        if (maxLod !== undefined)\r\n            gl.texParameterf(target, TextureParameter.TEXTURE_MAX_LOD, maxLod);\r\n        \r\n        return {\r\n            unit,\r\n            internalTexture,\r\n            name,\r\n            properties: {\r\n                pixels,\r\n                target,\r\n                subimages,\r\n                lod,\r\n                width,\r\n                height,\r\n                format,\r\n                internalFormat,\r\n                type,\r\n                min,\r\n                mag,\r\n                wrapS,\r\n                wrapT,\r\n                wrapR,\r\n                baseMipmapLevel,\r\n                maxMipmapLevel,\r\n                compareFunction,\r\n                compareMode,\r\n                minLod,\r\n                maxLod\r\n            }\r\n        };\r\n    }\r\n\r\n    static setUnpackAlignment(gl: WebGL2RenderingContext, alignment: number): void {\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, alignment);\r\n    }\r\n\r\n    static deleteTexture(gl: WebGL2RenderingContext, texture: Texture): void {\r\n        const {internalTexture, name} = texture;\r\n        if (gl.isTexture(internalTexture)) {\r\n            gl.deleteTexture(internalTexture);\r\n            this.#textureUnits.delete(name);\r\n        }\r\n    }\r\n}","export enum ShaderType {\r\n    FRAGMENT_SHADER = 0x8B30,\r\n    VERTEX_SHADER = 0x8B31,\r\n}\r\n\r\nexport type Program = {\r\n    internalProgram: WebGLProgram;\r\n    vertexShader: Shader;\r\n    fragmentShader: Shader;\r\n}\r\n\r\nexport type Shader = {\r\n    internalShader: WebGLShader;\r\n    type: ShaderType;\r\n    source: string;\r\n}\r\n\r\nexport type ProgramProperties = {\r\n    vertexSource: string;\r\n    vertexFlags?: string[];\r\n    fragmentSource: string;\r\n    fragmentFlags?: string[];\r\n}\r\n\r\nexport class WebGLProgramUtilities {\r\n\r\n    static createShader(gl: WebGL2RenderingContext, type: ShaderType, source: string): Shader | null {\r\n        const internalShader = gl.createShader(type);\r\n        if (internalShader === null) {\r\n            return null;\r\n        }\r\n        gl.shaderSource(internalShader, source);\r\n        gl.compileShader(internalShader);\r\n        \r\n        const success = gl.getShaderParameter(internalShader, gl.COMPILE_STATUS);\r\n        if (success) {\r\n            return {\r\n                type,\r\n                internalShader,\r\n                source\r\n            };\r\n        }\r\n\r\n        const shaderInfoLog = gl.getShaderInfoLog(internalShader);\r\n        if (shaderInfoLog !== null) {\r\n            console.warn(shaderInfoLog);\r\n        }\r\n\r\n        gl.deleteShader(internalShader);\r\n        return null;\r\n    }\r\n    \r\n    static createProgram(gl: WebGL2RenderingContext, properties: ProgramProperties): Program | null {\r\n        const {vertexSource, fragmentSource} = properties;\r\n\r\n        const vertexShader = this.createShader(gl, ShaderType.VERTEX_SHADER, vertexSource);\r\n        if (vertexShader === null) {\r\n            return null;\r\n        }\r\n\r\n        const fragmentShader = this.createShader(gl, ShaderType.FRAGMENT_SHADER, fragmentSource);\r\n        if (fragmentShader === null) {\r\n            return null;\r\n        }\r\n        \r\n        const internalProgram = gl.createProgram();\r\n        if (internalProgram === null) {\r\n            return null;\r\n        }\r\n\r\n        const program: Program = {\r\n            internalProgram,\r\n            vertexShader,\r\n            fragmentShader\r\n        };\r\n        \r\n        gl.attachShader(internalProgram, vertexShader.internalShader);\r\n        gl.attachShader(internalProgram, fragmentShader.internalShader);\r\n        gl.linkProgram(internalProgram);\r\n\r\n        const success = gl.getProgramParameter(internalProgram, gl.LINK_STATUS);\r\n        if (success) {\r\n            return program;\r\n        }\r\n\r\n        const programInfoLog = gl.getProgramInfoLog(internalProgram);\r\n        if (programInfoLog !== null) {\r\n            const vertexInfoLog = gl.getShaderInfoLog(vertexShader.internalShader);\r\n            const fragmentInfoLog = gl.getShaderInfoLog(fragmentShader.internalShader);\r\n            console.warn(programInfoLog);\r\n            console.warn(vertexInfoLog);\r\n            console.warn(fragmentInfoLog);\r\n        }\r\n        this.deleteProgram(gl, program);\r\n\r\n        return null;\r\n    }\r\n\r\n    static recompileProgram(gl: WebGL2RenderingContext, program: Program, properties: Partial<ProgramProperties>) {\r\n        const {internalProgram, vertexShader, fragmentShader} = program;\r\n        let {vertexSource, fragmentSource} = properties;\r\n        if (typeof vertexSource === \"string\") {\r\n            const {internalShader} = vertexShader;\r\n            gl.shaderSource(internalShader, vertexSource);\r\n            gl.compileShader(internalShader);\r\n            vertexShader.source = vertexSource;\r\n        }\r\n        if (typeof fragmentSource === \"string\") {\r\n            const {internalShader} = fragmentShader;\r\n            gl.shaderSource(internalShader, fragmentSource);\r\n            gl.compileShader(internalShader);\r\n            fragmentShader.source = fragmentSource;\r\n        }\r\n        gl.linkProgram(internalProgram);\r\n\r\n        const success = gl.getProgramParameter(internalProgram, gl.LINK_STATUS);\r\n        if (success) {\r\n            return program;\r\n        }\r\n\r\n        const programInfoLog = gl.getProgramInfoLog(internalProgram);\r\n        if (programInfoLog !== null) {\r\n            const vertexInfoLog = gl.getShaderInfoLog(vertexShader.internalShader);\r\n            const fragmentInfoLog = gl.getShaderInfoLog(fragmentShader.internalShader);\r\n            console.warn(programInfoLog);\r\n            console.warn(vertexInfoLog);\r\n            console.warn(fragmentInfoLog);\r\n        }\r\n        return program;\r\n    }\r\n    \r\n    static deleteProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        const {vertexShader, fragmentShader, internalProgram} = program;\r\n        gl.deleteShader(vertexShader.internalShader);\r\n        gl.deleteShader(fragmentShader.internalShader);\r\n        gl.deleteProgram(internalProgram);\r\n    }\r\n\r\n    static useProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        const {internalProgram} = program;\r\n        const currentProgram = gl.getParameter(gl.CURRENT_PROGRAM);\r\n        if (currentProgram !== internalProgram) {\r\n            gl.useProgram(internalProgram);\r\n        }\r\n    }\r\n}","import { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\nimport { Texture } from \"./WebGLTextureUtilities\";\r\n\r\nexport { UniformValue };\r\nexport { Uniform };\r\nexport { UniformSetter };\r\nexport { UniformsListSetter };\r\nexport { WebGLUniformUtilities };\r\n\r\nexport enum UniformType {\r\n    BOOL = 0x8B56,\r\n    BOOL_VEC2 = 0x8B57,\t \r\n    BOOL_VEC3 = 0x8B58,\t \r\n    BOOL_VEC4 = 0x8B59,\r\n    INT = 0x1404,\r\n    INT_VEC2 = 0x8B53,\t \r\n    INT_VEC3 = 0x8B54,\t \r\n    INT_VEC4 = 0x8B55,\t \r\n    INT_SAMPLER_2D = 0x8DCA,\r\n    INT_SAMPLER_3D = 0x8DCB,\r\n    INT_SAMPLER_CUBE = 0x8DCC,\r\n    INT_SAMPLER_2D_ARRAY = 0x8DCF,\r\n    UNSIGNED_INT_SAMPLER_2D = 0x8DD2,\r\n    UNSIGNED_INT_SAMPLER_3D = 0x8DD3,\r\n    UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4,\r\n    UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7,\r\n    UNSIGNED_INT = 0x1405,\r\n    UNSIGNED_INT_VEC2 = 0x8DC6,\r\n    UNSIGNED_INT_VEC3 = 0x8DC7,\r\n    UNSIGNED_INT_VEC4 = 0x8DC8,\r\n    FLOAT = 0x1406,\r\n    FLOAT_VEC2 = 0x8B50,\t \r\n    FLOAT_VEC3 = 0x8B51,\t \r\n    FLOAT_VEC4 = 0x8B52,\r\n    FLOAT_MAT2 = 0x8B5A,\t \r\n    FLOAT_MAT3 = 0x8B5B,\t \r\n    FLOAT_MAT4 = 0x8B5C,\t \r\n    FLOAT_MAT2x3 = 0x8B65,\r\n    FLOAT_MAT2x4 = 0x8B66,\r\n    FLOAT_MAT3x2 = 0x8B67,\r\n    FLOAT_MAT3x4 = 0x8B68,\r\n    FLOAT_MAT4x2 = 0x8B69,\r\n    FLOAT_MAT4x3 = 0x8B6A,\r\n    SAMPLER_2D = 0x8B5E,\t \r\n    SAMPLER_3D = 0x8B5F,\r\n    SAMPLER_CUBE = 0x8B60,\r\n    SAMPLER_2D_SHADOW = 0x8B62,\r\n    SAMPLER_2D_ARRAY = 0x8DC1,\r\n    SAMPLER_2D_ARRAY_SHADOW = 0x8DC4,\r\n    SAMPLER_CUBE_SHADOW = 0x8DC5\r\n}\r\n\r\ntype UniformValue = number | Float32List | Uint32List | Int32List | Texture;\r\n\r\ntype Uniform = {\r\n    value: UniformValue;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n    transpose?: boolean;\r\n}\r\n\r\ntype UniformSetter = {\r\n    type: UniformType;\r\n    set: (value: any) => void;\r\n}\r\n\r\ntype UniformsListSetter = {\r\n    setters: Record<string, UniformSetter>;\r\n    program: Program;\r\n}\r\n\r\nexport enum UniformDataType {\r\n    SCALAR = \"SCALAR\",\r\n    VEC2 = \"VEC2\",\r\n    VEC3 = \"VEC3\",\r\n    VEC4 = \"VEC4\",\r\n    MAT2 = \"MAT2\",\r\n    MAT3 = \"MAT3\",\r\n    MAT4 = \"MAT4\"\r\n}\r\n\r\nclass WebGLUniformUtilities {\r\n\r\n    static asArrayBufferView(uniformValue: UniformValue): ArrayBufferView {\r\n        if (typeof uniformValue === \"object\") {\r\n            if (\"buffer\" in uniformValue) {\r\n                return uniformValue;\r\n            }\r\n            else if (\"unit\" in uniformValue) {\r\n                return Float32Array.of(uniformValue.unit);\r\n            }\r\n            else {\r\n                return Float32Array.from(uniformValue);\r\n            }\r\n        }\r\n        else {\r\n            return Float32Array.of(uniformValue);\r\n        }\r\n    }\r\n\r\n    static getUniformSetter(gl: WebGL2RenderingContext, uniform: Uniform, location: WebGLUniformLocation , uniformType: UniformType): UniformSetter | null { \r\n        const {value, srcOffset, srcLength} = uniform;\r\n        let {transpose} = uniform;\r\n        transpose = transpose ?? false;\r\n\r\n        switch (uniformType) {\r\n            case UniformType.FLOAT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1f(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1ui(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL:\r\n            case UniformType.INT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1i(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.INT_SAMPLER_2D:\r\n            case UniformType.INT_SAMPLER_2D_ARRAY:\r\n            case UniformType.INT_SAMPLER_3D:\r\n            case UniformType.INT_SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D:\r\n            case UniformType.SAMPLER_3D:\r\n            case UniformType.SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D_SHADOW:\r\n            case UniformType.SAMPLER_2D_ARRAY:\r\n            case UniformType.SAMPLER_2D_ARRAY_SHADOW:\r\n            case UniformType.SAMPLER_CUBE_SHADOW:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_3D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_CUBE:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D_ARRAY:\r\n                if (typeof value == \"object\" && \"unit\" in value) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (tex: Texture) => {\r\n                            const {unit} = tex;\r\n                            gl.uniform1i(location, unit);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform2fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC2:\r\n            case UniformType.INT_VEC2:\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform2iv(location, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC2:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform2uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform3fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC3:\r\n            case UniformType.INT_VEC3:\t\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform3iv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC3:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform3uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform4fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC4:\r\n            case UniformType.INT_VEC4:\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform4iv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC4:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform4uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4:\t\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4fv(location, transpose!, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x4fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x4fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static getUniformsListSetter(gl: WebGL2RenderingContext, program: Program, list: Record<string, Uniform>): UniformsListSetter | null {\r\n        const {internalProgram} = program;\r\n        \r\n        const uniformsNames = Object.keys(list);\r\n        let uniformIndices = gl.getUniformIndices(internalProgram, uniformsNames);\r\n        if (uniformIndices === null) {\r\n            console.error(`No uniform indices found.`);\r\n            return null;\r\n        }\r\n\r\n        const activeUniforms = gl.getProgramParameter(internalProgram, gl.ACTIVE_UNIFORMS);\r\n        const validUniformIndices = Array.from(uniformIndices).filter((index_i, i) => {\r\n            const isValid = index_i >= 0 && index_i < activeUniforms;\r\n            if (!isValid) {\r\n                console.warn(`Uniform ${uniformsNames[i]} could not be located.`);\r\n            }\r\n            return isValid;\r\n        });\r\n        \r\n        const setters: Record<string, UniformSetter> = {};\r\n\r\n        const activeUniformsInfo: WebGLActiveInfo[] = validUniformIndices.map(index => gl.getActiveUniform(internalProgram, index)!);\r\n        activeUniformsInfo.forEach(({name, type}) => {\r\n            const uniform = list[name];\r\n            const location = gl.getUniformLocation(internalProgram, name);\r\n            if (location === null) {\r\n                console.warn(`Uniform ${name} could not be located.`);\r\n                return null;\r\n            }\r\n            const setter = this.getUniformSetter(gl, uniform, location, type);\r\n            if (setter) {\r\n                setters[name] = setter;\r\n            }\r\n        });\r\n        \r\n        return {\r\n            setters,\r\n            program\r\n        };\r\n    }\r\n\r\n    static setUniformsListValues(gl: WebGL2RenderingContext, setter: UniformsListSetter, list: Record<string, Uniform>): void {\r\n        const {program, setters} = setter;\r\n        WebGLProgramUtilities.useProgram(gl, program);\r\n        \r\n        Object.entries(list).forEach(([uniformName, uniform]) => {\r\n            if (uniformName in setters) {\r\n                const setter = setters[uniformName];\r\n                const {value} = uniform;\r\n                setter.set(value);\r\n            }\r\n            else {\r\n                console.error(`Uniform ${uniformName} does not match any of the given setters.`);\r\n            }\r\n        });\r\n    }\r\n}","import { Uniform, WebGLUniformUtilities } from \"./WebGLUniformUtilities\";\r\nimport { Buffer, BufferDataUsage } from \"./WebGLBufferUtilities\";\r\nimport { Program } from \"./WebGLProgramUtilities\";\r\n\r\nexport type UniformBlock = {\r\n    name: string;\r\n    blockIndex: number;\r\n    program: Program;\r\n    layout: Record<string, {\r\n        byteOffset: number;\r\n    }>;\r\n    blockSize: number;\r\n    bindingPoint?: number;\r\n    buffer?: UniformBuffer;\r\n}\r\n\r\nexport type UniformBlockProperties = {\r\n    buffer?: number;\r\n    uniforms?: Record<string, Uniform>;\r\n}\r\n\r\nexport type UniformBuffer = Buffer & {\r\n    bindingPoint?: number;\r\n    rangeOffset?: number;\r\n    rangeSize?: number;\r\n}\r\n\r\nexport type UniformBufferProperties = {\r\n    usage: BufferDataUsage;\r\n    data?: ArrayBuffer;\r\n}\r\n\r\nexport type UniformBlocksProperties = {\r\n    buffers: (UniformBuffer | UniformBufferProperties)[];\r\n    blocks: Record<string, {\r\n        buffer: number;\r\n        uniforms: Record<string, Uniform>;\r\n    }>;\r\n}\r\n\r\nexport class WebGLUniformBlockUtilities {\r\n\r\n    static #bindingPoints: Map<string, number> = new Map();\r\n\r\n    static getBindingPointsEntries(): IterableIterator<[string, number]> {\r\n        const bindingPoints = this.#bindingPoints;\r\n        return bindingPoints.entries();\r\n    }\r\n\r\n    static createUniformBlock(gl: WebGL2RenderingContext, program: Program, name: string): UniformBlock | null {\r\n        const {internalProgram} = program;\r\n\r\n        const blockIndex = gl.getUniformBlockIndex(internalProgram, name);\r\n        if (blockIndex === gl.INVALID_INDEX) {\r\n            console.error(`Block '${name}' does not identify a valid uniform block.`);\r\n            return null;\r\n        }\r\n\r\n        const blockSize = gl.getActiveUniformBlockParameter(internalProgram, blockIndex, gl.UNIFORM_BLOCK_DATA_SIZE);\r\n        const layout: UniformBlock[\"layout\"] = {};\r\n        const blockUniformsIndices = gl.getActiveUniformBlockParameter(internalProgram, blockIndex, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES);\r\n        const activeUniformsOffsets = gl.getActiveUniforms(internalProgram, blockUniformsIndices, gl.UNIFORM_OFFSET);\r\n        activeUniformsOffsets.forEach((uniformOffset_i: number, i: number) => {\r\n            const uniformIndex = blockUniformsIndices[i];\r\n            const uniformInfo = gl.getActiveUniform(internalProgram, uniformIndex);\r\n            if (uniformInfo !== null) {\r\n                const {name} = uniformInfo;\r\n                layout[name] = {\r\n                    byteOffset: uniformOffset_i\r\n                };\r\n            }\r\n        });\r\n\r\n        return {\r\n            name,\r\n            blockIndex,\r\n            blockSize,\r\n            layout,\r\n            program\r\n        };\r\n    }\r\n\r\n    static createUniformBuffer(gl: WebGL2RenderingContext, byteLength: number, bind?: boolean, usage?: BufferDataUsage): UniformBuffer | null {\r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n        \r\n        const target = gl.UNIFORM_BUFFER;\r\n        gl.bindBuffer(target, internalBuffer);\r\n\r\n        usage = usage ?? BufferDataUsage.STATIC_READ;\r\n        bind = bind ?? false;\r\n\r\n        const bindingPoint = bind ? this.lastBindingPoint++ : undefined;\r\n        \r\n        gl.bufferData(target, byteLength, usage);\r\n        \r\n        return {\r\n            internalBuffer,\r\n            byteLength,\r\n            bindingPoint,\r\n            target,\r\n            usage\r\n        };\r\n    }\r\n\r\n    static createRangedUniformBuffers(gl: WebGL2RenderingContext, blocks: UniformBlock[], bind?: boolean, usage?: BufferDataUsage): UniformBuffer[] | null {\r\n\r\n        const offsetAlignment = gl.getParameter(gl.UNIFORM_BUFFER_OFFSET_ALIGNMENT);\r\n        const bufferByteLength = blocks.reduce(\r\n            (size, block) => size + Math.max(Math.ceil(block.blockSize / offsetAlignment), 1) * offsetAlignment, 0\r\n        );\r\n        \r\n        const buffer = this.createUniformBuffer(gl, bufferByteLength, false, usage);\r\n        if (buffer === null) {\r\n            return null;\r\n        }\r\n        \r\n        bind = bind ?? false;\r\n\r\n        let rangeOffset = 0;\r\n        const rangedUniformBuffers = blocks.map((block) => {\r\n            const {blockSize: rangeSize} = block;\r\n            const bindingPoint = bind ? this.lastBindingPoint++ : undefined;\r\n            const rangedUniformBuffer = {\r\n                ...buffer,\r\n                bindingPoint,\r\n                rangeOffset,\r\n                rangeSize\r\n            };\r\n            rangeOffset += Math.max(Math.ceil(rangeSize / offsetAlignment), 1) * offsetAlignment;\r\n            return rangedUniformBuffer;\r\n        });\r\n\r\n        return rangedUniformBuffers;\r\n    }\r\n\r\n    static setUniformBufferValues(gl: WebGL2RenderingContext, block: UniformBlock, buffer: UniformBuffer, uniforms: Record<string, Uniform>): void {\r\n        const {internalBuffer, target} = buffer;\r\n        const currentUniformBuffer = gl.getParameter(gl.UNIFORM_BUFFER_BINDING);\r\n        if (currentUniformBuffer !== internalBuffer) {\r\n            gl.bindBuffer(target, internalBuffer);\r\n        }\r\n        \r\n        const {layout, name} = block;\r\n        const {rangeOffset} = buffer;\r\n        Object.entries(uniforms).forEach(([uniformName, uniform]) => {\r\n            const {value} = uniform;\r\n            if (!(uniformName in layout)) {\r\n                console.warn(`${uniformName} does not exist in block ${name}.`);\r\n            }\r\n            const {byteOffset} = layout[uniformName];\r\n            gl.bufferSubData(target, byteOffset + (rangeOffset ?? 0), WebGLUniformUtilities.asArrayBufferView(value));\r\n        });\r\n    }\r\n\r\n    static setUniformBufferData(gl: WebGL2RenderingContext, buffer: UniformBuffer, data: ArrayBuffer | ArrayBufferView, dstByteOffset?: number, srcOffset?: number, length?: number): void {\r\n        const {internalBuffer, target} = buffer;\r\n        let {rangeOffset} = buffer;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        const byteOffset = (rangeOffset ?? 0) + (dstByteOffset ?? 0);\r\n        if (data instanceof ArrayBuffer) {\r\n            gl.bufferSubData(target, byteOffset, data);\r\n        }\r\n        else {\r\n            srcOffset = srcOffset ?? 0;\r\n            gl.bufferSubData(target, byteOffset, data, srcOffset, length);\r\n        }\r\n    }\r\n\r\n    static lastBindingPoint = 0;\r\n\r\n    static bindUniformBuffer(gl: WebGL2RenderingContext, block: UniformBlock, buffer: UniformBuffer): void {\r\n        const {internalBuffer, target} = buffer;\r\n        let {rangeOffset, rangeSize} = buffer;\r\n        const {bindingPoint} = buffer;\r\n        const {program, blockIndex} = block;\r\n        const {internalProgram} = program;\r\n\r\n        if (bindingPoint !== undefined) {\r\n            block.buffer = buffer;\r\n            gl.uniformBlockBinding(internalProgram, blockIndex, bindingPoint);\r\n            \r\n            if (bindingPoint !== undefined) {\r\n                if (rangeOffset !== undefined && rangeSize !== undefined) {\r\n                    gl.bindBufferRange(target, bindingPoint, internalBuffer, rangeOffset, rangeSize);\r\n                }\r\n                else {\r\n                    gl.bindBufferBase(target, bindingPoint, internalBuffer);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","export enum StencilAction {\r\n    KEEP = 0x1E00,\r\n    REPLACE\t= 0x1E01,\r\n    INCR = 0x1E02,\r\n    DECR = 0x1E03,\r\n    INVERT = 0x150A,\r\n    INCR_WRAP = 0x8507,\r\n    DECR_WRAP = 0x8508\r\n}\r\n\r\nexport enum BufferMask {\r\n    DEPTH_BUFFER_BIT = 0x00000100,\r\n    STENCIL_BUFFER_BIT = 0x00000400,\r\n    COLOR_BUFFER_BIT = 0x00004000\r\n}\r\n\r\nexport enum Buffer {\r\n    COLOR = 0x1800,\r\n    DEPTH = 0x1801,\r\n    STENCIL = 0x1802,\r\n    DEPTH_STENCIL = 0x84F9\r\n}\r\n\r\nexport enum TestFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207,\r\n}\r\n\r\nexport enum BlendingMode {\r\n    ZERO = 0,\r\n    ONE = 1,\r\n    SRC_COLOR = 0x0300,\r\n    ONE_MINUS_SRC_COLOR = 0x0301,\r\n    SRC_ALPHA = 0x0302,\r\n    ONE_MINUS_SRC_ALPHA\t= 0x0303,\r\n    DST_ALPHA = 0x0304,\r\n    ONE_MINUS_DST_ALPHA = 0x0305,\r\n    DST_COLOR = 0x0306,\r\n    ONE_MINUS_DST_COLOR = 0x0307,\r\n    SRC_ALPHA_SATURATE = 0x0308,\r\n    CONSTANT_COLOR = 0x8001,\r\n    ONE_MINUS_CONSTANT_COLOR = 0x8002,\r\n    CONSTANT_ALPHA = 0x8003,\r\n    ONE_MINUS_CONSTANT_ALPHA = 0x8004\r\n}\r\n\r\nexport enum BlendingEquation {\r\n    FUNC_ADD = 0x8006,\r\n    FUNC_SUBTRACT = 0x800A,\r\n    FUNC_REVERSE_SUBTRACT = 0x800B,\r\n    MIN = 0x8007,\r\n    MAX = 0x8008,\r\n}\r\n\r\nexport enum Capabilities {\r\n    BLEND = 0x0BE2,\r\n    CULL_FACE = 0x0B44,\r\n    DEPTH_TEST = 0x0B71,\r\n    DITHER = 0x0BD0,\r\n    POLYGON_OFFSET_FILL = 0x8037,\r\n    SAMPLE_ALPHA_TO_COVERAGE = 0x809E,\r\n    SAMPLE_COVERAGE = 0x80A0,\r\n    SCISSOR_TEST = 0x0C11,\r\n    STENCIL_TEST= 0x0B90,\r\n    RASTERIZER_DISCARD = 0x8C89\r\n}\r\n\r\nexport enum Face {\r\n    FRONT = 0x0404,\r\n    BACK = 0x0405,\r\n    FRONT_AND_BACK = 0x0408\r\n}\r\n\r\nexport enum WindingOrder {\r\n    CW = 0x0900,\r\n    CCW = 0x0901\r\n}\r\n\r\nexport enum HintTarget {\r\n    GENERATE_MIPMAP_HINT = 0x8192,\r\n    FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B\r\n}\r\n\r\nexport enum HintMode {\r\n    DONT_CARE = 0x1100,\r\n    FASTEST\t= 0x1101,\r\n    NICEST = 0x1102\r\n}\r\n\r\nexport class WebGLRendererUtilities {\r\n\r\n    static hint(gl: WebGL2RenderingContext, target: HintTarget, mode: HintMode) {\r\n        gl.hint(target, mode);\r\n    }\r\n\r\n    static frontFace(gl: WebGL2RenderingContext, winding: WindingOrder): void {\r\n        gl.frontFace(winding);\r\n    }\r\n\r\n    static scissor(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.scissor(x, y, width, height);\r\n    }\r\n\r\n    static viewport(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.viewport(x, y, width, height);\r\n    }\r\n\r\n    static clearColor(gl: WebGL2RenderingContext, color: ArrayLike<number>): void {\r\n        gl.clearColor(color[0], color[1], color[2], color[3]);\r\n    }\r\n\r\n    static depthFunction(gl: WebGL2RenderingContext, func: TestFunction): void {\r\n        gl.depthFunc(func);\r\n    }\r\n\r\n    static blendEquation(gl: WebGL2RenderingContext, equ: BlendingEquation): void {\r\n        gl.blendEquation(equ);\r\n    }\r\n\r\n    static blendFunction(gl: WebGL2RenderingContext, srcFunc: BlendingMode, dstFunc: BlendingMode): void {\r\n        gl.blendFunc(srcFunc, dstFunc);\r\n    }\r\n\r\n    static blendFunctionSeparate(gl: WebGL2RenderingContext, srcFunc: BlendingMode, dstFunc: BlendingMode, srcAlpha: number, dstAlpha: number): void {\r\n        gl.blendFuncSeparate(srcFunc, dstFunc, srcAlpha, dstAlpha);\r\n    }\r\n\r\n    static stencilFunction(gl: WebGL2RenderingContext, func: TestFunction, ref: number, mask: number, face: Face): void {\r\n        gl.stencilFuncSeparate(face, func, ref, mask);\r\n    }\r\n\r\n    static stencilOperations(gl: WebGL2RenderingContext, fail: StencilAction, zFail: StencilAction, zPass: StencilAction, face: Face) {\r\n        gl.stencilOpSeparate(face, fail, zFail, zPass);\r\n    }\r\n\r\n    static stencilMask(gl: WebGL2RenderingContext, mask: number, face: Face) {\r\n        gl.stencilMaskSeparate(face, mask);\r\n    }\r\n\r\n    static colorMask(gl: WebGL2RenderingContext, red: boolean, green: boolean, blue: boolean, alpha: boolean) {\r\n        gl.colorMask(red, green, blue, alpha);\r\n    }\r\n\r\n    static depthMask(gl: WebGL2RenderingContext, flag: boolean) {\r\n        gl.depthMask(flag);\r\n    }\r\n\r\n    static enable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.enable(capability);\r\n    }\r\n\r\n    static disable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.disable(capability);\r\n    }\r\n\r\n    static clear(gl: WebGL2RenderingContext, buffer: BufferMask): void {\r\n        gl.clear(buffer);\r\n    }\r\n\r\n    static getViewport(gl: WebGL2RenderingContext): Int32Array {\r\n        return gl.getParameter(gl.VIEWPORT) as Int32Array;\r\n    }\r\n\r\n    static getMaxSamples(gl: WebGL2RenderingContext): number {\r\n        return gl.getParameter(gl.MAX_SAMPLES) as number;\r\n    }\r\n\r\n    static drawBuffers(gl: WebGL2RenderingContext, buffers: Iterable<number>): void {\r\n        gl.drawBuffers(buffers);\r\n    }\r\n\r\n    static clearBuffers(gl: WebGL2RenderingContext, buffer: Buffer, index: number, values: Float32Array | Int32Array | Uint32Array, srcOffset?: number): void {\r\n        if (values instanceof Float32Array) {\r\n            gl.clearBufferfv(buffer, index, values, srcOffset);\r\n        }\r\n        else if (values instanceof Int32Array) {\r\n            gl.clearBufferiv(buffer, index, values, srcOffset);\r\n        }\r\n        else if (values instanceof Uint32Array) {\r\n            gl.clearBufferuiv(buffer, index, values, srcOffset);\r\n        }\r\n    }\r\n}","import { VertexArray, VertexArrayValues, VertexArrayProperties, WebGLVertexArrayUtilities, DrawMode } from \"./WebGLVertexArrayUtilities\"\r\nimport { Texture, TextureProperties, WebGLTextureUtilities } from \"./WebGLTextureUtilities\"\r\nimport { UniformBlock, UniformBlockProperties, UniformBuffer, UniformBufferProperties, WebGLUniformBlockUtilities } from \"./WebGLUniformBlockUtilities\"\r\nimport { Uniform, UniformsListSetter, WebGLUniformUtilities } from \"./WebGLUniformUtilities\"\r\nimport { Program, ProgramProperties, WebGLProgramUtilities } from \"./WebGLProgramUtilities\"\r\n\r\nexport type PacketProperties = {\r\n    program: ProgramProperties | Program;\r\n    vertexArray: VertexArrayProperties;\r\n    uniformBuffers?: (UniformBufferProperties | UniformBuffer)[];\r\n    uniformBlocks?: Record<string, UniformBlockProperties>;\r\n    uniforms?: Record<string, Uniform>;\r\n    drawCommand: {\r\n        mode: DrawMode;\r\n        elementsCount?: number;\r\n        instanceCount?: number;\r\n        multiDraw?: {\r\n            firstsList?: Iterable<number> | Int32Array;\r\n            firstsOffset?: number;\r\n            countsList?: Iterable<number> | Int32Array;\r\n            countsOffset?: number;\r\n            offsetsList?: Iterable<number> | Int32Array;\r\n            offsetsOffset?: number;\r\n            instanceCountsList?: Iterable<number> | Int32Array;\r\n            instanceCountsOffset?: number;\r\n            drawCount?: number;\r\n        }\r\n    }\r\n}\r\n\r\nexport type PacketValues = {\r\n    vertexArray?: VertexArrayValues;\r\n    uniforms?: Record<string, Uniform>;\r\n    uniformBlocks?: Record<string, {\r\n        uniforms: Record<string, Uniform>;\r\n    }>;\r\n}\r\n\r\nexport type Packet = {\r\n    program: Program;\r\n    vertexArray: VertexArray;\r\n    uniforms?: UniformsListSetter;\r\n    uniformBlocks?: Record<string, UniformBlock>;\r\n    drawCommand: PacketDrawCommand;\r\n}\r\n\r\nexport interface PacketDrawCommand {\r\n    mode: DrawMode;\r\n    elementsCount?: number;\r\n    instanceCount?: number;\r\n    multiDraw?: {\r\n        firstsList?: Iterable<number> | Int32Array;\r\n        firstsOffset?: number;\r\n        countsList?: Iterable<number> | Int32Array;\r\n        countsOffset?: number;\r\n        offsetsList?: Iterable<number> | Int32Array;\r\n        offsetsOffset?: number;\r\n        instanceCountsList?: Iterable<number> | Int32Array;\r\n        instanceCountsOffset?: number;\r\n        drawCount?: number;\r\n    };\r\n}\r\n\r\nexport class WebGLPacketUtilities {\r\n\r\n    static createTextures(gl: WebGL2RenderingContext, textures: Record<string, TextureProperties>): Record<string, Texture> {\r\n        const _textures: {\r\n            [key: string]: Texture\r\n        } = {};\r\n        Object.entries(textures).forEach(([name, properties]) => {\r\n            const texture = WebGLTextureUtilities.createTexture(gl, name, properties);\r\n            if (texture !== null) {\r\n                _textures[name] = texture;\r\n            }\r\n        });\r\n        return _textures;\r\n    }\r\n    \r\n    static createPacket(gl: WebGL2RenderingContext, packet: PacketProperties): Packet | null {\r\n        const {program: programProperties, vertexArray: vertexArrayProperties, uniforms: uniformsProperties, uniformBlocks: uniformBlocksProperties, uniformBuffers: uniformBuffersProperties} = packet;\r\n        const {drawCommand} = packet;\r\n\r\n        let program: Program | null = null;\r\n        if (\"internalProgram\" in programProperties) {\r\n            program = programProperties;\r\n        }\r\n        else {\r\n            program = WebGLProgramUtilities.createProgram(gl, programProperties);\r\n        }\r\n        if (program === null) {\r\n            return null;\r\n        }\r\n        \r\n        let vertexArray: VertexArray | null = null;\r\n        vertexArray = WebGLVertexArrayUtilities.createVertexArray(gl, program, vertexArrayProperties);\r\n        if (vertexArray === null) {\r\n            return null;\r\n        }\r\n      \r\n        let uniforms: UniformsListSetter | null | undefined = undefined;\r\n        if (uniformsProperties !== undefined) {\r\n            uniforms = WebGLUniformUtilities.getUniformsListSetter(gl, program, uniformsProperties);\r\n            if (uniforms === null) {\r\n                return null;\r\n            }\r\n            WebGLUniformUtilities.setUniformsListValues(gl, uniforms, uniformsProperties);\r\n        }\r\n\r\n        let uniformBlocks: Record<string, UniformBlock> = {};\r\n        const uniformBlocksPropertiesEntries = uniformBlocksProperties ? Object.entries(uniformBlocksProperties) : [];\r\n        const uniformBuffersMaxIndex = (uniformBuffersProperties?.length ?? 0) - 1;\r\n        uniformBlocksPropertiesEntries.forEach(([_, uniformBlockProperty]) => {\r\n            const {buffer} = uniformBlockProperty;\r\n            if (buffer !== undefined && buffer > uniformBuffersMaxIndex) {\r\n                console.error(`Uniform buffer with index ${buffer} does not exist.`);\r\n            }\r\n        });\r\n        if (uniformBuffersProperties) {\r\n            uniformBuffersProperties.forEach(\r\n                (uniformBuffersProperty_i, i) => {\r\n                    const relatedBlockProperties = uniformBlocksPropertiesEntries.filter(\r\n                        ([_, uniformBlockProperty]) => uniformBlockProperty.buffer === i\r\n                    );\r\n                    const relatedBlocks = <UniformBlock[]>relatedBlockProperties.map(\r\n                        ([blockName, _]) => WebGLUniformBlockUtilities.createUniformBlock(gl, program!, blockName)\r\n                    );\r\n                    const {length: relatedBlocksCount} = relatedBlocks;        \r\n                    if (\"internalBuffer\" in uniformBuffersProperty_i) {\r\n                        relatedBlocks.forEach((block_i) => {\r\n                            const {name} = block_i!;\r\n                            WebGLUniformBlockUtilities.bindUniformBuffer(gl, block_i!, uniformBuffersProperty_i);\r\n                            uniformBlocks[name] = block_i!;\r\n                        });\r\n                    }\r\n                    else {\r\n                        if (relatedBlocksCount > 0) {\r\n                            const {usage, data} = uniformBuffersProperty_i;\r\n                            if (relatedBlocksCount > 1) {\r\n                                const rangedBuffers = WebGLUniformBlockUtilities.createRangedUniformBuffers(gl, <UniformBlock[]>relatedBlocks, true, usage)!;\r\n                                if (data) {\r\n                                    WebGLUniformBlockUtilities.setUniformBufferData(gl, rangedBuffers[0], data);\r\n                                }\r\n                                relatedBlocks.forEach((block_i, i) => {\r\n                                    const {name} = block_i!;\r\n                                    const rangedBuffer = rangedBuffers[i];\r\n                                    WebGLUniformBlockUtilities.bindUniformBuffer(gl, block_i!, rangedBuffer);\r\n                                    const {uniforms} = relatedBlockProperties[i][1];\r\n                                    if (uniforms) {\r\n                                        WebGLUniformBlockUtilities.setUniformBufferValues(gl, block_i, rangedBuffer, uniforms);\r\n                                    }\r\n                                    uniformBlocks[name] = block_i!;\r\n                                });\r\n                            }\r\n                            else {\r\n                                const relatedBlock = relatedBlocks[0];\r\n                                const {blockSize, name} = relatedBlock;\r\n                                const buffer = WebGLUniformBlockUtilities.createUniformBuffer(gl, blockSize, true, usage);\r\n                                if (buffer === null) {\r\n                                    return null;\r\n                                }\r\n                                if (data) {\r\n                                    WebGLUniformBlockUtilities.setUniformBufferData(gl, buffer, data);\r\n                                }\r\n                                WebGLUniformBlockUtilities.bindUniformBuffer(gl, relatedBlock!, buffer!);\r\n                                const {uniforms} = relatedBlockProperties[0][1];\r\n                                if (uniforms) {\r\n                                    WebGLUniformBlockUtilities.setUniformBufferValues(gl, relatedBlock, buffer, uniforms);\r\n                                }\r\n                                uniformBlocks[name] = relatedBlock!;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        const remainingBlockProperties = uniformBlocksPropertiesEntries.filter(\r\n            ([_, uniformBlockProperty]) => uniformBlockProperty.buffer === undefined\r\n        );\r\n        remainingBlockProperties.forEach(([blockName, uniformBlockProperties]) => {\r\n            const {uniforms} = uniformBlockProperties;\r\n            const block = WebGLUniformBlockUtilities.createUniformBlock(gl, program!, blockName);\r\n            if (block === null) {\r\n                return null;\r\n            }\r\n            const {blockSize} = block;\r\n            const buffer = WebGLUniformBlockUtilities.createUniformBuffer(gl, blockSize, true);\r\n            if (buffer === null) {\r\n                return null;\r\n            }\r\n            WebGLUniformBlockUtilities.bindUniformBuffer(gl, block, buffer);\r\n            if (uniforms !== undefined) {\r\n                WebGLUniformBlockUtilities.setUniformBufferValues(gl, block, buffer, uniforms);\r\n            }\r\n            uniformBlocks[blockName] = block;\r\n        });\r\n\r\n        return {\r\n            program,\r\n            vertexArray,\r\n            uniforms,\r\n            uniformBlocks,\r\n            drawCommand\r\n        };\r\n    }\r\n\r\n    static setPacketValues(gl: WebGL2RenderingContext, packet: Packet, values: PacketValues): void {\r\n        const {vertexArray: vertexArrayValues, uniforms: uniformsValues, uniformBlocks: uniformsBlocksValues} = values;\r\n        const {vertexArray, uniforms, uniformBlocks} = packet;\r\n\r\n        if (vertexArrayValues !== undefined) {\r\n            WebGLVertexArrayUtilities.setVertexArrayValues(gl, vertexArray, vertexArrayValues);\r\n        }\r\n        if (uniforms !== undefined && uniformsValues !== undefined) {\r\n            WebGLUniformUtilities.setUniformsListValues(gl, uniforms, uniformsValues);\r\n        }\r\n        if (uniformBlocks !== undefined && uniformsBlocksValues !== undefined) {\r\n            const uniformBlocksValuesEntries = uniformsBlocksValues ? Object.entries(uniformsBlocksValues) : [];\r\n            uniformBlocksValuesEntries.forEach(([blockName, uniformBlock]) => {\r\n                const {uniforms} = uniformBlock;\r\n                const block = uniformBlocks[blockName];\r\n                const {buffer} = block;\r\n                if (buffer) {\r\n                    WebGLUniformBlockUtilities.setUniformBufferValues(gl, block, buffer, uniforms);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    static #multiDrawExtension: WEBGL_multi_draw | null = null;\r\n\r\n    static enableMultidrawExtension(gl: WebGL2RenderingContext) {\r\n        this.#multiDrawExtension = gl.getExtension(\"WEBGL_multi_draw\");\r\n    }\r\n\r\n    static drawPacket(gl: WebGL2RenderingContext, packet: Packet, drawCommand: PacketDrawCommand = packet.drawCommand): void {\r\n        const {vertexArray} = packet;\r\n        const {program, internalVertexArray, elementBuffer} = vertexArray;\r\n        const {mode, elementsCount, instanceCount, multiDraw} = drawCommand;\r\n\r\n        WebGLProgramUtilities.useProgram(gl, program);\r\n        \r\n        const currentVertexArray = gl.getParameter(gl.VERTEX_ARRAY_BINDING);\r\n        if (currentVertexArray !== internalVertexArray) {\r\n            gl.bindVertexArray(internalVertexArray);\r\n        }\r\n        \r\n        if (elementBuffer) {\r\n            const {indexType} = elementBuffer;\r\n            if (instanceCount !== undefined && elementsCount !== undefined) {\r\n                gl.drawElementsInstanced(mode, elementsCount, indexType, 0, instanceCount);\r\n            }\r\n            else if (multiDraw) {\r\n                const multiDrawExtension = this.#multiDrawExtension!;\r\n                const {countsList, countsOffset, offsetsList, offsetsOffset, drawCount, instanceCountsList, instanceCountsOffset} = multiDraw;\r\n                if (instanceCountsList !== undefined && instanceCountsOffset !== undefined) {\r\n                    multiDrawExtension.multiDrawElementsInstancedWEBGL(\r\n                        mode, countsList!, countsOffset!, indexType!,\r\n                        offsetsList!, offsetsOffset!, instanceCountsList, instanceCountsOffset, drawCount!\r\n                    );\r\n                }\r\n                else {\r\n                    multiDrawExtension.multiDrawElementsWEBGL(\r\n                        mode, countsList!, countsOffset!, indexType!,\r\n                        offsetsList!, offsetsOffset!, drawCount!\r\n                    );\r\n                }\r\n            }\r\n            else if (elementsCount !== undefined) {\r\n                gl.drawElements(mode, elementsCount, indexType, 0);\r\n            }\r\n        }\r\n        else {\r\n            if (instanceCount !== undefined && elementsCount !== undefined) {\r\n                gl.drawArraysInstanced(mode, 0, elementsCount, instanceCount);\r\n            }\r\n            else if (multiDraw) {\r\n                const multiDrawExtension = this.#multiDrawExtension!;\r\n                const {countsList, countsOffset, firstsList, firstsOffset, drawCount, instanceCountsList, instanceCountsOffset} = multiDraw;\r\n                if (instanceCountsList !== undefined && instanceCountsOffset !== undefined) {\r\n                    multiDrawExtension.multiDrawArraysInstancedWEBGL(\r\n                        mode, firstsList!, firstsOffset!,\r\n                        countsList!, countsOffset!, instanceCountsList, instanceCountsOffset, drawCount!\r\n                    );\r\n                }\r\n                else {\r\n                    multiDrawExtension.multiDrawArraysWEBGL(\r\n                        mode, firstsList!, firstsOffset!, \r\n                        countsList!, countsOffset!, drawCount!\r\n                    );\r\n                }\r\n            }\r\n            else if (elementsCount !== undefined) {\r\n                gl.drawArrays(mode, 0, elementsCount);\r\n            }\r\n        }\r\n    }\r\n}","import { multiDraw } from \"./src/samples/scenes/MultiDraw\";\r\nimport { Entity } from \"./src/engine/core/general/Entity\";\r\nimport { Scene } from \"./src/engine/core/general/Scene\";\r\nimport { FaceHalfEdgesIterator, FaceVerticesIterator, Vertex, VertexFacesIterator } from \"./src/engine/core/rendering/scenes/geometries/GeometryBuilder\";\r\nimport { QuadGeometry } from \"./src/engine/core/rendering/scenes/geometries/lib/QuadGeometry\";\r\nimport { Matrix3 } from \"./src/engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"./src/engine/libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector2 } from \"./src/engine/libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"./src/engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector4 } from \"./src/engine/libs/maths/algebra/vectors/Vector4\";\r\nimport { GOLDEN_RATIO } from \"./src/engine/libs/maths/geometry/GeometryConstants\";\r\nimport { Triangle } from \"./src/engine/libs/maths/geometry/primitives/Triangle\";\r\nimport { Space } from \"./src/engine/libs/maths/geometry/space/Space\";\r\nimport { buildArrayFromIndexedArrays } from \"./src/engine/utils/Snippets\";\r\nimport { start } from \"./src/samples/scenes/SimpleScene\";\r\nimport { octree } from \"./src/samples/scenes/Octree\";\r\nimport { deferred } from \"./src/samples/scenes/Deferred\";\r\nimport { helpers } from \"./src/samples/scenes/Helpers\";\r\n/*\r\nfunction windingOrder(v0: Vector3, v1: Vector3, v2: Vector3) {\r\n    const triangle = new Triangle(v0, v1, v2);\r\n    const centroid = triangle.getMidpoint(new Vector3());\r\n    const normal = triangle.getNormal(new Vector3());\r\n    \r\n    const e1 = v1.clone().sub(v0);\r\n    const e2 = e1.clone().cross(normal);\r\n\r\n    e1.normalize();\r\n    e2.normalize();\r\n\r\n    const v0_centered = v0.clone().sub(centroid);\r\n    const v1_centered = v1.clone().sub(centroid);\r\n    const v2_centered = v2.clone().sub(centroid);\r\n\r\n    const v0_t1 = e1.dot(v0_centered);\r\n    const v0_t2 = e2.dot(v0_centered);\r\n\r\n    const v1_t1 = e1.dot(v1_centered);\r\n    const v1_t2 = e2.dot(v1_centered);\r\n\r\n    const v2_t1 = e1.dot(v2_centered);\r\n    const v2_t2 = e2.dot(v2_centered);\r\n\r\n    const det = (v1_t1 - v0_t1) * (v2_t2 - v0_t2) - (v1_t2 - v0_t2) * (v2_t1 - v0_t1);\r\n    console.log(det < 0 ? \"CW\" : \"CCW\");\r\n\r\n    // const v0_out = new Vector2([v0_t1, v0_t2]);\r\n    // const v1_out = new Vector2([v1_t1, v1_t2]);\r\n    // const v2_out = new Vector2([v2_t1, v2_t2]);\r\n    // const v0_angle = Math.atan2(v0_out.y, v0_out.x);\r\n    // const v1_angle = Math.atan2(v1_out.y, v1_out.x);\r\n    // const v2_angle = Math.atan2(v2_out.y, v2_out.x);\r\n    \r\n    // const angles = [v0_angle, v1_angle, v2_angle];\r\n}*/\r\n\r\nexport async function main() {\r\n    //instanced();\r\n    //wireframe();\r\n\r\n    /*const myWorker = new Worker(\"./worker.js\");\r\n    const sab = new SharedArrayBuffer(1024);\r\n    const array = new Uint32Array(sab);\r\n    myWorker.addEventListener(\"message\", (event) => {\r\n        console.log(`Received back: ${array[10]}`);\r\n    });\r\n\r\n    myWorker.postMessage(sab);*/\r\n\r\n    //helpers();\r\n    //deferred();\r\n    octree();\r\n    //start();\r\n    //multiDraw();\r\n\r\n    //startMaps();\r\n\r\n    // const button = document.createElement(\"button\");\r\n    // button.textContent = \"Get bin\";\r\n    // document.body.insertAdjacentElement(\"beforebegin\", button);\r\n    // button.onclick = () => {\r\n    //     const anchor = document.createElement(\"a\");\r\n    //     const myData = new Float32Array([32.20, 1]);\r\n    //     const myBlob = new Blob([myData]);\r\n    //     anchor.download = \"dat.bin\";\r\n    //     anchor.href = URL.createObjectURL(myBlob);\r\n    //     anchor.click();\r\n    // };\r\n    \r\n    // const input = document.createElement(\"input\");\r\n    // input.type = \"file\";\r\n    // input.oninput = () => {\r\n    //     if (input.files) {\r\n    //         Array.from(input.files).forEach((file) => {\r\n    //             file.arrayBuffer().then((arr) => {\r\n    //                 console.log(Array.from(new Float32Array(arr)).map(val => val.toFixed(3)));\r\n    //             });\r\n    //         });\r\n    //     }\r\n    // };\r\n    // document.body.insertAdjacentElement(\"beforebegin\", input);\r\n}","import { ArcballCameraControl } from \"../../engine/core/controls/ArcballCameraControl\";\r\nimport { FreeCameraControl } from \"../../engine/core/controls/FreeCameraControl\";\r\nimport { Transform } from \"../../engine/core/general/Transform\";\r\nimport { Input } from \"../../engine/core/input/Input\";\r\nimport { CameraHelper } from \"../../engine/core/rendering/helpers/CameraHelper\";\r\nimport { GridHelper } from \"../../engine/core/rendering/helpers/GridHelper\";\r\nimport { Camera } from \"../../engine/core/rendering/scenes/cameras/Camera\";\r\nimport { PerspectiveCamera } from \"../../engine/core/rendering/scenes/cameras/PerspectiveCamera\";\r\nimport { BoundingBox } from \"../../engine/core/rendering/scenes/geometries/bounding/BoundingBox\";\r\nimport { GeometryBuffer } from \"../../engine/core/rendering/scenes/geometries/GeometryBuffer\";\r\nimport { Octree } from \"../../engine/core/rendering/scenes/geometries/lib/Octree\";\r\nimport { CubeGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/CubeGeometry\";\r\nimport { QuadGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/QuadGeometry\";\r\nimport { BufferDataUsage } from \"../../engine/core/rendering/webgl/WebGLBufferUtilities\";\r\nimport { WebGLPacketUtilities } from \"../../engine/core/rendering/webgl/WebGLPacketUtilities\";\r\nimport { WebGLProgramUtilities } from \"../../engine/core/rendering/webgl/WebGLProgramUtilities\";\r\nimport { BufferMask, Capabilities, TestFunction, WebGLRendererUtilities } from \"../../engine/core/rendering/webgl/WebGLRendererUtilities\";\r\nimport { AttributeDataType, DrawMode, WebGLVertexArrayUtilities } from \"../../engine/core/rendering/webgl/WebGLVertexArrayUtilities\";\r\nimport { Color } from \"../../engine/libs/graphics/colors/Color\";\r\nimport { Matrix4 } from \"../../engine/libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../engine/libs/maths/geometry/space/Space\";\r\n\r\nexport async function octree() {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.style.display = \"block\";\r\n    canvas.tabIndex = 0;\r\n    canvas.oncontextmenu = () => {\r\n        return false;\r\n    };\r\n    canvas.width = 1000;\r\n    canvas.height = 800;\r\n    const gl = canvas.getContext(\"webgl2\");\r\n    if (gl == null) {\r\n        return;\r\n    }\r\n\r\n    WebGLPacketUtilities.enableMultidrawExtension(gl);\r\n\r\n    const playpause = document.createElement(\"button\");\r\n    playpause.textContent = \"Pause\";\r\n    let paused = false;\r\n    if (playpause !== null) {\r\n        playpause.onclick = () => {\r\n        paused = !paused;\r\n        playpause.textContent = paused ? \"Play\" : \"Pause\";\r\n        if (!paused) {\r\n            requestAnimationFrame(render);\r\n        }\r\n      };\r\n    }\r\n\r\n    \r\n    let selectionMatrix = new Matrix4();\r\n    /*let updateSelection: Function;\r\n\r\n    const [minXInput, minYInput, minZInput, maxXInput, maxYInput, maxZInput] = new Array(6).fill(0).map(() => {\r\n        const input  = document.createElement(\"input\");\r\n        input.type = \"number\";\r\n        input.valueAsNumber = 0;\r\n        input.onchange = () => {\r\n            const {valueAsNumber: minX} = minXInput;\r\n            const {valueAsNumber: minY} = minYInput;\r\n            const {valueAsNumber: minZ} = minZInput;\r\n            const {valueAsNumber: maxX} = maxXInput;\r\n            const {valueAsNumber: maxY} = maxYInput;\r\n            const {valueAsNumber: maxZ} = maxZInput;\r\n            const boxWidth = Math.abs(maxX - minX);\r\n            const boxHeight = Math.abs(maxY - minY);\r\n            const boxDepth = Math.abs(maxZ - minZ);\r\n            const centerX = (minX + maxX) / 2;\r\n            const centerY = (minY + maxY) / 2;\r\n            const centerZ = (minZ + maxZ) / 2;\r\n            const boxCenter = new Vector3(centerX, centerY, centerZ);\r\n            const boxScaling = new Vector3(boxWidth, boxHeight, boxDepth);\r\n            selectionMatrix.setIdentity().translate(boxCenter).scale(boxScaling);\r\n        };\r\n        return input;\r\n    });*/\r\n\r\n    let camera: Camera;\r\n\r\n    const cameraSwitch = document.createElement(\"input\");\r\n    cameraSwitch.type = \"checkbox\";\r\n    cameraSwitch.onchange = () => {\r\n        const {checked} = cameraSwitch;\r\n        camera = checked ? cullingCamera : defaultCamera;\r\n        cameraControl.camera = camera;\r\n    };\r\n\r\n    document.body.append(\r\n        cameraSwitch, playpause, canvas\r\n    );\r\n\r\n    const linesVert = await fetch(\"assets/engine/shaders/common/multi/lines.vert\").then(resp => resp.text());\r\n    const linesFrag = await fetch(\"assets/engine/shaders/common/multi/lines.frag\").then(resp => resp.text());\r\n\r\n    const fov = (1 / 3) * Math.PI;\r\n    const aspect = canvas.width / canvas.height;\r\n    const zNear = 0.1;\r\n    const zFar = 1000;\r\n\r\n    const defaultCamera = new PerspectiveCamera(fov, aspect, zNear, zFar);\r\n    defaultCamera.transform.setTranslation(new Vector3([0, 0, 25]));\r\n\r\n    const cullingCamera = new PerspectiveCamera(fov, aspect, zNear, zFar);\r\n    const cullingCameraHelper = new CameraHelper(cullingCamera);\r\n    const cameraLines = cullingCameraHelper.geometry.getAttribute(\"a_position\")!;\r\n    const cameraColors = cullingCameraHelper.geometry.getAttribute(\"a_color\")!;\r\n\r\n    \r\n    camera = defaultCamera;\r\n    const cameraControl = new FreeCameraControl(camera);\r\n\r\n    const gridHelper = new GridHelper({\r\n        size: 100,\r\n        divisions: 100\r\n    });\r\n    const gridLines = gridHelper.geometry.getAttribute(\"a_position\")!;\r\n    const gridColors = gridHelper.geometry.getAttribute(\"a_color\")!;\r\n\r\n    const cubeGeometry = new CubeGeometry();\r\n    const cubeGeometryBuilder = cubeGeometry.toBuilder();\r\n    const cubeLinesArray = cubeGeometryBuilder.verticesArray();\r\n    const cubeLinesIndicesArray = cubeGeometryBuilder.linesIndicesArray();\r\n\r\n    const rootScaling = 32;\r\n    const rootBox = new BoundingBox(\r\n        new Vector3(-rootScaling, -rootScaling, -rootScaling),\r\n        new Vector3(rootScaling, rootScaling, rootScaling)\r\n    );\r\n\r\n    const entityBoxScalingRatio = 2;\r\n    const entityBoxTranslationRatio = rootScaling - 4;\r\n\r\n    const staticEntitiesCount = 8;\r\n    const staticEntities = new Array(staticEntitiesCount).fill(0).map(() => {\r\n        const coordRands = new Array(6).fill(0).map(() => {\r\n            return Math.random() * entityBoxTranslationRatio * Math.sign(Math.random() - 0.5);\r\n        });\r\n        const scalingRand = Math.random() * entityBoxScalingRatio;\r\n        coordRands.forEach((coord_i, i, coords) => {\r\n            coords[i] = Math.round(coord_i * scalingRand);\r\n        });\r\n        coordRands.sort((a, b) => a - b);\r\n        return {\r\n            box: new BoundingBox(\r\n                new Vector3(coordRands.slice(0, 3)),\r\n                new Vector3(coordRands.slice(3, 6))\r\n            )\r\n        };\r\n    });\r\n    const nonStaticEntitiesCount = 8;\r\n    const nonStaticEntities = new Array(nonStaticEntitiesCount).fill(0).map(() => {\r\n        const coordRands = new Array(6).fill(0).map(() => {\r\n            return Math.random() * entityBoxTranslationRatio * Math.sign(Math.random() - 0.5);\r\n        });\r\n        const scalingRand = Math.random() * entityBoxScalingRatio;\r\n        coordRands.forEach((coord_i, i, coords) => {\r\n            coords[i] = Math.round(coord_i * scalingRand);\r\n        });\r\n        coordRands.sort((a, b) => a - b);\r\n        return {\r\n            box: new BoundingBox(\r\n                new Vector3(coordRands.slice(0, 3)),\r\n                new Vector3(coordRands.slice(3, 6))\r\n            )\r\n        };\r\n    });\r\n\r\n    const octree = new Octree(\r\n        rootBox,\r\n        null,\r\n        Array.from(nonStaticEntities),\r\n        Array.from(staticEntities)\r\n    );\r\n    \r\n    octree.init();\r\n\r\n    const entitiesCount = staticEntities.length + nonStaticEntities.length;\r\n    const octants = octree.innerOctants().slice(1);\r\n    const octantsCount = octants.length;\r\n    const instancesCount = entitiesCount + octantsCount + 1;\r\n    const entities = [...staticEntities, ...nonStaticEntities];\r\n\r\n    /*console.table(\r\n        octants.map((octant_i, i) => {\r\n            const {id} = octant_i;\r\n            const {min, max} = octant_i.region;\r\n            const storedStaticEntites = octant_i.staticEntities.map(entity => staticEntities.indexOf(entity));\r\n            const storedNonStaticEntities = octant_i.nonStaticEntities.map(entity => nonStaticEntities.indexOf(entity));\r\n            const testedStaticEntities = staticEntities\r\n                .map((entity_i, i) => octant_i.region.hits(entity_i.box) ? i : null)\r\n                .filter(entity => entity !== null);\r\n            const testedNonStaticEntities = nonStaticEntities\r\n                .map((entity_i, i) => octant_i.region.hits(entity_i.box) ? i : null)\r\n                .filter(entity => entity !== null);\r\n            return {\r\n                id,\r\n                size: min.distance(max),\r\n                min: Array.from(min).join(\",\"),\r\n                max: Array.from(max).join(\",\"),\r\n                storedStaticEntites: Array.from(storedStaticEntites).join(\",\"),\r\n                storedNonStaticEntities: Array.from(storedNonStaticEntities).join(\",\"),\r\n                testedStaticEntities: Array.from(testedStaticEntities).join(\",\"),\r\n                testedNonStaticEntities: Array.from(testedNonStaticEntities).join(\",\"),\r\n            };\r\n        })\r\n    );\r\n\r\n    console.table(\r\n        staticEntities.map((entity_i, i) => {\r\n            const {box} = entity_i;\r\n            const {min, max} = box;\r\n            return {\r\n                min: Array.from(min).join(\",\"),\r\n                max: Array.from(max).join(\",\"),\r\n            }\r\n        })\r\n    );*/\r\n\r\n    const uniformEntries = entities.flatMap((entity_i, i) => {\r\n        const {box} = entity_i;\r\n        const {min, max} = box;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        const boxWidth = Math.abs(maxX - minX);\r\n        const boxHeight = Math.abs(maxY - minY);\r\n        const boxDepth = Math.abs(maxZ - minZ);\r\n        const centerX = (minX + maxX) / 2;\r\n        const centerY = (minY + maxY) / 2;\r\n        const centerZ = (minZ + maxZ) / 2;\r\n        const boxCenter = new Vector3(centerX, centerY, centerZ);\r\n        const boxScaling = new Vector3(boxWidth, boxHeight, boxDepth);\r\n        const matrix = Matrix4.identity().translate(boxCenter).scale(boxScaling);\r\n        return [\r\n            [`instances[${i}].u_model`, {value: matrix.array}],\r\n            [`instances[${i}].u_color`, {value: [1, 0, 0]}]\r\n        ];\r\n    }).concat(\r\n        ...octants.map((octree, i) => {\r\n            const {region} = octree;\r\n            const {min, max} = region;\r\n            const {x: minX, y: minY, z: minZ} = min;\r\n            const {x: maxX, y: maxY, z: maxZ} = max;\r\n            const boxWidth = Math.abs(maxX - minX);\r\n            const boxHeight = Math.abs(maxY - minY);\r\n            const boxDepth = Math.abs(maxZ - minZ);\r\n            const centerX = (minX + maxX) / 2;\r\n            const centerY = (minY + maxY) / 2;\r\n            const centerZ = (minZ + maxZ) / 2;\r\n            const boxCenter = new Vector3(centerX, centerY, centerZ);\r\n            const boxScaling = new Vector3(boxWidth, boxHeight, boxDepth);\r\n            const matrix = Matrix4.identity().translate(boxCenter).scale(boxScaling);\r\n            return [\r\n                [`instances[${entitiesCount + i}].u_model`, {value: matrix.array}],\r\n                [`instances[${entitiesCount + i}].u_color`, {value: [0, 1, 0]}]\r\n            ];\r\n        })\r\n    );\r\n    \r\n    const cubePacket = WebGLPacketUtilities.createPacket(gl, {\r\n        program: {\r\n            vertexSource: linesVert,\r\n            fragmentSource: linesFrag\r\n        },\r\n        vertexArray: {\r\n            vertexAttributes: {\r\n                a_position: { array: cubeLinesArray, type: AttributeDataType.VEC3 },\r\n            },\r\n            elementIndices: cubeLinesIndicesArray\r\n        },\r\n        uniformBuffers: [\r\n            {\r\n                usage: BufferDataUsage.STATIC_READ\r\n            }\r\n        ],\r\n        uniformBlocks: {\r\n            basicModelBlock: {\r\n                buffer: 0,\r\n                uniforms: Object.fromEntries(uniformEntries)\r\n            },\r\n            viewBlock: {\r\n                uniforms: {\r\n                    u_view: { value: defaultCamera.view.array },\r\n                    u_projection: { value: defaultCamera.projection.array }\r\n                }\r\n            }\r\n        },\r\n        drawCommand: {\r\n            mode: DrawMode.LINES,\r\n            elementsCount: cubeLinesIndicesArray.length,\r\n            instanceCount: instancesCount\r\n        }\r\n    });\r\n    if (cubePacket === null) return;\r\n\r\n    const cameraPacket = WebGLPacketUtilities.createPacket(gl, {\r\n        program: {\r\n            vertexSource: linesVert,\r\n            fragmentSource: linesFrag\r\n        },\r\n        vertexArray: {\r\n            vertexAttributes: {\r\n                a_position: cameraLines,\r\n                a_color: cameraColors\r\n            }\r\n        },\r\n        uniformBuffers: [\r\n            {\r\n                usage: BufferDataUsage.STATIC_READ\r\n            },\r\n            cubePacket.uniformBlocks!.viewBlock.buffer!\r\n        ],\r\n        uniformBlocks: {\r\n            basicModelBlock: {\r\n                buffer: 0,\r\n                uniforms: {\r\n                    \"instances[0].u_model\": { value: cullingCamera.transform.array },\r\n                }\r\n            },\r\n            viewBlock: {\r\n                buffer: 1\r\n            }\r\n        },\r\n        drawCommand: {\r\n            mode: DrawMode.LINES,\r\n            elementsCount: cameraLines.array.length\r\n        }\r\n    });\r\n    if (cameraPacket === null) return;\r\n\r\n    const gridPacket = WebGLPacketUtilities.createPacket(gl, {\r\n        program: {\r\n            vertexSource: linesVert,\r\n            fragmentSource: linesFrag\r\n        },\r\n        vertexArray: {\r\n            vertexAttributes: {\r\n                a_position: gridLines,\r\n                a_color: gridColors\r\n            }\r\n        },\r\n        uniformBuffers: [\r\n            {\r\n                usage: BufferDataUsage.STATIC_READ\r\n            },\r\n            cubePacket.uniformBlocks!.viewBlock.buffer!\r\n        ],\r\n        uniformBlocks: {\r\n            basicModelBlock: {\r\n                buffer: 0,\r\n                uniforms: {\r\n                    \"instances[0].u_model\": { value: cullingCamera.transform.array },\r\n                }\r\n            },\r\n            viewBlock: {\r\n                buffer: 1\r\n            }\r\n        },\r\n        drawCommand: {\r\n            mode: DrawMode.LINES,\r\n            elementsCount: gridLines.array.length\r\n        }\r\n    });\r\n    if (gridPacket === null) return;\r\n    \r\n    \r\n    WebGLRendererUtilities.viewport(gl, 0, 0, canvas.width, canvas.height);\r\n    WebGLRendererUtilities.enable(gl, Capabilities.CULL_FACE);\r\n    WebGLRendererUtilities.enable(gl, Capabilities.DEPTH_TEST);\r\n    WebGLRendererUtilities.clearColor(gl, Color.BLACK);\r\n\r\n    Input.initialize(canvas);\r\n\r\n    let deltaTime, lastFrameTime = 0;\r\n\r\n    const render = (frameTime: number) => {\r\n        if (paused) {\r\n            return;\r\n        }\r\n        frameTime *= 0.001;\r\n        deltaTime = frameTime - lastFrameTime;\r\n        lastFrameTime = frameTime;\r\n\r\n        WebGLRendererUtilities.clear(gl, BufferMask.COLOR_BUFFER_BIT | BufferMask.DEPTH_BUFFER_BIT);\r\n\r\n        cameraControl.update(deltaTime);\r\n\r\n        const invertedView = cullingCamera.view;\r\n        const uniformEntries = entities.flatMap((entity_i, i) => {\r\n            const transformedBox = entity_i.box.transformed(invertedView);\r\n            const visible = cullingCamera.frustrum.intersectsBox(transformedBox);\r\n            return [\r\n                [`instances[${i}].u_color`, {value: visible ? [0, 0, 1] : [1, 0, 0]}]\r\n            ];\r\n        }).concat(octants.flatMap((octant_i, i) => {\r\n            const transformedBox = octant_i.region.transformed(invertedView);\r\n            const visible = cullingCamera.frustrum.intersectsBox(transformedBox);\r\n            return [\r\n                [`instances[${entitiesCount + i}].u_color`, {value: visible ? [0, 0, 1] : [0, 1, 0]}]\r\n            ];\r\n        }));\r\n\r\n        WebGLPacketUtilities.setPacketValues(gl, cubePacket, {\r\n            uniformBlocks: {\r\n                basicModelBlock: {\r\n                    uniforms: Object.fromEntries(uniformEntries)\r\n                },\r\n                viewBlock: {\r\n                    uniforms: {\r\n                        u_view: { value: camera.view.array },\r\n                        u_projection: { value: camera.projection.array }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        WebGLPacketUtilities.setPacketValues(gl, cameraPacket, {\r\n            uniformBlocks: {\r\n                basicModelBlock: {\r\n                    uniforms: {\r\n                        \"instances[0].u_model\": { value: cullingCamera.transform.array },\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        WebGLPacketUtilities.drawPacket(gl, gridPacket);\r\n        WebGLPacketUtilities.drawPacket(gl, cubePacket);\r\n        WebGLPacketUtilities.drawPacket(gl, cameraPacket);\r\n        \r\n        Input.clear();\r\n\r\n        requestAnimationFrame(render);\r\n    }\r\n\r\n    requestAnimationFrame(render);\r\n}","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../libs/maths/geometry/space/Space\";\r\nimport { Input, MouseButton, Key } from \"../input/Input\";\r\nimport { Camera } from \"../rendering/scenes/cameras/Camera\";\r\n\r\nexport { FreeCameraControl };\r\n\r\ninterface FreeCameraControlConstructor {\r\n    readonly prototype: FreeCameraControl;\r\n    new(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}): FreeCameraControl;\r\n}\r\n\r\ninterface FreeCameraControl {\r\n    camera: Camera;\r\n    rotationSpeed: number;\r\n    translationSpeed: number;\r\n    update(deltaTime: number): void;\r\n}\r\n\r\nclass FreeCameraControlBase {\r\n    camera: Camera;\r\n    rotationSpeed: number;\r\n    translationSpeed: number;\r\n\r\n    #lastPointerPosition: Vector2;\r\n\r\n    constructor(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}) {\r\n        this.camera = camera;\r\n        this.rotationSpeed = params?.rotationSpeed ?? 50;\r\n        this.translationSpeed = params?.translationSpeed ?? 8;\r\n        this.#lastPointerPosition = new Vector2();\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        const {camera, rotationSpeed, translationSpeed} = this;\r\n        const {transform: cameraTransform} = camera;\r\n        const lastPointerPosition = this.#lastPointerPosition;\r\n        const cameraPosition = cameraTransform.getTranslation(new Vector3());\r\n        const cameraForward = cameraTransform.getBackward(new Vector3());\r\n        const {array: cameraForwardArray} = cameraForward;\r\n        const {origin, up, down} = Space;\r\n        let cameraUpSign = cameraTransform.getUp(new Vector3()).dot(up);\r\n      \r\n        if (Input.getKey(Key.Z) || Input.getKey(Key.ARROW_UP)) {\r\n            const forward = cameraTransform.getBackward(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(forward);\r\n        }\r\n        if (Input.getKey(Key.Q) || Input.getKey(Key.ARROW_LEFT)) {\r\n            const left = cameraTransform.getLeft(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(left);\r\n        }\r\n        if (Input.getKey(Key.S) || Input.getKey(Key.ARROW_DOWN)) {\r\n            const backward = cameraTransform.getForward(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(backward);\r\n        }\r\n        if (Input.getKey(Key.D) || Input.getKey(Key.ARROW_RIGHT)) {\r\n            const right = cameraTransform.getRight(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(right);\r\n        }\r\n\r\n        if (Input.getMouseButtonDown(MouseButton.RIGHT)) {\r\n            lastPointerPosition.copy(Input.getPointerScreenPosition());\r\n        }\r\n        \r\n        if (Input.getMouseButton(MouseButton.RIGHT)) {\r\n            const newPointerPosition = Input.getPointerScreenPosition();\r\n            if (!newPointerPosition.equals(lastPointerPosition)) {\r\n                const dx = (lastPointerPosition.x - newPointerPosition.x) * rotationSpeed * deltaTime;\r\n                const dy = (lastPointerPosition.y - newPointerPosition.y) * rotationSpeed * deltaTime;\r\n                cameraPosition.copy(cameraTransform.getTranslation(new Vector3()));\r\n                if (dx !== 0 || dy !== 0) {\r\n                    cameraUpSign = Math.sign(cameraTransform.getUp(new Vector3()).dot(up));\r\n                    cameraForward.toSpherical(origin);\r\n                    const theta = cameraForwardArray[1];\r\n                    const phi = cameraForwardArray[2];\r\n                    const newTheta = theta + cameraUpSign * -dy;\r\n                    if (newTheta <= 0 || newTheta >= Math.PI) {\r\n                        cameraForwardArray[2] = (phi - dx + Math.PI) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = newTheta < 0 ? -newTheta : Math.PI - (newTheta - Math.PI);\r\n                        cameraUpSign *= -1;\r\n                    }\r\n                    else {\r\n                        cameraForwardArray[2] = (phi - dx) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = theta + cameraUpSign * -dy;\r\n                    }\r\n                    cameraForward.toCartesian(origin);\r\n                    cameraTransform.lookAt(cameraPosition.add(cameraForward), (cameraUpSign > 0) ? up : down);\r\n                }\r\n                lastPointerPosition.copy(newPointerPosition);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar FreeCameraControl: FreeCameraControlConstructor = FreeCameraControlBase;"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Injector","constructor","args","this","_defaultCtor","defaultCtor","_onDefaultOverride","onDefaultOverride","_constructors","Map","overrideDefaultCtor","forceQualifier","qualifier","_forcedQualifier","unforceQualifier","getConstructor","qualifierValue","Error","inject","Array","from","register","has","set","MathError","name","Vector2Base","array","Float32Array","length","values","x","y","setValues","equals","vec","v","copy","clone","setUnit","setZeros","add","addScalar","k","sub","lerp","t","clamp","min","max","l","g","Math","multScalar","cross","a","b","dot","sqrt","lengthSquared","dist","dx","dy","distSquared","normalize","lenSq","len","Number","EPSILON","negate","mult","arg0","Vector2","m","addScaled","writeIntoArray","out","offset","readFromArray","arr","copyAndSub","vecA","vecB","ctor","Vector3Base","toString","join","static","vectorA","vectorB","temp","Vector3","acos","z","vector","to","scale","t0","t1","t2","distance","dz","hypot","distanceSquared","toSpherical","center","thisArray","centerArray","roh","theta","phi","atan2","toCartesian","sin","cos","mat","copyAndCross","iterator","i","next","done","undefined","Key","Space","origin","right","left","up","down","forward","backward","KEYS_COUNT","keys","KeyModifier","MouseButton","MOUSE_BUTTONS_COUNT","MOUSE_BUTTONS_INDICES","freeze","reduce","map","button","index","assign","KEYS_INDICES","Input","keyFlags","fill","mouseFlags","pointerPosition","wheelDelta","canvas","canvasRectangle","initialize","getBoundingClientRect","addEventListener","getCanvasRect","rect","clear","handleEvent","event","eventIndex","type","canvasRect","clientX","clientY","top","deltaY","getKey","getKeyUp","getKeyDown","getMouseButton","getPointerPosition","getPointerScreenPosition","positionAray","width","height","getWheelDelta","getMouseButtonDown","getMouseButtonUp","ColorBase","r","Color","rgbOrR","aOrG","colors","c","color","getValues","BLACK","RED","GREEN","BLUE","WHITE","PoolAutoExtendPolicy","StackPool","policy","autoExtendPolicy","AUTO_EXTEND_ONE","autoExtendTicks","autoExtend","extend","AUTO_EXTEND_POW2","pow","acquire","count","release","options","super","objects","size","target","slice","console","warn","push","Vector3Pool","_buffer","_bufferViews","subarray","_extensions","PlaneBase","normal","constant","setFromNormalAndConstant","point","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","plane","point1","point2","point3","distanceToPoint","normalized","inverseNormalLength","result","aNormal","aConstant","bNormal","bConstant","cNormal","cConstant","f","v1x","v1y","v1z","v2x","v2y","v2z","v3x","v3y","v3z","Plane","BufferDataUsage","BufferTarget","DrawMode","DataComponentType","AttributeDataType","ElementArrayDataType","Mesh","properties","geometry","material","WireframeMaterial","DEFAULT_COLOR","WebGLVertexArrayUtilities","VEC2","VEC3","VEC4","FLOAT","BYTE","UNSIGNED_BYTE","Uint8Array","SHORT","Int16Array","UNSIGNED_SHORT","Uint16Array","INT","Int32Array","UNSIGNED_INT","Uint32Array","Int8Array","gl","indices","internalBuffer","createBuffer","usage","STATIC_READ","ELEMENT_ARRAY_BUFFER","byteLength","indexType","getElementArrayBufferType","bindBuffer","bufferData","program","attributes","interleaved","internalProgram","DEFAULT_USAGE","attributesEntries","entries","_","attribute","ARRAY_BUFFER","dataBuffer","ArrayBuffer","byteStride","vertexAttributes","forEach","componentType","stride","BYTES_PER_ELEMENT","getComponentTypeArrayConstructor","getDataTypeNumComponents","bufferSlices","trunc","constantValue","byteOffset","attributeName","divisor","getArrayComponentType","location","getAttribLocation","numComponents","vertexAttribPointer","vertexAttribDivisor","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","bytesPerElement","bufferArray","arrayStrideOffset","arraySliceIndex","enableVertexAttribArray","vertexArray","elementsCount","attributeRecord","verticesBuffers","verticesBuffer","find","getParameter","ARRAY_BUFFER_BINDING","srcOffset","srcLength","dstOffset","slices","sliceOffset","bufferSubData","buffer","data","dstByteOffset","vertexBuffers","elementIndices","elementBuffer","elementBufferOrBufferProperties","internalVertexArray","createVertexArray","bindVertexArray","buffer_i","fromEntries","filter","attribute_i","setter","createVertexArrayBuffer","createVertexElementArrayBuffer","isVertexArray","deleteVertexArray","GeometryBuffer","bufferByteLength","bufferArrayConstructor","toBlob","bufferLength","indicesData","indicesLength","headerData","TextEncoder","encode","JSON","stringify","headerLength","blobDataView","blobDataViewBuffer","blobDataHeaderView","blobDataHeaderLength","Blob","blob","arrayBuffer","blobDataHeaderByteLength","arrayConstructor","header","parse","TextDecoder","decode","geometryBuffer","getAttribute","attributeArrayConstructor","attributeArray","bufferStride","bufferArraySliceIndex","CameraHelper","camera","frustrum","nearPlane","farPlane","bottomPlane","topPlane","leftPlane","rightPlane","leftBottomNear","intersection","leftTopNear","rightBottomNear","rightTopNear","leftBottomFar","leftTopFar","rightBottomFar","rightTopFar","vertices","nearColor","farColor","sideColor","GridHelper","divisions","color1","color2","step","halfSize","PI","_bytes","_floatView","_intView","Matrix3Base","checkArray","row1","row","row2","row3","col1","col","col2","col3","m11","val","m12","m13","m21","m22","m23","m31","m32","m33","other","setIdentity","det","trace","transpose","invert","t11","t12","t13","t21","t22","t23","t31","t32","t33","d","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","angle","setRotationX","cosAngle","sinAngle","setRotationY","setRotationZ","solve","A0x","A0y","A0z","A1x","A1y","A1z","A2x","A2y","A2z","rx","ry","rz","x_","y_","solve2","bx","by","Matrix3","QuaternionBase","_array","_checkArray","w","pitch","sinPitch","abs","sign","asin","yaw","sinYawCosPitch","cosYawCosPitch","roll","sinRollCosPitch","cosRollCosPitch","axis","setAxisAngle","setEuler","quat","q","quatArray","getAxis","outArray","den","halfx","qSqrt","getMatrix3","matrix","s","xs","ys","zs","wx","wy","wz","xx","xy","xz","yy","yz","zz","getMatrix4","rotate","vectorArray","vx","vy","vz","qx","qy","qz","qw","tx","ty","tz","tw","toVector","cosYaw","sinYaw","cosPitch","cosRoll","sinRoll","axisLength","halfSin","axisArray","setMatrix","matrixArray","lookAt","source","dest","Quaternion","setVectors","crossArray","fromLength","toLength","angleTo","rotation","rotateTowards","slerp","conjugate","ax","ay","az","aw","bz","bw","scalar","fromArray","toArray","cosHalfTheta","halfTheta","sinHalfTheta","ratioA","ratioB","copyIntoArray","Matrix4Base","m41","m42","m43","m14","m24","m34","m44","getRotation","setTRS","translation","scaling","rotationArray","translationArray","scalingArray","x2","y2","z2","sx","sy","sz","setRotation","quaternion","quaternionArray","matArray","det2_01_01","det2_01_02","det2_01_03","det2_01_12","det2_01_13","det2_01_23","det3_201_012","det3_201_013","det3_201_023","A","a41","a42","a43","a14","a24","a34","a44","o00","o01","o02","o03","o10","o11","o12","o13","o20","o21","o22","o23","o30","o31","o32","o33","t00","t01","t02","t03","t04","t05","t06","t07","t08","t09","t10","invDet","B","b41","b42","b43","b14","b24","b34","b44","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","bX","bY","bZ","bW","solve3","setTranslation","vecArray","translate","t3","t4","rotateX","t5","t6","t7","t8","rotateY","sinAngles","rotateZ","C","t9","setScaling","eye","eyeArray","upArray","targetArray","e0","e1","e2","u0","u1","u2","x0","x1","y0","y1","z0","z1","transformPoint","pointArray","transformPoint4","transformDirection","direction","directionArray","transformNormal","normalArray","thisInvArray","fov","aspect","zNear","zFar","setPerspective","tan","rangeInv","bottom","near","far","setOrthographic","setFrustrum","invWidth","invHeight","invDepth","Matrix4","UUIDGenerator","_count","newUUID","tempVector","FrustrumBase","setFromPerspectiveMatrix","intersectsSphere","sphere","radius","intersectsBox","box","intersects","boxMax","boxMin","containsPoint","Frustrum","tempMatrix","PerspectiveCamera","transform","owner","isStatic","uuid","localArray","localMatrix","hasChanged","getMatrix","getLocalMatrix","thisLocalArray","setLocalMatrix","getRight","getLeft","getUp","getDown","getForward","getBackward","getTranslation","getScaling","transformVector","thisPosition","projection","getFront","view","viewProjection","isViewing","mesh","updateFrustrum","perspective","corners","BoundingBox","boxes","positiveInfinity","POSITIVE_INFINITY","negativeInfinity","NEGATIVE_INFINITY","minX","minY","minZ","maxX","maxY","maxZ","box_i","boxMinX","boxMinY","boxMinZ","boxMaxX","boxMaxY","boxMaxZ","hits","otherMin","otherMax","otherMinX","otherMinZ","otherMaxX","otherMaxY","otherMaxZ","otherMinY","corner_i","transformed","Octree","region","parent","nonStaticEntities","staticEntities","MAX_DEPTH","MAX_ENTITES","id","octants","expanded","depth","innerOctants","flatMap","octant","nearPlaneNormal","farPlaneNormal","bottomPlaneNormal","topPlaneNormal","leftPlaneNormal","rightPlaneNormal","intersectsWithFrustrum","entitiesWithinFrustrum","init","expand","update","octree","entity_i","copyWithin","entitiesCount","collapse","log","centerX","centerY","centerZ","entity","enclosingOctants","octantStaticEntities","octantNonStaticEntities","splice","GeometryAttributes","BoundingSphere","hitsSphere","otherCenter","otherRadius","hitsBox","sphereX","sphereY","sphereZ","FaceHalfEdgesIterator","face","faceID","halfEdgeID","reset","current","faces","halfEdges","firstHalfEdgeID","nextHalfEdgeID","nextID","halfEdge","FaceVerticesIterator","prevID","targetID","faceHalfEdgeID","firstVertexID","vertex","VertexFacesIterator","vertexID","vertexHalfEdgeID","twinID","CubeGeometry","toBuilder","widthSegments","heightSegments","depthSegments","builder","create","structuredClone","addTriangleFace","v0","v1","v2","addFace","addQuadFace","v3","addVertex","position","_halfEdges","_vertices","_faces","faceVerticesCount","error","sourceID","previousHalfEdgeID","existingHalfEdge","vertexFacesIterator","face_i","faceHalfEdgesIterator","halfEdge_i","targetID_i","prevID_i","twinHalfEdge","indexOf","linesArray","faceVertices","faceVerticesIterator","vertex_i","verticesArray","tangentsArray","faceUvs","uv","uv0","uv1","uv2","edge1","v1_i","edge2","deltaUV1","uv1_i","deltaUV2","tangent","edge1_i","tangent_i","normalsArray","ni","pi","normal_i","uvsArray","flat","trianglesIndicesArray","verticesCount","concat","linesIndicesArray","boundingBox","boundingSphere","floor","uvs","u","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","iy","ix","indicesCount","vi1","vi2","vi3","vi4","ui1","ui2","ui3","ui4","v4","uv3","uv4","TexturePixelFormat","TextureInternalPixelFormat","TexturePixelType","TextureParameter","TextureTarget","TextureMagFilter","TextureMinFilter","TextureCompareMode","TextureWrapMode","TextureCompareFunction","ShaderType","UniformType","UniformDataType","WebGLTextureUtilities","internalTexture","createTexture","unit","pixels","subimages","format","internalFormat","lod","border","mipmap","ACTIVE_TEXTURE","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texImage2D","subimage_i","xoffset","yoffset","texSubImage2D","TEXTURE_CUBE_MAP","xPos","xNeg","yPos","yNeg","zPos","zNeg","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_2D_ARRAY","texImage3D","zoffset","texSubImage3D","generateMipmap","mag","wrapS","wrapT","wrapR","baseMipmapLevel","maxMipmapLevel","compareFunction","compareMode","minLod","maxLod","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","texParameterf","TEXTURE_MIN_LOD","TEXTURE_MAX_LOD","alignment","pixelStorei","UNPACK_ALIGNMENT","texture","isTexture","deleteTexture","delete","WebGLProgramUtilities","internalShader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","shaderInfoLog","getShaderInfoLog","deleteShader","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","programInfoLog","getProgramInfoLog","vertexInfoLog","fragmentInfoLog","deleteProgram","CURRENT_PROGRAM","useProgram","WebGLUniformUtilities","uniformValue","of","uniform","uniformType","num","uniform1f","uniform1ui","BOOL","uniform1i","INT_SAMPLER_2D","INT_SAMPLER_2D_ARRAY","INT_SAMPLER_3D","INT_SAMPLER_CUBE","SAMPLER_2D","SAMPLER_3D","SAMPLER_CUBE","SAMPLER_2D_SHADOW","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","tex","FLOAT_VEC2","isArray","list","uniform2fv","BOOL_VEC2","INT_VEC2","uniform2iv","UNSIGNED_INT_VEC2","uniform2uiv","FLOAT_VEC3","uniform3fv","BOOL_VEC3","INT_VEC3","uniform3iv","UNSIGNED_INT_VEC3","uniform3uiv","FLOAT_VEC4","uniform4fv","BOOL_VEC4","INT_VEC4","uniform4iv","UNSIGNED_INT_VEC4","uniform4uiv","FLOAT_MAT2","uniformMatrix2fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","FLOAT_MAT2x3","uniformMatrix2x3fv","FLOAT_MAT2x4","uniformMatrix2x4fv","FLOAT_MAT3x2","uniformMatrix3x2fv","FLOAT_MAT3x4","uniformMatrix3x4fv","FLOAT_MAT4x2","uniformMatrix4x2fv","FLOAT_MAT4x3","uniformMatrix4x3fv","uniformsNames","uniformIndices","getUniformIndices","activeUniforms","ACTIVE_UNIFORMS","validUniformIndices","index_i","isValid","setters","getActiveUniform","getUniformLocation","getUniformSetter","uniformName","WebGLUniformBlockUtilities","blockIndex","getUniformBlockIndex","INVALID_INDEX","blockSize","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","layout","blockUniformsIndices","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","getActiveUniforms","UNIFORM_OFFSET","uniformOffset_i","uniformIndex","uniformInfo","bind","UNIFORM_BUFFER","bindingPoint","lastBindingPoint","blocks","offsetAlignment","UNIFORM_BUFFER_OFFSET_ALIGNMENT","block","ceil","createUniformBuffer","rangeOffset","rangeSize","rangedUniformBuffer","uniforms","UNIFORM_BUFFER_BINDING","asArrayBufferView","uniformBlockBinding","bindBufferRange","bindBufferBase","StencilAction","BufferMask","Buffer","TestFunction","BlendingMode","BlendingEquation","Capabilities","Face","WindingOrder","HintTarget","HintMode","WebGLPacketUtilities","textures","_textures","packet","programProperties","vertexArrayProperties","uniformsProperties","uniformBlocks","uniformBlocksProperties","uniformBuffers","uniformBuffersProperties","drawCommand","getUniformsListSetter","setUniformsListValues","uniformBlocksPropertiesEntries","uniformBuffersMaxIndex","uniformBlockProperty","uniformBuffersProperty_i","relatedBlockProperties","relatedBlocks","blockName","createUniformBlock","relatedBlocksCount","block_i","bindUniformBuffer","rangedBuffers","createRangedUniformBuffers","setUniformBufferData","rangedBuffer","setUniformBufferValues","relatedBlock","uniformBlockProperties","vertexArrayValues","uniformsValues","uniformsBlocksValues","setVertexArrayValues","uniformBlock","getExtension","mode","instanceCount","multiDraw","VERTEX_ARRAY_BINDING","drawElementsInstanced","multiDrawExtension","countsList","countsOffset","offsetsList","offsetsOffset","drawCount","instanceCountsList","instanceCountsOffset","multiDrawElementsInstancedWEBGL","multiDrawElementsWEBGL","drawElements","drawArraysInstanced","firstsList","firstsOffset","multiDrawArraysInstancedWEBGL","multiDrawArraysWEBGL","drawArrays","WebGLRendererUtilities","hint","winding","frontFace","scissor","viewport","clearColor","func","depthFunc","equ","blendEquation","srcFunc","dstFunc","blendFunc","srcAlpha","dstAlpha","blendFuncSeparate","ref","mask","stencilFuncSeparate","fail","zFail","zPass","stencilOpSeparate","stencilMaskSeparate","red","green","blue","alpha","colorMask","flag","depthMask","capability","enable","disable","VIEWPORT","MAX_SAMPLES","buffers","drawBuffers","clearBufferfv","clearBufferiv","clearBufferuiv","async","main","document","createElement","style","display","tabIndex","oncontextmenu","getContext","enableMultidrawExtension","playpause","textContent","paused","onclick","requestAnimationFrame","render","cameraSwitch","onchange","checked","cullingCamera","defaultCamera","cameraControl","body","append","linesVert","fetch","then","resp","text","linesFrag","cullingCameraHelper","cameraLines","cameraColors","params","rotationSpeed","translationSpeed","deltaTime","cameraTransform","lastPointerPosition","cameraPosition","cameraForward","cameraForwardArray","cameraUpSign","Z","ARROW_UP","Q","ARROW_LEFT","S","ARROW_DOWN","D","ARROW_RIGHT","RIGHT","newPointerPosition","newTheta","gridHelper","gridLines","gridColors","cubeGeometryBuilder","cubeLinesArray","cubeLinesIndicesArray","rootBox","coordRands","rootScaling","random","scalingRand","coord_i","coords","round","sort","octantsCount","instancesCount","entities","uniformEntries","boxWidth","boxHeight","boxDepth","boxCenter","boxScaling","identity","cubePacket","createPacket","a_position","basicModelBlock","viewBlock","u_view","u_projection","LINES","cameraPacket","a_color","gridPacket","CULL_FACE","DEPTH_TEST","lastFrameTime","frameTime","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","invertedView","transformedBox","octant_i","visible","setPacketValues","drawPacket"],"sourceRoot":""}