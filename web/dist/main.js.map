{"version":3,"file":"main.js","mappings":"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,mCACA,uBACA,yBACA,uCACA,uBACA,2BACA,6BACA,uBACA,yBACA,2BACA,6BACA,2CACA,6BACA,uBACA,uBACA,yBACA,uBACA,yBACA,uBACA,yBACA,yBACA,2BACA,yBACA,2BACA,yBACA,2BACA,2BACA,6BACA,2BACA,6BACA,2BACA,6BACA,6BACA,+BACA,6BACA,8BACH,CA1DD,CAAYA,KAAAA,GAA0B,KA4DtC,SAAYC,GACR,sBACA,wCACA,wBACA,0CACA,oBACA,sCACA,wBACA,kCACA,2DACA,2DACA,uDACA,qEACA,iDACA,uEACA,+DACA,2EACA,kDACH,CAlBD,CAAYA,KAAAA,GAAgB,KAoB5B,SAAYC,GACR,mDACA,mDACA,2CACA,2CACA,mDACA,iDACA,6CACA,6CACA,2CACA,uDACA,sDACH,CAZD,CAAYA,KAAAA,GAAgB,KAc5B,SAAYC,GACR,kCACA,+CACA,mCACA,+CACA,qEACA,qEACA,qEACA,qEACA,qEACA,oEACH,CAXD,CAAYA,KAAAA,GAAa,KAazB,SAAYC,GACR,0BACA,2BACH,CAHD,CAAYA,KAAAA,GAAgB,KAK5B,SAAYC,GACR,0BACA,4BACA,0DACA,wDACA,wDACA,qDACH,CAPD,CAAYA,KAAAA,GAAgB,KAS5B,SAAYC,GACR,2DACA,kBACH,CAHD,CAAYA,KAAAA,GAAkB,KAK9B,SAAYC,GACR,2BACA,yCACA,4CACH,CAJD,CAAYA,KAAAA,GAAe,KAM3B,SAAYC,GACR,uBACA,qBACA,uBACA,yBACA,2BACA,6BACA,yBACA,wBACH,CATD,CAAYA,KAAAA,GAAsB,KAsE3B,MAAMI,GAKT3zB,iCACI,OAAO,GAAApF,KAAI,WAAekoB,SAC9B,CAEA9iB,qBAAqB4hB,EAA4B1lB,EAAc+vB,GAC3D,MAAM2H,EAAkBhS,EAAGiS,gBAC3B,GAAwB,OAApBD,EACA,OAAO,KAGX,IAAIE,EAAO,GAAAl5B,KAAI,WAAeZ,IAAIkC,GACtBgG,MAAR4xB,IACAA,EAAOj2B,KAAKH,KAAK,KAAM,GAAA9C,KAAI,WAAe2B,UAAY,EACtD,GAAA3B,KAAI,WAA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","sources":["webpack://main/webpack/bootstrap","webpack://main/webpack/runtime/define property getters","webpack://main/webpack/runtime/hasOwnProperty shorthand","webpack://main/webpack/runtime/make namespace object","webpack://main/./src/engine/libs/patterns/injectors/Injector.ts","webpack://main/./src/engine/libs/maths/MathError.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector2.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector3.ts","webpack://main/./src/engine/core/input/Input.ts","webpack://main/./src/engine/libs/maths/geometry/space/Space.ts","webpack://main/./src/engine/core/controls/FreeCameraControl.ts","webpack://main/./src/engine/libs/patterns/pools/Pool.ts","webpack://main/./src/engine/libs/patterns/pools/StackPool.ts","webpack://main/./src/engine/libs/maths/Snippets.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix3.ts","webpack://main/./src/engine/libs/maths/algebra/quaternions/Quaternion.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix4.ts","webpack://main/./src/engine/libs/maths/extensions/pools/Vector3Pools.ts","webpack://main/./src/engine/libs/maths/statistics/random/UUIDGenerator.ts","webpack://main/./src/engine/core/general/Transform.ts","webpack://main/./src/engine/libs/maths/geometry/primitives/Plane.ts","webpack://main/./src/engine/libs/physics/collisions/Frustrum.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLBufferUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLVertexArrayUtilities.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/PerspectiveCamera.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/Camera.ts","webpack://main/./src/engine/core/rendering/scenes/objects/Object3D.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/GeometryBuffer.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/Geometry.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/bounding/BoundingSphere.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/bounding/BoundingBox.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/geometry.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/GeometryBuilder.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/lib/polyhedron/CubeGeometry.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/lib/QuadGeometry.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLTextureUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLProgramUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformBlockUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLRendererUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLPacketUtilities.ts","webpack://main/./src/engine/libs/graphics/colors/Color.ts","webpack://main/./main.ts","webpack://main/./src/samples/scenes/Octree.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { Injector };\r\nexport { InjectorBase };\r\nexport { Inject };\r\nexport { Register };\r\n\r\ninterface InjectorConstructor {\r\n    readonly prototype: Injector;\r\n    new<C extends Constructor<any>>(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}): Injector<C>;\r\n}\r\n\r\ninterface Injector<C extends Constructor<any> = Constructor<any>> {\r\n    readonly defaultCtor: C;\r\n    overrideDefaultCtor(constructor: C): void;\r\n    forceQualifier(qualifier: string): void;\r\n    unforceQualifier(): void;\r\n    getConstructor(qualifier?: string): C;\r\n    inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C>;\r\n    register(constructor: C, qualifier: string): void; \r\n}\r\n\r\nclass InjectorBase<C extends Constructor<any> = Constructor<any>> implements Injector<C> {\r\n    private _forcedQualifier?: string;\r\n    private _constructors: Map<string, C>;\r\n    private _defaultCtor: C;\r\n    private _onDefaultOverride: (constructor: C) => void;\r\n\r\n    get defaultCtor(): C {\r\n        return this._defaultCtor;\r\n    }\r\n\r\n    overrideDefaultCtor(constructor: C): void {\r\n        this._defaultCtor = constructor;\r\n        this._onDefaultOverride(constructor);\r\n    }\r\n\r\n    constructor(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}) {\r\n        this._defaultCtor = args.defaultCtor;\r\n        this._onDefaultOverride = args.onDefaultOverride;\r\n        this._constructors = new Map();\r\n    }\r\n\r\n    forceQualifier(qualifier: string): void {\r\n        this._forcedQualifier = qualifier;\r\n    }\r\n\r\n    unforceQualifier(): void {\r\n        delete this._forcedQualifier;\r\n    }\r\n\r\n    getConstructor(qualifier?: string): C {\r\n        const qualifierValue = this._forcedQualifier || qualifier;\r\n        if (typeof qualifierValue === 'undefined') {\r\n            return this._defaultCtor;\r\n        }\r\n        const constructor = this._constructors.get(qualifierValue);\r\n        if (typeof constructor === 'undefined') {\r\n            throw new Error(`No constructor for qualifier ${qualifierValue}`);\r\n        }\r\n        return constructor;\r\n    }\r\n\r\n    inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C> {\r\n        const constructor = this.getConstructor(args?.qualifier);\r\n        if (args?.args) {\r\n            const parameters = Array.from(args.args);\r\n            return new constructor(...parameters);\r\n        }\r\n        return new constructor();\r\n    }\r\n\r\n    register(constructor: C, qualifier: string): void {\r\n        if (!this._constructors.has(qualifier)) {\r\n            this._constructors.set(qualifier, constructor);\r\n        }\r\n    }\r\n}\r\n\r\nconst Injector: InjectorConstructor = InjectorBase;\r\n\r\ntype UnwrappedInjectorConstructor<I> = I extends Injector<infer C> ? C : never;\r\n\r\ninterface RegisterDecorator {\r\n    <I extends Injector>(injector: I, qualifier?: string): <C extends UnwrappedInjectorConstructor<I>>(ctor: C) => C;\r\n}\r\n\r\nconst Register: RegisterDecorator = function<\r\n    I extends Injector\r\n>(injector: I, qualifier?: string): any {\r\n    return <C extends UnwrappedInjectorConstructor<I>>(\r\n        ctor: C\r\n    ) => {\r\n        if (typeof qualifier !== 'undefined') {\r\n            injector.register(ctor, qualifier);\r\n        }\r\n        injector.register(ctor, ctor.name);\r\n        return ctor;\r\n    }\r\n}\r\n\r\nfunction Inject<\r\n    I extends Injector,\r\n    P extends ConstructorParameters<UnwrappedInjectorConstructor<I>>,\r\n>(injector: I, options?: {qualifier?: string, args?: P}): any {\r\n    return (\r\n        target: any,\r\n        propertyKey: string\r\n    ) => {\r\n        const instance = injector.inject(options);\r\n\r\n        Object.defineProperty(target, propertyKey, {\r\n            value: instance\r\n        });\r\n    }\r\n}","export class MathError extends Error {\r\n    name = 'MathError';\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Matrix2 } from \"../matrices/Matrix2\";\r\n\r\nexport { Vector2Injector };\r\nexport { Vector2 };\r\nexport { Vector2Base };\r\n\r\nexport type Vector2Values = [number, ...number[]] & { length: 2 };\r\n\r\ninterface Vector2Constructor {\r\n\treadonly prototype: Vector2;\r\n\tnew(): Vector2;\r\n\tnew(a: number, y: number): Vector2;\r\n  \tnew(array: ArrayLike<number>): Vector2;\r\n}\r\n\r\ninterface Vector2 {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector2Values;\r\n\tx: number;\r\n\ty: number;\r\n\tsetValues(x: number, y: number): this;\r\n\tcopy(vec: Vector2): this;\r\n\tclone(): this;\r\n\tequals(vec: Vector2): boolean;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\tadd(vec: Vector2): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector2): this;\r\n\tlerp(vec: Vector2, t: number): this;\r\n\tclamp(min: Vector2, max: Vector2): this;\r\n\tmultScalar(k: number): this;\r\n\tcross(vec: Vector2): number;\r\n\tdot(vec: Vector2): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdist(vec: Vector2): number;\r\n\tdistSquared(vec: Vector2): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector2): this;\r\n\tmult(mat: Matrix2): this\r\n\taddScaled(vec: Vector2, k: number): this;\r\n\tcopyAndSub(vecA: Vector2, vecB: Vector2): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector2Base {\r\n\treadonly array: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(array: ArrayLike<number>)\r\n\t  constructor(\r\n\t  x: number, y: number\r\n\t)\r\n\tconstructor(\r\n\t  ...args: any[]\r\n\t) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([args[0], args[1]]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tconst array = args[0];\r\n\t\t\tif (array.length < 2) {\r\n\t\t\t\tthrow new MathError(`Array must be of length 2 at least.`);\r\n\t\t\t}\r\n\t\t\tif (array instanceof Float32Array) {\r\n\t\t\t\tthis.array = array;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.array = new Float32Array(array);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([0, 0]);\r\n\t\t}\r\n\t}\r\n\r\n\tget values(): Vector2Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1]\r\n\t\t];\r\n\t}\r\n\r\n\tset values(values: Vector2Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tsetValues(x: number, y: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = x;\r\n\t\to[1] = y;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tequals(vec: Vector2Base): boolean {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\t\t\r\n\t\treturn v[0] === o[0]\r\n\t\t\t&& v[1] === o[1];\r\n\t}\r\n\r\n\tcopy(vec: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\to[0] = v[0];\r\n\t\to[1] = v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new Vector2Base(this.values) as this;\r\n\t}\r\n\r\n\tsetUnit(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 1;\r\n\t\to[1] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetZeros(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 0;\r\n\t\to[1] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0];\r\n\t\to[1] = o[1] + v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + k;\r\n\t\to[1] = o[1] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] - v[0];\r\n\t\to[1] = o[1] - v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(vec: Vector2Base, t: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = t * (v[0] - o[0]);\r\n\t\to[1] = t * (v[1] - o[1]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min: Vector2Base, max: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst l = min.array;\r\n\t\tconst g = max.array;\r\n\r\n\t\to[0] = Math.min(g[0], Math.min(o[0], l[0])),\r\n\t\to[1] = Math.min(g[1], Math.min(o[1], l[1]))\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmultScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] * k;\r\n\t\to[1] = o[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcross(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn a[0] * b[1] - a[1] * b[0];\r\n\t}\r\n\r\n\tdot(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]);\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn v[0] * v[0] + v[1] * v[1];\r\n\t}\r\n\r\n\tdist(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn Math.sqrt(dx * dx + dy * dy);\r\n\t}\r\n\r\n\tdistSquared(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn dx * dx + dy * dy;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\tconst lenSq = o[0] * o[0] + o[1] * o[1];\r\n\t\tconst len = Math.sqrt(lenSq);\r\n\t\tif (len > Number.EPSILON) {\r\n\t\t\to[0] = o[0] / len;\r\n\t\t\to[1] = o[1] / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\to[0] = 0;\r\n\t\t\to[1] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = -o[0];\r\n\t\to[1] = -o[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(mat: Matrix2): this\r\n\tmult(vec: Vector2): this\r\n\tmult(arg0: Matrix2 | Vector2): this {\r\n\t\tif (arg0 instanceof Vector2) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tthis.array[0] = this.array[0] * v[0];\r\n\t\t\tthis.array[1] = this.array[1] * v[1];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst x = this.x;\r\n\t\t\tconst y = this.y;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[2];\r\n\t\t\tthis.y = x * m[1] + y * m[3];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\taddScaled(vec: Vector2Base, k: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0] * k;\r\n\t\to[1] = o[1] + v[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n    }\r\n    \r\n    readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = arr[offset    ];\r\n\t\to[1] = arr[offset + 1];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tcopyAndSub(vecA: Vector2Base, vecB: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\to[0] = a[0] - b[0];\r\n\t\to[1] = a[1] - b[1];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nvar Vector2: Vector2Constructor = Vector2Base;\r\nconst Vector2Injector: Injector<Vector2Constructor> = new Injector({\r\n\tdefaultCtor: Vector2Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector2Constructor) => {\r\n\t\t\tVector2 = ctor;\r\n\t\t}\r\n});","import { Matrix3 } from \"engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\n\r\nexport { Vector3Constructor };\r\nexport { Vector3 };\r\nexport { Vector3Base };\r\nexport { Vector3Injector };\r\n\r\nexport type Vector3Values = [number, ...number[]] & { length: 3 };\r\n\r\ninterface Vector3Constructor {\r\n\treadonly prototype: Vector3;\r\n\tnew(): Vector3;\r\n\tnew(a: number, y: number, z: number): Vector3;\r\n  \tnew(array: ArrayLike<number>): Vector3;\r\n\tangle(vectorA: Vector3, vectorB: Vector3): number;\r\n}\r\n\r\ninterface Vector3 extends Iterable<number> {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector3Values;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\ttoString(): string;\r\n\tsetValues(\r\n\t\tx: number,\r\n\t\ty: number,\r\n\t\tz: number\r\n\t): this;\r\n\tequals(vec: Vector3): boolean;\r\n\tcopy(vec: Vector3): this;\r\n\tclone(): this;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\ttoCartesian(center: Vector3): this;\r\n\ttoSpherical(center: Vector3): this;\r\n\tadd(vec: Vector3): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector3): this;\r\n\tlerp(from: Vector3, to: Vector3, t: number): this;\r\n\tmax(vecB: Vector3): this;\r\n\tmin(vecB: Vector3): this;\r\n\tclamp(min: Vector3, max: Vector3): this;\r\n\tscale(k: number): this;\r\n\tcross(vec: Vector3): this;\r\n\tdot(vec: Vector3): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdistance(vec: Vector3): number;\r\n\tdistanceSquared(vec: Vector3): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector3): this;\r\n\tmult(mat: Matrix3): this;\r\n\taddScaled(vec: Vector3, k: number): this;\r\n\tcopyAndSub(vecA: Vector3, vecB: Vector3): this;\r\n\tcopyAndCross(vecA: Vector3, vecB: Vector3): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector3Base implements Vector3 {\r\n\treadonly array: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(array: ArrayLike<number>)\r\n\t  constructor(\r\n\t  x: number, y: number, z: number\r\n\t)\r\n\tconstructor(\r\n\t  ...args: any[]\r\n\t) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([args[0], args[2], args[1]]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tconst array = args[0];\r\n\t\t\tif (array.length < 3) {\r\n\t\t\t\tthrow new MathError(`Array must be of length 3 at least.`);\r\n\t\t\t}\r\n\t\t\tif (array instanceof Float32Array) {\r\n\t\t\t\tthis.array = array;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.array = new Float32Array(array);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([0, 0, 0]);\r\n\t\t}\r\n\t}\r\n\r\n\ttoString(): string {\r\n\t\treturn `Vector3([${Array.from(this.array).join(\", \")}])`;\r\n\t}\r\n\r\n\tstatic angle(vectorA: Vector3, vectorB: Vector3): number {\r\n\t\tconst temp = new Vector3();\r\n\t\treturn Math.acos(temp.copy(vectorA).dot(vectorB) / (Math.sqrt(temp.copy(vectorA).dot(vectorA)) * Math.sqrt(temp.copy(vectorB).dot(vectorB))));\r\n\t}\r\n\r\n\tget values(): Vector3Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1],\r\n\t\t\tthis.array[2]\r\n\t\t];\r\n\t}\r\n\r\n\tset values(values: Vector3Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t\tthis.array[2] = values[2];\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tget z() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n\tset z(z: number) {\r\n\t\tthis.array[2] = z;\r\n\t}\r\n\r\n\tsetValues(x: number, y: number, z: number): this {\r\n\t\tthis.array[0] = x;\r\n\t\tthis.array[1] = y;\r\n\t\tthis.array[2] = z;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcopy(vec: Vector3): this {\r\n\t\tconst v = vec.array;\r\n\r\n\t\tthis.array[0] = v[0];\r\n\t\tthis.array[1] = v[1];\r\n\t\tthis.array[2] = v[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new Vector3Base(this.values) as this;\r\n\t}\r\n\r\n\tequals(vector: Vector3): boolean {\r\n\t\treturn vector.array[0] === this.array[0]\r\n\t\t\t&& vector.array[1] === this.array[1]\r\n\t\t\t&& vector.array[2] === this.array[2];\r\n\t}\r\n\r\n\tsetZeros(): this {\r\n\t\tthis.array[0] = 0;\r\n\t\tthis.array[1] = 0;\r\n\t\tthis.array[2] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetUnit(): this {\r\n\t\tthis.array[0] = 1;\r\n\t\tthis.array[1] = 1;\r\n\t\tthis.array[2] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0];\r\n\t\tthis.array[1] = this.array[1] + vector.array[1];\r\n\t\tthis.array[2] = this.array[2] + vector.array[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(k: number): this {\r\n\t\tthis.array[0] = this.array[0] + k;\r\n\t\tthis.array[1] = this.array[1] + k;\r\n\t\tthis.array[2] = this.array[2] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] - vector.array[0];\r\n\t\tthis.array[1] = this.array[1] - vector.array[1];\r\n\t\tthis.array[2] = this.array[2] - vector.array[2];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(from: Vector3, to: Vector3, t: number): this {\r\n\t\t\r\n\t\tthis.array[0] = (1 - t) * from.x + t * (to.x - from.x);\r\n\t\tthis.array[1] = (1 - t) * from.y + t * (to.y - from.y);\r\n\t\tthis.array[2] = (1 - t) * from.z + t * (to.z - from.z);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmax(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.max(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.max(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.max(this.array[2], vectorB.array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmin(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.min(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.min(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.min(this.array[2], vectorB.array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min: Vector3, max: Vector3): this {\r\n\t\tthis.array[0] = Math.min(max.array[0], Math.max(this.array[0], min.array[0]));\r\n\t\tthis.array[1] = Math.min(max.array[1], Math.max(this.array[1], min.array[1]));\r\n\t\tthis.array[2] = Math.min(max.array[2], Math.max(this.array[2], min.array[2]));\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tscale(k: number): this {\r\n\t\tthis.array[0] = this.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcross(vector: Vector3): this {\r\n\t\tconst t0 = this.array[1] * vector.array[2] - this.array[2] * vector.array[1];\r\n\t\tconst t1 = this.array[2] * vector.array[0] - this.array[0] * vector.array[2];\r\n\t\tconst t2 = this.array[0] * vector.array[1] - this.array[1] * vector.array[0];\r\n\t\t\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdot(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst a = this.array;\r\n\r\n\t\treturn Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst a = this.array;\r\n\t\t\r\n\t\treturn a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\r\n\t}\r\n\r\n\tdistance(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn Math.hypot(dx, dy, dz);\r\n\t}\r\n\r\n\tdistanceSquared(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst {array} = this;\r\n\t\tconst length = this.length();\r\n\t\tif (length > Number.EPSILON) {\r\n\t\t\tarray[0] /= length;\r\n\t\t\tarray[1] /= length;\r\n\t\t\tarray[2] /= length;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tarray[0] = 0;\r\n\t\t\tarray[1] = 0;\r\n\t\t\tarray[2] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate(): this {\r\n\t\tthis.array[0] *= -1;\r\n\t\tthis.array[1] *= -1;\r\n\t\tthis.array[2] *= -1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(mat: Matrix3): this\r\n\tmult(vec: Vector3): this\r\n\tmult(arg0: Matrix3 | Vector3): this {\r\n\t\tif (arg0 instanceof Vector3) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tthis.array[0] = this.array[0] * v[0];\r\n\t\t\tthis.array[1] = this.array[1] * v[1];\r\n\t\t\tthis.array[2] = this.array[2] * v[2];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst x = this.x;\r\n\t\t\tconst y = this.y;\r\n\t\t\tconst z = this.z;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[3] + z * m[6];\r\n\t\t\tthis.y = x * m[1] + y * m[4] + z * m[7];\r\n\t\t\tthis.z = x * m[2] + y * m[5] + z * m[8];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\ttoSpherical(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const x = thisArray[0] - centerArray[0];\r\n        const y = thisArray[1] - centerArray[1];\r\n        const z = thisArray[2] - centerArray[2];\r\n\r\n        const roh = Math.hypot(x, y, z);\r\n        const theta = Math.acos(y / roh);\r\n        const phi = Math.atan2(z, x);\r\n        thisArray[0] = roh;\r\n        thisArray[1] = theta;\r\n        thisArray[2] = phi;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n    toCartesian(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const roh = thisArray[0];\r\n        const theta = thisArray[1];\r\n        const phi = thisArray[2];\r\n\r\n        const x = roh * Math.sin(theta) * Math.cos(phi) + centerArray[0];\r\n        const y = roh * Math.cos(theta) + centerArray[1];\r\n        const z = roh * Math.sin(theta) * Math.sin(phi) + centerArray[2];\r\n        thisArray[0] = x;\r\n        thisArray[1] = y;\r\n        thisArray[2] = z;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tstatic mult(mat: Matrix3, vec: Vector3): Vector3 {\r\n\t\tconst m = mat.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\treturn new Vector3Base([\r\n\t\t\tm[0] * v[0] + m[1] * v[1] + m[2] * v[2],\r\n\t\t\tm[3] * v[0] + m[4] * v[1] + m[5] * v[2],\r\n\t\t\tm[6] * v[0] + m[7] * v[1] + m[8] * v[2]\r\n\t\t]);\r\n\t}\r\n\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n\t\tout[offset + 2] = v[2];\r\n    }\r\n    \r\n    readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tthis.array[0] = arr[offset    ];\r\n\t\tthis.array[1] = arr[offset + 1];\r\n\t\tthis.array[2] = arr[offset + 2];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\taddScaled(vector: Vector3, k: number): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] + vector.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] + vector.array[2] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcopyAndSub(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\tthis.array[0] = a[0] - b[0];\r\n\t\tthis.array[1] = a[1] - b[1];\r\n\t\tthis.array[2] = a[2] - b[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcopyAndCross(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\t\r\n\t\tconst t0 = a[1] * b[2] - a[2] * b[1];\r\n\t\tconst t1 = a[2] * b[0] - a[0] * b[2];\r\n\t\tconst t2 = a[0] * b[1] - a[1] * b[0];\r\n\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\t[Symbol.iterator] (): Iterator<number> {\r\n\t\tconst {array} = this;\r\n\t\tconst {length} = array;\r\n\t\tlet i = 0;\r\n\t\treturn {\r\n\t\t\tnext() {\r\n\t\t\t\tif (i < length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: array[i++], done: false\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: undefined, done: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar Vector3: Vector3Constructor = Vector3Base;\r\n\r\nconst Vector3Injector: Injector<Vector3Constructor> = new Injector({\r\n\tdefaultCtor: Vector3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector3Constructor) => {\r\n\t\t\tVector3 = ctor;\r\n\t\t}\r\n});","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\n\r\nexport { Key };\r\nexport { KeyModifier };\r\nexport { HotKey };\r\nexport { MouseButton };\r\nexport { Input };\r\n\r\nenum Key {\r\n    A = \"a\",\r\n    B = \"b\",\r\n    C = \"c\",\r\n    D = \"d\",\r\n    E = \"e\",\r\n    F = \"f\",\r\n    G = \"g\",\r\n    H = \"h\",\r\n    I = \"i\",\r\n    J = \"j\",\r\n    K = \"k\",\r\n    L = \"l\",\r\n    M = \"m\",\r\n    O = \"o\",\r\n    P = \"p\",\r\n    Q = \"q\",\r\n    R = \"r\",\r\n    S = \"s\",\r\n    T = \"t\",\r\n    U = \"u\",\r\n    V = \"v\",\r\n    W = \"w\",\r\n    X = \"x\",\r\n    Y = \"y\",\r\n    Z = \"z\",\r\n    ENTER = \"Enter\",\r\n    BACKSPACE = \"Backspace\",\r\n    ARROW_DOWN = \"ArrowDown\",\r\n    ARROW_LEFT = \"ArrowLeft\",\r\n    ARROW_RIGHT = \"ArrowRight\",\r\n    ARROW_UP = \"ArrowUp\",\r\n    SHIFT = \"Shift\"\r\n}\r\n\r\nconst KEYS_COUNT = Object.keys(Key).length;\r\n\r\nenum KeyModifier {\r\n    Alt = \"Alt\",\r\n    Control = \"Control\",\r\n    Shift = \"Shift\",\r\n}\r\n\r\nfunction displayKeyModifier(mode: KeyModifier): string {\r\n    switch (mode) {\r\n        case KeyModifier.Control:\r\n            return \"Ctrl\";\r\n        default:\r\n            return mode;\r\n    }\r\n}\r\n\r\nenum MouseButton {\r\n    LEFT = 0,\r\n    WHEEL = 1,\r\n    RIGHT = 2,\r\n    FORWARD = 3,\r\n    BACK = 4\r\n}\r\n\r\nconst MOUSE_BUTTONS_COUNT = Object.keys(MouseButton).length;\r\n\r\nconst MOUSE_BUTTONS_INDICES = Object.freeze(\r\n    Object.values(MouseButton).reduce(\r\n        (map, button, index) => Object.assign(map, {[button]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst KEYS_INDICES = Object.freeze(\r\n    Object.values(Key).reduce(\r\n        (map, key, index) => Object.assign(map, {[key]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst INPUT_EVENT_UP = 0;\r\nconst INPUT_EVENT_DOWN = 1;\r\nconst INPUT_EVENT_REPEAT = 2;\r\n\r\nconst testKeyModifier = (mod: KeyModifier, event: KeyboardEvent) => {\r\n    switch (mod) {\r\n        case \"Alt\":\r\n            return event.altKey;\r\n        case \"Control\":\r\n            return event.ctrlKey;\r\n        case \"Shift\":\r\n            return event.shiftKey;\r\n        default:\r\n            return () => true;\r\n    }\r\n}\r\n\r\nclass HotKey {\r\n\r\n    readonly key: Key;\r\n    readonly mod1?: KeyModifier;\r\n    readonly mod2?: KeyModifier;\r\n\r\n    constructor(key: Key, mod1?: KeyModifier, mod2?: KeyModifier) {\r\n        this.key = key;\r\n        this.mod1 = mod1;\r\n        this.mod2 = mod2;\r\n    }\r\n\r\n    toString(): string {\r\n        return `${this.mod1 ? `${displayKeyModifier(this.mod1)}+` : ''}${this.mod2 ? `${displayKeyModifier(this.mod2)}+` : ''}${(this.key.length === 1) ? this.key.toUpperCase() : this.key}`;\r\n    }\r\n\r\n    /*static fromString(str: string): HotKey | null {\r\n        const keys = Object.values(Key);\r\n        const keyModifiers = Object.values(KeyModifier);\r\n\r\n        let key: Key;\r\n        let mod1: KeyModifier | undefined;\r\n        let mod2: KeyModifier | undefined;\r\n\r\n        const keysStr = str.split(' + ');\r\n        if (keysStr.length >= 1) {\r\n            key = keysStr[0] as Key;\r\n            if (!keys.indexOf(key)) {\r\n                return null;\r\n            }\r\n            if (keysStr.length >= 2) {\r\n                mod1 = keysStr[1] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod1)) {\r\n                    return null;\r\n                }\r\n            }\r\n            if (keysStr.length >= 3) {\r\n                mod2 = keysStr[2] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod2)) {\r\n                    return null;\r\n                }\r\n            }\r\n            return new HotKey(key, mod1, mod2);\r\n        }\r\n        return null;\r\n    }*/\r\n\r\n    test(event: KeyboardEvent): boolean {\r\n        return ((!this.mod1 || testKeyModifier(this.mod1, event)) && (!this.mod2 || testKeyModifier(this.mod2, event)) && event.key === this.key);\r\n    }\r\n}\r\n\r\ninterface Input {\r\n    initialize(canvas: HTMLCanvasElement): void;\r\n    clear(): void;\r\n    getKey(key: Key): boolean;\r\n    getKeyUp(key: Key): boolean;\r\n    getKeyDown(key: Key): boolean;\r\n    getMouseButton(button: MouseButton): boolean;\r\n    getPointerPosition(): Vector2;\r\n    getPointerScreenPosition(): Vector2;\r\n    getWheelDelta(): number;\r\n    getMouseButtonDown(button: MouseButton): boolean;\r\n    getMouseButtonUp(button: MouseButton): boolean;\r\n}\r\n\r\nclass InputBase implements Input {\r\n    private readonly keyFlags = new Array<boolean>(3 * KEYS_COUNT).fill(false);\r\n    private readonly mouseFlags = new Array<boolean>(3 * MOUSE_BUTTONS_COUNT).fill(false);\r\n    private readonly pointerPosition = new Vector2();\r\n    private wheelDelta = 0;\r\n    private canvas: HTMLCanvasElement | null = null;\r\n    private canvasRectangle: DOMRect | null = null;\r\n\r\n    initialize(canvas: HTMLCanvasElement): void {\r\n        this.canvas = canvas;\r\n        this.canvasRectangle = canvas.getBoundingClientRect();\r\n        canvas.addEventListener(\"pointerdown\", this);\r\n        canvas.addEventListener(\"pointerup\", this);\r\n        canvas.addEventListener(\"contextmenu\", this);\r\n        canvas.addEventListener(\"pointermove\", this);\r\n        canvas.addEventListener(\"wheel\", this);\r\n        canvas.addEventListener(\"keydown\", this);\r\n        canvas.addEventListener(\"keyup\", this);\r\n        canvas.addEventListener(\"focusout\", this);\r\n    }\r\n\r\n    getCanvasRect(): DOMRect {\r\n        const rect = this.canvasRectangle;\r\n        if (rect === null) {\r\n            throw new Error(`Input manager not initialized.`);\r\n        }\r\n        return rect;\r\n    }\r\n\r\n    clear(): void {\r\n        this.keyFlags.fill(false, 0, INPUT_EVENT_REPEAT * KEYS_COUNT);\r\n        this.mouseFlags.fill(false, 0, INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT);\r\n        this.wheelDelta = 0;\r\n    }\r\n    \r\n    handleEvent(event: Event): void {\r\n        let eventIndex = -1;\r\n        switch (event.type) {\r\n            case \"pointerdown\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"pointerup\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"pointermove\":\r\n                const canvasRect = this.getCanvasRect();\r\n                this.pointerPosition.setValues(\r\n                    ((event as MouseEvent).clientX - canvasRect.left),\r\n                    ((event as MouseEvent).clientY - canvasRect.top),\r\n                );\r\n                break;\r\n            case \"wheel\":\r\n                this.wheelDelta = (event as WheelEvent).deltaY / 100;\r\n                break;\r\n            case \"keydown\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"keyup\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"focusout\":\r\n                this.keyFlags.fill(false);\r\n                this.mouseFlags.fill(false);\r\n                this.wheelDelta = 0;\r\n                this.pointerPosition.setZeros();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    /*static getAxis(axisName: string) {\r\n\r\n    }\r\n\r\n    static getButton(buttonName: string) {\r\n\r\n    }\r\n\r\n    static getButtonUp(buttonName: string) {\r\n\r\n    }\r\n\r\n    static getButtonDown(buttonName: string) {\r\n\r\n    }*/\r\n\r\n    getKey(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getKeyUp(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getKeyDown(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getMouseButton(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    getPointerPosition(): Vector2 {\r\n        return this.pointerPosition.clone();\r\n    }\r\n\r\n    getPointerScreenPosition(): Vector2 {\r\n        const positionAray = this.pointerPosition.array;\r\n        const canvasRect = this.getCanvasRect();\r\n        const x = (positionAray[0] / canvasRect.width) * 2 - 1;\r\n        const y = (positionAray[1] / canvasRect.height) * 2 - 1;\r\n        return new Vector2([x, y]);\r\n    }\r\n\r\n    getWheelDelta(): number {\r\n        return this.wheelDelta;\r\n    }\r\n\r\n    getMouseButtonDown(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    getMouseButtonUp(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n}\r\n\r\nvar Input: Input = new InputBase();","import { Vector3 } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport class Space {\r\n\r\n    private constructor () {};\r\n    \r\n    static readonly origin:      Vector3 = new Vector3([ 0,  0,  0]);\r\n    static readonly right:       Vector3 = new Vector3([ 1,  0,  0]);\r\n    static readonly left:        Vector3 = new Vector3([-1,  0,  0]);\r\n    static readonly up:          Vector3 = new Vector3([ 0,  1,  0]);\r\n    static readonly down:        Vector3 = new Vector3([ 0, -1,  0]);\r\n    static readonly forward:     Vector3 = new Vector3([ 0,  0,  1]);\r\n    static readonly backward:    Vector3 = new Vector3([ 0,  0, -1]);\r\n}","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../libs/maths/geometry/space/Space\";\r\nimport { Input, MouseButton, Key } from \"../input/Input\";\r\nimport { Camera } from \"../rendering/scenes/cameras/Camera\";\r\n\r\nexport { FreeCameraControl };\r\n\r\ninterface FreeCameraControlConstructor {\r\n    readonly prototype: FreeCameraControl;\r\n    new(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}): FreeCameraControl;\r\n}\r\n\r\ninterface FreeCameraControl {\r\n    update(deltaTime: number): void;\r\n}\r\n\r\nclass FreeCameraControlBase {\r\n    camera: Camera;\r\n    rotationSpeed: number;\r\n    translationSpeed: number;\r\n\r\n    #lastPointerPosition: Vector2;\r\n\r\n    constructor(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}) {\r\n        this.camera = camera;\r\n        this.rotationSpeed = params?.rotationSpeed ?? 50;\r\n        this.translationSpeed = params?.translationSpeed ?? 8;\r\n        this.#lastPointerPosition = new Vector2();\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        const {camera, rotationSpeed, translationSpeed} = this;\r\n        const {transform: cameraTransform} = camera;\r\n        const lastPointerPosition = this.#lastPointerPosition;\r\n        const cameraPosition = cameraTransform.getTranslation(new Vector3());\r\n        const cameraForward = cameraTransform.getBackward(new Vector3());\r\n        const {array: cameraForwardArray} = cameraForward;\r\n        const {origin, up, down} = Space;\r\n        let cameraUpSign = cameraTransform.getUp(new Vector3()).dot(up);\r\n      \r\n        if (Input.getKey(Key.Z) || Input.getKey(Key.ARROW_UP)) {\r\n            const forward = cameraTransform.getBackward(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(forward);\r\n        }\r\n        if (Input.getKey(Key.Q) || Input.getKey(Key.ARROW_LEFT)) {\r\n            const left = cameraTransform.getLeft(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(left);\r\n        }\r\n        if (Input.getKey(Key.S) || Input.getKey(Key.ARROW_DOWN)) {\r\n            const backward = cameraTransform.getForward(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(backward);\r\n        }\r\n        if (Input.getKey(Key.D) || Input.getKey(Key.ARROW_RIGHT)) {\r\n            const right = cameraTransform.getRight(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(right);\r\n        }\r\n\r\n        if (Input.getMouseButtonDown(MouseButton.RIGHT)) {\r\n            lastPointerPosition.copy(Input.getPointerScreenPosition());\r\n        }\r\n        \r\n        if (Input.getMouseButton(MouseButton.RIGHT)) {\r\n            const newPointerPosition = Input.getPointerScreenPosition();\r\n            if (!newPointerPosition.equals(lastPointerPosition)) {\r\n                const dx = (lastPointerPosition.x - newPointerPosition.x) * rotationSpeed * deltaTime;\r\n                const dy = (lastPointerPosition.y - newPointerPosition.y) * rotationSpeed * deltaTime;\r\n                cameraPosition.copy(cameraTransform.getTranslation(new Vector3()));\r\n                if (dx !== 0 || dy !== 0) {\r\n                    cameraUpSign = Math.sign(cameraTransform.getUp(new Vector3()).dot(up));\r\n                    cameraForward.toSpherical(origin);\r\n                    const theta = cameraForwardArray[1];\r\n                    const phi = cameraForwardArray[2];\r\n                    const newTheta = theta + cameraUpSign * -dy;\r\n                    if (newTheta <= 0 || newTheta >= Math.PI) {\r\n                        cameraForwardArray[2] = (phi - dx + Math.PI) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = newTheta < 0 ? -newTheta : Math.PI - (newTheta - Math.PI);\r\n                        cameraUpSign *= -1;\r\n                    }\r\n                    else {\r\n                        cameraForwardArray[2] = (phi - dx) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = theta + cameraUpSign * -dy;\r\n                    }\r\n                    cameraForward.toCartesian(origin);\r\n                    cameraTransform.lookAt(cameraPosition.add(cameraForward), (cameraUpSign > 0) ? up : down);\r\n                }\r\n                lastPointerPosition.copy(newPointerPosition);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar FreeCameraControl: FreeCameraControlConstructor = FreeCameraControlBase;","export { PoolAutoExtendPolicy };\r\nexport { Pool };\r\nexport { PoolBase };\r\n\r\nenum PoolAutoExtendPolicy {\r\n    NO_AUTO_EXTEND = 0,\r\n    AUTO_EXTEND_ONE = 1,\r\n    AUTO_EXTEND_POW2 = 2\r\n}\r\n\r\ninterface PoolConstructor {\r\n    readonly prototype: Pool;\r\n    new<O extends object>(constructor: Constructor<O>, policy?: PoolAutoExtendPolicy): Pool<O>;\r\n}\r\n\r\ninterface Pool<O extends object = object> {\r\n    readonly ctor: Constructor<O>;\r\n    readonly autoExtendPolicy: PoolAutoExtendPolicy;\r\n    autoExtend(): void;\r\n    acquire(count: number): O[];\r\n    release(...args: any[]): void;\r\n    extend(count: number): void;\r\n    clear(): void;\r\n}\r\n\r\nclass PoolBase<O extends object = object> implements Pool<O> {\r\n    readonly ctor: Constructor<O>;\r\n    autoExtendPolicy: PoolAutoExtendPolicy;\r\n    autoExtendTicks: number;\r\n\r\n    constructor(constructor: Constructor<O>, policy?: PoolAutoExtendPolicy) {\r\n        this.ctor = constructor;\r\n        this.autoExtendPolicy = policy || PoolAutoExtendPolicy.AUTO_EXTEND_ONE;\r\n        this.autoExtendTicks = 0;\r\n    }\r\n\r\n    autoExtend(): void {\r\n        switch (this.autoExtendPolicy) {\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_ONE:\r\n                this.extend(1);\r\n                break;\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_POW2:\r\n                this.extend(Math.pow(2, this.autoExtendTicks));\r\n                break;\r\n        }\r\n        this.autoExtendTicks++;\r\n    }\r\n\r\n    acquire(count: number): O[] {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    release(...args: any[]): void {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    extend(count: number): void {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    clear(): void {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n}\r\n\r\nvar Pool: PoolConstructor = PoolBase;","import { PoolAutoExtendPolicy, PoolBase, Pool } from \"./Pool\";\r\n\r\nexport { StackPool };\r\n\r\ninterface StackPool<O extends object = object> extends Pool<O> {\r\n    release(count: number): void;\r\n}\r\n\r\ninterface StackPoolConstructor {\r\n    readonly prototype: StackPool;\r\n    new<O extends object>(constructor: Constructor<O>, options?: {args?: ConstructorParameters<Constructor<O>>, policy?: PoolAutoExtendPolicy, size?: number}): StackPool<O>;\r\n}\r\n\r\nclass StackPoolBase<O extends object = object> extends PoolBase<O> implements Pool<O> {\r\n    objects: Array<O>;\r\n    top: number;\r\n\r\n    constructor(constructor: Constructor<O>, options?: {args?: any, policy?: PoolAutoExtendPolicy, size?: number}) {\r\n        super(constructor, options?.policy);\r\n        this.objects = new Array(options?.size || 0).fill(0).map(() => {\r\n            return new this.ctor(options?.args);\r\n        });\r\n        this.top = 0;\r\n    }\r\n    \r\n    acquire(count: number): O[] {\r\n        const top = this.top;\r\n        const target = top + count;\r\n\r\n        if (this.autoExtendPolicy) {\r\n            while (this.objects.length < target) {\r\n                this.autoExtend();\r\n            }\r\n        }\r\n        this.top = target;\r\n        \r\n        return this.objects.slice(top, target);\r\n    }\r\n\r\n    release(count: number): void {\r\n        const top = this.top;\r\n        if (count > top) {\r\n            console.warn(\"Releasing under zero.\");\r\n        }\r\n        this.top = Math.max(top - count, 0);\r\n    }\r\n\r\n    extend(count: number): void {\r\n        this.objects.push(...Array(count).fill(0).map(() => {\r\n            return new this.ctor();\r\n        }));\r\n    }\r\n    \r\n    clear(): void {\r\n        this.objects = [];\r\n        this.top = 0;\r\n        this.autoExtendTicks = 0;\r\n    }\r\n}\r\n\r\nvar StackPool: StackPoolConstructor = StackPoolBase;","\r\nexport { deg2Rad };\r\nexport { rad2Deg };\r\nexport { qSqrt };\r\nexport { pow2 };\r\nexport { inRange };\r\nexport { clamp };\r\nexport { lerp };\r\nexport { smoothstep };\r\nexport { smootherstep };\r\nexport { randInt };\r\nexport { randFloat };\r\nexport { randFloatSpread };\r\nexport { degToRad };\r\nexport { radToDeg };\r\nexport { isPowerOfTwo };\r\nexport { ceilPowerOfTwo };\r\nexport { floorPowerOfTwo };\r\n\r\nconst DEG2RAD = Math.PI / 180;\r\nconst RAD2DEG = 180 / Math.PI;\r\n\r\nconst deg2Rad = function(deg: number): number {\r\n\treturn DEG2RAD * deg;\r\n}\r\n\r\nconst rad2Deg = function(rad: number): number {\r\n\treturn RAD2DEG / rad;\r\n}\r\n\r\nconst _bytes = new ArrayBuffer(Float32Array.BYTES_PER_ELEMENT);\r\nconst _floatView = new Float32Array(_bytes);\r\nconst _intView = new Uint32Array(_bytes);\r\n\r\nconst qSqrt = function(x: number) {\r\n\tconst halfx = x * 0.5;\r\n\r\n\t_floatView[0] = x;\r\n\t_intView[0] = 0x5f3759df -(_intView[0] >> 1);\r\n\r\n\tlet y = _floatView[0];\r\n\ty = y * (1.5 - (halfx * y * y));\r\n\r\n\treturn y;\r\n}\r\n\r\nconst pow2 = function(k: number): number {\r\n\treturn 1 << k;\r\n}\r\n\t\r\nconst inRange = function(x: number, min: number, max: number): boolean {\r\n\treturn (min <= x) && (x <= max);\r\n}\r\n\r\nconst clamp = function(value: number, min: number, max: number): number {\r\n\treturn Math.max(min, Math.min(max, value));\r\n}\r\n\r\nconst lerp = function(x: number, y: number, t: number): number {\r\n\treturn (1 - t) * x + t * y;\r\n}\r\n\r\nconst smoothstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * (3 - 2 * x);\r\n}\r\n\r\nconst smootherstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * x * ( x * ( x * 6 - 15) + 10);\r\n}\r\n\r\nconst randInt = function(low: number, high: number): number {\r\n\treturn low + Math.floor(Math.random() * (high - low + 1));\r\n}\r\n\r\nconst randFloat = function(low: number, high: number): number {\r\n\treturn low + Math.random() * (high - low);\r\n}\r\n\r\nconst randFloatSpread = function(range: number): number {\r\n\treturn range * (0.5 - Math.random());\r\n}\r\n\r\nconst degToRad = function(degrees: number): number {\r\n\treturn degrees * DEG2RAD;\r\n}\r\n\r\nconst radToDeg = function(radians: number): number {\r\n\treturn radians * RAD2DEG;\r\n}\r\nconst isPowerOfTwo = function(value: number): boolean {\r\n\treturn (value & (value - 1)) === 0 && value !== 0;\r\n}\r\n\r\nconst ceilPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\r\n}\r\n\r\nconst floorPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3Values, Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { Matrix3Values };\r\nexport { Matrix3 };\r\nexport { Matrix3Injector };\r\nexport { Matrix3Base };\r\n\r\ntype Matrix3Values = [\r\n  number, number, number,\r\n  number, number, number,\r\n  number, number, number\r\n];\r\n\r\ninterface Matrix3Constructor {\r\n\treadonly prototype: Matrix3;\r\n\tnew(): Matrix3;\r\n\tnew(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): Matrix3;\r\n  new(array: ArrayLike<number>): Matrix3;\r\n  rotationX(angle: number): Matrix3;\r\n  rotationY(angle: number): Matrix3;\r\n  rotationZ(angle: number): Matrix3;\r\n}\r\n\r\ninterface Matrix3 {\r\n  readonly array: WritableArrayLike<number>;\r\n  setValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this;\r\n  getValues(): Matrix3Values;\r\n  row1: Vector3Values;\r\n  row2: Vector3Values;\r\n  row3: Vector3Values;\r\n  col1: Vector3Values;\r\n  col2: Vector3Values;\r\n  col3: Vector3Values;\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  setRotationX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n\r\n  equals(mat: Matrix3): boolean;\r\n  copy(mat: Matrix3): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix3): this;\r\n  sub(mat: Matrix3): this;\r\n  mult(mat: Matrix3): this;\r\n  multScalar(k: number): this;\r\n  solve(vecB: Vector3): Vector3Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass Matrix3Base implements Matrix3 {\r\n  readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  )\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[0], args[1], args[2],\r\n        args[3], args[4], args[5],\r\n        args[6], args[7], args[8]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([\r\n        0, 0, 0,\r\n        0, 0, 0,\r\n        0, 0, 0\r\n      ]);\r\n\t\t}\r\n  }\r\n\r\n  get row1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[3],\r\n      this.array[6]\r\n    ];\r\n\t}\r\n\r\n\tset row1(row: Vector3Values) {\r\n    this.array[0] = row[0];\r\n    this.array[3] = row[1];\r\n    this.array[6] = row[2];\r\n  }\r\n\r\n  get row2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[1],\r\n      this.array[4],\r\n      this.array[7]\r\n    ];\r\n\t}\r\n\r\n\tset row2(row: Vector3Values) {\r\n    this.array[1] = row[0];\r\n    this.array[4] = row[1];\r\n    this.array[7] = row[2]\r\n  }\r\n\r\n  get row3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[2],\r\n      this.array[5],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tset row3(row: Vector3Values) {\r\n    this.array[2] = row[0];\r\n    this.array[5] = row[1];\r\n    this.array[8] = row[2]\r\n  }\r\n\r\n  get col1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[1],\r\n      this.array[2]\r\n    ];\r\n\t}\r\n\r\n\tset col1(col: Vector3Values) {\r\n    this.array[0] = col[0];\r\n    this.array[1] = col[1];\r\n    this.array[2] = col[2];\r\n  }\r\n\r\n  get col2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[3],\r\n      this.array[4],\r\n      this.array[5]\r\n    ];\r\n\t}\r\n\r\n\tset col2(col: Vector3Values) {\r\n    this.array[3] = col[0];\r\n    this.array[4] = col[1];\r\n    this.array[5] = col[2]\r\n  }\r\n\r\n  get col3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[6],\r\n      this.array[7],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tset col3(col: Vector3Values) {\r\n    this.array[6] = col[0];\r\n    this.array[7] = col[1];\r\n    this.array[8] = col[2];\r\n  }\r\n\r\n  get m11() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  get m12() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset m12(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  get m13() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tset m13(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  get m22() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tset m22(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  get m23() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tset m23(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  get m32() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tset m32(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  get m33() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n  set m33(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 9) {\r\n\t\t\tthrow new MathError(`Array must be of length 9 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n  getValues(): Matrix3Values {\r\n\t\treturn [\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8],\r\n    ];\r\n\t}\r\n\r\n\tsetValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this {\r\n    this.array[0] = m11;\r\n    this.array[1] = m21;\r\n    this.array[2] = m31;\r\n    this.array[3] = m12;\r\n    this.array[4] = m22;\r\n    this.array[5] = m32;\r\n    this.array[6] = m13;\r\n    this.array[7] = m23;\r\n    this.array[8] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n\tequals(other: Matrix3): boolean {\r\n    const o = other.array;\r\n    return this.array[0] === o[0]\r\n      && this.array[1] === o[1]\r\n      && this.array[2] === o[2]\r\n      && this.array[3] === o[3]\r\n      && this.array[4] === o[4]\r\n      && this.array[5] === o[5]\r\n      && this.array[6] === o[6]\r\n      && this.array[7] === o[7]\r\n      && this.array[8] === o[8];\r\n  }\r\n\r\n  copy(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = m[0];\r\n    o[1] = m[1];\r\n    o[2] = m[2];\r\n    o[3] = m[3];\r\n    o[4] = m[4];\r\n    o[5] = m[5];\r\n    o[6] = m[6];\r\n    o[7] = m[7];\r\n    o[8] = m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  clone(): this {\r\n    return new Matrix3Base(\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8]\r\n    ) as this;\r\n  }\r\n\r\n  setIdentity(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 1;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 1;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  setZeros(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 0;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 0;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  det(): number {\r\n    const o = this.array;\r\n\r\n    const x = o[0] * ((o[4] * o[8]) - (o[5] * o[7]));\r\n    const y = o[1] * ((o[3] * o[8]) - (o[5] * o[6]));\r\n    const z = o[2] * ((o[3] * o[7]) - (o[4] * o[6]));\r\n\r\n    return x - y + z;\r\n  }\r\n\r\n  trace(): number {\r\n    const o = this.array;\r\n    \r\n    return o[0] + o[4] + o[8];\r\n  }\r\n\r\n  negate(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = -o[0];\r\n    o[1] = -o[1];\r\n    o[2] = -o[2];\r\n    o[3] = -o[3];\r\n    o[4] = -o[4];\r\n    o[5] = -o[5];\r\n    o[6] = -o[6];\r\n    o[7] = -o[7];\r\n    o[8] = -o[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  transpose(): this {\r\n    const o = this.array;\r\n\r\n    let t;\r\n\r\n    t = o[1];\r\n    o[1] = o[3];\r\n    o[3] = t;\r\n\r\n    t = o[2];\r\n    o[2] = o[6];\r\n    o[6] = t;\r\n\r\n    t = o[5];\r\n    o[5] = o[7];\r\n    o[7] = t;\r\n    \r\n    return this;\r\n  }\r\n\r\n  invert(): this {\r\n    const o = this.array;\r\n\r\n    const t11 = o[1 * 3 + 1] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 1];\r\n    const t12 = o[0 * 3 + 1] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 1];\r\n    const t13 = o[0 * 3 + 1] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 1];\r\n\r\n    const t21 = o[1 * 3 + 0] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 0];\r\n    const t22 = o[0 * 3 + 0] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 0];\r\n    const t23 = o[0 * 3 + 0] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 0];\r\n\r\n    const t31 = o[1 * 3 + 0] * o[2 * 3 + 1] - o[1 * 3 + 1] * o[2 * 3 + 0];\r\n    const t32 = o[0 * 3 + 0] * o[2 * 3 + 1] - o[0 * 3 + 1] * o[2 * 3 + 0];\r\n    const t33 = o[0 * 3 + 0] * o[1 * 3 + 1] - o[0 * 3 + 1] * o[1 * 3 + 0];\r\n\r\n    const d = 1.0 / (o[0 * 3 + 0] * t11 - o[1 * 3 + 0] * t12 + o[2 * 3 + 0] * t13);\r\n\r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    o[0] = d * t11;\r\n    o[1] = -d * t12;\r\n    o[2] = d * t13;\r\n\r\n    o[3] = -d * t21;\r\n    o[4] = d * t22;\r\n    o[5] = -d * t23;\r\n\r\n    o[6] = d * t31;\r\n    o[7] = -d * t32;\r\n    o[8] = d * t33;\r\n\r\n    return this;\r\n  }\r\n\r\n  add(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] + m[0];\r\n    o[1] = o[1] + m[1];\r\n    o[2] = o[2] + m[2];\r\n    o[3] = o[3] + m[3];\r\n    o[4] = o[4] + m[4];\r\n    o[5] = o[5] + m[5];\r\n    o[6] = o[6] + m[6];\r\n    o[7] = o[7] + m[7];\r\n    o[8] = o[8] + m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  sub(mat: Matrix3Base): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] - m[0];\r\n    o[1] = o[1] - m[1];\r\n    o[2] = o[2] - m[2];\r\n    o[3] = o[3] - m[3];\r\n    o[4] = o[4] - m[4];\r\n    o[5] = o[5] - m[5];\r\n    o[6] = o[6] - m[6];\r\n    o[7] = o[7] - m[7];\r\n    o[8] = o[8] - m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  mult(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    const a11 = o[0 * 3 + 0];\r\n    const a12 = o[0 * 3 + 1];\r\n    const a13 = o[0 * 3 + 2];\r\n    const a21 = o[1 * 3 + 0];\r\n    const a22 = o[1 * 3 + 1];\r\n    const a23 = o[1 * 3 + 2];\r\n    const a31 = o[2 * 3 + 0];\r\n    const a32 = o[2 * 3 + 1];\r\n    const a33 = o[2 * 3 + 2];\r\n    const b11 = m[0 * 3 + 0];\r\n    const b12 = m[0 * 3 + 1];\r\n    const b13 = m[0 * 3 + 2];\r\n    const b21 = m[1 * 3 + 0];\r\n    const b22 = m[1 * 3 + 1];\r\n    const b23 = m[1 * 3 + 2];\r\n    const b31 = m[2 * 3 + 0];\r\n    const b32 = m[2 * 3 + 1];\r\n    const b33 = m[2 * 3 + 2];\r\n\r\n    o[0] = b11 * a11 + b12 * a21 + b13 * a31;\r\n    o[1] = b11 * a12 + b12 * a22 + b13 * a32;\r\n    o[2] = b11 * a13 + b12 * a23 + b13 * a33;\r\n    o[3] = b21 * a11 + b22 * a21 + b23 * a31;\r\n    o[4] = b21 * a12 + b22 * a22 + b23 * a32;\r\n    o[5] = b21 * a13 + b22 * a23 + b23 * a33;\r\n    o[6] = b31 * a11 + b32 * a21 + b33 * a31;\r\n    o[7] = b31 * a12 + b32 * a22 + b33 * a32;\r\n    o[8] = b31 * a13 + b32 * a23 + b33 * a33;\r\n\r\n    return this;\r\n  }\r\n\r\n  multScalar(k: number): this {\r\n    const o = this.array;\r\n\r\n    o[0] = o[0] * k;\r\n    o[1] = o[1] * k;\r\n    o[2] = o[2] * k;\r\n    o[3] = o[3] * k;\r\n    o[4] = o[4] * k;\r\n    o[5] = o[5] * k;\r\n    o[6] = o[6] * k;\r\n    o[7] = o[7] * k;\r\n    o[8] = o[8] * k;\r\n\r\n    return this;\r\n  }\r\n\r\n  writeIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst m = this.array;\r\n\r\n\t\tout[offset     ] = m[ 0];\r\n\t\tout[offset +  1] = m[ 1];\r\n    out[offset +  2] = m[ 2];\r\n    out[offset +  3] = m[ 3];\r\n\t\tout[offset +  4] = m[ 4];\r\n    out[offset +  5] = m[ 5];\r\n    out[offset +  6] = m[ 6];\r\n\t\tout[offset +  7] = m[ 7];\r\n    out[offset +  8] = m[ 8];\r\n  }\r\n    \r\n  readFromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[ 0] = arr[offset     ];\r\n\t\to[ 1] = arr[offset +  1];\r\n    o[ 2] = arr[offset +  2];\r\n    o[ 3] = arr[offset +  3];\r\n    o[ 4] = arr[offset +  4];\r\n    o[ 5] = arr[offset +  5];\r\n    o[ 6] = arr[offset +  6];\r\n\t\to[ 7] = arr[offset +  7];\r\n    o[ 8] = arr[offset +  8];\r\n  }\r\n\r\n  static rotationX(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationX(angle);\r\n  }\r\n\r\n  setRotationX(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = 1;\r\n    this.array[1] = 0;\r\n    this.array[2] = 0;\r\n    this.array[3] = 0;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = sinAngle;\r\n    this.array[6] = 0;\r\n    this.array[7] = -sinAngle;\r\n    this.array[8] = cosAngle;\r\n\r\n    return this;\r\n  }\r\n  \r\n  static rotationY(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationY(angle);\r\n  }\r\n\r\n  setRotationY(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n    \r\n    this.array[0] = cosAngle;\r\n    this.array[1] = 0;\r\n    this.array[2] = -sinAngle;\r\n    this.array[3] = 0;\r\n    this.array[4] = 1;\r\n    this.array[5] = 0;\r\n    this.array[6] = sinAngle;\r\n    this.array[7] = 0;\r\n    this.array[8] = cosAngle;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static rotationZ(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationZ(angle);\r\n  }\r\n\r\n  setRotationZ(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = cosAngle;\r\n    this.array[1] = sinAngle;\r\n    this.array[2] = 0;\r\n    this.array[3] = -sinAngle;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = 0;\r\n    this.array[6] = 0;\r\n    this.array[7] = 0;\r\n    this.array[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  solve(vecB: Vector3): Vector3Values {\r\n    const a = this.array;\r\n    \r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a13 = a[2];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const a23 = a[5];\r\n    const a31 = a[6];\r\n    const a32 = a[7];\r\n    const a33 = a[8];\r\n    const bx = vecB.x - a[12];\r\n    const by = vecB.y - a[13];\r\n    const bz = vecB.z - a[14];\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n  \r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n  \r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n\r\n    return [\r\n      x, y, z\r\n    ];\r\n  }\r\n\r\n  solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const bx = vecB.x - a[4];\r\n    const by = vecB.y - a[7];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by)\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n}\r\n\r\nvar Matrix3: Matrix3Constructor = Matrix3Base;\r\nconst Matrix3Injector: Injector<Matrix3Constructor> = new Injector({\r\n\tdefaultCtor: Matrix3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix3Constructor) => {\r\n\t\t\tMatrix3 = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Space } from \"../../geometry/space/Space\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { qSqrt } from \"../../Snippets\";\r\nimport { Matrix3 } from \"../matrices/Matrix3\";\r\nimport { Matrix4 } from \"../matrices/Matrix4\";\r\nimport { Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { QuaternionValues };\r\nexport { Quaternion };\r\nexport { QuaternionInjector };\r\nexport { QuaternionPool };\r\n\r\ntype QuaternionValues = [number, ...number[]] & { length: 4 };\r\n\r\ninterface QuaternionConstructor {\r\n\treadonly prototype: Quaternion;\r\n\tnew(): Quaternion;\r\n\tnew(x: number, y: number, z: number, w: number): Quaternion;\r\n\tnew(array: WritableArrayLike<number>): Quaternion;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tslerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tfromArray(vector: ArrayLike<number>): Quaternion;\r\n\tfromAxisAngle(axis: Vector3, angle?: number): Quaternion;\r\n\tfromEuler(pitch: number, yaw: number, roll: number): Quaternion;\r\n\tfromVector(vector: Vector3): Quaternion;\r\n\tfromMatrix(matrix: Matrix3): Quaternion;\r\n}\r\n// TODO?:\r\n// roll => pitch\r\n// pitch => yaw\r\n// yaw => roll\r\ninterface Quaternion {\r\n\treadonly array: WritableArrayLike<number>;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\tw: number;\r\n\tpitch: number;\r\n\tyaw: number;\r\n\troll: number;\r\n\tgetValues(): QuaternionValues;\r\n\tsetValues(\r\n\t  x: number, y: number,\r\n\t  z: number, w: number\r\n\t): this;\r\n\t//setArray(array: WritableArrayLike<number>): this;\r\n\tlookAt(source: Vector3, dest: Vector3): Quaternion ;\r\n\tsetEuler(pitch: number, yaw: number, roll: number): this;\r\n\r\n\tsetMatrix(matrix: Matrix3): Quaternion;\r\n\tsetMatrix(matrix: Matrix4): Quaternion;\r\n\r\n\tsetAxisAngle(axis: Vector3, angle: number): this;\r\n\tsetVectors(from: Vector3, to: Vector3): this;\r\n\t\r\n\tcopy(quat: Quaternion): this;\r\n\tclone(): this;\r\n\tgetAxis(out: Vector3): Vector3;\r\n\r\n\tgetMatrix3(matrix: Matrix3): Matrix3;\r\n\tgetMatrix4(matrix: Matrix4): Matrix4;\r\n\r\n\trotate(vec: Vector3): Vector3;\r\n\ttoVector(): Vector3;\r\n\r\n\tangleTo(quat: Quaternion): number;\r\n\trotateTowards(quat: Quaternion): this;\r\n\tinvert(): this;\r\n\tconjugate(): this;\r\n\tdot(quat: Quaternion): number;\r\n\tlengthSquared(): number;\r\n\tlength(): number;\r\n\tnormalize(): this;\r\n\tadd(quat: Quaternion): this;\r\n\tsub(quat: Quaternion): this;\r\n\tmult(quat: Quaternion): this;\r\n\tscale(scalar: number): this;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): this;\r\n\tequals(quat: Quaternion): boolean;\r\n\tcopyIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass QuaternionBase {\r\n\tprivate _array: WritableArrayLike<number>;\r\n\r\n\tget array(): WritableArrayLike<number> {\r\n\t\treturn this._array;\r\n\t}\r\n\r\n\tconstructor()\r\n\tconstructor(array: WritableArrayLike<number>)\r\n\tconstructor(x: number, y: number, z: number, w: number)\r\n\tconstructor(...args: any[]) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis._array = [\r\n\t\t\t\targs[0], args[1], args[2], args[3]\r\n\t\t\t];\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tthis._checkArray(args[0]);\r\n\t\t\tthis._array = args[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._array = [0, 0, 0, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tget x(): number {\r\n        return this._array[0];\r\n    }\r\n\r\n    set x(x: number) {\r\n\t\tthis._array[0] = x;\r\n    }\r\n\r\n    get y(): number {\r\n        return this._array[1];\r\n    }\r\n\r\n    set y(y: number) {\r\n\t\tthis._array[1] = y;\r\n    }\r\n\r\n    set z(z: number) {\r\n\t\tthis._array[2] = z;\r\n\t}\r\n\t\r\n    get z(): number {\r\n\t\treturn this._array[2];\r\n    }\r\n\r\n    set w(w: number) {\r\n\t\tthis._array[3] = w;\r\n\t}\r\n\r\n    get w(): number {\r\n\t\treturn this._array[3];\r\n\t}\r\n\t\r\n\tget pitch(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinPitch = 2 * (w * y - z * x);\r\n\t\tif (Math.abs(sinPitch) >= 1) {\r\n            return Math.sign(sinPitch) * (Math.PI / 2);\r\n        }\r\n\t\telse {\r\n            return Math.asin(sinPitch);\r\n        }\r\n\t}\r\n\r\n\tget yaw(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinYawCosPitch = 2 * (w * z + x * y);\r\n\t\tconst cosYawCosPitch = 1 - 2 * (y * y + z * z);\r\n\t\treturn Math.atan2(sinYawCosPitch, cosYawCosPitch);\r\n\t}\r\n\r\n\tget roll(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinRollCosPitch = 2 * (w * x + y * z);\r\n\t\tconst cosRollCosPitch = 1 - 2 * (x * x + y * y);\r\n\t\treturn Math.atan2(sinRollCosPitch, cosRollCosPitch);\r\n\t}\r\n\r\n\tgetValues(): QuaternionValues {\r\n\t\treturn [\r\n\t\t\tthis._array[0],\r\n\t\t\tthis._array[1],\r\n\t\t\tthis._array[2],\r\n\t\t\tthis._array[3]\r\n\t\t];\r\n\t}\r\n\r\n\tsetValues(x: number, y: number, z: number, w: number): this {\r\n\t\tthis._array[0] = x;\r\n\t\tthis._array[1] = y;\r\n\t\tthis._array[2] = z;\r\n\t\tthis._array[3] = w;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate _checkArray(array: WritableArrayLike<number>): void {\r\n\t\tif (array.length < 4) {\r\n\t\t\tthrow new MathError(`Array must be of length 4 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t/*setArray(array: WritableArrayLike<number>): this {\r\n\t\tthis._checkArray(array);\r\n\t\tthis._array = array;\r\n\t\treturn this;\r\n\t}*/\r\n\r\n\tstatic fromArray(array: WritableArrayLike<number>): QuaternionBase {\r\n\t\treturn new QuaternionBase(array);\r\n\t}\r\n\r\n\tstatic fromAxisAngle(axis: Vector3, angle: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setAxisAngle(axis, angle);\r\n\t}\r\n\r\n\tstatic fromVector(vector: Vector3): QuaternionBase {\r\n\t\treturn new QuaternionBase(vector.x, vector.y, vector.z, 1);\r\n\t}\r\n\t\r\n\tstatic fromEuler(yaw: number, pitch: number, roll: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setEuler(yaw, pitch, roll);\r\n\t}\r\n\r\n\tcopy(quat: Quaternion): this {\r\n\t\tconst o = this._array;\r\n\t\tconst q = quat.array;\r\n\r\n\t\to[0] = q[0];\r\n\t\to[1] = q[1];\r\n\t\to[2] = q[2];\r\n\t\to[3] = q[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new QuaternionBase(this.x, this.y, this.z, this.w) as this;\r\n\t}\r\n\r\n\tequals(quat: Quaternion): boolean {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\treturn (thisArray[0] === quatArray[0])\r\n\t\t\t&& (thisArray[1] === quatArray[1])\r\n\t\t\t&& (thisArray[2] === quatArray[2])\r\n\t\t\t&& (thisArray[3] === quatArray[3]);\r\n\t}\r\n\r\n\tgetAxis(out: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst outArray = out.array;\r\n\r\n\t\tconst den = 1 - (thisArray[3] * thisArray[3]);\r\n\r\n\t\tif (den < Number.EPSILON) {\r\n\t\t  return out.setZeros();\r\n\t\t}\r\n\t  \r\n\t\tconst scale = qSqrt(den);\r\n\t\t\r\n\t\toutArray[0] = thisArray[0] * scale;\r\n\t\toutArray[1] = thisArray[1] * scale;\r\n\t\toutArray[2] = thisArray[2] * scale;\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\tgetMatrix3(matrix: Matrix3): Matrix3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst thisLengthSquared = this.lengthSquared();\r\n\t\tconst s = 2.0 / thisLengthSquared;\r\n\r\n\t\tconst x = thisArray[0];\r\n\t\tconst y = thisArray[1];\r\n\t\tconst z = thisArray[2];\r\n\t\tconst w = thisArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n\t\treturn matrix.setValues(\r\n\t\t\t1 - (yy + zz),\txy + wz,\t\txz - wy,\r\n\t\t\txy - wz,\t\t1 - (xx + zz),\tyz + wx,\r\n\t\t\txz + wy,\t\tyz - wx,\t\t1 - (xx + yy)\r\n\t\t);\r\n\t}\r\n\r\n\tgetMatrix4(matrix: Matrix4): Matrix4 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst thisLengthSquared = this.lengthSquared();\r\n\t\tconst s = 2.0 / thisLengthSquared;\r\n\r\n\t\tconst x = thisArray[0];\r\n\t\tconst y = thisArray[1];\r\n\t\tconst z = thisArray[2];\r\n\t\tconst w = thisArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n\t\treturn matrix.setValues(\r\n\t\t\t1 - (yy + zz),\txy + wz,\t\txz - wy, \t\t0,\r\n\t\t\txy - wz,\t\t1 - (xx + zz),\tyz + wx, \t\t0,\r\n\t\t\txz + wy,\t\tyz - wx,\t\t1 - (xx + yy), \t0,\r\n\t\t\t0, \t\t\t\t0, \t\t\t\t0, \t\t\t\t1\r\n\t\t);\r\n\t}\r\n\r\n\trotate(vector: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst vectorArray = vector.array;\r\n\r\n\t\tconst vx = vectorArray[0];\r\n\t\tconst vy = vectorArray[1];\r\n\t\tconst vz = vectorArray[2];\t\t\r\n\t\t\r\n\t\tconst qx = thisArray[0];\r\n\t\tconst qy = thisArray[1];\r\n\t\tconst qz = thisArray[2];\r\n\t\tconst qw = thisArray[3];\r\n\r\n\t\tconst tx = qw * vx + -qx * 0 + -qy * vz + qz * vy;\r\n\t\tconst ty = qw * vy + -qy * 0 + -qz * vx + qx * vz;\r\n\t\tconst tz = qw * vz + -qz * 0 + -qx * vy + qy * vx;\r\n\t\tconst tw = qx * vx + qw * 0 + qy * vy + qz * vz;\r\n\r\n\t\tvectorArray[0] = tw * qz + tz * qw + tx * qy - ty * qx;\r\n\t\tvectorArray[1] = tw * qy + ty * qw + tz * qx - tx * qz;\r\n\t\tvectorArray[2] = tw * qx + tx * qw + ty * qz - tz * qy;\r\n\r\n\t\treturn vector;\r\n\t}\r\n\r\n\ttoVector(): Vector3 {\r\n\t\treturn new Vector3([\r\n\t\t\tthis.x, this.y, this.z\r\n\t\t]);\r\n\t}\r\n\t\r\n\tsetEuler(pitch: number, yaw: number, roll: number): this {\r\n\t\tconst cosYaw = Math.cos(yaw * 0.5);\r\n\t\tconst sinYaw = Math.sin(yaw * 0.5);\r\n\t\tconst cosPitch = Math.cos(pitch * 0.5);\r\n\t\tconst sinPitch = Math.sin(pitch * 0.5);\r\n\t\tconst cosRoll = Math.cos(roll * 0.5);\r\n\t\tconst sinRoll = Math.sin(roll * 0.5);\r\n\t\tconst thisArray = this.array;\r\n\r\n        thisArray[0] = sinRoll * cosPitch * cosYaw - cosRoll * sinPitch * sinYaw;\r\n        thisArray[1] = cosRoll * sinPitch * cosYaw + sinRoll * cosPitch * sinYaw;\r\n        thisArray[2] = cosRoll * cosPitch * sinYaw - sinRoll * sinPitch * cosYaw;\r\n\t\tthisArray[3] = cosRoll * cosPitch * cosYaw + sinRoll * sinPitch * sinYaw;\r\n        \r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetAxisAngle(axis: Vector3, angle: number = 0): this {\r\n\t\tconst axisLength = axis.length();\r\n\t\tif (axisLength === 0) {\r\n\t\t  return this;\r\n\t\t}\r\n\t\tconst halfSin = Math.sin(angle * 0.5) / axisLength;\r\n\t\tconst axisArray = axis.array;\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] = axisArray[0] * halfSin;\r\n\t\tthisArray[1] = axisArray[1] * halfSin;\r\n\t\tthisArray[2] = axisArray[2] * halfSin;\r\n\t\tthisArray[3] = Math.cos(angle * 0.5);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetMatrix(matrix: Matrix3): this\r\n\tsetMatrix(matrix: Matrix4): this\r\n\tsetMatrix(matrix: Matrix3 | Matrix4): this {\r\n\t\tconst matrixArray = matrix.array;\r\n\t\tlet m11 = 0, m12 = 0, m13 = 0,\r\n\t\t\tm21 = 0, m22 = 0, m23 = 0,\r\n\t\t\tm31 = 0, m32 = 0, m33 = 0;\r\n\r\n\t\tif (matrix instanceof Matrix3) {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[3], m13 = matrixArray[6],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[4], m23 = matrixArray[7],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[5], m33 = matrixArray[8];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[4], m13 = matrixArray[ 8],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[5], m23 = matrixArray[ 9],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[6], m33 = matrixArray[10];\r\n\t\t}\r\n\r\n\t\tconst trace = m11 + m22 + m33;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tif (trace > 0) {\r\n\t\t\tconst s = Math.sqrt(trace + 1) * 2;\r\n\t\t\tthisArray[3] = 0.25 * s;\r\n\t\t\tthisArray[0] = (m32 - m23) / s;\r\n\t\t\tthisArray[1] = (m13 - m31) / s;\r\n\t\t\tthisArray[2] = (m21 - m12) / s;\r\n\t\t}\r\n\t\telse if (m11 > m22 && m11 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n\t\t\tthisArray[3] = (m32 - m23) / s;\r\n\t\t\tthisArray[0] = 0.25 * s;\r\n\t\t\tthisArray[1] = (m12 + m21) / s;\r\n\t\t\tthisArray[2] = (m13 + m31) / s;\r\n\t\t}\r\n\t\telse if (m22 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n\t\t\tthisArray[3] = (m13 - m31) / s;\r\n\t\t\tthisArray[0] = (m12 + m21) / s;\r\n\t\t\tthisArray[1] = 0.25 * s;\r\n\t\t\tthisArray[2] = (m23 + m32) / s;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n\t\t\tthisArray[3] = (m21 - m12) / s;\r\n\t\t\tthisArray[0] = (m13 + m31) / s;\r\n\t\t\tthisArray[1] = (m23 + m32) / s;\r\n\t\t\tthisArray[2] = 0.25 * s;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlookAt(source: Vector3, dest: Vector3): Quaternion {\r\n\t\tconst forward = dest.clone().sub(source).normalize();\r\n\r\n\t\tconst axis = Space.forward.clone().cross(forward);\r\n\t\tconst dot = Space.forward.dot(forward);\r\n\r\n\t\treturn new Quaternion(axis.x, axis.y, axis.z, dot + 1).normalize();\r\n\t}\r\n\r\n\tstatic fromMatrix(matrix: Matrix3): QuaternionBase {\r\n\t\treturn new QuaternionBase().setMatrix(matrix);\r\n\t}\r\n\r\n\tsetVectors(from: Vector3, to: Vector3): this {\r\n\t\tconst dot = from.dot(to);\r\n\t\tconst cross = from.cross(to);\r\n\t\tconst crossArray = cross.array;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = crossArray[0];\r\n\t\tthisArray[1] = crossArray[1];\r\n\t\tthisArray[2] = crossArray[2];\r\n\r\n\t\tconst fromLength = from.length();\r\n\t\tconst toLength = from.length();\r\n\r\n\t\tthisArray[3] = Math.sqrt(fromLength * fromLength * toLength * toLength) + dot;\r\n\r\n\t\treturn this.normalize();\r\n\t}\r\n\r\n\tdot(quat: Quaternion): number {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\treturn thisArray[0] * quatArray[0] + thisArray[1] * quatArray[1] + thisArray[2] * quatArray[2] + thisArray[3] * quatArray[3];\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn thisArray[0] ** 2 + thisArray[1] ** 2 + thisArray[2] ** 2 + thisArray[3] ** 2;\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn Math.hypot(thisArray[0], thisArray[1], thisArray[2], thisArray[3]);\r\n\t}\r\n\r\n\tangleTo(rotation: Quaternion): number {\r\n\t\treturn 2 * Math.acos(Math.abs(Math.max(-1, Math.min(1, this.dot(rotation)))));\r\n\t}\r\n\r\n\trotateTowards(rotation: Quaternion): this {\r\n\t\tconst angle = this.angleTo(rotation);\r\n\r\n\t\tif (angle === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconst t = Math.min(1, angle);\r\n\t\tthis.slerp(this, rotation, t);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tinvert(): this {\r\n\t\treturn this.conjugate();\r\n\t}\r\n\t\r\n\tconjugate(): this {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] *= -1;\r\n\t\tthisArray[1] *= -1;\r\n\t\tthisArray[2] *= -1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tlet length = this.length();\r\n\r\n\t\tif (length === 0) {\r\n\t\t\tthisArray[0] = 0;\r\n\t\t\tthisArray[1] = 0;\r\n\t\t\tthisArray[2] = 0;\r\n\t\t\tthisArray[3] = 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlength = 1 / length;\r\n\t\t\tthisArray[0] *= length;\r\n\t\t\tthisArray[1] *= length;\r\n\t\t\tthisArray[2] *= length;\r\n\t\t\tthisArray[3] *= length;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tadd(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] += quatArray[0];\r\n\t\tthisArray[1] += quatArray[1];\r\n\t\tthisArray[2] += quatArray[2];\r\n\t\tthisArray[3] += quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] -= quatArray[0];\r\n\t\tthisArray[1] -= quatArray[1];\r\n\t\tthisArray[2] -= quatArray[2];\r\n\t\tthisArray[3] -= quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\tconst ax = thisArray[0], ay = thisArray[1], az = thisArray[2], aw = thisArray[3];\r\n\t\tconst bx = quatArray[0], by = quatArray[1], bz = quatArray[2], bw = quatArray[3];\r\n\r\n\t\tthisArray[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n\t\tthisArray[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n\t\tthisArray[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n\t\tthisArray[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tscale(scalar: number): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] *= scalar;\r\n\t\tthisArray[1] *= scalar;\r\n\t\tthisArray[2] *= scalar;\r\n\t\tthisArray[3] *= scalar;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number, out?: Quaternion): Quaternion {\r\n\t\tif (!(out instanceof Quaternion)) {\r\n\t\t\tout = new Quaternion();\r\n\t\t}\r\n\t\tif (t === 0) return out.copy(from);\r\n\t\tif (t === 1) return out.copy(to);\r\n\r\n\t\tconst outArray = out.array;\r\n\t\tconst fromArray = from.array;\r\n\t\tconst toArray = to.array;\r\n\r\n\t\tconst cosHalfTheta = fromArray[3] * toArray[3] + fromArray[0] * toArray[0] + fromArray[1] * toArray[1] + fromArray[2] * toArray[2];\r\n\t\t\r\n\t\tif (Math.abs(cosHalfTheta) >= 1) {\r\n\t\t\toutArray[3] = fromArray[3];\r\n\t\t\toutArray[0] = fromArray[0];\r\n\t\t\toutArray[1] = fromArray[1];\r\n\t\t\toutArray[2] = fromArray[2];\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst halfTheta = Math.acos(cosHalfTheta);\r\n\t\tconst sinHalfTheta = Math.sqrt(1 - cosHalfTheta * cosHalfTheta);\r\n\t\t\r\n\t\tif (Math.abs(sinHalfTheta - Math.trunc(sinHalfTheta)) < Number.EPSILON) {\r\n\t\t\toutArray[3] = (fromArray[3] * 0.5 + toArray[3] * 0.5);\r\n\t\t\toutArray[0] = (fromArray[0] * 0.5 + toArray[0] * 0.5);\r\n\t\t\toutArray[1] = (fromArray[1] * 0.5 + toArray[1] * 0.5);\r\n\t\t\toutArray[2] = (fromArray[2] * 0.5 + toArray[2] * 0.5);\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta;\r\n\t\tconst ratioB = Math.sin(t * halfTheta) / sinHalfTheta; \r\n\t\toutArray[3] = (fromArray[3] * ratioA + toArray[3] * ratioB);\r\n\t\toutArray[0] = (fromArray[0] * ratioA + toArray[0] * ratioB);\r\n\t\toutArray[1] = (fromArray[1] * ratioA + toArray[1] * ratioB);\r\n\t\toutArray[2] = (fromArray[2] * ratioA + toArray[2] * ratioB);\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * https://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t */\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): this {\r\n\t\treturn Quaternion.slerp(from, to, t, this) as this;\r\n\t}\r\n\r\n\tcopyIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tarray[offset    ] = thisArray[0];\r\n\t\tarray[offset + 1] = thisArray[1];\r\n\t\tarray[offset + 2] = thisArray[2];\r\n\t\tarray[offset + 3] = thisArray[3];\r\n    }\r\n    \r\n    readFromArray(array: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = array[offset    ];\r\n\t\tthisArray[1] = array[offset + 1];\r\n\t\tthisArray[2] = array[offset + 2];\r\n\t\tthisArray[3] = array[offset + 3];\r\n    }\r\n}\r\n\r\nvar Quaternion: QuaternionConstructor = QuaternionBase;\r\nconst QuaternionPool: StackPool<Quaternion> = new StackPool(QuaternionBase);\r\nconst QuaternionInjector: Injector<QuaternionConstructor> = new Injector({\r\n\tdefaultCtor: QuaternionBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: QuaternionConstructor) => {\r\n\t\t\tQuaternion = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Quaternion } from \"../quaternions/Quaternion\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"../vectors/Vector3\";\r\nimport { Vector4, Vector4Values } from \"../vectors/Vector4\";\r\nimport { Matrix3, Matrix3Values } from \"./Matrix3\";\r\n\r\nexport { Matrix4Values };\r\nexport { Matrix4 };\r\nexport { Matrix4Injector };\r\nexport { Matrix4Base };\r\n\r\ntype Matrix4Values = [\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number\r\n];\r\n\r\ninterface Matrix4Constructor {\r\n\treadonly prototype: Matrix4;\r\n\tnew(): Matrix4;\r\n\tnew(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  new(array: ArrayLike<number>): Matrix4;\r\n\r\n  fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  fromArray(array: ArrayLike<number>): Matrix4;\r\n\r\n  invert(A: Matrix4, out: Matrix4): Matrix4;\r\n  transpose(A: Matrix4, out: Matrix4): Matrix4;\r\n  add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n\r\n  identity(): Matrix4;\r\n  zeros(): Matrix4;\r\n\r\n  translation(vector: Vector3): Matrix4;\r\n  rotationX(angle: number): Matrix4;\r\n  rotationY(angle: number): Matrix4;\r\n  rotationZ(angle: number): Matrix4;\r\n  rotation(matrix: Matrix3): Matrix4;\r\n  scaling(vector: Vector3): Matrix4;\r\n  \r\n  perspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): Matrix4;\r\n  orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n  frustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n}\r\n\r\n/**\r\n * 4x4 matrix. Values are stored in column major order.\r\n */\r\ninterface Matrix4 {\r\n  readonly array: Float32Array;\r\n  getValues(): Matrix4Values\r\n  setValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this;\r\n  /*row1: Vector4Values;\r\n  row2: Vector4Values;\r\n  row3: Vector4Values;\r\n  row4: Vector4Values;\r\n  col1: Vector4Values;\r\n  col2: Vector4Values;\r\n  col3: Vector4Values;\r\n  col4: Vector4Values;*/\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m14: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m24: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  m34: number;\r\n  m41: number;\r\n  m42: number;\r\n  m43: number;\r\n  m44: number;\r\n  //setArray(array: WritableArrayLike<number>): this;\r\n  getRotation(): Quaternion;\r\n  setRotation(rotation: Quaternion): this;\r\n  setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this;\r\n  equals(mat: Matrix4): boolean;\r\n  copy(mat: Matrix4): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix4): this;\r\n  sub(mat: Matrix4): this;\r\n  mult(mat: Matrix4): this;\r\n\r\n  getMaxScaleOnAxis(): number;\r\n  solve(vecB: Vector4): Vector4Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  solve3(vecB: Vector3): Vector3Values;\r\n\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n\r\n  setTranslation(vector: Vector3): this;\r\n  translate(vector: Vector3): this;\r\n\r\n  setRotationX(angle: number): this;\r\n  rotateX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  rotateY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n  rotateZ(angle: number): this;\r\n\r\n  rotate(vector: Vector3, angle: number): this\r\n  rotation(matrix: Matrix3): this;\r\n\r\n  setScaling(vector: Vector3): this;\r\n  scale(vector: Vector3): this;\r\n\r\n  lookAt(eye: Vector3 | Vector3Values, target: Vector3, up: Vector3): this;\r\n\r\n  transformPoint(point: Vector3): Vector3;\r\n  transformDirection(direction: Vector3): Vector3;\r\n  transformNormal(normal: Vector3): Vector3;\r\n  \r\n  setFrustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n  setPerspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): this;\r\n  setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n}\r\n\r\nclass Matrix4Base implements Matrix4 {\r\n  readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  )\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[ 0], args[ 1], args[ 2], args[ 3],\r\n        args[ 4], args[ 5], args[ 6], args[ 7],\r\n        args[ 8], args[ 9], args[10], args[11],\r\n        args[12], args[13], args[14], args[15]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array(16);\r\n\t\t}\r\n  }\r\n\r\n  static fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4Base {\r\n    return new Matrix4Base(\r\n      m11, m21, m31, m41,\r\n      m12, m22, m32, m42,\r\n      m13, m23, m33, m43,\r\n      m14, m24, m34, m44\r\n    );\r\n  }\r\n\r\n  static fromArray(array: ArrayLike<number>): Matrix4Base {\r\n    if (array.length < 16) {\r\n      throw new Error(`Matrix4 needs an array of size 16 at least.`);\r\n    }\r\n    return new Matrix4Base(array);\r\n  }\r\n\r\n  getValues(): Matrix4Values {\r\n    const thisArray = this.array;\r\n\t\treturn [\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ];\r\n\t}\r\n\r\n\tsetValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 3] = m41;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 7] = m42;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n    thisArray[11] = m43;\r\n    thisArray[12] = m14;\r\n    thisArray[13] = m24;\r\n    thisArray[14] = m34;\r\n    thisArray[15] = m44;\r\n\r\n    return this;\r\n  }\r\n  \r\n  get m11(): number {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  get m12() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tset m12(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  get m13() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n\tset m13(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n  \r\n  get m14() {\r\n\t\treturn this.array[12];\r\n\t}\r\n\r\n\tset m14(val: number) {\r\n\t\tthis.array[12] = val;\r\n  }\r\n  \r\n  get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  get m22() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tset m22(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  get m23() {\r\n\t\treturn this.array[9];\r\n\t}\r\n\r\n\tset m23(val: number) {\r\n\t\tthis.array[9] = val;\r\n  }\r\n  \r\n  get m24() {\r\n\t\treturn this.array[13];\r\n\t}\r\n\r\n\tset m24(val: number) {\r\n\t\tthis.array[13] = val;\r\n  }\r\n  \r\n  get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  get m32() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tset m32(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  get m33() {\r\n\t\treturn this.array[10];\r\n\t}\r\n\r\n  set m33(val: number) {\r\n\t\tthis.array[10] = val;\r\n  }\r\n  \r\n  get m34() {\r\n\t\treturn this.array[14];\r\n\t}\r\n\r\n\tset m34(m34: number) {\r\n\t\tthis.array[14] = m34;\r\n  }\r\n  \r\n  get m41() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset m41(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  get m42() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tset m42(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  get m43() {\r\n\t\treturn this.array[11];\r\n\t}\r\n\r\n\tset m43(val: number) {\r\n\t\tthis.array[11] = val;\r\n  }\r\n  \r\n  get m44() {\r\n\t\treturn this.array[15];\r\n\t}\r\n\r\n\tset m44(m44: number) {\r\n\t\tthis.array[15] = m44;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 16) {\r\n\t\t\tthrow new MathError(`Array must be of length 16 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t// setArray(array: WritableArrayLike<number>): this {\r\n\t// \tthis._checkArray(array);\r\n\t// \tthisArray = array;\r\n\t// \treturn this;\r\n\t// }\r\n\r\n  getRotation(): Quaternion {\r\n    const thisArray = this.array;\r\n    const m11 = thisArray[0], m12 = thisArray[4], m13 = thisArray[ 8],\r\n          m21 = thisArray[1], m22 = thisArray[5], m23 = thisArray[ 9],\r\n          m31 = thisArray[2], m32 = thisArray[6], m33 = thisArray[10];\r\n    const trace = m11 + m22 + m33;\r\n    \r\n    let x = 0;\r\n    let y = 0;\r\n    let z = 0;\r\n    let w = 0;\r\n\r\n    if (trace > 0) {\r\n      const s = Math.sqrt(trace + 1) * 2;\r\n      w = 0.25 * s;\r\n      x = (m32 - m23) / s;\r\n      y = (m13 - m31) / s;\r\n      z = (m21 - m12) / s;\r\n    }\r\n    else if (m11 > m22 && m11 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n      w = (m32 - m23) / s;\r\n      x = 0.25 * s;\r\n      y = (m12 + m21) / s;\r\n      z = (m13 + m31) / s;\r\n    }\r\n    else if (m22 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n      w = (m13 - m31) / s;\r\n      x = (m12 + m21) / s;\r\n      y = 0.25 * s;\r\n      z = (m23 + m32) / s;\r\n    }\r\n    else {\r\n      const s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n      w = (m21 - m12) / s;\r\n      x = (m13 + m31) / s;\r\n      y = (m23 + m32) / s;\r\n      z = 0.25 * s;\r\n    }\r\n    \r\n    return new Quaternion(x, y, z, w);\r\n  }\r\n\r\n  setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this {\r\n    const thisArray = this.array;\r\n    const rotationArray = rotation.array;\r\n    const translationArray = translation.array;\r\n    const scalingArray = scaling.array;\r\n\r\n    const x = rotationArray[0];\r\n    const y = rotationArray[1];\r\n    const z = rotationArray[2];\r\n    const w = rotationArray[3];\r\n\r\n    const x2 = x + x;\r\n    const y2 = y + y;\r\n    const z2 = z + z;\r\n\r\n    const xx = x * x2;\r\n    const xy = x * y2;\r\n    const xz = x * z2;\r\n    const yy = y * y2;\r\n    const yz = y * z2;\r\n    const zz = z * z2;\r\n    const wx = w * x2;\r\n    const wy = w * y2;\r\n    const wz = w * z2;\r\n    const sx = scalingArray[0];\r\n    const sy = scalingArray[1];\r\n    const sz = scalingArray[2];\r\n\r\n    thisArray[0] = (1 - (yy + zz)) * sx;\r\n    thisArray[1] = (xy + wz) * sx;\r\n    thisArray[2] = (xz - wy) * sx;\r\n    thisArray[3] = 0;\r\n    thisArray[4] = (xy - wz) * sy;\r\n    thisArray[5] = (1 - (xx + zz)) * sy;\r\n    thisArray[6] = (yz + wx) * sy;\r\n    thisArray[7] = 0;\r\n    thisArray[8] = (xz + wy) * sz;\r\n    thisArray[9] = (yz - wx) * sz;\r\n    thisArray[10] = (1 - (xx + yy)) * sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = translationArray[0];\r\n    thisArray[13] = translationArray[1];\r\n    thisArray[14] = translationArray[2];\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n  \r\n  setRotation(quaternion: Quaternion): this {\r\n    const thisArray = this.array;\r\n    const quaternionArray = quaternion.array;\r\n\t\tconst quaternionLengthSquared = quaternion.lengthSquared();\r\n\t\tconst s = 2.0 / quaternionLengthSquared;\r\n\r\n\t\tconst x = quaternionArray[0];\r\n\t\tconst y = quaternionArray[1];\r\n\t\tconst z = quaternionArray[2];\r\n\t\tconst w = quaternionArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n    const m11 = 1 - (yy + zz);\r\n    const m21 = xy + wz;\r\n    const m31 = xz - wy;\r\n    const m12 = xy - wz;\r\n    const m22 = 1 - (xx + zz);\r\n    const m32 = yz + wx;\r\n    const m13 = xz + wy;\r\n    const m23 = yz - wx;\r\n    const m33 = 1 - (xx + yy);\r\n\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n  equals(mat: Matrix4): boolean {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n    return thisArray[ 0] === matArray[ 0]\r\n      && thisArray[ 1] === matArray[ 1]\r\n      && thisArray[ 2] === matArray[ 2]\r\n      && thisArray[ 3] === matArray[ 3]\r\n      && thisArray[ 4] === matArray[ 4]\r\n      && thisArray[ 5] === matArray[ 5]\r\n      && thisArray[ 6] === matArray[ 6]\r\n      && thisArray[ 7] === matArray[ 7]\r\n      && thisArray[ 8] === matArray[ 8]\r\n      && thisArray[ 9] === matArray[ 9]\r\n      && thisArray[10] === matArray[10]\r\n      && thisArray[11] === matArray[11]\r\n      && thisArray[12] === matArray[12]\r\n      && thisArray[13] === matArray[13]\r\n      && thisArray[14] === matArray[14]\r\n      && thisArray[15] === matArray[15];\r\n  }\r\n\r\n  copy(mat: Matrix4): this {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n\r\n    thisArray[ 0] = matArray[ 0];\r\n    thisArray[ 1] = matArray[ 1];\r\n    thisArray[ 2] = matArray[ 2];\r\n    thisArray[ 3] = matArray[ 3];\r\n    thisArray[ 4] = matArray[ 4];\r\n    thisArray[ 5] = matArray[ 5];\r\n    thisArray[ 6] = matArray[ 6];\r\n    thisArray[ 7] = matArray[ 7];\r\n    thisArray[ 8] = matArray[ 8];\r\n    thisArray[ 9] = matArray[ 9];\r\n    thisArray[10] = matArray[10];\r\n    thisArray[11] = matArray[11];\r\n    thisArray[12] = matArray[12];\r\n    thisArray[13] = matArray[13];\r\n    thisArray[14] = matArray[14];\r\n    thisArray[15] = matArray[15];\r\n\r\n    return this;\r\n  }\r\n\r\n  clone(): this {\r\n    const thisArray = this.array;\r\n    return new Matrix4Base(\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ) as this;\r\n  }\r\n\r\n  static identity(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      1, 0, 0, 0,\r\n      0, 1, 0, 0,\r\n      0, 0, 1, 0,\r\n      0, 0, 0, 1\r\n    );\r\n  }\r\n\r\n  setIdentity(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  static zeros(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0\r\n    );\r\n  }\r\n\r\n  setZeros(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 0;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 0;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 0;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  det(): number {\r\n    const thisArray = this.array;\r\n    const det2_01_01 = thisArray[0] * thisArray[5] - thisArray[1] * thisArray[4];\r\n    const det2_01_02 = thisArray[0] * thisArray[6] - thisArray[2] * thisArray[4];\r\n    const det2_01_03 = thisArray[0] * thisArray[7] - thisArray[3] * thisArray[4];\r\n    const det2_01_12 = thisArray[1] * thisArray[6] - thisArray[2] * thisArray[5];\r\n    const det2_01_13 = thisArray[1] * thisArray[7] - thisArray[3] * thisArray[5];\r\n    const det2_01_23 = thisArray[2] * thisArray[7] - thisArray[3] * thisArray[6];\r\n    const det3_201_012 = thisArray[8] * det2_01_12 - thisArray[ 9] * det2_01_02 + thisArray[10] * det2_01_01;\r\n    const det3_201_013 = thisArray[8] * det2_01_13 - thisArray[ 9] * det2_01_03 + thisArray[11] * det2_01_01;\r\n    const det3_201_023 = thisArray[8] * det2_01_23 - thisArray[10] * det2_01_03 + thisArray[11] * det2_01_02;\r\n    const det3_201_123 = thisArray[9] * det2_01_23 - thisArray[10] * det2_01_13 + thisArray[11] * det2_01_12;\r\n\r\n    return -det3_201_123 * thisArray[12] + det3_201_023 * thisArray[13]\r\n      - det3_201_013 * thisArray[14] + det3_201_012 * thisArray[15];\r\n  }\r\n\r\n  trace(): number {\r\n    const thisArray = this.array;\r\n    return thisArray[0] + thisArray[5] + thisArray[10] + thisArray[15];\r\n  }\r\n\r\n  static negate(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = -a[ 0];\r\n    o[ 1] = -a[ 1];\r\n    o[ 2] = -a[ 2];\r\n    o[ 3] = -a[ 3];\r\n    o[ 4] = -a[ 4];\r\n    o[ 5] = -a[ 5];\r\n    o[ 6] = -a[ 6];\r\n    o[ 7] = -a[ 7];\r\n    o[ 8] = -a[ 8];\r\n    o[ 9] = -a[ 9];\r\n    o[10] = -a[10];\r\n    o[11] = -a[11];\r\n    o[12] = -a[12];\r\n    o[13] = -a[13];\r\n    o[14] = -a[14];\r\n    o[15] = -a[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  negate(): this {\r\n    return Matrix4Base.negate(this, this) as this;\r\n  }\r\n\r\n  static transpose(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    o[ 0] = a11;\r\n    o[ 1] = a12;\r\n    o[ 2] = a13;\r\n    o[ 3] = a14;\r\n    o[ 4] = a21;\r\n    o[ 5] = a22;\r\n    o[ 6] = a23;\r\n    o[ 7] = a24;\r\n    o[ 8] = a31;\r\n    o[ 9] = a32;\r\n    o[10] = a33;\r\n    o[11] = a34;\r\n    o[12] = a41;\r\n    o[13] = a42;\r\n    o[14] = a43;\r\n    o[15] = a44;\r\n    \r\n    return out;\r\n  }\r\n\r\n  transpose(): this {\r\n    return Matrix4Base.transpose(this, this) as this;\r\n  }\r\n\r\n  static invert(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const o00 = a[ 0];\r\n    const o01 = a[ 1];\r\n    const o02 = a[ 2];\r\n    const o03 = a[ 3];\r\n    const o10 = a[ 4];\r\n    const o11 = a[ 5];\r\n    const o12 = a[ 6];\r\n    const o13 = a[ 7];\r\n    const o20 = a[ 8];\r\n    const o21 = a[ 9];\r\n    const o22 = a[10];\r\n    const o23 = a[11];\r\n    const o30 = a[12];\r\n    const o31 = a[13];\r\n    const o32 = a[14];\r\n    const o33 = a[15];\r\n\r\n    const t00 = o00 * o11 - o01 * o10;\r\n    const t01 = o00 * o12 - o02 * o10;\r\n    const t02 = o00 * o13 - o03 * o10;\r\n    const t03 = o01 * o12 - o02 * o11;\r\n    const t04 = o01 * o13 - o03 * o11;\r\n    const t05 = o02 * o13 - o03 * o12;\r\n    const t06 = o20 * o31 - o21 * o30;\r\n    const t07 = o20 * o32 - o22 * o30;\r\n    const t08 = o20 * o33 - o23 * o30;\r\n    const t09 = o21 * o32 - o22 * o31;\r\n    const t10 = o21 * o33 - o23 * o31;\r\n    const t11 = o22 * o33 - o23 * o32;\r\n\r\n    const d = (t00 * t11 - t01 * t10 + t02 * t09 + t03 * t08 - t04 * t07 + t05 * t06);\r\n    \r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    const invDet = 1 / d;\r\n\r\n    o[ 0] = (o11 * t11 - o12 * t10 + o13 * t09) * invDet;\r\n    o[ 1] = (-o01 * t11 + o02 * t10 - o03 * t09) * invDet;\r\n    o[ 2] = (o31 * t05 - o32 * t04 + o33 * t03) * invDet;\r\n    o[ 3] = (-o21 * t05 + o22 * t04 - o23 * t03) * invDet;\r\n    o[ 4] = (-o10 * t11 + o12 * t08 - o13 * t07) * invDet;\r\n    o[ 5] = (o00 * t11 - o02 * t08 + o03 * t07) * invDet;\r\n    o[ 6] = (-o30 * t05 + o32 * t02 - o33 * t01) * invDet;\r\n    o[ 7] = (o20 * t05 - o22 * t02 + o23 * t01) * invDet;\r\n    o[ 8] = (o10 * t10 - o11 * t08 + o13 * t06) * invDet;\r\n    o[ 9] = (-o00 * t10 + o01 * t08 - o03 * t06) * invDet;\r\n    o[10] = (o30 * t04 - o31 * t02 + o33 * t00) * invDet;\r\n    o[11] = (-o20 * t04 + o21 * t02 - o23 * t00) * invDet;\r\n    o[12] = (-o10 * t09 + o11 * t07 - o12 * t06) * invDet;\r\n    o[13] = (o00 * t09 - o01 * t07 + o02 * t06) * invDet;\r\n    o[14] = (-o30 * t03 + o31 * t01 - o32 * t00) * invDet;\r\n    o[15] = (o20 * t03 - o21 * t01 + o22 * t00) * invDet;\r\n\r\n    return out;\r\n  }\r\n\r\n  invert(): this {\r\n    return Matrix4Base.invert(this, this) as this;\r\n  }\r\n\r\n  static add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] + b[ 0];\r\n    o[ 1] = a[ 1] + b[ 1];\r\n    o[ 2] = a[ 2] + b[ 2];\r\n    o[ 3] = a[ 3] + b[ 3];\r\n    o[ 4] = a[ 4] + b[ 4];\r\n    o[ 5] = a[ 5] + b[ 5];\r\n    o[ 6] = a[ 6] + b[ 6];\r\n    o[ 7] = a[ 7] + b[ 7];\r\n    o[ 8] = a[ 8] + b[ 8];\r\n    o[ 9] = a[ 9] + b[ 9];\r\n    o[10] = a[10] + b[10];\r\n    o[11] = a[11] + b[11];\r\n    o[12] = a[12] + b[12];\r\n    o[13] = a[13] + b[13];\r\n    o[14] = a[14] + b[14];\r\n    o[15] = a[15] + b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  add(matrix: Matrix4): this {\r\n    return Matrix4Base.add(this, matrix, this) as this;\r\n  }\r\n\r\n  static sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] - b[ 0];\r\n    o[ 1] = a[ 1] - b[ 1];\r\n    o[ 2] = a[ 2] - b[ 2];\r\n    o[ 3] = a[ 3] - b[ 3];\r\n    o[ 4] = a[ 4] - b[ 4];\r\n    o[ 5] = a[ 5] - b[ 5];\r\n    o[ 6] = a[ 6] - b[ 6];\r\n    o[ 7] = a[ 7] - b[ 7];\r\n    o[ 8] = a[ 8] - b[ 8];\r\n    o[ 9] = a[ 9] - b[ 9];\r\n    o[10] = a[10] - b[10];\r\n    o[11] = a[11] - b[11];\r\n    o[12] = a[12] - b[12];\r\n    o[13] = a[13] - b[13];\r\n    o[14] = a[14] - b[14];\r\n    o[15] = a[15] - b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  sub(matrix: Matrix4): this {\r\n    return Matrix4Base.sub(this, matrix, this) as this;\r\n  }\r\n\r\n  static mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    const b11 = b[ 0];\r\n    const b21 = b[ 1];\r\n    const b31 = b[ 2];\r\n    const b41 = b[ 3];\r\n    const b12 = b[ 4];\r\n    const b22 = b[ 5];\r\n    const b32 = b[ 6];\r\n    const b42 = b[ 7];\r\n    const b13 = b[ 8];\r\n    const b23 = b[ 9];\r\n    const b33 = b[10];\r\n    const b43 = b[11];\r\n    const b14 = b[12];\r\n    const b24 = b[13];\r\n    const b34 = b[14];\r\n    const b44 = b[15];\r\n\r\n    o[ 0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n    o[ 1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n    o[ 2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n    o[ 3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n    o[ 4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n    o[ 5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n    o[ 6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n    o[ 7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n    o[ 8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n    o[ 9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n    o[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n    o[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n    o[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n    o[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n    o[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n    o[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n    return out;\r\n  }\r\n\r\n  mult(matrix: Matrix4): this {\r\n    return Matrix4Base.mult(this, matrix, this) as this;\r\n  }\r\n\r\n\tgetMaxScaleOnAxis(): number {\r\n    const thisArray = this.array;\r\n    const scaleXSq = thisArray[ 0] * thisArray[ 0] + thisArray[ 1] * thisArray[ 1] + thisArray[ 2] * thisArray[ 2];\r\n    const scaleYSq = thisArray[ 4] * thisArray[ 4] + thisArray[ 5] * thisArray[ 5] + thisArray[ 6] * thisArray[ 6];\r\n    const scaleZSq = thisArray[ 8] * thisArray[ 8] + thisArray[ 9] * thisArray[ 9] + thisArray[10] * thisArray[10];\r\n\r\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\r\n  }\r\n\r\n  writeIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n    const thisArray = this.array;\r\n\t\tarray[offset     ] = thisArray[ 0];\r\n\t\tarray[offset +  1] = thisArray[ 1];\r\n    array[offset +  2] = thisArray[ 2];\r\n    array[offset +  3] = thisArray[ 3];\r\n\t\tarray[offset +  4] = thisArray[ 4];\r\n    array[offset +  5] = thisArray[ 5];\r\n    array[offset +  6] = thisArray[ 6];\r\n\t\tarray[offset +  7] = thisArray[ 7];\r\n    array[offset +  8] = thisArray[ 8];\r\n    array[offset +  9] = thisArray[ 9];\r\n\t\tarray[offset + 10] = thisArray[10];\r\n    array[offset + 11] = thisArray[11];\r\n    array[offset + 12] = thisArray[12];\r\n\t\tarray[offset + 13] = thisArray[13];\r\n    array[offset + 14] = thisArray[14];\r\n    array[offset + 15] = thisArray[15];\r\n  }\r\n    \r\n  readFromArray(array: ArrayLike<number>, offset: number = 0): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = array[offset     ];\r\n    thisArray[ 1] = array[offset +  1];\r\n    thisArray[ 2] = array[offset +  2];\r\n    thisArray[ 3] = array[offset +  3];\r\n    thisArray[ 4] = array[offset +  4];\r\n    thisArray[ 5] = array[offset +  5];\r\n    thisArray[ 6] = array[offset +  6];\r\n    thisArray[ 7] = array[offset +  7];\r\n    thisArray[ 8] = array[offset +  8];\r\n    thisArray[ 9] = array[offset +  9];\r\n    thisArray[10] = array[offset + 10];\r\n    thisArray[11] = array[offset + 11];\r\n    thisArray[12] = array[offset + 12];\r\n    thisArray[13] = array[offset + 13];\r\n    thisArray[14] = array[offset + 14];\r\n    thisArray[15] = array[offset + 15];\r\n\r\n    return this;\r\n  }\r\n\r\n  solve(vecB: Vector4): Vector4Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a14 = a[ 3];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a24 = a[ 7];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const a34 = a[11];\r\n    const a41 = a[12];\r\n    const a42 = a[13];\r\n    const a43 = a[14];\r\n    const a44 = a[15];\r\n    const b00 = a11 * a22 - a12 * a21;\r\n    const b01 = a11 * a23 - a13 * a21;\r\n    const b02 = a11 * a24 - a14 * a21;\r\n    const b03 = a12 * a23 - a13 * a22;\r\n    const b04 = a12 * a24 - a14 * a22;\r\n    const b05 = a13 * a24 - a14 * a23;\r\n    const b06 = a31 * a42 - a32 * a41;\r\n    const b07 = a31 * a43 - a33 * a41;\r\n    const b08 = a31 * a44 - a34 * a41;\r\n    const b09 = a32 * a43 - a33 * a42;\r\n    const b10 = a32 * a44 - a34 * a42;\r\n    const b11 = a33 * a44 - a34 * a43;\r\n\r\n    const bX = vecB.x;\r\n    const bY = vecB.y;\r\n    const bZ = vecB.z;\r\n    const bW = vecB.w;\r\n\r\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (det != 0) {\r\n      det = 1 / det;\r\n    }\r\n\r\n    const x = det *\r\n      ((a22 * b11 - a23 * b10 + a24 * b09) * bX -\r\n      (a21 * b11 - a23 * b08 + a24 * b07) * bY +\r\n      (a21 * b10 - a22 * b08 + a24 * b06) * bZ -\r\n      (a21 * b09 - a22 * b07 + a23 * b06) * bW)\r\n    const y = det *\r\n      -((a12 * b11 - a13 * b10 + a14 * b09) * bX -\r\n      (a11 * b11 - a13 * b08 + a14 * b07) * bY +\r\n      (a11 * b10 - a12 * b08 + a14 * b06) * bZ -\r\n      (a11 * b09 - a12 * b07 + a13 * b06) * bW)\r\n    const z = det *\r\n      ((a42 * b05 - a43 * b04 + a44 * b03) * bX -\r\n      (a41 * b05 - a43 * b02 + a44 * b01) * bY +\r\n      (a41 * b04 - a42 * b02 + a44 * b00) * bZ -\r\n      (a41 * b03 - a42 * b01 + a43 * b00) * bW)\r\n    const w = det *\r\n      -((a32 * b05 - a33 * b04 + a34 * b03) * bX -\r\n      (a31 * b05 - a33 * b02 + a34 * b01) * bY +\r\n      (a31 * b04 - a32 * b02 + a34 * b00) * bZ -\r\n      (a31 * b03 - a32 * b01 + a33 * b00) * bW);\r\n    \r\n    return [\r\n      x, y, z, w\r\n    ];\r\n  }\r\n\r\n  solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[4];\r\n    const a22 = a[5];\r\n    const bx = vecB.x - a[8];\r\n    const by = vecB.y - a[9];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by);\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n\r\n  solve3(vecB: Vector3): Vector3Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const bx = vecB.x - a[12];\r\n    const by = vecB.y - a[13];\r\n    const bz = vecB.z - a[14];\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n\r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n\r\n    return [\r\n      x, y, z\r\n    ];\r\n  }\r\n\r\n  static translation(vector: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setTranslation(vector);\r\n  }\r\n\r\n  setTranslation(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n\r\n    const x = vecArray[0];\r\n    const y = vecArray[1];\r\n    const z = vecArray[2];\r\n\r\n    /*thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;*/\r\n    thisArray[12] = x;\r\n    thisArray[13] = y;\r\n    thisArray[14] = z;\r\n    //thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  translate(vector: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vectorArray = vector.array;\r\n\r\n    const tx = vectorArray[0];\r\n    const ty = vectorArray[1];\r\n    const tz = vectorArray[2];\r\n    const tw = 1;\r\n\r\n    const t1 = thisArray[0] * tx + thisArray[4] * ty + thisArray[ 8] * tz + thisArray[12] * tw;\r\n    const t2 = thisArray[1] * tx + thisArray[5] * ty + thisArray[ 9] * tz + thisArray[13] * tw;\r\n    const t3 = thisArray[2] * tx + thisArray[6] * ty + thisArray[10] * tz + thisArray[14] * tw;\r\n    const t4 = thisArray[3] * tx + thisArray[7] * ty + thisArray[11] * tz + thisArray[15] * tw;\r\n\r\n    thisArray[12] = t1;\r\n    thisArray[13] = t2;\r\n    thisArray[14] = t3;\r\n    thisArray[15] = t4;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationX(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationX(angle);\r\n  }\r\n\r\n  setRotationX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = sinAngle;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = -sinAngle;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  rotateX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[4] *  cosAngle + thisArray[ 8] * sinAngle;\r\n    const t2 = thisArray[5] *  cosAngle + thisArray[ 9] * sinAngle;\r\n    const t3 = thisArray[6] *  cosAngle + thisArray[10] * sinAngle;\r\n    const t4 = thisArray[7] *  cosAngle + thisArray[11] * sinAngle;\r\n    const t5 = thisArray[4] * -sinAngle + thisArray[ 8] * cosAngle;\r\n    const t6 = thisArray[5] * -sinAngle + thisArray[ 9] * cosAngle;\r\n    const t7 = thisArray[6] * -sinAngle + thisArray[10] * cosAngle;\r\n    const t8 = thisArray[7] * -sinAngle + thisArray[11] * cosAngle;\r\n\r\n    thisArray[ 4] = t1;\r\n    thisArray[ 5] = t2;\r\n    thisArray[ 6] = t3;\r\n    thisArray[ 7] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationY(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationY(angle);\r\n  }\r\n\r\n  setRotationY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = -sinAngle;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = sinAngle;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  rotateY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[ 0] * cosAngle + thisArray[ 8] * -sinAngle;\r\n    const t2 = thisArray[ 1] * cosAngle + thisArray[ 9] * -sinAngle;\r\n    const t3 = thisArray[ 2] * cosAngle + thisArray[10] * -sinAngle;\r\n    const t4 = thisArray[ 3] * cosAngle + thisArray[11] * -sinAngle;\r\n    const t5 = thisArray[ 0] * sinAngle + thisArray[ 8] *  cosAngle;\r\n    const t6 = thisArray[ 1] * sinAngle + thisArray[ 9] *  cosAngle;\r\n    const t7 = thisArray[ 2] * sinAngle + thisArray[10] *  cosAngle;\r\n    const t8 = thisArray[ 3] * sinAngle + thisArray[11] *  cosAngle;\r\n\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationZ(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationZ(angle);\r\n  }\r\n\r\n  setRotationZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngles = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = sinAngles;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = -sinAngles;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  rotateZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[0] *  cosAngle + thisArray[4] * sinAngle;\r\n    const t2 = thisArray[1] *  cosAngle + thisArray[5] * sinAngle;\r\n    const t3 = thisArray[2] *  cosAngle + thisArray[6] * sinAngle;\r\n    const t4 = thisArray[3] *  cosAngle + thisArray[7] * sinAngle;\r\n    const t5 = thisArray[0] * -sinAngle + thisArray[4] * cosAngle;\r\n    const t6 = thisArray[1] * -sinAngle + thisArray[5] * cosAngle;\r\n    const t7 = thisArray[2] * -sinAngle + thisArray[6] * cosAngle;\r\n    const t8 = thisArray[3] * -sinAngle + thisArray[7] * cosAngle;\r\n    \r\n    thisArray[0] = t1;\r\n    thisArray[1] = t2;\r\n    thisArray[2] = t3;\r\n    thisArray[3] = t4;\r\n    thisArray[4] = t5;\r\n    thisArray[5] = t6;\r\n    thisArray[6] = t7;\r\n    thisArray[7] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotation(matrix: Matrix3): Matrix4Base {\r\n    return new Matrix4Base().rotation(matrix);\r\n  }\r\n\r\n  rotation(matrix: Matrix3): this {\r\n    const thisArray = this.array;\r\n    const matArray = matrix.array;\r\n\r\n    thisArray[ 0] = matArray[0];\r\n    thisArray[ 1] = matArray[1];\r\n    thisArray[ 2] = matArray[2];\r\n    thisArray[ 4] = matArray[3];\r\n    thisArray[ 5] = matArray[4];\r\n    thisArray[ 6] = matArray[5];\r\n    thisArray[ 8] = matArray[6];\r\n    thisArray[ 9] = matArray[7];\r\n    thisArray[10] = matArray[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  rotate(axis: Vector3, angle: number): this {\r\n    const thisArray = this.array;\r\n    const axisArray = axis.array;\r\n    const axisLength = axis.length();\r\n    const x = axisArray[0] / axisLength;\r\n    const y = axisArray[1] / axisLength;\r\n    const z = axisArray[2] / axisLength;\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n    const C = 1.0 - c;\r\n    const m11 = x * x * C + c;\r\n    const m12 = x * y * C - z * s;\r\n    const m13 = x * z * C + y * s;\r\n    const m21 = y * x * C + z * s;\r\n    const m22 = y * y * C + c;\r\n    const m23 = y * z * C - x * s;\r\n    const m31 = z * x * C - y * s;\r\n    const m32 = z * y * C + x * s;\r\n    const m33 = z * z * C + c;\r\n    const t1  = thisArray[0] * m11 + thisArray[4] * m21 + thisArray[8] * m31;\r\n    const t2  = thisArray[1] * m11 + thisArray[5] * m21 + thisArray[9] * m31;\r\n    const t3  = thisArray[2] * m11 + thisArray[6] * m21 + thisArray[10] * m31;\r\n    const t4  = thisArray[3] * m11 + thisArray[7] * m21 + thisArray[11] * m31;\r\n    const t5  = thisArray[0] * m12 + thisArray[4] * m22 + thisArray[8] * m32;\r\n    const t6  = thisArray[1] * m12 + thisArray[5] * m22 + thisArray[9] * m32;\r\n    const t7  = thisArray[2] * m12 + thisArray[6] * m22 + thisArray[10] * m32;\r\n    const t8  = thisArray[3] * m12 + thisArray[7] * m22 + thisArray[11] * m32;\r\n    const t9  = thisArray[0] * m13 + thisArray[4] * m23 + thisArray[8] * m33;\r\n    const t10 = thisArray[1] * m13 + thisArray[5] * m23 + thisArray[9] * m33;\r\n    const t11 = thisArray[2] * m13 + thisArray[6] * m23 + thisArray[10] * m33;\r\n    const t12 = thisArray[3] * m13 + thisArray[7] * m23 + thisArray[11] * m33;\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 4] = t5;\r\n    thisArray[ 5] = t6;\r\n    thisArray[ 6] = t7;\r\n    thisArray[ 7] = t8;\r\n    thisArray[ 8] = t9;\r\n    thisArray[ 9] = t10;\r\n    thisArray[10] = t11;\r\n    thisArray[11] = t12;\r\n\r\n    return this;\r\n  }\r\n\r\n  static scaling(vec: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setScaling(vec);\r\n  }\r\n\r\n  setScaling(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] = sx;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = sy;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  scale(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] *= sx;\r\n    thisArray[ 1] *= sx;\r\n    thisArray[ 2] *= sx;\r\n    thisArray[ 3] *= sx;\r\n    thisArray[ 4] *= sy;\r\n    thisArray[ 5] *= sy;\r\n    thisArray[ 6] *= sy;\r\n    thisArray[ 7] *= sy;\r\n    thisArray[ 8] *= sz;\r\n    thisArray[ 9] *= sz;\r\n    thisArray[10] *= sz;\r\n    thisArray[11] *= sz;\r\n    thisArray[12] *= sw;\r\n    thisArray[13] *= sw;\r\n    thisArray[14] *= sw;\r\n    thisArray[15] *= sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4): Matrix4 {\r\n    const eyeArray = eye.array;\r\n    const upArray = up.array;\r\n    const targetArray = target.array;\r\n    const outArray = out.array;\r\n    const e0 = eyeArray[0];\r\n    const e1 = eyeArray[1];\r\n    const e2 = eyeArray[2];\r\n    const u0 = upArray[0];\r\n    const u1 = upArray[1];\r\n    const u2 = upArray[2];\r\n    const t0 = targetArray[0];\r\n    const t1 = targetArray[1];\r\n    const t2 = targetArray[2];\r\n    let x0, x1, x2, y0, y1, y2, z0, z1, z2, length;\r\n\r\n    z0 = e0 - t0;\r\n    z1 = e1 - t1;\r\n    z2 = e2 - t2;\r\n    length = Math.hypot(z0, z1, z2);\r\n    if (length > 0) {\r\n      length = 1 / Math.hypot(z0, z1, z2);\r\n      z0 *= length;\r\n      z1 *= length;\r\n      z2 *= length;\r\n    }\r\n  \r\n    x0 = u1 * z2 - u2 * z1;\r\n    x1 = u2 * z0 - u0 * z2;\r\n    x2 = u0 * z1 - u1 * z0;\r\n    length = Math.hypot(x0, x1, x2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      x0 *= length;\r\n      x1 *= length;\r\n      x2 *= length;\r\n    }\r\n\r\n    y0 = z1 * x2 - z2 * x1;\r\n    y1 = z2 * x0 - z0 * x2;\r\n    y2 = z0 * x1 - z1 * x0;\r\n    length = Math.hypot(y0, y1, y2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      y0 *= length;\r\n      y1 *= length;\r\n      y2 *= length;\r\n    }\r\n  \r\n    outArray[ 0] = x0;\r\n    outArray[ 1] = x1;\r\n    outArray[ 2] = x2;\r\n    outArray[ 3] = 0;\r\n    outArray[ 4] = y0;\r\n    outArray[ 5] = y1;\r\n    outArray[ 6] = y2;\r\n    outArray[ 7] = 0;\r\n    outArray[ 8] = z0;\r\n    outArray[ 9] = z1;\r\n    outArray[10] = z2;\r\n    outArray[11] = 0;\r\n    outArray[12] = e0;\r\n    outArray[13] = e1;\r\n    outArray[14] = e2;\r\n    outArray[15] = 1;\r\n  \r\n    return out;\r\n  }\r\n\r\n  lookAt(eye: Vector3, target: Vector3, up: Vector3): this {\r\n    return Matrix4Base.lookAt(eye, target, up, this) as this;\r\n  }\r\n\r\n  transformPoint(point: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const pointArray = point.array;\r\n\r\n    const x = pointArray[0];\r\n    const y = pointArray[1];\r\n    const z = pointArray[2];\r\n\r\n    const d = x * thisArray[3] + y * thisArray[7] + z * thisArray[11] + thisArray[15];\r\n\r\n    point.setValues(\r\n      (x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8] + thisArray[12]) / d,\r\n      (x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9] + thisArray[13]) / d,\r\n      (x * thisArray[2] + y * thisArray[6] + z * thisArray[10] + thisArray[14]) / d\r\n    );\r\n\r\n    return point;\r\n  }\r\n\r\n  transformDirection(direction: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const directionArray = direction.array;\r\n\r\n    const x = directionArray[0];\r\n    const y = directionArray[1];\r\n    const z = directionArray[2];\r\n\r\n    direction.setValues(\r\n      x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8],\r\n      x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9],\r\n      x * thisArray[2] + y * thisArray[6] + z * thisArray[10]\r\n    );\r\n\r\n    return direction;\r\n  }\r\n\r\n  transformNormal(normal: Vector3): Vector3 {\r\n    const normalArray = normal.array;\r\n\r\n    const thisInvArray = this.invert().array;\r\n\r\n    const x = normalArray[0];\r\n    const y = normalArray[1];\r\n    const z = normalArray[2];\r\n\r\n    normal.setValues(\r\n      x * thisInvArray[0] + y * thisInvArray[4] + z * thisInvArray[ 8],\r\n      x * thisInvArray[1] + y * thisInvArray[5] + z * thisInvArray[ 9],\r\n      x * thisInvArray[2] + y * thisInvArray[6] + z * thisInvArray[10]\r\n    );\r\n\r\n    this.invert();\r\n\r\n    return normal;\r\n  }\r\n\r\n  static perspective(fov: number, aspect: number, zNear: number, zFar: number): Matrix4Base {\r\n    return new Matrix4Base().setPerspective(fov, aspect, zNear, zFar);\r\n  }\r\n\r\n  setPerspective(fov: number, aspect: number, zNear: number, zFar: number): this {\r\n    const thisArray = this.array;\r\n    const width = Math.tan(Math.PI * 0.5 - 0.5 * fov);\r\n    const height = width / aspect;\r\n    const rangeInv = 1 / (zNear - zFar);\r\n\r\n    thisArray[ 0] = height;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = width;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = (zNear + zFar) * rangeInv;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = (2 * zNear * zFar) * rangeInv;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setOrthographic(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 2 / (right - left);\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 2 / (top - bottom);\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 2 / (near - far);\r\n    thisArray[11] = 0;\r\n    thisArray[12] = (right + left) / (left - right);\r\n    thisArray[13] = (top + bottom) / (bottom - top);\r\n    thisArray[14] = (far + near) / (near - far);\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static frustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setFrustrum(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  setFrustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    const invWidth = 1 / (right - left);\r\n    const invHeight = 1 / (top - bottom);\r\n    const invDepth = 1 / (near - far);\r\n\r\n    thisArray[ 0] = near * 2 * invWidth;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = near * 2 * invHeight;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = (right + left) * invWidth;\r\n    thisArray [9] = (top + bottom) * invHeight;\r\n    thisArray[10] = (far + near) * invDepth;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = far * near * 2 * invDepth;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n}\r\n\r\nvar Matrix4: Matrix4Constructor = Matrix4Base;\r\n\r\nconst Matrix4Injector: Injector<Matrix4Constructor> = new Injector({\r\n\tdefaultCtor: Matrix4Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix4Constructor) => {\r\n\t\t\tMatrix4 = ctor;\r\n\t\t}\r\n});","import { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Matrix4 } from \"../../algebra/matrices/Matrix4\";\r\nimport { Vector3, Vector3Constructor } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport { Vector3Pool };\r\n\r\nclass Vector3PoolBase extends StackPool<Vector3> implements StackPool<Vector3> {\r\n    private _buffer: Float32Array;\r\n    private _bufferViews: Array<WritableArrayLike<number>>;\r\n    private _extensions: Array<WritableArrayLike<number>>;\r\n\r\n    constructor(ctor: Vector3Constructor, options?: any) {\r\n        super(ctor, options);\r\n        this._buffer = new Float32Array(0);\r\n        this._bufferViews = Array(options?.size || 0).fill(0).map(() => {\r\n            return this._buffer.subarray();\r\n        });\r\n        this._extensions = [];\r\n    }\r\n}\r\n\r\nconst Vector3Pool: StackPool<Vector3> = new Vector3PoolBase(Vector3);","export { UUID };\r\nexport { Identifiable };\r\nexport { UUIDGeneratorBase };\r\nexport { UUIDGenerator };\r\n\r\ntype UUID = string;\r\n\r\ninterface Identifiable {\r\n    readonly uuid: UUID;\r\n}\r\n\r\ninterface UUIDGenerator {\r\n    newUUID(): UUID;\r\n}\r\n\r\nclass UUIDGeneratorBase {\r\n\r\n    private _count: number;\r\n\r\n    constructor() {\r\n        this._count = 0\r\n    }\r\n\r\n    newUUID(): UUID {\r\n        return (++this._count).toString(16);\r\n    }\r\n}\r\n\r\nconst UUIDGenerator: UUIDGenerator = new UUIDGeneratorBase();","import { EulerAngles } from \"../../libs/maths/algebra/angles/EulerAngles\";\r\nimport { Matrix3 } from \"../../libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Quaternion, QuaternionPool } from \"../../libs/maths/algebra/quaternions/Quaternion\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../libs/maths/extensions/pools/Vector3Pools\";\r\nimport { UUID, UUIDGenerator } from \"../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Object3D } from \"../rendering/scenes/objects/Object3D\";\r\n\r\nexport { Transform };\r\nexport { TransformBase };\r\n\r\ninterface TransformConstructor {\r\n    readonly prototype: Transform;\r\n    new(): Transform;\r\n    new(owner: Object3D): Transform;\r\n}\r\n\r\nconst tempMatrix = new Matrix4();\r\n\r\ninterface Transform {\r\n    hasChanged: boolean;\r\n\r\n    readonly localArray: Float32Array;\r\n    readonly array: Float32Array;\r\n    readonly uuid: UUID;\r\n    readonly owner: Object3D | null;\r\n\r\n    localMatrix: Matrix4;\r\n    matrix: Matrix4;\r\n\r\n    getMatrix(matrix: Matrix4): Matrix4;\r\n    setMatrix(matrix: Matrix4): this;\r\n    getLocalMatrix(matrix: Matrix4): Matrix4;\r\n    setLocalMatrix(matrix: Matrix4): this;\r\n\r\n    getRight(vector: Vector3): Vector3;\r\n    getLeft(vector: Vector3): Vector3;\r\n    getUp(vector: Vector3): Vector3;\r\n    getDown(vector: Vector3): Vector3;\r\n    getForward(vector: Vector3): Vector3;\r\n    getBackward(vector: Vector3): Vector3;\r\n\r\n    getTranslation(vector: Vector3): Vector3;\r\n    setTranslation(vector: Vector3): this;\r\n    translate(vector: Vector3): this;\r\n\r\n    getRotation(rotation: Quaternion): Quaternion;\r\n    setRotation(rotation: Quaternion): this;\r\n    rotate(rotation: Quaternion): this;\r\n\r\n    getScaling(scaling: Vector3): Vector3;\r\n    setScaling(scaling: Vector3): this;\r\n    scale(scaling: Vector3): this;\r\n    \r\n    lookAt(target: Vector3, up?: Vector3): this;\r\n}\r\n\r\nclass TransformBase implements Transform {\r\n    readonly localArray: Float32Array;\r\n    readonly array: Float32Array;\r\n    readonly uuid: UUID;\r\n    readonly owner: Object3D | null;\r\n\r\n    readonly matrix: Matrix4;\r\n    readonly localMatrix: Matrix4;;\r\n\r\n    hasChanged: boolean;\r\n    readonly isStatic: boolean;\r\n\r\n    constructor(owner?: Object3D, isStatic?: boolean) {\r\n        this.uuid = UUIDGenerator.newUUID();\r\n        this.owner = owner || null;\r\n\r\n        this.isStatic = isStatic ?? false;\r\n        \r\n        this.array = new Float32Array(16);\r\n        this.localArray = new Float32Array(16);\r\n\r\n        this.matrix = new Matrix4(this.array).setIdentity();\r\n        this.localMatrix = new Matrix4(this.localArray).setIdentity();\r\n\r\n        this.hasChanged = false;\r\n    }\r\n\r\n    getMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisArray[ 0];\r\n        matrixArray[ 1] = thisArray[ 1];\r\n        matrixArray[ 2] = thisArray[ 2];\r\n        matrixArray[ 3] = thisArray[ 3];\r\n        matrixArray[ 4] = thisArray[ 4];\r\n        matrixArray[ 5] = thisArray[ 5];\r\n        matrixArray[ 6] = thisArray[ 6];\r\n        matrixArray[ 7] = thisArray[ 7];\r\n        matrixArray[ 8] = thisArray[ 8];\r\n        matrixArray[ 9] = thisArray[ 9];\r\n        matrixArray[10] = thisArray[10];\r\n        matrixArray[11] = thisArray[11];\r\n        matrixArray[12] = thisArray[12];\r\n        matrixArray[13] = thisArray[13];\r\n        matrixArray[14] = thisArray[14];\r\n        matrixArray[15] = thisArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    setMatrix(matrix: Matrix4): this {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        thisArray[ 0] = matrixArray[ 0];\r\n        thisArray[ 1] = matrixArray[ 1];\r\n        thisArray[ 2] = matrixArray[ 2];\r\n        thisArray[ 3] = matrixArray[ 3];\r\n        thisArray[ 4] = matrixArray[ 4];\r\n        thisArray[ 5] = matrixArray[ 5];\r\n        thisArray[ 6] = matrixArray[ 6];\r\n        thisArray[ 7] = matrixArray[ 7];\r\n        thisArray[ 8] = matrixArray[ 8];\r\n        thisArray[ 9] = matrixArray[ 9];\r\n        thisArray[10] = matrixArray[10];\r\n        thisArray[11] = matrixArray[11];\r\n        thisArray[12] = matrixArray[12];\r\n        thisArray[13] = matrixArray[13];\r\n        thisArray[14] = matrixArray[14];\r\n        thisArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    getLocalMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisLocalArray[ 0];\r\n        matrixArray[ 1] = thisLocalArray[ 1];\r\n        matrixArray[ 2] = thisLocalArray[ 2];\r\n        matrixArray[ 3] = thisLocalArray[ 3];\r\n        matrixArray[ 4] = thisLocalArray[ 4];\r\n        matrixArray[ 5] = thisLocalArray[ 5];\r\n        matrixArray[ 6] = thisLocalArray[ 6];\r\n        matrixArray[ 7] = thisLocalArray[ 7];\r\n        matrixArray[ 8] = thisLocalArray[ 8];\r\n        matrixArray[ 9] = thisLocalArray[ 9];\r\n        matrixArray[10] = thisLocalArray[10];\r\n        matrixArray[11] = thisLocalArray[11];\r\n        matrixArray[12] = thisLocalArray[12];\r\n        matrixArray[13] = thisLocalArray[13];\r\n        matrixArray[14] = thisLocalArray[14];\r\n        matrixArray[15] = thisLocalArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    setLocalMatrix(matrix: Matrix4): this {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        thisLocalArray[ 0] = matrixArray[ 0];\r\n        thisLocalArray[ 1] = matrixArray[ 1];\r\n        thisLocalArray[ 2] = matrixArray[ 2];\r\n        thisLocalArray[ 3] = matrixArray[ 3];\r\n        thisLocalArray[ 4] = matrixArray[ 4];\r\n        thisLocalArray[ 5] = matrixArray[ 5];\r\n        thisLocalArray[ 6] = matrixArray[ 6];\r\n        thisLocalArray[ 7] = matrixArray[ 7];\r\n        thisLocalArray[ 8] = matrixArray[ 8];\r\n        thisLocalArray[ 9] = matrixArray[ 9];\r\n        thisLocalArray[10] = matrixArray[10];\r\n        thisLocalArray[11] = matrixArray[11];\r\n        thisLocalArray[12] = matrixArray[12];\r\n        thisLocalArray[13] = matrixArray[13];\r\n        thisLocalArray[14] = matrixArray[14];\r\n        thisLocalArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    getRight(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[0];\r\n        vectorArray[1] = thisArray[1];\r\n        vectorArray[2] = thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    getLeft(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[0];\r\n        vectorArray[1] = -thisArray[1];\r\n        vectorArray[2] = -thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    getUp(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[4];\r\n        vectorArray[1] = thisArray[5];\r\n        vectorArray[2] = thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    getDown(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[4];\r\n        vectorArray[1] = -thisArray[5];\r\n        vectorArray[2] = -thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    getForward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 8];\r\n        vectorArray[1] = thisArray[ 9];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    getBackward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[ 8];\r\n        vectorArray[1] = -thisArray[ 9];\r\n        vectorArray[2] = -thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    getTranslation(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[12];\r\n        vectorArray[1] = thisArray[13];\r\n        vectorArray[2] = thisArray[14];\r\n        return vector;\r\n    }\r\n\r\n    setTranslation(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] = vectorArray[0];\r\n        thisArray[13] = vectorArray[1];\r\n        thisArray[14] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    translate(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] += vectorArray[0];\r\n        thisArray[13] += vectorArray[1];\r\n        thisArray[14] += vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    getScaling(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 0];\r\n        vectorArray[1] = thisArray[ 5];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    setScaling(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] = vectorArray[0];\r\n        thisArray[ 5] = vectorArray[1];\r\n        thisArray[10] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    scale(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] *= vectorArray[0];\r\n        thisArray[ 5] *= vectorArray[1];\r\n        thisArray[10] *= vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    getRotation(rotation: Quaternion): Quaternion {\r\n        rotation.setMatrix(this.matrix);\r\n        return rotation;\r\n    }\r\n    \r\n    setRotation(rotation: Quaternion): this {\r\n        this.matrix.setRotation(rotation);\r\n        return this;\r\n    }\r\n\r\n    rotate(rotation: Quaternion): this {\r\n        this.matrix.mult(\r\n            rotation.getMatrix4(tempMatrix)\r\n        );\r\n        return this;\r\n    }\r\n\r\n    transformPoint(point: Vector3): Vector3 {\r\n        return point;\r\n    }\r\n\r\n    transformDirection(direction: Vector3): Vector3 {\r\n        return direction;\r\n    }\r\n\r\n    transformVector(vector: Vector3): Vector3 {\r\n        return vector;\r\n    }\r\n\r\n    lookAt(target: Vector3, up: Vector3): this {\r\n        const thisPosition = this.getTranslation(Vector3Pool.acquire(1)[0]);\r\n        this.matrix.lookAt(thisPosition, target, up);\r\n        Vector3Pool.release(1);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Transform: TransformConstructor = TransformBase;","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3 } from \"../../algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\n\r\nexport { Plane };\r\nexport { PlaneInjector };\r\nexport { PlaneBase };\r\n\r\ninterface Plane {\r\n    normal: Vector3;\r\n    constant: number;\r\n\r\n    copy(plane: Plane): Plane;\r\n    set(x: number, y: number, z: number, constant: number): Plane;\r\n    setFromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n\tsetFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n\tsetFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): Plane;\r\n\tdistanceToPoint(point: Vector3): number;\r\n    normalized(): Plane;\r\n}\r\n\r\ninterface PlaneConstructor {\r\n    readonly prototype: Plane;\r\n    new(): Plane;\r\n    new(normal: Vector3, constant: number): Plane;\r\n    new(normal?: Vector3, constant?: number): Plane;\r\n    fromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n    fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n    fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane;\r\n}\r\n\r\nclass PlaneBase implements Plane {\r\n\r\n    private _normal: Vector3;\r\n    private _constant: number;\r\n\r\n    constructor()\r\n    constructor(normal: Vector3, constant: number)\r\n    constructor(normal?: Vector3, constant?: number) {\r\n        this._normal = normal || new Vector3([0, 0, 0]);\r\n        this._constant = constant || 0;\r\n    }\r\n\r\n    static fromNormalAndConstant(normal: Vector3, constant: number): Plane {\r\n        return new PlaneBase().setFromNormalAndConstant(normal, constant);\r\n    }\r\n\r\n\tstatic fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane {\r\n\t\treturn new PlaneBase().setFromNormalAndCoplanarPoint(normal, point);\r\n\t}\r\n\r\n\tstatic fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane {\r\n        return new PlaneBase().setFromCoplanarPoints(a, b, c);\r\n    }\r\n\r\n    get normal(): Vector3 {\r\n\t\treturn this._normal;\r\n\t}\r\n\r\n\tset normal(normal: Vector3) {\r\n\t\tthis._normal = normal;\r\n\t}\r\n\r\n\tget constant(): number {\r\n\t\treturn this._constant;\r\n\t}\r\n\r\n\tset constant(constant: number) {\r\n\t\tthis._constant = constant;\r\n\t}\r\n\r\n    copy(plane: PlaneBase): PlaneBase {\r\n        this._normal = plane._normal.clone();\r\n        this._constant = plane._constant;\r\n\r\n        return this;\r\n    }\r\n\r\n    set(x: number, y: number, z: number, constant: number): PlaneBase {\r\n        this._normal.setValues(x, y, z);\r\n        this._constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n    setFromNormalAndConstant(normal: Vector3, constant: number): PlaneBase {\r\n        this._normal.copy(normal);\r\n        this._constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n\tsetFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): PlaneBase {\r\n\t\tthis._normal.copy(normal);\r\n        this._constant = -point.dot(this._normal);\r\n        \r\n        return this;\r\n\t}\r\n\r\n\tsetFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): PlaneBase {\r\n        const normal = point3.clone();\r\n        const [temp] = Vector3Pool.acquire(1);\r\n        temp.copy(point1);\r\n        normal.sub(point2).cross(temp.sub(point2)).normalize();\r\n        this.setFromNormalAndCoplanarPoint(normal, point1);\r\n        Vector3Pool.release(1);\r\n\t\treturn this;\r\n    }\r\n\r\n\tdistanceToPoint(point: Vector3): number {\r\n\t\treturn this._normal.dot(point) + this._constant;\r\n\t}\r\n    \r\n    normalized(): PlaneBase {\r\n        const inverseNormalLength = 1.0 / this._normal.length();\r\n        \r\n        this._normal.scale(inverseNormalLength);\r\n\t\tthis._constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nvar Plane: PlaneConstructor = PlaneBase;\r\nconst PlaneInjector: Injector<PlaneConstructor> = new Injector({\r\n\tdefaultCtor: PlaneBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: PlaneConstructor) => {\r\n\t\t\tPlane = ctor;\r\n\t\t}\r\n});","import { Matrix4 } from \"../../maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../maths/algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../maths/extensions/pools/Vector3Pools\";\r\nimport { Plane } from \"../../maths/geometry/primitives/Plane\";\r\nimport { Injector } from \"../../patterns/injectors/Injector\";\r\nimport { BoundingBox } from \"./AxisAlignedBoundingBox\";\r\nimport { BoundingSphere } from \"./BoundingSphere\";\r\n\r\nexport { Frustrum };\r\nexport { FrustrumInjector };\r\nexport { FrustrumBase };\r\n\r\ninterface Frustrum {\r\n    readonly nearPlane: Plane;\r\n    readonly farPlane: Plane;\r\n    readonly topPlane: Plane;\r\n    readonly bottomPlane: Plane;\r\n    readonly leftPlane: Plane;\r\n    readonly rightPlane: Plane;\r\n    copy(frustrum: Frustrum): Frustrum;\r\n\tclone(): Frustrum;\r\n\tsetFromPerspectiveMatrix(matrix: Matrix4): Frustrum;\r\n\tset(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane\r\n    ): Frustrum;\r\n\tintersectsSphere(sphere: BoundingSphere): boolean;\r\n\tintersectsBox(box: BoundingBox): boolean;\r\n\tcontainsPoint(point: Vector3): boolean;\r\n}\r\n\r\ninterface FrustrumConstructor {\r\n    readonly prototype: Frustrum;\r\n    new(): Frustrum;\r\n}\r\n\r\nclass FrustrumBase implements Frustrum {\r\n    readonly nearPlane: Plane;\r\n    readonly farPlane: Plane;\r\n    readonly topPlane: Plane;\r\n    readonly bottomPlane: Plane;\r\n    readonly leftPlane: Plane;\r\n    readonly rightPlane: Plane;\r\n\r\n    constructor() {\r\n\t\tthis.nearPlane = new Plane();\r\n        this.farPlane = new Plane();\r\n        this.topPlane = new Plane();\r\n        this.bottomPlane = new Plane();\r\n        this.leftPlane = new Plane();\r\n        this.rightPlane = new Plane();\r\n    }\r\n\r\n    set(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane): Frustrum {\r\n\r\n\t\tthis.nearPlane.copy(nearPlane);\r\n\t\tthis.farPlane.copy(farPlane);\r\n        this.topPlane.copy(topPlane);\r\n        this.bottomPlane.copy(bottomPlane);\r\n        this.leftPlane.copy(leftPlane);\r\n        this.rightPlane.copy(rightPlane);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n    copy(frustrum: FrustrumBase): FrustrumBase {\r\n        this.set(\r\n            frustrum.nearPlane,\r\n            frustrum.farPlane,\r\n            frustrum.topPlane,\r\n            frustrum.bottomPlane,\r\n            frustrum.leftPlane,\r\n            frustrum.rightPlane\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n\tclone(): FrustrumBase {\r\n\t\treturn new FrustrumBase().copy(this);\r\n    }\r\n    \r\n\tsetFromPerspectiveMatrix(matrix: Matrix4): FrustrumBase {\r\n        const m11 = matrix.m11;\r\n        const m12 = matrix.m12;\r\n        const m13 = matrix.m13;\r\n        const m14 = matrix.m14;\r\n        const m21 = matrix.m21;\r\n        const m22 = matrix.m22;\r\n        const m23 = matrix.m23;\r\n        const m24 = matrix.m24;\r\n        const m31 = matrix.m31;\r\n        const m32 = matrix.m32;\r\n        const m33 = matrix.m33;\r\n        const m34 = matrix.m34;\r\n        const m41 = matrix.m41;\r\n        const m42 = matrix.m42;\r\n        const m43 = matrix.m43;\r\n        const m44 = matrix.m44;\r\n\r\n        this.nearPlane.set(m31 + m41, m32 + m42, m33 + m43, m34 + m44).normalized();\r\n        this.farPlane.set(-m31 + m41, -m32 + m42, -m33 + m43, -m34 + m44).normalized();\r\n        this.bottomPlane.set(m21 + m41, m22 + m42, m23 + m43, m24 + m44).normalized();\r\n        this.topPlane.set(-m21 + m41, -m22 + m42, -m23 + m43, -m24 + m44).normalized();\r\n        this.leftPlane.set(m11 + m41, m12 + m42, m13 + m43, m14 + m44).normalized();\r\n        this.rightPlane.set(-m11 + m41, -m12 + m42, -m13 + m43, -m14 + m44).normalized();\r\n        \r\n\t\treturn this;\r\n    }\r\n    \r\n\tintersectsSphere(sphere: BoundingSphere): boolean {\r\n        const center = sphere.center;\r\n        const radius = sphere.radius;\r\n        return center.dot(this.nearPlane.normal) + this.nearPlane.constant + radius <= 0 ||\r\n            center.dot(this.farPlane.normal) + this.farPlane.constant + radius <= 0 ||\r\n            center.dot(this.bottomPlane.normal) + this.bottomPlane.constant + radius <= 0 ||\r\n            center.dot(this.topPlane.normal) + this.topPlane.constant + radius <= 0 ||\r\n            center.dot(this.leftPlane.normal) + this.leftPlane.constant + radius <= 0 ||\r\n            center.dot(this.rightPlane.normal) + this.rightPlane.constant + radius <= 0;\r\n\t}\r\n\r\n\tintersectsBox(box: BoundingBox): boolean {\r\n        let intersects = true;\r\n\r\n        const boxMax = box.max;\r\n        const boxMin = box.min;\r\n\r\n        const [temp] = Vector3Pool.acquire(1);\r\n        intersects = \r\n            this.nearPlane.distanceToPoint(temp.setValues(\r\n                this.nearPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.nearPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.nearPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.farPlane.distanceToPoint(temp.setValues(\r\n                this.farPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.farPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.farPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.bottomPlane.distanceToPoint(temp.setValues(\r\n                this.bottomPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.bottomPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.bottomPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.topPlane.distanceToPoint(temp.setValues(\r\n                this.topPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.topPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.topPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.leftPlane.distanceToPoint(temp.setValues(\r\n                this.leftPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.leftPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.leftPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.rightPlane.distanceToPoint(temp.setValues(\r\n                this.rightPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.rightPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.rightPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0;\r\n        Vector3Pool.release(1);\r\n\r\n\t\treturn intersects;\r\n\t}\r\n\r\n\tcontainsPoint(point: Vector3): boolean {\r\n        return this.nearPlane.distanceToPoint(point) >= 0 &&\r\n            this.farPlane.distanceToPoint(point) >= 0 &&\r\n            this.bottomPlane.distanceToPoint(point) >= 0 &&\r\n            this.topPlane.distanceToPoint(point) >= 0 &&\r\n            this.leftPlane.distanceToPoint(point) >= 0 &&\r\n            this.rightPlane.distanceToPoint(point) >= 0;\r\n    }\r\n}\r\n\r\nvar Frustrum: FrustrumConstructor = FrustrumBase;\r\nconst FrustrumInjector: Injector<FrustrumConstructor> = new Injector({\r\n\tdefaultCtor: FrustrumBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: FrustrumConstructor) => {\r\n\t\t\tFrustrum = ctor;\r\n\t\t}\r\n});","export { Buffer };\r\n\r\nexport enum BufferDataUsage {\r\n    STATIC_DRAW = 0x88E4,\r\n    DYNAMIC_DRAW = 0x88E8,\r\n    STREAM_DRAW = 0x88E0,\r\n    STATIC_READ = 0x88E5,\r\n    DYNAMIC_READ = 0x88E9,\r\n    STREAM_READ = 0x88E1,\r\n    STATIC_COPY = 0x88E6,\r\n    DYNAMIC_COPY = 0x88EA,\r\n    STREAM_COPY = 0x88E2\r\n}\r\n\r\nexport enum BufferTarget {\r\n    ARRAY_BUFFER = 0x8892,\r\n    ELEMENT_ARRAY_BUFFER = 0x8893,\r\n    TRANSFORM_FEEDBACK_BUFFER = 0x8C8E,\r\n    UNIFORM_BUFFER = 0x8A11,\r\n}\r\n\r\ntype Buffer = {\r\n    internalBuffer: WebGLBuffer;\r\n    target: BufferTarget;\r\n    usage: BufferDataUsage;\r\n    byteLength: number;\r\n}","import { BufferDataUsage, Buffer } from \"./WebGLBufferUtilities\";\r\nimport { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\n\r\nexport { VertexAttributeValue };\r\nexport { VertexAttributeProperties };\r\nexport { VertexArrayProperties };\r\nexport { VertexArrayValues };\r\nexport { VertexArray };\r\nexport { WebGLVertexArrayUtilities };\r\n\r\nexport enum DrawMode {\r\n    POINTS = 0x0000,\r\n    LINES = 0x0001,\r\n    LINE_LOOP = 0x0002,\r\n    LINE_STRIP = 0x0003,\r\n    TRIANGLES = 0x0004,\r\n    TRIANGLE_STRIP = 0x0005,\r\n    TRIANGLE_FAN = 0x0006\r\n}\r\n\r\nexport enum DataComponentType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406\r\n}\r\n\r\nexport enum AttributeDataType {\r\n    VEC2 = \"VEC2\",\r\n    VEC3 = \"VEC3\",\r\n    VEC4 = \"VEC4\"\r\n}\r\n\r\nexport enum ElementArrayDataType {\r\n    UNSIGNED_BYTE = 0x1401,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    UNSIGNED_INT = 0x1405\r\n}\r\n\r\nexport type AttributeArray =\r\n    Float32Array | Int32Array | Uint32Array |\r\n    Int16Array | Uint16Array |\r\n    Int8Array | Uint8Array;\r\n\r\ntype VertexAttributeProperties = {\r\n    type: AttributeDataType;\r\n    array?: AttributeArray;\r\n    componentType?: DataComponentType;\r\n    byteLength?: number;\r\n    buffer?: number;\r\n    divisor?: number;\r\n    normalize?: boolean;\r\n    constant?: boolean;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n}\r\n\r\ntype VertexAttributeValue = {\r\n    array: AttributeArray;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n    constant?: boolean;\r\n}\r\n\r\ntype VertexAttribute = {\r\n    divisor: number;\r\n    componentType: DataComponentType;\r\n    numComponents: number;\r\n    constant: boolean;\r\n    constantValue?: AttributeArray;\r\n    byteOffset: number;\r\n    bytesPerElement: number;\r\n    type: AttributeDataType;\r\n    normalize: boolean;\r\n}\r\n\r\ntype VertexArrayProperties = {\r\n    vertexBuffers?: (VertexArrayBuffer | VertexArrayBufferProperties)[];\r\n    vertexAttributes?: Record<string, VertexAttributeProperties>;\r\n    elementBuffer?: VertexElementArrayBuffer | VertexElementArrayBufferProperties;\r\n    elementIndices?: Uint8Array | Uint16Array | Uint32Array;\r\n}\r\n\r\ntype VertexArrayValues = {\r\n    attributes: Record<string, VertexAttributeValue>;\r\n    drawMode?: DrawMode;\r\n    elementsCount?: number;\r\n    instanceCount?: number;\r\n}\r\n\r\ntype VertexArray = {\r\n    internalVertexArray: WebGLVertexArrayObject;\r\n    program: Program;\r\n    verticesBuffers: VertexArrayBuffer[];\r\n    elementBuffer?: VertexElementArrayBuffer;\r\n}\r\n\r\nexport type VertexArrayBuffer = Buffer & {\r\n    vertexAttributes: Record<string, VertexAttribute>;\r\n    byteLength: number;\r\n    byteStride: number;\r\n    interleaved: boolean;\r\n}\r\n\r\nexport type VertexArrayBufferProperties = {\r\n    usage?: BufferDataUsage;\r\n    interleaved?: boolean;\r\n}\r\n\r\nexport type VertexElementArrayBuffer = Buffer & {\r\n    indexType: ElementArrayDataType;\r\n};\r\n\r\nexport type VertexElementArrayBufferProperties = {\r\n    usage?: BufferDataUsage;\r\n}\r\n\r\nexport type VertexArrayBufferLayout = Record<string, {\r\n    byteOffset: number;\r\n    bytesPerElement: number;\r\n}>;\r\n\r\nclass WebGLVertexArrayUtilities {\r\n\r\n    static getDataTypeNumComponents(type: AttributeDataType): number {\r\n        switch (type) {\r\n            case AttributeDataType.VEC2:\r\n                return 2;\r\n            case AttributeDataType.VEC3:\r\n                return 3;\r\n            case AttributeDataType.VEC4:\r\n                return 4;\r\n        }\r\n    }\r\n\r\n    static getComponentTypeArrayConstructor(type: DataComponentType):\r\n        Float32ArrayConstructor | Int32ArrayConstructor | Uint32ArrayConstructor |\r\n        Int16ArrayConstructor | Uint16ArrayConstructor |\r\n        Int8ArrayConstructor | Uint8ArrayConstructor {\r\n        switch (type) {\r\n            case DataComponentType.FLOAT:\r\n                return Float32Array;\r\n            case DataComponentType.BYTE:\r\n                return Uint8Array;\r\n            case DataComponentType.UNSIGNED_BYTE:\r\n                return Uint8Array;\r\n            case DataComponentType.SHORT:\r\n                return Int16Array;\r\n            case DataComponentType.UNSIGNED_SHORT:\r\n                return Uint16Array;\r\n            case DataComponentType.INT:\r\n                return Int32Array;\r\n            case DataComponentType.UNSIGNED_INT:\r\n                return Uint32Array;\r\n        }\r\n    }\r\n\r\n    static getArrayComponentType(array: AttributeArray): DataComponentType {\r\n        if (array instanceof Float32Array) {\r\n            return DataComponentType.FLOAT;\r\n        }\r\n        else if (array instanceof Int32Array) {\r\n            return DataComponentType.INT;\r\n        }\r\n        else if (array instanceof Uint32Array) {\r\n            return DataComponentType.UNSIGNED_INT;\r\n        }\r\n        else if (array instanceof Int16Array) {\r\n            return DataComponentType.SHORT;\r\n        }\r\n        else if (array instanceof Uint16Array) {\r\n            return DataComponentType.UNSIGNED_SHORT;\r\n        }\r\n        else if (array instanceof Int8Array) {\r\n            return DataComponentType.BYTE;\r\n        }\r\n        else {\r\n            return DataComponentType.UNSIGNED_BYTE;\r\n        }\r\n    }\r\n\r\n    static createVertexElementArrayBuffer(gl: WebGL2RenderingContext, indices: Uint8Array | Uint16Array | Uint32Array): VertexElementArrayBuffer | null {\r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n        const usage = BufferDataUsage.STATIC_READ;\r\n        const target = gl.ELEMENT_ARRAY_BUFFER;\r\n        const {byteLength} = indices;\r\n        const indexType = this.getElementArrayBufferType(indices);\r\n\r\n        gl.bindBuffer(target, internalBuffer);\r\n        gl.bufferData(target, indices, usage);\r\n\r\n        return {\r\n            internalBuffer,\r\n            target,\r\n            usage,\r\n            byteLength,\r\n            indexType\r\n        };\r\n    }\r\n    \r\n    static createVertexArrayBuffer(gl: WebGL2RenderingContext, program: Program, attributes: Record<string, VertexAttributeProperties>, usage?: BufferDataUsage, interleaved?: boolean): VertexArrayBuffer | null {\r\n        const {internalProgram} = program;\r\n\r\n        const DEFAULT_USAGE = BufferDataUsage.STATIC_READ;\r\n        const DEFAULT_INTERLEAVED = false;\r\n        interleaved = interleaved ?? DEFAULT_INTERLEAVED;\r\n        usage = usage ?? DEFAULT_USAGE;\r\n\r\n        const attributesEntries = attributes ? Object.entries(attributes) : null;\r\n        const byteLength = (attributesEntries !== null) ? attributesEntries.reduce(\r\n            (byteLength, [_, attribute]) => byteLength + (attribute.array?.byteLength ?? attribute.byteLength ?? 0), 0\r\n        ) : 0;\r\n        \r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n\r\n        const target = gl.ARRAY_BUFFER;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        const dataBuffer = new ArrayBuffer(byteLength);\r\n        let byteStride = 0;\r\n\r\n        const vertexAttributes: Record<string, VertexAttribute> = {};\r\n        if (attributesEntries !== null) {\r\n\r\n            attributesEntries.forEach(([_, attribute]) => {\r\n                const {array, componentType, byteLength} = attribute;\r\n                if (!array && !(componentType && byteLength)) {\r\n                    throw new Error(\"Every attribute requires either an array or a componentType and a byteLength\");\r\n                }\r\n            });\r\n\r\n            byteStride = interleaved ? attributesEntries.reduce(\r\n                (stride, [_, attribute]) => {\r\n                    const {constant} = attribute;\r\n                    if (!constant) {\r\n                        const {array, type, componentType} = attribute;\r\n                        const {BYTES_PER_ELEMENT} = array ?? this.getComponentTypeArrayConstructor(componentType!);\r\n                        const numComponents = this.getDataTypeNumComponents(type);\r\n                        return stride + BYTES_PER_ELEMENT * numComponents;\r\n                    }\r\n                    return stride;\r\n                }, 0\r\n            ) : 0;\r\n            const bufferSlices = interleaved ? Math.trunc(byteLength / byteStride) : 0;\r\n            let byteOffset = 0;\r\n            let constantValue: AttributeArray | undefined;\r\n    \r\n            attributesEntries.forEach(([attributeName, attribute]) => {\r\n                const {array, type} = attribute;\r\n                let {constant, divisor, normalize, componentType} = attribute;\r\n                constant = constant ?? false;\r\n                componentType = array?this.getArrayComponentType(array) : componentType!;\r\n\r\n                const location = gl.getAttribLocation(internalProgram, attributeName);\r\n                if (location === -1) {\r\n                    console.warn(`Attribute ${attributeName} could not be located.`);\r\n                    return;\r\n                }\r\n\r\n                const numComponents = this.getDataTypeNumComponents(type);\r\n                divisor = divisor ?? 0;\r\n                normalize = normalize ?? false;\r\n                \r\n                gl.vertexAttribPointer(location, numComponents, componentType, normalize, byteStride, byteOffset);\r\n                if (divisor > 0) {\r\n                    gl.vertexAttribDivisor(location, divisor);\r\n                }\r\n                if (constant) {\r\n                    if (!array) {\r\n                        throw new Error(\"constant flag requires an array parameter\");\r\n                    }\r\n                    constantValue = array;\r\n                    switch (numComponents) {\r\n                        case 1:\r\n                            gl.vertexAttrib1fv(location, constantValue);\r\n                            break;\r\n                        case 2:\r\n                            gl.vertexAttrib2fv(location, constantValue);\r\n                            break;\r\n                        case 3:\r\n                            gl.vertexAttrib3fv(location, constantValue);\r\n                            break;\r\n                        case 4:\r\n                            gl.vertexAttrib4fv(location, constantValue);\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    if (!constant) {\r\n                        const {array, type} = attribute;\r\n                        const numComponents = this.getDataTypeNumComponents(type);\r\n                        let byteLength = 0;\r\n                        let bytesPerElement = 0;\r\n                        if (interleaved) {\r\n                            if (array) {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement, byteLength} = array);\r\n                                const bufferArrayConstructor = this.getComponentTypeArrayConstructor(\r\n                                    this.getArrayComponentType(array)\r\n                                );\r\n                                const bufferArray = new bufferArrayConstructor(dataBuffer, byteOffset);\r\n                                const arrayStrideOffset = byteStride / bytesPerElement;\r\n                                for (let i = 0; i < bufferSlices; i++) {\r\n                                    let arraySliceIndex = i * numComponents;\r\n                                    bufferArray.set(\r\n                                        array.slice(\r\n                                            arraySliceIndex,\r\n                                            arraySliceIndex + numComponents\r\n                                        ),\r\n                                        i * arrayStrideOffset\r\n                                    );\r\n                                }\r\n                            }\r\n                            else {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement} = this.getComponentTypeArrayConstructor(componentType!));\r\n                                byteLength = attribute.byteLength!;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (array) {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement, byteLength} = array);\r\n                                const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                                    WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                                );\r\n                                const bufferArray = new bufferArrayConstructor(dataBuffer, byteOffset);\r\n                                bufferArray.set(array);\r\n                            }\r\n                            else {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement} = this.getComponentTypeArrayConstructor(componentType!));\r\n                                byteLength = attribute.byteLength!;\r\n                            }\r\n                        }\r\n                        vertexAttributes[attributeName] = {\r\n                            constantValue,\r\n                            numComponents,\r\n                            divisor,\r\n                            componentType,\r\n                            constant,\r\n                            byteOffset,\r\n                            bytesPerElement,\r\n                            type,\r\n                            normalize\r\n                        };\r\n                        byteOffset += interleaved ? bytesPerElement * numComponents : byteLength;\r\n                    }\r\n                    gl.enableVertexAttribArray(location);\r\n                }\r\n            });\r\n        }\r\n        gl.bufferData(target, dataBuffer, usage);\r\n        return {\r\n            internalBuffer,\r\n            target,\r\n            usage,\r\n            byteLength,\r\n            interleaved,\r\n            byteStride,\r\n            vertexAttributes\r\n        };\r\n    }\r\n\r\n    static setVertexArrayValues(gl: WebGL2RenderingContext, vertexArray: VertexArray, values: VertexArrayValues): void {\r\n        const {attributes, elementsCount} = values;\r\n        \r\n        const attributesRecords = Object.keys(attributes);\r\n        attributesRecords.forEach((attributeRecord) => {\r\n            const {verticesBuffers} = vertexArray;\r\n            const verticesBuffer = verticesBuffers.find(\r\n                (verticesBuffer) => attributeRecord in verticesBuffer.vertexAttributes\r\n            );\r\n            if (verticesBuffer) {\r\n                const {internalBuffer, target, byteStride, interleaved, vertexAttributes} = verticesBuffer;\r\n                const currentArrayBufferBinding = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\r\n                if (currentArrayBufferBinding !== internalBuffer) {\r\n                    gl.bindBuffer(target, internalBuffer);\r\n                }\r\n                const attribute = attributes[attributeRecord];\r\n                const {byteOffset, numComponents} = vertexAttributes[attributeRecord];\r\n                let {array, srcOffset, srcLength} = attribute;\r\n                const {length} = array;\r\n                let dstOffset = byteOffset;\r\n                if (interleaved) {\r\n                    if (srcOffset || srcLength) {\r\n                        array = array.slice(srcOffset ?? 0, srcLength);\r\n                    }\r\n                    const slices = interleaved ? Math.trunc(length / numComponents) : 0;\r\n                    let sliceOffset = 0;\r\n                    for (let i = 0; i < slices; i++) {\r\n                        gl.bufferSubData(target, dstOffset, array, sliceOffset, numComponents);\r\n                        sliceOffset += numComponents;\r\n                        dstOffset += byteStride;\r\n                    }\r\n                }\r\n                else {\r\n                    srcOffset = srcOffset ?? 0;\r\n                    srcLength = srcLength ?? length;\r\n                    gl.bufferSubData(target, 0, array, srcOffset, srcLength);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static setVertexArrayBufferData(gl: WebGL2RenderingContext, buffer: VertexArrayBuffer | VertexElementArrayBuffer, data: ArrayBufferView, dstByteOffset?: number, srcOffset?: number, length?: number): void {\r\n        const {internalBuffer, target} = buffer;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        dstByteOffset = dstByteOffset ?? 0;\r\n        srcOffset = srcOffset ?? 0;\r\n        gl.bufferSubData(target, dstByteOffset, data, srcOffset, length);\r\n    }\r\n\r\n    static createVertexArray(gl: WebGL2RenderingContext, program: Program, vertexArray: VertexArrayProperties): VertexArray | null {\r\n        const {vertexAttributes, vertexBuffers, elementIndices, elementBuffer: elementBufferOrBufferProperties} = vertexArray;\r\n        \r\n        const internalVertexArray = gl.createVertexArray();\r\n        if (internalVertexArray === null) {\r\n            return null;\r\n        }\r\n        gl.bindVertexArray(internalVertexArray);\r\n\r\n        const attributesEntries = vertexAttributes ? Object.entries(vertexAttributes) : [];\r\n        \r\n        const {internalProgram} = program;\r\n        const verticesBuffers: VertexArray[\"verticesBuffers\"] = [];\r\n        if (vertexBuffers) {\r\n            vertexBuffers.forEach((buffer_i, i) => {\r\n                const attributes = Object.fromEntries(attributesEntries.filter(\r\n                    ([_, attribute_i]) => attribute_i.buffer == i \r\n                ));\r\n                let buffer: VertexArrayBuffer | null = null;\r\n                if (buffer_i !== undefined) {\r\n                    if (\"internalBuffer\" in buffer_i) {\r\n                        const {target, internalBuffer} = buffer_i;\r\n                        buffer = buffer_i;\r\n                        gl.bindBuffer(target, internalBuffer);\r\n                        const {byteStride, vertexAttributes} = buffer;\r\n                        Object.entries(vertexAttributes).forEach(([attributeName, setter]) => {\r\n                            const {numComponents, componentType, normalize, byteOffset, divisor, constant, constantValue} = setter;\r\n                            const location = gl.getAttribLocation(internalProgram, attributeName);\r\n                            if (location > -1) {\r\n                                gl.vertexAttribPointer(location, numComponents, componentType, normalize, byteStride, byteOffset);\r\n                                if (divisor > 0) {\r\n                                    gl.vertexAttribDivisor(location, divisor);\r\n                                }\r\n                                if (constant && constantValue) {\r\n                                    switch (numComponents) {\r\n                                        case 1:\r\n                                            gl.vertexAttrib1fv(location, constantValue);\r\n                                            break;\r\n                                        case 2:\r\n                                            gl.vertexAttrib2fv(location, constantValue);\r\n                                            break;\r\n                                        case 3:\r\n                                            gl.vertexAttrib3fv(location, constantValue);\r\n                                            break;\r\n                                        case 4:\r\n                                            gl.vertexAttrib4fv(location, constantValue);\r\n                                            break;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    gl.enableVertexAttribArray(location);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (attributes) {\r\n                        const {usage, interleaved} = buffer_i;\r\n                        buffer = this.createVertexArrayBuffer(gl, program, attributes, usage, interleaved);\r\n                    }\r\n                }\r\n                else if (attributes) {\r\n                    buffer = this.createVertexArrayBuffer(gl, program, attributes);\r\n                }\r\n                if (buffer === null) {\r\n                    return null;\r\n                }\r\n                verticesBuffers.push(buffer);\r\n            });\r\n        }\r\n        else if (vertexAttributes) {\r\n            let buffer: VertexArrayBuffer | null = null;\r\n            buffer = this.createVertexArrayBuffer(gl, program, vertexAttributes);\r\n            if (buffer === null) {\r\n                return null;\r\n            }\r\n            verticesBuffers.push(buffer);\r\n        }\r\n        \r\n        let elementBuffer: VertexElementArrayBuffer | null | undefined = undefined;\r\n        if (elementBufferOrBufferProperties !== undefined) {\r\n            if (\"internalBuffer\" in elementBufferOrBufferProperties) {\r\n                const {target, internalBuffer} = elementBufferOrBufferProperties;\r\n                elementBuffer = elementBufferOrBufferProperties;\r\n                gl.bindBuffer(target, internalBuffer);\r\n            }\r\n            else if (elementIndices) {\r\n                elementBuffer = this.createVertexElementArrayBuffer(gl, elementIndices);\r\n            }\r\n        }\r\n        else if (elementIndices) {\r\n            elementBuffer = this.createVertexElementArrayBuffer(gl, elementIndices);\r\n        }\r\n        if (elementBuffer === null) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            verticesBuffers,\r\n            elementBuffer,\r\n            program,\r\n            internalVertexArray\r\n        };\r\n    }\r\n\r\n    static deleteVertexArray(gl: WebGL2RenderingContext, vertexArray: VertexArray): void {\r\n        const {internalVertexArray} = vertexArray;\r\n        if (gl.isVertexArray(internalVertexArray)) {\r\n            gl.deleteVertexArray(internalVertexArray);\r\n        }\r\n    }\r\n\r\n    /*static #multiDrawExtension: WEBGL_multi_draw | null = null;\r\n\r\n    static enableMultidrawExtension(gl: WebGL2RenderingContext) {\r\n        this.#multiDrawExtension = gl.getExtension(\"WEBGL_multi_draw\");\r\n    }\r\n\r\n    static drawVertexArray(gl: WebGL2RenderingContext, vertexArray: VertexArray): void {\r\n        const {program, internalVertexArray, elementBuffer, elementsCount, instanceCount, drawMode, multiDraw} = vertexArray;\r\n\r\n        WebGLProgramUtilities.useProgram(gl, program);\r\n        \r\n        const currentVertexArray = gl.getParameter(gl.VERTEX_ARRAY_BINDING);\r\n        if (currentVertexArray !== internalVertexArray) {\r\n            gl.bindVertexArray(internalVertexArray);\r\n        }\r\n        \r\n        if (elementBuffer) {\r\n            const {indexType} = elementBuffer;\r\n            if (instanceCount > 0) {\r\n                gl.drawElementsInstanced(drawMode, elementsCount, indexType, 0, instanceCount);\r\n            }\r\n            else if (multiDraw) {\r\n                const multiDrawExtension = this.#multiDrawExtension!;\r\n                const {countsList, countsOffset, offsetsList, offsetsOffset, drawCount, instanceCountsList, instanceCountsOffset} = multiDraw;\r\n                if (instanceCountsList && instanceCountsOffset) {\r\n                    multiDrawExtension.multiDrawElementsInstancedWEBGL(\r\n                        drawMode, countsList!, countsOffset!, indexType!,\r\n                        offsetsList!, offsetsOffset!, instanceCountsList, instanceCountsOffset, drawCount!\r\n                    );\r\n                }\r\n                else {\r\n                    multiDrawExtension.multiDrawElementsWEBGL(\r\n                        drawMode, countsList!, countsOffset!, indexType!,\r\n                        offsetsList!, offsetsOffset!, drawCount!\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                gl.drawElements(drawMode, elementsCount, indexType, 0);\r\n            }\r\n        }\r\n        else {\r\n            if (instanceCount > 0) {\r\n                gl.drawArraysInstanced(drawMode, 0, elementsCount, instanceCount);\r\n            }\r\n            else if (multiDraw) {\r\n                const multiDrawExtension = this.#multiDrawExtension!;\r\n                const {countsList, countsOffset, firstsList, firstsOffset, drawCount, instanceCountsList, instanceCountsOffset} = multiDraw;\r\n                if (instanceCountsList && instanceCountsOffset) {\r\n                    multiDrawExtension.multiDrawArraysInstancedWEBGL(\r\n                        drawMode, countsList!, countsOffset!,\r\n                        firstsList!, firstsOffset!, instanceCountsList, instanceCountsOffset, drawCount!\r\n                    );\r\n                }\r\n                else {\r\n                    multiDrawExtension.multiDrawArraysWEBGL(\r\n                        drawMode, countsList!, countsOffset!,\r\n                        firstsList!, firstsOffset!, drawCount!\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                gl.drawArrays(drawMode, 0, elementsCount);\r\n            }\r\n        }\r\n    }\r\n\r\n    static unbindVertexArray(gl: WebGL2RenderingContext): void {\r\n        gl.bindVertexArray(null);\r\n    }*/\r\n\r\n    static getElementArrayBufferType(indices: Uint8Array | Uint16Array | Uint32Array): ElementArrayDataType {\r\n        if (indices instanceof Uint8Array) {\r\n            return ElementArrayDataType.UNSIGNED_BYTE;\r\n        }\r\n        else if (indices instanceof Uint16Array) {\r\n            return ElementArrayDataType.UNSIGNED_SHORT;\r\n        }\r\n        else {\r\n            return ElementArrayDataType.UNSIGNED_INT;\r\n        }\r\n    }\r\n}","import { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { CameraBase } from \"./Camera\";\r\n\r\nexport class PerspectiveCamera extends CameraBase {\r\n    \r\n    constructor(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number) {\r\n        super(Matrix4.perspective(fov, aspect, zNear, zFar));\r\n    }\r\n\r\n    setValues(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number): PerspectiveCamera\r\n    {\r\n        this._projection.setPerspective(fov, aspect, zNear, zFar);\r\n        this.updateFrustrum();\r\n        return this;\r\n    }\r\n}","import { Vector3 } from \"engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Space } from \"../../../../libs/maths/geometry/space/Space\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Frustrum } from \"../../../../libs/physics/collisions/Frustrum\";\r\nimport { Mesh } from \"../objects/meshes/Mesh\";\r\nimport { Object3D, Object3DBase } from \"../objects/Object3D\";\r\n\r\nexport { Camera };\r\nexport { CameraBase };\r\n\r\ninterface Camera extends Object3D {\r\n  readonly uuid: UUID;\r\n  readonly viewProjection: Matrix4;\r\n  readonly projection: Matrix4;\r\n  readonly view: Matrix4\r\n  isViewing(mesh: Mesh): boolean;\r\n}\r\n\r\nclass CameraBase extends Object3DBase {\r\n    readonly uuid: UUID;\r\n    protected _projection: Matrix4;\r\n    private _frustrum: Frustrum;\r\n  \r\n    constructor()\r\n    constructor(projection: Matrix4)\r\n    constructor(projection?: Matrix4) {\r\n      super();\r\n      this.uuid = UUIDGenerator.newUUID();\r\n      this._projection = projection || new Matrix4();\r\n      this._frustrum = new Frustrum().setFromPerspectiveMatrix(this._projection);\r\n    }\r\n\r\n    getFront(vector: Vector3): Vector3 {\r\n      return this.transform.getBackward(vector);\r\n    }\r\n\r\n    get projection(): Matrix4 {\r\n      return this._projection.clone();\r\n    }\r\n\r\n    get view(): Matrix4 {\r\n      return this.transform.matrix.clone().invert();\r\n    }\r\n\r\n    get viewProjection(): Matrix4 {\r\n      return this.projection.clone().mult(this.view);\r\n    }\r\n\r\n    isViewing(mesh: Mesh): boolean {\r\n      /*if (typeof mesh.geometry.boundingBox === 'undefined') {\r\n        const boundingBox = mesh.geometry.computeBoundingBox();\r\n        return this._frustrum.intersectsBox(boundingBox);\r\n      }\r\n      return this._frustrum.intersectsBox(mesh.geometry.boundingBox);*/\r\n      return true;\r\n    }\r\n\r\n    protected updateFrustrum(): void {\r\n      this._frustrum.setFromPerspectiveMatrix(this._projection);\r\n    }\r\n}","import { Transform } from \"../../../general/Transform\";\r\n\r\nexport { Object3D };\r\nexport { Object3DBase };\r\n\r\ninterface Object3D {\r\n    transform: Transform;\r\n}\r\n\r\nclass Object3DBase implements Object3D {\r\n    readonly transform: Transform;\r\n\r\n    constructor() {\r\n        this.transform = new Transform(this);\r\n    }\r\n}","import { AttributeArray, AttributeDataType, DataComponentType, WebGLVertexArrayUtilities } from \"../../webgl/WebGLVertexArrayUtilities\";\r\n\r\nexport { GeometryBuffer };\r\n\r\ninterface GeometryBufferConstructor {\r\n    readonly prototype: GeometryBuffer;\r\n    new(): GeometryBuffer;\r\n    new(\r\n        attributes: Record<string, GeometryBufferAttribute>,\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    ): GeometryBuffer;\r\n    fromBlob(blob: Blob): Promise<GeometryBuffer>;\r\n}\r\n\r\ninterface GeometryBuffer {\r\n    interleaved: boolean;\r\n    buffer: ArrayBuffer;\r\n    stride: number;\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    attributes: Record<string, {\r\n        type: AttributeDataType;\r\n        componentType: DataComponentType;\r\n        byteOffset: number;\r\n        byteLength: number;\r\n        constant?: boolean;\r\n        normalize?: boolean;\r\n    }>;\r\n    getAttribute(name: string): GeometryBufferAttribute | null;\r\n    toBlob(): Blob;\r\n}\r\n\r\ninterface GeometryBufferAttribute {\r\n    array: AttributeArray,\r\n    type: AttributeDataType;\r\n    constant?: boolean;\r\n    normalize?: boolean;\r\n}\r\n\r\nclass GeometryBufferBase implements GeometryBuffer {\r\n    buffer: ArrayBuffer;\r\n    attributes: Record<string, {\r\n        type: AttributeDataType;\r\n        componentType: DataComponentType;\r\n        byteOffset: number;\r\n        byteLength: number;\r\n        constant?: boolean;\r\n        normalize?: boolean;\r\n    }>;\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    interleaved: boolean;\r\n    stride: number;\r\n\r\n    constructor()\r\n    constructor(\r\n        attributes: Record<string, GeometryBufferAttribute>,\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    )\r\n    constructor(\r\n        attributes: Record<string, GeometryBufferAttribute> = {},\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    ) {\r\n        if (attributes) {\r\n            const attributesBuffers = Object.values(attributes);\r\n            const bufferByteLength = attributesBuffers.reduce(\r\n                (byteLength, attribute) => byteLength + attribute.array.byteLength, 0\r\n            );\r\n            const buffer = new ArrayBuffer(bufferByteLength);\r\n            const stride = (interleaved) ? attributesBuffers.reduce(\r\n                (stride, attribute) => {\r\n                    const {array, type} = attribute;\r\n                    return stride + array.BYTES_PER_ELEMENT * WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n                }, 0\r\n            ) : 0;\r\n            const bufferSlices = Math.trunc(bufferByteLength / stride);\r\n            \r\n            this.attributes = {};\r\n            this.indices = indices;\r\n            this.interleaved = interleaved ?? false;\r\n            this.stride = stride;\r\n            this.buffer = buffer;\r\n            \r\n            let byteOffset = 0;\r\n            if (interleaved) {\r\n                Object.entries(attributes).forEach(([name, attribute]) => {\r\n                    const {array, type, constant, normalize} = attribute;\r\n                    const componentType = WebGLVertexArrayUtilities.getArrayComponentType(array);\r\n                    const numComponents = WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n                    const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                        WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                    );\r\n                    const {byteLength, BYTES_PER_ELEMENT} = array;\r\n                    const bufferArray = new bufferArrayConstructor(buffer, byteOffset);\r\n                    const arrayStrideOffset = stride / BYTES_PER_ELEMENT;\r\n                    for (let i = 0; i < bufferSlices; i++) {\r\n                        let arraySliceIndex = i * numComponents;\r\n                        bufferArray.set(\r\n                            array.slice(\r\n                                arraySliceIndex,\r\n                                arraySliceIndex + numComponents\r\n                            ),\r\n                            i * arrayStrideOffset\r\n                        );\r\n                    }\r\n                    this.attributes[name] = {\r\n                        type,\r\n                        byteOffset,\r\n                        byteLength,\r\n                        componentType,\r\n                        constant,\r\n                        normalize\r\n                    };\r\n                    byteOffset += numComponents * BYTES_PER_ELEMENT;\r\n                });\r\n            }\r\n            else {\r\n                Object.entries(attributes).forEach(([name, attribute]) => {\r\n                    const {array, type} = attribute;\r\n                    const {byteLength} = array;\r\n                    const componentType = WebGLVertexArrayUtilities.getArrayComponentType(array);\r\n                    const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                        WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                    );\r\n                    const bufferArray = new bufferArrayConstructor(buffer, byteOffset);\r\n                    bufferArray.set(array);\r\n                    this.attributes[name] = {\r\n                        byteOffset,\r\n                        byteLength,\r\n                        type,\r\n                        componentType\r\n                    };\r\n                    byteOffset += byteLength;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.attributes = {};\r\n            this.indices = undefined;\r\n            this.interleaved = false;\r\n            this.stride = 0;\r\n            this.buffer = new ArrayBuffer(0);\r\n        }\r\n    }\r\n\r\n    toBlob(): Blob {\r\n        const {attributes, buffer, stride, interleaved, indices} = this;\r\n        const bufferData = new Uint8Array(buffer);\r\n        const {length: bufferLength} = bufferData;\r\n        const indicesData = Uint8Array.from(indices ?? []);\r\n        const indicesLength = indices?.length ?? 0;\r\n        const headerData = new TextEncoder().encode(JSON.stringify({attributes, stride, interleaved}));\r\n        const {length: headerLength} = headerData;\r\n\r\n        const blobDataView = new Uint8Array(4 + headerLength + indicesLength + bufferLength);\r\n        const {buffer: blobDataViewBuffer} = blobDataView;\r\n        const blobDataHeaderView = new Uint16Array(blobDataViewBuffer, 0, 2);\r\n        const blobDataHeaderLength = blobDataHeaderView.length * (Uint16Array.BYTES_PER_ELEMENT / Uint8Array.BYTES_PER_ELEMENT);\r\n        blobDataHeaderView[0] = headerLength;\r\n        blobDataHeaderView[1] = indicesLength;\r\n        blobDataView.set(headerData, blobDataHeaderLength);\r\n        blobDataView.set(indicesData, blobDataHeaderLength + headerLength);\r\n        blobDataView.set(bufferData, blobDataHeaderLength + headerLength + indicesLength);\r\n\r\n        return new Blob([blobDataView], {type: \"application/octet-stream\"});\r\n    }\r\n\r\n    static async fromBlob(blob: Blob): Promise<GeometryBuffer> {\r\n        const arrayBuffer = await blob.arrayBuffer();\r\n        const blobDataHeaderView = new Uint16Array(arrayBuffer, 0, 2);\r\n        const {byteLength: blobDataHeaderByteLength} = blobDataHeaderView;\r\n        const headerLength = blobDataHeaderView[0];\r\n        const indicesLength = blobDataHeaderView[1];\r\n        const headerData = new Uint8Array(arrayBuffer, blobDataHeaderByteLength, headerLength);\r\n        const arrayConstructor = (indicesLength < Math.pow(2, 8)) ? Uint8Array : (indicesLength < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        const indices = new arrayConstructor(arrayBuffer.slice(blobDataHeaderByteLength + headerLength * Uint8Array.BYTES_PER_ELEMENT, indicesLength * arrayConstructor.BYTES_PER_ELEMENT));\r\n        const buffer = arrayBuffer.slice(blobDataHeaderByteLength + (indicesLength + headerLength) * Uint8Array.BYTES_PER_ELEMENT);\r\n        const header = <Pick<GeometryBuffer, \"attributes\" | \"stride\" | \"interleaved\">>JSON.parse(new TextDecoder().decode(headerData));\r\n        const {attributes, interleaved, stride} = header;\r\n        const geometryBuffer = new GeometryBuffer();\r\n        geometryBuffer.buffer = buffer;\r\n        geometryBuffer.attributes = attributes;\r\n        geometryBuffer.interleaved = interleaved;\r\n        geometryBuffer.stride = stride;\r\n        geometryBuffer.indices = indices;\r\n        return geometryBuffer;\r\n    }\r\n\r\n    getAttribute(name: string): GeometryBufferAttribute | null {\r\n        const {attributes} = this;\r\n        const attribute = attributes[name];\r\n        if (attribute) {\r\n            const {buffer, interleaved, stride} = this;\r\n            const {type, byteOffset, byteLength, componentType} = attribute;\r\n            const attributeArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(componentType);\r\n            const bytesPerElement = attributeArrayConstructor.BYTES_PER_ELEMENT;\r\n            const length = byteLength / bytesPerElement;\r\n            const numComponents = WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n            const {byteLength: bufferByteLength} = buffer;\r\n            const {BYTES_PER_ELEMENT} = attributeArrayConstructor;\r\n            const attributeArray = new attributeArrayConstructor(length);\r\n            if (interleaved) {\r\n                const bufferArray = new attributeArrayConstructor(buffer, byteOffset);\r\n                const bufferStride = stride;\r\n                const bufferSlices = Math.trunc(bufferByteLength / bufferStride);\r\n                const arrayStrideOffset = bufferStride / BYTES_PER_ELEMENT;\r\n                for (let i = 0; i < bufferSlices; i++) {\r\n                    let bufferArraySliceIndex = arrayStrideOffset * i;\r\n                    attributeArray.set(\r\n                        bufferArray.slice(\r\n                            bufferArraySliceIndex,\r\n                            bufferArraySliceIndex + numComponents\r\n                        ),\r\n                        numComponents * i\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                const bufferArray = new attributeArrayConstructor(buffer, byteOffset, length);\r\n                attributeArray.set(bufferArray);\r\n            }\r\n            return {\r\n                array: attributeArray,\r\n                type: type\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nvar GeometryBuffer: GeometryBufferConstructor = GeometryBufferBase;","\r\n\r\n// Vertices : counter clock-wise ordered\r\n\r\nimport { TriangleList } from \"../../../../libs/maths/extensions/lists/TriangleList\";\r\nimport { Vector2List } from \"../../../../libs/maths/extensions/lists/Vector2List\";\r\nimport { Vector3List } from \"../../../../libs/maths/extensions/lists/Vector3List\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { BoundingBox } from \"../../../../libs/physics/collisions/AxisAlignedBoundingBox\";\r\nimport { BoundingSphere } from \"../../../../libs/physics/collisions/BoundingSphere\";\r\nimport { GeometryBuffer } from \"./GeometryBuffer\";\r\nimport { GeometryBuilder } from \"./GeometryBuilder\";\r\nimport { GeometryUtils } from \"./GeometryUtils\";\r\n\r\n// FaceIndices : 3 vertices indices\r\n// FaceArea : triangle.getArea()\r\n// FaceNormal : triangle.getNormal()\r\n// FaceUV / FaceColor ?\r\n\r\n// VertexNormal => Weighted (by area) average of the normals of the faces containing the vertex (=> Varying)\r\n// - Clone the vertex array, read the face indices array\r\n\r\n// VertexIndices\r\n\r\n// PerVertex Animation / MorphTargets\r\n\r\n// SkeletalAnimation\r\n\r\n// Bones are a hierarchical tree\r\n\r\n// bonesWeights\r\n// bonesIndices\r\n\r\n// MorphTarget Animation\r\n\r\n// MorphTargets are a copy of each face, being transformed over time\r\n\r\n// morphIndices\r\n// morphTargets = []; MorphTargets are a transformed copy of faces\r\n// morphNormals = [];\r\n\r\nexport { Geometry };\r\nexport { GeometryBase };\r\n\r\nenum GeometryAttributes {\r\n    VERTICES,\r\n    UVS,\r\n    NORMALS,\r\n    TANGENTS\r\n}\r\n\r\ninterface GeometryConstructor {\r\n    \r\n}\r\n\r\ninterface Geometry {\r\n\r\n}\r\n\r\nclass GeometryBase implements Geometry {\r\n\r\n    toBuilder(): GeometryBuilder {\r\n        throw new Error(\"No builder defined.\");\r\n    }\r\n}\r\n\r\nvar Geometry: GeometryConstructor = GeometryBase;","import { Matrix4 } from \"../../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../../../../libs/maths/algebra/vectors/Vector3\";\r\nimport { BoundingBox } from \"./BoundingBox\";\r\n\r\nexport class BoundingSphere {\r\n    center: Vector3;\r\n    radius: number;\r\n\r\n    constructor(\r\n        center: Vector3,\r\n        radius: number\r\n    ) {\r\n        this.center = center;\r\n        this.radius = radius;\r\n    }\r\n\r\n    transform(matrix: Matrix4): void {\r\n        const {center} = this;\r\n        matrix.transformPoint(center);\r\n    }\r\n    \r\n    containsPoint(point: Vector3): boolean {\r\n        const {center, radius} = this;\r\n        return center.distance(point) < radius;\r\n    }\r\n\r\n    hitsSphere(other: BoundingSphere) {\r\n        const {center, radius} = this;\r\n        const {center: otherCenter, radius: otherRadius} = other;\r\n        return center.distance(otherCenter) < radius + otherRadius;\r\n    }\r\n\r\n    hitsBox(other: BoundingBox) {\r\n        const {center, radius} = this;\r\n        const {x: sphereX, y: sphereY, z: sphereZ} = center;\r\n        const {min, max} = other;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        // get box closest point to sphere center by clamping\r\n        const x = Math.max(minX, Math.min(sphereX, maxX));\r\n        const y = Math.max(minY, Math.min(sphereY, maxY));\r\n        const z = Math.max(minZ, Math.min(sphereZ, maxZ));\r\n\r\n        // this is the same as isPointInsideSphere\r\n        const distance = Math.sqrt((x - sphereX) * (x - sphereX) + (y - sphereY) * (y - sphereY) + (z - sphereZ) * (z - sphereZ));\r\n        return distance < radius;\r\n    }\r\n}","import { Matrix4 } from \"../../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../../../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Frustrum } from \"../../../../../libs/physics/collisions/Frustrum\";\r\n\r\nexport { BoundingBox };\r\n\r\nconst corners = new Array(8).fill(0).map(_ => new Vector3());\r\n\r\ninterface BoundingBoxConstructor {\r\n    prototype: BoundingBox;\r\n    new(\r\n        min: Vector3,\r\n        max: Vector3\r\n    ): BoundingBox;\r\n}\r\n\r\ninterface BoundingBox {\r\n    readonly min: Vector3;\r\n    readonly max: Vector3;\r\n    hits(other: BoundingBox): boolean;\r\n    transform(matrix: Matrix4): void;\r\n}\r\n\r\nclass BoundingBoxBase {\r\n    readonly min: Vector3;\r\n    readonly max: Vector3;\r\n\r\n    constructor(\r\n        min: Vector3,\r\n        max: Vector3\r\n    ) {\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n\r\n    static fromBoxes(...boxes: BoundingBox[]) {\r\n        const positiveInfinity = Number.POSITIVE_INFINITY;\r\n        const negativeInfinity = Number.NEGATIVE_INFINITY;\r\n        let minX = positiveInfinity;\r\n        let minY = positiveInfinity;\r\n        let minZ = positiveInfinity;\r\n        let maxX = negativeInfinity;\r\n        let maxY = negativeInfinity;\r\n        let maxZ = negativeInfinity;\r\n        boxes.forEach((box_i) => {\r\n            const {min: boxMin, max: boxMax} = box_i;\r\n            const {x: boxMinX, y: boxMinY, z: boxMinZ} = boxMin;\r\n            const {x: boxMaxX, y: boxMaxY, z: boxMaxZ} = boxMax;\r\n            if (boxMinX < minX) minX = boxMinX;\r\n            else if (boxMaxX > maxX) maxX = boxMaxX;\r\n            if (boxMinY < minY) minY = boxMinY;\r\n            else if (boxMaxY > maxY) maxY = boxMaxY;\r\n            if (boxMinZ < minZ) minZ = boxMinZ;\r\n            else if (boxMaxZ > maxZ) maxZ = boxMaxZ;\r\n        });\r\n        return new BoundingBox(\r\n            new Vector3(minX, minY, minZ),\r\n            new Vector3(maxX, maxY, maxZ)\r\n        );\r\n    }\r\n\r\n    hits(other: BoundingBox): boolean {\r\n        const {min, max} = this;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        const {min: otherMin, max: otherMax} = other;\r\n        const {x: otherMinX, y: otherMinY, z: otherMinZ} = otherMin;\r\n        const {x: otherMaxX, y: otherMaxY, z: otherMaxZ} = otherMax;\r\n        return (minX <= otherMaxX && maxX >= otherMinX) &&\r\n            (minY <= otherMaxY && maxY >= otherMinY) &&\r\n            (minZ <= otherMaxZ && maxZ >= otherMinZ);\r\n    }\r\n\r\n    transform(matrix: Matrix4): void {\r\n        const {min, max} = this;\r\n        let {x: minX, y: minY, z: minZ} = min;\r\n        let {x: maxX, y: maxY, z: maxZ} = max;\r\n        corners[0].copy(min);\r\n        corners[1].setValues(minX, minY, maxZ);\r\n        corners[2].setValues(minX, maxY, minZ);\r\n        corners[3].setValues(maxX, minY, minZ);\r\n        corners[4].setValues(minX, maxY, maxZ);\r\n        corners[5].setValues(maxX, minY, maxZ);\r\n        corners[6].setValues(maxX, maxY, minZ);\r\n        corners[7].copy(max);\r\n        const {POSITIVE_INFINITY, NEGATIVE_INFINITY} = Number;\r\n        minX = minY = minZ = POSITIVE_INFINITY;\r\n        maxX = maxY = maxZ = NEGATIVE_INFINITY;\r\n        corners.forEach((corner_i) => {\r\n            matrix.transformPoint(corner_i);\r\n            const [x, y, z] = corner_i;\r\n            if (x < minX) minX = x;\r\n            else if (x > maxX) maxX = x;\r\n            if (y < minY) minY = y;\r\n            else if (y > maxY) maxY = y;\r\n            if (z < minZ) minZ = z;\r\n            else if (z > maxZ) maxZ = z;\r\n        });\r\n        min.setValues(minX, minY, minZ);\r\n        max.setValues(maxX, maxY, maxZ);\r\n    }\r\n}\r\n\r\nvar BoundingBox: BoundingBoxConstructor = BoundingBoxBase;","\r\n\r\n// Vertices : counter clock-wise ordered\r\n\r\nimport { TriangleList } from \"../../../../libs/maths/extensions/lists/TriangleList\";\r\nimport { Vector2List } from \"../../../../libs/maths/extensions/lists/Vector2List\";\r\nimport { Vector3List } from \"../../../../libs/maths/extensions/lists/Vector3List\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { BoundingBox } from \"../../../../libs/physics/collisions/AxisAlignedBoundingBox\";\r\nimport { BoundingSphere } from \"../../../../libs/physics/collisions/BoundingSphere\";\r\nimport { GeometryBuffer } from \"./GeometryBuffer\";\r\nimport { GeometryBuilder } from \"./GeometryBuilder\";\r\nimport { GeometryUtils } from \"./GeometryUtils\";\r\n\r\n// FaceIndices : 3 vertices indices\r\n// FaceArea : triangle.getArea()\r\n// FaceNormal : triangle.getNormal()\r\n// FaceUV / FaceColor ?\r\n\r\n// VertexNormal => Weighted (by area) average of the normals of the faces containing the vertex (=> Varying)\r\n// - Clone the vertex array, read the face indices array\r\n\r\n// VertexIndices\r\n\r\n// PerVertex Animation / MorphTargets\r\n\r\n// SkeletalAnimation\r\n\r\n// Bones are a hierarchical tree\r\n\r\n// bonesWeights\r\n// bonesIndices\r\n\r\n// MorphTarget Animation\r\n\r\n// MorphTargets are a copy of each face, being transformed over time\r\n\r\n// morphIndices\r\n// morphTargets = []; MorphTargets are a transformed copy of faces\r\n// morphNormals = [];\r\n\r\nexport { Geometry };\r\nexport { GeometryBase };\r\n\r\nenum GeometryAttributes {\r\n    VERTICES,\r\n    UVS,\r\n    NORMALS,\r\n    TANGENTS\r\n}\r\n\r\ninterface GeometryConstructor {\r\n    \r\n}\r\n\r\ninterface Geometry {\r\n\r\n}\r\n\r\nclass GeometryBase implements Geometry {\r\n\r\n    toBuilder(): GeometryBuilder {\r\n        throw new Error(\"No builder defined.\");\r\n    }\r\n}\r\n\r\nvar Geometry: GeometryConstructor = GeometryBase;","import { Vector3 } from \"../../../../libs/maths/algebra/vectors/Vector3\"\r\nimport { BoundingSphere } from \"./bounding/BoundingSphere\";\r\nimport { BoundingBox } from \"./bounding/BoundingBox\";\r\n\r\nexport { GeometryBuilder };\r\n\r\ninterface GeometryBuilder {\r\n    readonly halfEdges: Array<HalfEdge>;\r\n    readonly vertices: Array<Vertex>;\r\n    readonly faces: Array<Face>;\r\n    clone(): GeometryBuilder;\r\n    addTriangleFace(v0: VertexID, v1: VertexID, v2: VertexID, properties?: {[key: string]: any;}): void;\r\n    addQuadFace(v0: VertexID, v1: VertexID, v2: VertexID, v3: VertexID, properties?: {[key: string]: any;}): void;\r\n    addVertex(vertex: number[] | Float32Array | Float64Array): VertexID;\r\n    addFace(vertices: VertexID[], properties?: {[key: string]: any;}[]): void;\r\n    verticesArray(): Float32Array;\r\n    uvsArray(): Float32Array;\r\n    trianglesIndicesArray(): Uint8Array | Uint16Array | Uint32Array;\r\n    linesIndicesArray(): Uint8Array | Uint16Array | Uint32Array;\r\n    normalsArray(): Float32Array;\r\n    tangentsArray(): Float32Array;\r\n    boundingBox(): BoundingBox;\r\n    faceHalfEdgesIterator(face: FaceID): FaceHalfEdgesIterator;\r\n    faceVerticesIterator(face: FaceID): FaceHalfEdgesIterator;\r\n    vertexFacesIterator(vertex: VertexID): VertexFacesIterator;\r\n}\r\n\r\ninterface GeometryBuilderConstructor {\r\n    readonly prototype: GeometryBuilder;\r\n    new(): GeometryBuilder;\r\n}\r\n\r\nclass GeometryBuilderBase implements GeometryBuilder {\r\n    readonly halfEdges: Array<HalfEdge>;\r\n    readonly vertices: Array<Vertex>;\r\n    readonly faces: Array<Face>;\r\n\r\n    constructor() {\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n    }\r\n\r\n    clone(): GeometryBuilder {\r\n        return Object.assign(Object.create(this.constructor.prototype), structuredClone(this));\r\n    }\r\n\r\n    addTriangleFace(v0: VertexID, v1: VertexID, v2: VertexID, properties?: {[key: string]: any;}): void {\r\n        this.addFace([v0, v1, v2], properties);\r\n    }\r\n\r\n    addQuadFace(v0: VertexID, v1: VertexID, v2: VertexID, v3: VertexID, properties?: {[key: string]: any;}): void {\r\n        this.addFace([v0, v1, v2, v3], properties);\r\n    }\r\n    \r\n    addVertex(position: number[] | Float32Array | Float64Array): VertexID {\r\n        const {vertices} = this;\r\n        const vertex: Vertex = {\r\n            position: position,\r\n            halfEdgeID: null\r\n        };\r\n        return vertices.push(vertex) - 1;\r\n    }\r\n\r\n    addFace(vertices: VertexID[], properties?: {[key: string]: any;}): void {\r\n        const {halfEdges: _halfEdges, vertices: _vertices, faces: _faces} = this;\r\n        const {length: faceVerticesCount} = vertices;\r\n        if (faceVerticesCount < 2) {\r\n            console.error(`At least 2 vertices are required to create a face.`);\r\n            return;\r\n        }\r\n        const face: Face = {\r\n            halfEdgeID: null,\r\n            ...properties\r\n        };\r\n        const faceID = _faces.length;\r\n        let sourceID: VertexID | null = null;\r\n        let targetID: VertexID | null = null;\r\n        let firstHalfEdgeID: HalfEdgeID | null = null;\r\n        let halfEdge: HalfEdge | null = null;\r\n        let halfEdgeID: HalfEdgeID | null = null;\r\n        let previousHalfEdgeID: HalfEdgeID | null = null;\r\n        for (let i = 0; i < faceVerticesCount; i++) {\r\n            sourceID = vertices[i];\r\n            targetID = (i < faceVerticesCount - 1) ? vertices[i + 1] : vertices[0];\r\n            const existingHalfEdge = Array.from(this.vertexFacesIterator(sourceID)).find(\r\n                (face_i) => {\r\n                    if (face_i === null) return false;\r\n                    return Array.from(this.faceHalfEdgesIterator(face_i)).find(\r\n                        (halfEdge_i) => {\r\n                            const {targetID: targetID_i, prevID: prevID_i} = _halfEdges[halfEdge_i];\r\n                            return targetID_i === targetID && _halfEdges[prevID_i ?? -1]?.targetID === sourceID;\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n            if (existingHalfEdge) {\r\n                continue;\r\n            }\r\n            halfEdge = {\r\n                targetID: targetID,\r\n                twinID: null,\r\n                nextID: null,\r\n                prevID: null,\r\n                faceID: faceID\r\n            };\r\n            halfEdgeID = _halfEdges.length;\r\n            if (previousHalfEdgeID === null) {\r\n                face.halfEdge = halfEdgeID;\r\n                firstHalfEdgeID = halfEdgeID;\r\n            }\r\n            else {\r\n                halfEdge.prevID = previousHalfEdgeID;\r\n                _halfEdges[previousHalfEdgeID].nextID = halfEdgeID;\r\n            }\r\n            const source = _vertices[sourceID]!;\r\n            if (source.halfEdgeID === null) {\r\n                source.halfEdgeID = halfEdgeID;\r\n            }\r\n            const twinHalfEdge = _halfEdges.find(\r\n                (halfEdge_i) => {\r\n                    const {targetID: targetID_i, prevID: prevID_i} = halfEdge_i;\r\n                    return targetID_i === sourceID && _halfEdges[prevID_i ?? -1]?.targetID === targetID;\r\n                }\r\n            ) ?? null;\r\n            if (twinHalfEdge !== null) {\r\n                halfEdge.twinID = _halfEdges.indexOf(twinHalfEdge);\r\n                twinHalfEdge.twinID = halfEdgeID;\r\n            }\r\n            previousHalfEdgeID = halfEdgeID;\r\n            _halfEdges.push(halfEdge);\r\n        }\r\n        if (halfEdge !== null && firstHalfEdgeID !== null) {\r\n            _halfEdges[firstHalfEdgeID].prevID = halfEdgeID;\r\n            halfEdge.nextID = firstHalfEdgeID;\r\n        }\r\n        _faces.push(face);\r\n    }\r\n\r\n    linesArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((_, i) => {\r\n            const faceVertices = Array.from(this.faceVerticesIterator(i));\r\n            if (faceVertices.length === 4) {\r\n                const [v0, v1, v2, v3] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n                return [\r\n                    ...v0, ...v1,\r\n                    ...v1, ...v2,\r\n                    ...v2, ...v3,\r\n                    ...v3, ...v0\r\n                ];\r\n            }\r\n            else {\r\n                const [v0, v1, v2] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n                return [\r\n                    ...v0, ...v1,\r\n                    ...v1, ...v2,\r\n                    ...v2, ...v0\r\n                ];\r\n            }\r\n        }));\r\n    }\r\n\r\n    verticesArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((_, i) => {\r\n            return Array.from(this.faceVerticesIterator(i)).flatMap((vertex) => {\r\n                return Array.from(vertices[vertex].position);\r\n            });\r\n        }));\r\n    }\r\n\r\n    tangentsArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((face_i, i) => {\r\n            const faceVertices = Array.from(this.faceVerticesIterator(i));\r\n            const faceUvs = face_i.uv as Array<Array<number>>;\r\n            const [v0, v1, v2] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n            const [uv0, uv1, uv2] = faceUvs;\r\n            const edge1 = v1.map((v1_i, i) => v0[i] - v1_i);\r\n            const edge2 = v1.map((v1_i, i) => v2[i] - v1_i);\r\n            const deltaUV1 = uv1.map((uv1_i, i) => uv0[i] - uv1_i);\r\n            const deltaUV2 = uv1.map((uv1_i, i) => uv2[i] - uv1_i);\r\n            const f = 1.0 / (deltaUV1[0] * deltaUV2[1] - deltaUV1[1] * deltaUV2[0]);\r\n            const tangent = edge1.map((edge1_i, i) => -(edge1_i * deltaUV2[1] - edge2[i] * deltaUV1[1]) * f);\r\n            const length = Math.hypot(...tangent);\r\n            face_i.tangent = tangent.map(tangent_i => tangent_i / length);\r\n\r\n            return faceVertices.flatMap(() => {\r\n                return Array.from(face_i.tangent);\r\n            });\r\n        }));\r\n    }\r\n\r\n    normalsArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((face_i, i) => {\r\n            const faceVertices = Array.from(this.faceVerticesIterator(i));\r\n            const [v0, v1, v2] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n            const edge1 = v1.map((v1_i, i) => v0[i] - v1_i);\r\n            const edge2 = v1.map((v1_i, i) => v2[i] - v1_i);\r\n            const normal = edge1.map((_, i) => {\r\n                const ni = (i + 1) % 3;\r\n                const pi = ((i - 1) + 3) % 3;\r\n                return -(edge1[ni] * edge2[pi] - edge1[pi] * edge2[ni]);\r\n            });\r\n            const length = Math.hypot(...normal);\r\n            face_i.normal = normal.map(normal_i => normal_i / length);\r\n            \r\n            return faceVertices.flatMap(() => {\r\n                return Array.from(face_i.normal);\r\n            });\r\n        }));\r\n    }\r\n\r\n    uvsArray(): Float32Array {\r\n        const {faces} = this;\r\n        return new Float32Array(faces.flatMap((face) => {\r\n            return face.uv.flat(1);\r\n        }));\r\n    }\r\n\r\n    trianglesIndicesArray(): Uint8Array | Uint16Array | Uint32Array {\r\n        const {faces} = this;\r\n        const count = faces.reduce((verticesCount, _, i) => {\r\n            return verticesCount + Array.from(this.faceVerticesIterator(i)).length;\r\n        }, 0);\r\n        const arrayConstructor = (count < Math.pow(2, 8)) ? Uint8Array : (count < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        return new arrayConstructor(faces.reduce(([indices, index], face_i, i) => {\r\n            /*const vertices = Array.from(this.faceVerticesIterator(i));\r\n            if (vertices.length === 4) {\r\n                return [indices.concat([index, index + 1, index + 2, index + 2, index + 3, index]), index + 4] as [number[], number];\r\n            }*/\r\n            return [indices.concat([index, index + 1, index + 2]), index + 3] as [number[], number];\r\n        }, [[], 0] as [number[], number])[0]);\r\n    }\r\n\r\n    linesIndicesArray(): Uint8Array | Uint16Array | Uint32Array {\r\n        const {faces} = this;\r\n        const count = faces.reduce((verticesCount, _, i) => {\r\n            return verticesCount + Array.from(this.faceVerticesIterator(i)).length * 2;\r\n        }, 0);\r\n        const arrayConstructor = (count < Math.pow(2, 8)) ? Uint8Array : (count < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        return new arrayConstructor(faces.reduce(([indices, index], face_i, i) => {\r\n            /*const vertices = Array.from(this.faceVerticesIterator(i));\r\n            if (vertices.length === 4) {\r\n                return [indices.concat([index, index + 1, index + 1, index + 2, index + 3, index + 3, index]), index + 4] as [number[], number];\r\n            }*/\r\n            return [indices.concat([index, index + 1, index + 1, index + 2, index + 2, index]), index + 3] as [number[], number];\r\n        }, [[], 0] as [number[], number])[0]);\r\n    }\r\n\r\n    boundingBox(): BoundingBox {\r\n        const positiveInfinity = Number.POSITIVE_INFINITY;\r\n        const negativeInfinity = Number.NEGATIVE_INFINITY;\r\n        let minX = positiveInfinity;\r\n        let minY = positiveInfinity;\r\n        let minZ = positiveInfinity;\r\n        let maxX = negativeInfinity;\r\n        let maxY = negativeInfinity;\r\n        let maxZ = negativeInfinity;\r\n        const {vertices} = this;\r\n        if (vertices.length > 0) {\r\n            vertices.forEach((vertex_i) => {\r\n                const [x, y, z] = vertex_i.position;\r\n                if (x < minX) minX = x;\r\n                else if (x > maxX) maxX = x;\r\n                if (y < minY) minY = y;\r\n                else if (y > maxY) maxY = y;\r\n                if (z < minZ) minZ = z;\r\n                else if (z > maxZ) maxZ = z;\r\n            });\r\n        }\r\n        const min = new Vector3([minX, minY, minZ]);\r\n        const max = new Vector3([maxX, maxY, maxZ]);\r\n        return new BoundingBox(min, max);\r\n    }\r\n\r\n    boundingSphere(): BoundingSphere {\r\n        const positiveInfinity = Number.POSITIVE_INFINITY;\r\n        const negativeInfinity = Number.NEGATIVE_INFINITY;\r\n        let minX = positiveInfinity;\r\n        let minY = positiveInfinity;\r\n        let minZ = positiveInfinity;\r\n        let maxX = negativeInfinity;\r\n        let maxY = negativeInfinity;\r\n        let maxZ = negativeInfinity;\r\n        const {vertices} = this;\r\n        if (vertices.length > 0) {\r\n            vertices.forEach((vertex_i) => {\r\n                const [x, y, z] = vertex_i.position;\r\n                if (x < minX) minX = x;\r\n                else if (x > maxX) maxX = x;\r\n                if (y < minY) minY = y;\r\n                else if (y > maxY) maxY = y;\r\n                if (z < minZ) minZ = z;\r\n                else if (z > maxZ) maxZ = z;\r\n            });\r\n        }\r\n        const min = new Vector3([minX, minY, minZ]);\r\n        const max = new Vector3([maxX, maxY, maxZ]);\r\n        return new BoundingSphere(\r\n            new Vector3(), Math.max(min.length(), max.length())\r\n        );\r\n    }\r\n    \r\n    faceHalfEdgesIterator(face: FaceID): FaceHalfEdgesIterator {\r\n        return new FaceHalfEdgesIterator(this, face);\r\n    }\r\n\r\n    faceVerticesIterator(face: FaceID): FaceHalfEdgesIterator {\r\n        return new FaceVerticesIterator(this, face);\r\n    }\r\n\r\n    vertexFacesIterator(vertex: VertexID): VertexFacesIterator {\r\n        return new VertexFacesIterator(this, vertex);\r\n    }\r\n}\r\n\r\nvar GeometryBuilder: GeometryBuilderConstructor = GeometryBuilderBase;\r\n\r\nexport type HalfEdgeID = number;\r\nexport type FaceID = number;\r\nexport type VertexID = number;\r\n\r\nexport type HalfEdge = {\r\n    targetID: VertexID | null;\r\n    twinID: HalfEdgeID | null;\r\n    prevID: HalfEdgeID | null;\r\n    nextID: HalfEdgeID | null;\r\n    faceID: FaceID | null;\r\n}\r\n\r\nexport type Face = {\r\n    halfEdgeID: HalfEdgeID | null;\r\n    [key: string]: any;\r\n}\r\n\r\nexport type Vertex = {\r\n    position: number[] | Float32Array | Float64Array;\r\n    halfEdgeID: HalfEdgeID | null;\r\n    properties?: {\r\n        [key: string]: any;\r\n    }\r\n}\r\n\r\nexport class FaceHalfEdgesIterator {\r\n    geometry: GeometryBuilder;\r\n    faceID: FaceID;\r\n    halfEdgeID: HalfEdgeID | null;\r\n\r\n    constructor(geometry: GeometryBuilder, face: FaceID) {\r\n        this.geometry = geometry;\r\n        this.faceID = face;\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    reset(): void {\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    current(): HalfEdgeID | null {\r\n        return this.halfEdgeID;\r\n    }\r\n\r\n    next(): IteratorResult<HalfEdgeID> {\r\n        const {halfEdgeID, faceID, geometry} = this;\r\n        const {faces, halfEdges} = geometry;\r\n        const face = faces[faceID];\r\n        if (face !== null) {\r\n            if (halfEdgeID === null) {\r\n                const firstHalfEdgeID = face.halfEdgeID ?? null;\r\n                const nextHalfEdgeID = faces[firstHalfEdgeID ?? -1]?.nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (firstHalfEdgeID !== null) {\r\n                    return {\r\n                        value: firstHalfEdgeID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n            else if (halfEdgeID !== face.halfEdge) {\r\n                const nextHalfEdgeID = halfEdges[halfEdgeID].nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (halfEdgeID !== null) {\r\n                    return {\r\n                        value: halfEdgeID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: undefined, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<HalfEdgeID> {\r\n        this.halfEdgeID = null;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class FaceVerticesIterator {\r\n    geometry: GeometryBuilder;\r\n    faceID: FaceID;\r\n    halfEdgeID: HalfEdgeID | null;\r\n\r\n    constructor(geometry: GeometryBuilder, face: FaceID) {\r\n        this.geometry = geometry;\r\n        this.faceID = face;\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    reset(): void {\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    current(): VertexID | null {\r\n        const {halfEdgeID, geometry} = this;\r\n        const {halfEdges} = geometry;\r\n        return halfEdges[halfEdges[halfEdgeID ?? -1]?.prevID ?? -1]?.targetID ?? null;\r\n    }\r\n\r\n    next(): IteratorResult<VertexID> {\r\n        const {halfEdgeID, geometry, faceID} = this;\r\n        const {faces, halfEdges} = geometry;\r\n        const face = faces[faceID ?? -1];\r\n        if (face !== null) {\r\n            const {halfEdge: faceHalfEdgeID} = face;\r\n            if (halfEdgeID === null) {\r\n                const firstVertexID = halfEdges[halfEdges[faceHalfEdgeID ?? -1].prevID ?? -1].targetID ?? null;\r\n                const nextHalfEdgeID = halfEdges[faceHalfEdgeID ?? -1].nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (firstVertexID !== null) {\r\n                    return {\r\n                        value: firstVertexID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n            else if (halfEdgeID !== face.halfEdge) {\r\n                const vertex = halfEdges[halfEdges[halfEdgeID].prevID ?? -1].targetID ?? null;\r\n                const nextHalfEdgeID = halfEdges[halfEdgeID].nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (vertex !== null) {\r\n                    return {\r\n                        value: vertex, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: undefined, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<VertexID> {\r\n        this.halfEdgeID = null;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class VertexFacesIterator {\r\n    geometry: GeometryBuilder;\r\n    halfEdgeID: HalfEdgeID | null;\r\n    vertexID: VertexID;\r\n    \r\n    constructor(geometry: GeometryBuilder, vertex: VertexID) {\r\n        this.geometry = geometry;\r\n        this.vertexID = vertex;\r\n        this.halfEdgeID = null;\r\n    }\r\n    \r\n    reset(): void {\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    current(): FaceID | null {\r\n        const {geometry, halfEdgeID} = this;\r\n        const {halfEdges} = geometry;\r\n        return halfEdges[halfEdgeID ?? -1].faceID ?? null;\r\n    }\r\n\r\n    next(): IteratorResult<FaceID>  {\r\n        const {halfEdgeID, vertexID, geometry} = this;\r\n        const {halfEdges, vertices} = geometry;\r\n        const vertex = vertices[vertexID ?? -1];\r\n        if (vertex) {\r\n            const {halfEdgeID: vertexHalfEdgeID} = vertex;\r\n            if (halfEdgeID === null) {\r\n                const faceID = halfEdges[vertexHalfEdgeID ?? -1]?.faceID ?? null;\r\n                const nextHalfEdgeID = halfEdges[halfEdges[vertexHalfEdgeID ?? -1]?.prevID ?? -1]?.twinID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (faceID !== null) {\r\n                    return {\r\n                        value: faceID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n            else if (halfEdgeID !== vertex.halfEdgeID) {\r\n                const faceID = halfEdges[halfEdgeID]?.faceID ?? null;\r\n                const nextHalfEdgeID = halfEdges[halfEdges[halfEdgeID].prevID ?? -1].twinID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (faceID !== null) {\r\n                    return {\r\n                        value: faceID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: undefined, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<FaceID> {\r\n        this.halfEdgeID = null;\r\n        return this;\r\n    }\r\n}","import { GeometryBase } from \"../../Geometry\";\r\nimport { GeometryBuilder } from \"../../GeometryBuilder\";\r\n\r\nexport class CubeGeometry extends GeometryBase {\r\n\twidth: number;\r\n\theight: number;\r\n\tdepth: number;\r\n\twidthSegments: number;\r\n\theightSegments: number;\r\n\tdepthSegments: number;\r\n\r\n\tconstructor(properties?: {width?: number, height?: number, depth?: number, widthSegments?: number, heightSegments?: number, depthSegments?: number}) {\r\n\t\tsuper();\r\n\t\tconst {width, height, depth, widthSegments, heightSegments, depthSegments} = properties ?? {};\r\n\t\tthis.width = width ?? 1;\r\n\t\tthis.height = height ?? 1;\r\n\t\tthis.depth = depth ?? 1;\r\n\t\tthis.widthSegments = widthSegments ?? 1;\r\n\t\tthis.heightSegments = heightSegments ?? 1;\r\n\t\tthis.depthSegments = depthSegments ?? 1;\r\n\t}\r\n\t\r\n\ttoBuilder(): GeometryBuilder {\r\n\t\tconst builder = new GeometryBuilder();\r\n\t\tconst {width, height, depth} = this;\r\n\t\tlet {widthSegments, heightSegments, depthSegments} = this;\r\n\t\twidthSegments = Math.floor(widthSegments);\r\n\t\theightSegments = Math.floor(heightSegments);\r\n\t\tdepthSegments = Math.floor(depthSegments);\r\n\r\n\t\tconst indices: number[] = [];\r\n\t\tconst vertices: number[] = [];\r\n\t\tconst uvs: number[] = [];\r\n\t\tlet verticesCount = 0;\r\n\r\n\t\t[\r\n\t\t\t[2, 1, 0, -1, -1, depth, height, width, depthSegments, heightSegments],\r\n\t\t\t[2, 1, 0, +1, -1, depth, height, -width, depthSegments, heightSegments],\r\n\t\t\t[0, 2, 1, +1, +1, width, depth, height, widthSegments, depthSegments],\r\n\t\t\t[0, 2, 1, +1, -1, width, depth, -height, widthSegments, depthSegments],\r\n\t\t\t[0, 1, 2, +1, -1, width, height, depth, widthSegments, heightSegments],\r\n\t\t\t[0, 1, 2, -1, -1, width, height, -depth, widthSegments, heightSegments]\r\n\t\t].forEach(([u, v, w, udir, vdir, width, height, depth, gridX, gridY]) => {\r\n\t\t\tconst segmentWidth = width / gridX;\r\n\t\t\tconst segmentHeight = height / gridY;\r\n\t\t\tconst widthHalf = width / 2;\r\n\t\t\tconst heightHalf = height / 2;\r\n\t\t\tconst depthHalf = depth / 2;\r\n\t\t\tconst gridX1 = gridX + 1;\r\n\t\t\tconst gridY1 = gridY + 1;\r\n\t\t\tlet index = 0;\r\n\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\r\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\r\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\r\n\t\t\t\t\tconst vertex = new Array(3);\r\n\t\t\t\t\tvertex[u] = x * udir;\r\n\t\t\t\t\tvertex[v] = y * vdir;\r\n\t\t\t\t\tvertex[w] = depthHalf;\r\n\t\t\t\t\tvertices.push(\r\n\t\t\t\t\t\t...vertex\r\n\t\t\t\t\t);\r\n\t\t\t\t\tuvs.push(ix / gridX, 1 - (iy / gridY));\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let iy = 0; iy < gridY; iy++) {\r\n\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\r\n\t\t\t\t\tconst a = verticesCount + ix + gridX1 * iy;\r\n\t\t\t\t\tconst b = verticesCount + ix + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst c = verticesCount + (ix + 1) + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst d = verticesCount + (ix + 1) + gridX1 * iy;\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tverticesCount += index;\r\n\t\t});\r\n\t\t\r\n\t\tconst {length: indicesCount} = indices;\r\n\t\tconst verticesArray: number[] = [];\r\n\t\tconst uvsArray: number[][] = [];\r\n\t\tfor (let i = 0; i < indicesCount; i += 3) {\r\n\t\t\tconst vi1 = 3 * indices[i], vi2 = 3 * indices[i + 1], vi3 = 3 * indices[i + 2];\r\n\t\t\tconst ui1 = 2 * indices[i], ui2 = 2 * indices[i + 1], ui3 = 2 * indices[i + 2];\r\n\t\t\tlet v1 = verticesArray[vi1], v2 = verticesArray[vi2], v3 = verticesArray[vi3];\r\n\t\t\tif (v1 === undefined) {\r\n\t\t\t\tv1 = builder.addVertex([vertices[vi1], vertices[vi1 + 1], vertices[vi1 + 2]]), verticesArray[vi1] = v1;\r\n\t\t\t}\r\n\t\t\tif (v2 === undefined) {\r\n\t\t\t\tv2 = builder.addVertex([vertices[vi2], vertices[vi2 + 1], vertices[vi2 + 2]]), verticesArray[vi2] = v2;\r\n\t\t\t}\r\n\t\t\tif (v3 === undefined) {\r\n\t\t\t\tv3 = builder.addVertex([vertices[vi3], vertices[vi3 + 1], vertices[vi3 + 2]]), verticesArray[vi3] = v3;\r\n\t\t\t}\r\n\t\t\tlet uv1 = uvsArray[ui1], uv2 = uvsArray[ui2], uv3 = uvsArray[ui3];\r\n\t\t\tif (uv1 === undefined) {\r\n\t\t\t\tuv1 = [uvs[ui1], uvs[ui1 + 1]], uvsArray[ui1] = uv1;\r\n\t\t\t}\r\n\t\t\tif (uv2 === undefined) {\r\n\t\t\t\tuv2 = [uvs[ui2], uvs[ui2 + 1]], uvsArray[ui2] = uv2;\r\n\t\t\t}\r\n\t\t\tif (uv3 === undefined) {\r\n\t\t\t\tuv3 = [uvs[ui3], uvs[ui3 + 1]], uvsArray[ui3] = uv3;\r\n\t\t\t}\r\n\t\t\tbuilder.addTriangleFace(v1, v2, v3, {\r\n\t\t\t\tuv: [uv1, uv2, uv3]\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn builder;\r\n\t}\r\n}","import { GeometryBase } from \"../geometry\";\r\nimport { GeometryBuilder } from \"../GeometryBuilder\";\r\n\r\nexport { QuadGeometry };\r\n\r\nclass QuadGeometry extends GeometryBase {\r\n\twidth: number;\r\n\theight: number;\r\n\twidthSegments: number;\r\n\theightSegments: number;\r\n\r\n\tconstructor(properties?: {width?: number, height?: number, widthSegments?: number, heightSegments?: number}) {\r\n\t\tsuper();\r\n\t\tthis.width = properties?.width ?? 1;\r\n\t\tthis.height = properties?.height ?? 1;\r\n\t\tthis.widthSegments = properties?.widthSegments ?? 1;\r\n\t\tthis.heightSegments = properties?.heightSegments ?? 1;\r\n\t}\r\n\t\r\n\ttoBuilder(): GeometryBuilder {\r\n\t\tconst builder = new GeometryBuilder();\r\n\t\tconst {heightSegments, widthSegments, width, height} = this;\r\n\t\tconst widthHalf = width / 2;\r\n\t\tconst heightHalf = height / 2;\r\n\r\n\t\tconst gridX = Math.floor(widthSegments);\r\n\t\tconst gridY = Math.floor(heightSegments);\r\n\r\n\t\tconst gridX1 = gridX + 1;\r\n\t\tconst gridY1 = gridY + 1;\r\n\r\n\t\tconst segmentWidth = width / gridX;\r\n\t\tconst segmentHeight = height / gridY;\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\tfor (let iy = 0; iy < gridY1; iy++) {\r\n\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\r\n\t\t\t\tconst x = ix * segmentWidth - widthHalf;\r\n\t\t\t\tvertices.push(x, - y, 0);\r\n\t\t\t\tuvs.push(ix / gridX);\r\n\t\t\t\tuvs.push(1 - (iy / gridY));\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let iy = 0; iy < gridY; iy++) {\r\n\t\t\tfor (let ix = 0; ix < gridX; ix++) {\r\n\t\t\t\tconst a = ix + gridX1 * iy;\r\n\t\t\t\tconst b = ix + gridX1 * (iy + 1);\r\n\t\t\t\tconst c = (ix + 1) + gridX1 * (iy + 1);\r\n\t\t\t\tconst d = (ix + 1) + gridX1 * iy;\r\n\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\tindices.push(b, c, d);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst {length: indicesCount} = indices;\r\n\t\tconst verticesArray: number[] = [];\r\n\t\tconst uvsArray: number[][] = [];\r\n\t\tfor (let i = 0; i < indicesCount; i += 3) {\r\n\t\t\tconst vi1 = 3 * indices[i], vi2 = 3 * indices[i + 1], vi3 = 3 * indices[i + 2];\r\n\t\t\tconst ui1 = 2 * indices[i], ui2 = 2 * indices[i + 1], ui3 = 2 * indices[i + 2];\r\n\t\t\tlet v1 = verticesArray[vi1], v2 = verticesArray[vi2], v3 = verticesArray[vi3];\r\n\t\t\tif (v1 == undefined) {\r\n\t\t\t\tv1 = builder.addVertex([vertices[vi1], vertices[vi1 + 1], vertices[vi1 + 2]]), verticesArray[vi1] = v1;\r\n\t\t\t}\r\n\t\t\tif (v2 == undefined) {\r\n\t\t\t\tv2 = builder.addVertex([vertices[vi2], vertices[vi2 + 1], vertices[vi2 + 2]]), verticesArray[vi2] = v2;\r\n\t\t\t}\r\n\t\t\tif (v3 == undefined) {\r\n\t\t\t\tv3 = builder.addVertex([vertices[vi3], vertices[vi3 + 1], vertices[vi3 + 2]]), verticesArray[vi3] = v3;\r\n\t\t\t}\r\n\t\t\tlet uv1 = uvsArray[ui1], uv2 = uvsArray[ui2], uv3 = uvsArray[ui3];\r\n\t\t\tif (uv1 == undefined) {\r\n\t\t\t\tuv1 = [uvs[ui1], uvs[ui1 + 1]], uvsArray[ui1] = uv1;\r\n\t\t\t}\r\n\t\t\tif (uv2 == undefined) {\r\n\t\t\t\tuv2 = [uvs[ui2], uvs[ui2 + 1]], uvsArray[ui2] = uv2;\r\n\t\t\t}\r\n\t\t\tif (uv3 == undefined) {\r\n\t\t\t\tuv3 = [uvs[ui3], uvs[ui3 + 1]], uvsArray[ui3] = uv3;\r\n\t\t\t}\r\n\t\t\tbuilder.addTriangleFace(v1, v2, v3, {\r\n\t\t\t\tuv: [uv1, uv2, uv3]\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn builder;\r\n\t}\r\n}","export enum TexturePixelFormat {\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    DEPTH_COMPONENT = 0x1902,\r\n    DEPTH_STENCIL = 0x84F9,\r\n    RED = 0x1903,\r\n    RG = 0x8227,\r\n    RED_INTEGER = 0x8D94,\r\n    RG_INTEGER = 0x8228,\r\n    RGB_INTEGER = 0x8D98,\r\n    RGBA_INTEGER = 0x8D99\r\n}\r\n\r\nexport enum TextureInternalPixelFormat {\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    DEPTH_COMPONENT16 = 0x81A5,\r\n    DEPTH_COMPONENT24 = 0x81A6,\r\n    DEPTH_COMPONENT32F = 0x8CAC,\r\n    DEPTH24_STENCIL8 = 0x88F0,\r\n    DEPTH32F_STENCIL8 = 0x8CAD,\r\n    R8 = 0x8229,\r\n    R8_SNORM = 0x8F94,\r\n    RG8 = 0x822B,\r\n    RG8_SNORM = 0x8F95,\r\n    RGB8 = 0x8051,\r\n    RGB8_SNORM = 0x8F96,\r\n    RGB565 = 0x8D62,\r\n    RGBA8 = 0x8058,\r\n    RGBA4 = 0x8056,\r\n    RGB5_A1 = 0x8057,\r\n    RGBA8_SNORM = 0x8F97,\r\n    RGB10_A2UI = 0x906F,\r\n    SRGB = 0x8C40,\r\n    SRGB8 = 0x8C41,\r\n    SRGB8_ALPHA8 = 0x8C43,\r\n    R16F = 0x822D,\r\n    RGB16F = 0x881B,\r\n    RGBA16F = 0x881A,\r\n    R32F = 0x822E,\r\n    RG32F = 0x8230,\r\n    RGB32F = 0x8815,\r\n    RGBA32F\t= 0x8814,\r\n    R11F_G11F_B10F = 0x8C3A,\r\n    RGB9_E5 = 0x8C3D,\r\n    R8UI = 0x8232,\r\n    R16I = 0x8233,\r\n    R16UI = 0x8234,\r\n    R32I = 0x8235,\r\n    R32UI = 0x8236,\r\n    RG8I = 0x8237,\r\n    RG8UI = 0x8238,\r\n    RG16I = 0x8239,\r\n    RG16UI = 0x823A,\r\n    RG32I = 0x823B,\r\n    RG32UI = 0x823C,\r\n    RGB8I = 0x8D8F,\r\n    RGB8UI = 0x8D7D,\r\n    RGB16I = 0x8D89,\r\n    RGB16UI = 0x8D77,\r\n    RGB32I = 0x8D83,\r\n    RGB32UI = 0x8D71,\r\n    RGBA8I = 0x8D8E,\r\n    RGBA8UI = 0x8D7C,\r\n    RGBA16I = 0x8D88,\r\n    RGBA16UI = 0x8D76,\r\n    RGBA32I = 0x8D82,\r\n    RGBA32UI = 0x8D70,\r\n}\r\n\r\nexport enum TexturePixelType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406,\r\n    HALF_FLOAT = 0x140B,\r\n    UNSIGNED_SHORT_4_4_4_4 = 0x8033,\r\n    UNSIGNED_SHORT_5_5_5_1 = 0x8034,\r\n    UNSIGNED_SHORT_5_6_5 = 0x8363,\r\n    UNSIGNED_INT_2_10_10_10_REV = 0x8368,\r\n    UNSIGNED_INT_24_8 = 0x84FA,\r\n    UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B,\r\n    UNSIGNED_INT_5_9_9_9_REV = 0x8C3E,\r\n    FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD,\r\n    INT_2_10_10_10_REV = 0x8D9F\r\n}\r\n\r\nexport enum TextureParameter {\r\n    TEXTURE_MAG_FILTER = 0x2800,\r\n    TEXTURE_MIN_FILTER = 0x2801,\r\n    TEXTURE_WRAP_S = 0x2802,\r\n    TEXTURE_WRAP_T = 0x2803,\r\n    TEXTURE_BASE_LEVEL = 0x813C,\r\n    TEXTURE_MAX_LEVEL = 0x813D,\r\n    TEXTURE_MAX_LOD = 0x813B,\r\n    TEXTURE_MIN_LOD = 0x813A,\r\n    TEXTURE_WRAP_R = 0x8072,\r\n    TEXTURE_COMPARE_FUNC = 0x884D,\r\n    TEXTURE_COMPARE_MODE = 0x884C\r\n}\r\n\r\nexport enum TextureTarget {\r\n    TEXTURE_2D = 0x0DE1,\r\n    TEXTURE_CUBE_MAP = 0x8513,\r\n    TEXTURE_3D = 0x806F,\r\n    TEXTURE_2D_ARRAY = 0x8C1A,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A\r\n}\r\n\r\nexport enum TextureMagFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600\r\n}\r\n\r\nexport enum TextureMinFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600,\r\n    NEAREST_MIPMAP_NEAREST = 0x2700, \r\n    LINEAR_MIPMAP_NEAREST = 0x2701, \r\n    NEAREST_MIPMAP_LINEAR = 0x2702,\r\n    LINEAR_MIPMAP_LINEAR = 0x2703\r\n}\r\n\r\nexport enum TextureCompareMode {\r\n    COMPARE_REF_TO_TEXTURE = 0x884E,\r\n    NONE = 0\r\n}\r\n\r\nexport enum TextureWrapMode {\r\n    REPEAT = 0x2901,\r\n    CLAMP_TO_EDGE = 0x812F, \r\n    MIRRORED_REPEAT = 0x8370\r\n}\r\n\r\nexport enum TextureCompareFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207\r\n}\r\n\r\nexport type Texture2DPixels = Uint32Array |  Uint16Array | Uint8Array | TexImageSource;\r\n\r\nexport type TextureCubeMapPixels = {\r\n    xPos: TexImageSource;\r\n    xNeg: TexImageSource;\r\n    yPos: TexImageSource;\r\n    yNeg: TexImageSource;\r\n    zPos: TexImageSource;\r\n    zNeg: TexImageSource;\r\n}\r\n\r\nexport type TextureProperties = {\r\n    target: TextureTarget;\r\n    pixels: Texture2DPixels | TextureCubeMapPixels | null;\r\n    width: number;\r\n    height: number;\r\n    format: TexturePixelFormat;\r\n    internalFormat: TextureInternalPixelFormat;\r\n    type: TexturePixelType;\r\n\r\n    depth?: number;\r\n    lod?: number;\r\n    border?: number;\r\n\r\n    subimages?: {\r\n        pixels: Texture2DPixels;\r\n        xoffset: number;\r\n        yoffset: number;\r\n        zoffset?: number;\r\n        width: number;\r\n        height: number;\r\n        depth?: number;\r\n    }[];\r\n\r\n    mipmap?: boolean;\r\n    min?: TextureMinFilter;\r\n    mag?: TextureMagFilter;\r\n\r\n    wrapS?: TextureWrapMode;\r\n    wrapT?: TextureWrapMode;\r\n    wrapR?: TextureWrapMode;\r\n\r\n    baseMipmapLevel?: number;\r\n    maxMipmapLevel?: number;\r\n\r\n    minLod?: number;\r\n    maxLod?: number;\r\n\r\n    compareFunction?: TextureCompareFunction;\r\n    compareMode?: TextureCompareMode;\r\n}\r\n\r\nexport type Texture = {\r\n    name: string;\r\n    unit: number;\r\n    internalTexture: WebGLTexture;\r\n    properties?: TextureProperties;\r\n}\r\n\r\nexport class WebGLTextureUtilities {\r\n\r\n    static #textureUnits: Map<string, number> = new Map();\r\n\r\n\r\n    static getTexturesUnitsEntries(): IterableIterator<[string, number]> {\r\n        return this.#textureUnits.entries();\r\n    }\r\n\r\n    static createTexture(gl: WebGL2RenderingContext, name: string, properties: TextureProperties): Texture | null {\r\n        const internalTexture = gl.createTexture();\r\n        if (internalTexture === null) {\r\n            return null;\r\n        }\r\n\r\n        let unit = this.#textureUnits.get(name);\r\n        if (unit == undefined) {\r\n            unit = Math.max(-1, ...this.#textureUnits.values()) + 1;\r\n            this.#textureUnits.set(name, unit);\r\n        }\r\n\r\n        const {pixels, target, subimages, width, height, format, internalFormat, type} = properties;\r\n        let {lod, border, depth, mipmap} = properties;\r\n\r\n        lod = lod ?? 0;\r\n        border = border ?? 0;\r\n        depth = depth ?? 0;\r\n        mipmap = mipmap ?? true;\r\n\r\n        const activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE);\r\n        if (activeTexture !== unit) {\r\n            gl.activeTexture(gl.TEXTURE0 + unit);\r\n            gl.bindTexture(target, internalTexture);\r\n        }\r\n        \r\n        switch (target) {\r\n            case TextureTarget.TEXTURE_2D: {\r\n                gl.texImage2D(target, lod, internalFormat, width, height, border, format, type, <ArrayBufferView | null>pixels);\r\n                if (subimages) {\r\n                    subimages.forEach((subimage_i) => {\r\n                        const {xoffset, yoffset, width, height, pixels} = subimage_i;\r\n                        gl.texSubImage2D(target, lod!, xoffset, yoffset, width, height, format, type, pixels as ArrayBufferView);\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case TextureTarget.TEXTURE_CUBE_MAP: {\r\n                if (pixels === null) {\r\n                    gl.texImage2D(target, lod, internalFormat, width, height, border, format, type, null);  \r\n                }\r\n                else {\r\n                    if (\"xPos\" in pixels) {\r\n                        const {xPos, xNeg, yPos, yNeg, zPos, zNeg} = pixels;\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_X, lod, internalFormat, width, height, border, format, type, xPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_X, lod, internalFormat, width, height, border, format, type, xNeg);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Y, lod, internalFormat, width, height, border, format, type, yPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Y, lod, internalFormat, width, height, border, format, type, yNeg);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Z, lod, internalFormat, width, height, border, format, type, zPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Z, lod, internalFormat, width, height, border, format, type, zNeg);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case TextureTarget.TEXTURE_2D_ARRAY: {\r\n                gl.texImage3D(target, lod, internalFormat, width, height,  depth, border, format, type, <ArrayBufferView | null>pixels);\r\n                if (subimages) {\r\n                    subimages.forEach((subimage_i, i) => {\r\n                        const {xoffset, yoffset, zoffset, width, height, depth, pixels} = subimage_i;\r\n                        gl.texSubImage3D(target, lod!, xoffset, yoffset, zoffset!, width, height, depth!, format, type, pixels as ArrayBufferView);\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (mipmap) {\r\n            gl.generateMipmap(target);\r\n        }\r\n\r\n        const {min, mag, wrapS, wrapT, wrapR, baseMipmapLevel, maxMipmapLevel, compareFunction, compareMode, minLod, maxLod} = properties;\r\n\r\n        if (min !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MIN_FILTER, min);\r\n        if (mag !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MAG_FILTER, mag);\r\n        if (wrapS  !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_S, wrapS);\r\n        if (wrapT !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_T, wrapT);\r\n        if (wrapR !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_R, wrapR);\r\n        if (baseMipmapLevel !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_BASE_LEVEL, baseMipmapLevel);\r\n        if (maxMipmapLevel !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MAX_LEVEL, maxMipmapLevel);\r\n        if (compareFunction !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_COMPARE_FUNC, compareFunction);\r\n        if (compareMode !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_COMPARE_MODE, compareMode);\r\n        if (minLod !== undefined)\r\n            gl.texParameterf(target, TextureParameter.TEXTURE_MIN_LOD, minLod);\r\n        if (maxLod !== undefined)\r\n            gl.texParameterf(target, TextureParameter.TEXTURE_MAX_LOD, maxLod);\r\n        \r\n        return {\r\n            unit,\r\n            internalTexture,\r\n            name,\r\n            properties: {\r\n                pixels,\r\n                target,\r\n                subimages,\r\n                lod,\r\n                width,\r\n                height,\r\n                format,\r\n                internalFormat,\r\n                type,\r\n                min,\r\n                mag,\r\n                wrapS,\r\n                wrapT,\r\n                wrapR,\r\n                baseMipmapLevel,\r\n                maxMipmapLevel,\r\n                compareFunction,\r\n                compareMode,\r\n                minLod,\r\n                maxLod\r\n            }\r\n        };\r\n    }\r\n\r\n    static setUnpackAlignment(gl: WebGL2RenderingContext, alignment: number): void {\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, alignment);\r\n    }\r\n\r\n    static deleteTexture(gl: WebGL2RenderingContext, texture: Texture): void {\r\n        const {internalTexture, name} = texture;\r\n        if (gl.isTexture(internalTexture)) {\r\n            gl.deleteTexture(internalTexture);\r\n            this.#textureUnits.delete(name);\r\n        }\r\n    }\r\n}","export enum ShaderType {\r\n    FRAGMENT_SHADER = 0x8B30,\r\n    VERTEX_SHADER = 0x8B31,\r\n}\r\n\r\nexport type Program = {\r\n    internalProgram: WebGLProgram;\r\n    vertexShader: Shader;\r\n    fragmentShader: Shader;\r\n}\r\n\r\nexport type Shader = {\r\n    internalShader: WebGLShader;\r\n    type: ShaderType;\r\n    source: string;\r\n}\r\n\r\nexport type ProgramProperties = {\r\n    vertexSource: string;\r\n    vertexFlags?: string[];\r\n    fragmentSource: string;\r\n    fragmentFlags?: string[];\r\n}\r\n\r\nexport class WebGLProgramUtilities {\r\n\r\n    static createShader(gl: WebGL2RenderingContext, type: ShaderType, source: string): Shader | null {\r\n        const internalShader = gl.createShader(type);\r\n        if (internalShader === null) {\r\n            return null;\r\n        }\r\n        gl.shaderSource(internalShader, source);\r\n        gl.compileShader(internalShader);\r\n        \r\n        const success = gl.getShaderParameter(internalShader, gl.COMPILE_STATUS);\r\n        if (success) {\r\n            return {\r\n                type,\r\n                internalShader,\r\n                source\r\n            };\r\n        }\r\n\r\n        const shaderInfoLog = gl.getShaderInfoLog(internalShader);\r\n        if (shaderInfoLog !== null) {\r\n            console.warn(shaderInfoLog);\r\n        }\r\n\r\n        gl.deleteShader(internalShader);\r\n        return null;\r\n    }\r\n    \r\n    static createProgram(gl: WebGL2RenderingContext, properties: ProgramProperties): Program | null {\r\n        const {vertexSource, fragmentSource} = properties;\r\n\r\n        const vertexShader = this.createShader(gl, ShaderType.VERTEX_SHADER, vertexSource);\r\n        if (vertexShader === null) {\r\n            return null;\r\n        }\r\n\r\n        const fragmentShader = this.createShader(gl, ShaderType.FRAGMENT_SHADER, fragmentSource);\r\n        if (fragmentShader === null) {\r\n            return null;\r\n        }\r\n        \r\n        const internalProgram = gl.createProgram();\r\n        if (internalProgram === null) {\r\n            return null;\r\n        }\r\n\r\n        const program: Program = {\r\n            internalProgram,\r\n            vertexShader,\r\n            fragmentShader\r\n        };\r\n        \r\n        gl.attachShader(internalProgram, vertexShader.internalShader);\r\n        gl.attachShader(internalProgram, fragmentShader.internalShader);\r\n        gl.linkProgram(internalProgram);\r\n\r\n        const success = gl.getProgramParameter(internalProgram, gl.LINK_STATUS);\r\n        if (success) {\r\n            return program;\r\n        }\r\n\r\n        const programInfoLog = gl.getProgramInfoLog(internalProgram);\r\n        if (programInfoLog !== null) {\r\n            const vertexInfoLog = gl.getShaderInfoLog(vertexShader.internalShader);\r\n            const fragmentInfoLog = gl.getShaderInfoLog(fragmentShader.internalShader);\r\n            console.warn(programInfoLog);\r\n            console.warn(vertexInfoLog);\r\n            console.warn(fragmentInfoLog);\r\n        }\r\n        this.deleteProgram(gl, program);\r\n\r\n        return null;\r\n    }\r\n\r\n    static recompileProgram(gl: WebGL2RenderingContext, program: Program, properties: Partial<ProgramProperties>) {\r\n        const {internalProgram, vertexShader, fragmentShader} = program;\r\n        let {vertexSource, fragmentSource} = properties;\r\n        if (typeof vertexSource === \"string\") {\r\n            const {internalShader} = vertexShader;\r\n            gl.shaderSource(internalShader, vertexSource);\r\n            gl.compileShader(internalShader);\r\n            vertexShader.source = vertexSource;\r\n        }\r\n        if (typeof fragmentSource === \"string\") {\r\n            const {internalShader} = fragmentShader;\r\n            gl.shaderSource(internalShader, fragmentSource);\r\n            gl.compileShader(internalShader);\r\n            fragmentShader.source = fragmentSource;\r\n        }\r\n        gl.linkProgram(internalProgram);\r\n\r\n        const success = gl.getProgramParameter(internalProgram, gl.LINK_STATUS);\r\n        if (success) {\r\n            return program;\r\n        }\r\n\r\n        const programInfoLog = gl.getProgramInfoLog(internalProgram);\r\n        if (programInfoLog !== null) {\r\n            const vertexInfoLog = gl.getShaderInfoLog(vertexShader.internalShader);\r\n            const fragmentInfoLog = gl.getShaderInfoLog(fragmentShader.internalShader);\r\n            console.warn(programInfoLog);\r\n            console.warn(vertexInfoLog);\r\n            console.warn(fragmentInfoLog);\r\n        }\r\n        return program;\r\n    }\r\n    \r\n    static deleteProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        const {vertexShader, fragmentShader, internalProgram} = program;\r\n        gl.deleteShader(vertexShader.internalShader);\r\n        gl.deleteShader(fragmentShader.internalShader);\r\n        gl.deleteProgram(internalProgram);\r\n    }\r\n\r\n    static useProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        const {internalProgram} = program;\r\n        const currentProgram = gl.getParameter(gl.CURRENT_PROGRAM);\r\n        if (currentProgram !== internalProgram) {\r\n            gl.useProgram(internalProgram);\r\n        }\r\n    }\r\n}","import { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\nimport { Texture } from \"./WebGLTextureUtilities\";\r\n\r\nexport { UniformValue };\r\nexport { Uniform };\r\nexport { UniformSetter };\r\nexport { UniformsListSetter };\r\nexport { WebGLUniformUtilities };\r\n\r\nexport enum UniformType {\r\n    BOOL = 0x8B56,\r\n    BOOL_VEC2 = 0x8B57,\t \r\n    BOOL_VEC3 = 0x8B58,\t \r\n    BOOL_VEC4 = 0x8B59,\r\n    INT = 0x1404,\r\n    INT_VEC2 = 0x8B53,\t \r\n    INT_VEC3 = 0x8B54,\t \r\n    INT_VEC4 = 0x8B55,\t \r\n    INT_SAMPLER_2D = 0x8DCA,\r\n    INT_SAMPLER_3D = 0x8DCB,\r\n    INT_SAMPLER_CUBE = 0x8DCC,\r\n    INT_SAMPLER_2D_ARRAY = 0x8DCF,\r\n    UNSIGNED_INT_SAMPLER_2D = 0x8DD2,\r\n    UNSIGNED_INT_SAMPLER_3D = 0x8DD3,\r\n    UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4,\r\n    UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7,\r\n    UNSIGNED_INT = 0x1405,\r\n    UNSIGNED_INT_VEC2 = 0x8DC6,\r\n    UNSIGNED_INT_VEC3 = 0x8DC7,\r\n    UNSIGNED_INT_VEC4 = 0x8DC8,\r\n    FLOAT = 0x1406,\r\n    FLOAT_VEC2 = 0x8B50,\t \r\n    FLOAT_VEC3 = 0x8B51,\t \r\n    FLOAT_VEC4 = 0x8B52,\r\n    FLOAT_MAT2 = 0x8B5A,\t \r\n    FLOAT_MAT3 = 0x8B5B,\t \r\n    FLOAT_MAT4 = 0x8B5C,\t \r\n    FLOAT_MAT2x3 = 0x8B65,\r\n    FLOAT_MAT2x4 = 0x8B66,\r\n    FLOAT_MAT3x2 = 0x8B67,\r\n    FLOAT_MAT3x4 = 0x8B68,\r\n    FLOAT_MAT4x2 = 0x8B69,\r\n    FLOAT_MAT4x3 = 0x8B6A,\r\n    SAMPLER_2D = 0x8B5E,\t \r\n    SAMPLER_3D = 0x8B5F,\r\n    SAMPLER_CUBE = 0x8B60,\r\n    SAMPLER_2D_SHADOW = 0x8B62,\r\n    SAMPLER_2D_ARRAY = 0x8DC1,\r\n    SAMPLER_2D_ARRAY_SHADOW = 0x8DC4,\r\n    SAMPLER_CUBE_SHADOW = 0x8DC5\r\n}\r\n\r\ntype UniformValue = number | Float32List | Uint32List | Int32List | Texture;\r\n\r\ntype Uniform = {\r\n    value: UniformValue;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n    transpose?: boolean;\r\n}\r\n\r\ntype UniformSetter = {\r\n    type: UniformType;\r\n    set: (value: any) => void;\r\n}\r\n\r\ntype UniformsListSetter = {\r\n    setters: Record<string, UniformSetter>;\r\n    program: Program;\r\n}\r\n\r\nexport enum UniformDataType {\r\n    SCALAR = \"SCALAR\",\r\n    VEC2 = \"VEC2\",\r\n    VEC3 = \"VEC3\",\r\n    VEC4 = \"VEC4\",\r\n    MAT2 = \"MAT2\",\r\n    MAT3 = \"MAT3\",\r\n    MAT4 = \"MAT4\"\r\n}\r\n\r\nclass WebGLUniformUtilities {\r\n\r\n    static asArrayBufferView(uniformValue: UniformValue): ArrayBufferView {\r\n        if (typeof uniformValue === \"object\") {\r\n            if (\"buffer\" in uniformValue) {\r\n                return uniformValue;\r\n            }\r\n            else if (\"unit\" in uniformValue) {\r\n                return Float32Array.of(uniformValue.unit);\r\n            }\r\n            else {\r\n                return Float32Array.from(uniformValue);\r\n            }\r\n        }\r\n        else {\r\n            return Float32Array.of(uniformValue);\r\n        }\r\n    }\r\n\r\n    static getUniformSetter(gl: WebGL2RenderingContext, uniform: Uniform, location: WebGLUniformLocation , uniformType: UniformType): UniformSetter | null { \r\n        const {value, srcOffset, srcLength} = uniform;\r\n        let {transpose} = uniform;\r\n        transpose = transpose ?? false;\r\n\r\n        switch (uniformType) {\r\n            case UniformType.FLOAT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1f(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1ui(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL:\r\n            case UniformType.INT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1i(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.INT_SAMPLER_2D:\r\n            case UniformType.INT_SAMPLER_2D_ARRAY:\r\n            case UniformType.INT_SAMPLER_3D:\r\n            case UniformType.INT_SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D:\r\n            case UniformType.SAMPLER_3D:\r\n            case UniformType.SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D_SHADOW:\r\n            case UniformType.SAMPLER_2D_ARRAY:\r\n            case UniformType.SAMPLER_2D_ARRAY_SHADOW:\r\n            case UniformType.SAMPLER_CUBE_SHADOW:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_3D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_CUBE:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D_ARRAY:\r\n                if (typeof value == \"object\" && \"unit\" in value) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (tex: Texture) => {\r\n                            const {unit} = tex;\r\n                            gl.uniform1i(location, unit);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform2fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC2:\r\n            case UniformType.INT_VEC2:\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform2iv(location, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC2:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform2uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform3fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC3:\r\n            case UniformType.INT_VEC3:\t\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform3iv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC3:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform3uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform4fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC4:\r\n            case UniformType.INT_VEC4:\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform4iv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC4:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform4uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4:\t\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4fv(location, transpose!, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x4fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x4fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static getUniformsListSetter(gl: WebGL2RenderingContext, program: Program, list: Record<string, Uniform>): UniformsListSetter | null {\r\n        const {internalProgram} = program;\r\n        \r\n        const uniformsNames = Object.keys(list);\r\n        let uniformIndices = gl.getUniformIndices(internalProgram, uniformsNames);\r\n        if (uniformIndices === null) {\r\n            console.error(`No uniform indices found.`);\r\n            return null;\r\n        }\r\n\r\n        const activeUniforms = gl.getProgramParameter(internalProgram, gl.ACTIVE_UNIFORMS);\r\n        const validUniformIndices = Array.from(uniformIndices).filter((index_i, i) => {\r\n            const isValid = index_i >= 0 && index_i < activeUniforms;\r\n            if (!isValid) {\r\n                console.warn(`Uniform ${uniformsNames[i]} could not be located.`);\r\n            }\r\n            return isValid;\r\n        });\r\n        \r\n        const setters: Record<string, UniformSetter> = {};\r\n\r\n        const activeUniformsInfo: WebGLActiveInfo[] = validUniformIndices.map(index => gl.getActiveUniform(internalProgram, index)!);\r\n        activeUniformsInfo.forEach(({name, type}) => {\r\n            const uniform = list[name];\r\n            const location = gl.getUniformLocation(internalProgram, name);\r\n            if (location === null) {\r\n                console.warn(`Uniform ${name} could not be located.`);\r\n                return null;\r\n            }\r\n            const setter = this.getUniformSetter(gl, uniform, location, type);\r\n            if (setter) {\r\n                setters[name] = setter;\r\n            }\r\n        });\r\n        \r\n        return {\r\n            setters,\r\n            program\r\n        };\r\n    }\r\n\r\n    static setUniformsListValues(gl: WebGL2RenderingContext, setter: UniformsListSetter, list: Record<string, Uniform>): void {\r\n        const {program, setters} = setter;\r\n        WebGLProgramUtilities.useProgram(gl, program);\r\n        \r\n        Object.entries(list).forEach(([uniformName, uniform]) => {\r\n            if (uniformName in setters) {\r\n                const setter = setters[uniformName];\r\n                const {value} = uniform;\r\n                setter.set(value);\r\n            }\r\n            else {\r\n                console.error(`Uniform ${uniformName} does not match any of the given setters.`);\r\n            }\r\n        });\r\n    }\r\n}","import { Uniform, WebGLUniformUtilities } from \"./WebGLUniformUtilities\";\r\nimport { Buffer, BufferDataUsage } from \"./WebGLBufferUtilities\";\r\nimport { Program } from \"./WebGLProgramUtilities\";\r\n\r\nexport type UniformBlock = {\r\n    name: string;\r\n    blockIndex: number;\r\n    program: Program;\r\n    layout: Record<string, {\r\n        byteOffset: number;\r\n    }>;\r\n    blockSize: number;\r\n    bindingPoint?: number;\r\n    buffer?: UniformBuffer;\r\n}\r\n\r\nexport type UniformBlockProperties = {\r\n    buffer?: number;\r\n    uniforms?: Record<string, Uniform>;\r\n}\r\n\r\nexport type UniformBuffer = Buffer & {\r\n    bindingPoint?: number;\r\n    rangeOffset?: number;\r\n    rangeSize?: number;\r\n}\r\n\r\nexport type UniformBufferProperties = {\r\n    usage: BufferDataUsage;\r\n    data?: ArrayBuffer;\r\n}\r\n\r\nexport type UniformBlocksProperties = {\r\n    buffers: (UniformBuffer | UniformBufferProperties)[];\r\n    blocks: Record<string, {\r\n        buffer: number;\r\n        uniforms: Record<string, Uniform>;\r\n    }>;\r\n}\r\n\r\nexport class WebGLUniformBlockUtilities {\r\n\r\n    static #bindingPoints: Map<string, number> = new Map();\r\n\r\n    static getBindingPointsEntries(): IterableIterator<[string, number]> {\r\n        const bindingPoints = this.#bindingPoints;\r\n        return bindingPoints.entries();\r\n    }\r\n\r\n    static createUniformBlock(gl: WebGL2RenderingContext, program: Program, name: string): UniformBlock | null {\r\n        const {internalProgram} = program;\r\n\r\n        const blockIndex = gl.getUniformBlockIndex(internalProgram, name);\r\n        if (blockIndex === gl.INVALID_INDEX) {\r\n            console.error(`Block '${name}' does not identify a valid uniform block.`);\r\n            return null;\r\n        }\r\n\r\n        const blockSize = gl.getActiveUniformBlockParameter(internalProgram, blockIndex, gl.UNIFORM_BLOCK_DATA_SIZE);\r\n        const layout: UniformBlock[\"layout\"] = {};\r\n        const blockUniformsIndices = gl.getActiveUniformBlockParameter(internalProgram, blockIndex, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES);\r\n        const activeUniformsOffsets = gl.getActiveUniforms(internalProgram, blockUniformsIndices, gl.UNIFORM_OFFSET);\r\n        activeUniformsOffsets.forEach((uniformOffset_i: number, i: number) => {\r\n            const uniformIndex = blockUniformsIndices[i];\r\n            const uniformInfo = gl.getActiveUniform(internalProgram, uniformIndex);\r\n            if (uniformInfo !== null) {\r\n                const {name} = uniformInfo;\r\n                layout[name] = {\r\n                    byteOffset: uniformOffset_i\r\n                };\r\n            }\r\n        });\r\n\r\n        return {\r\n            name,\r\n            blockIndex,\r\n            blockSize,\r\n            layout,\r\n            program\r\n        };\r\n    }\r\n\r\n    static createUniformBuffer(gl: WebGL2RenderingContext, byteLength: number, bind?: boolean, usage?: BufferDataUsage): UniformBuffer | null {\r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n        \r\n        const target = gl.UNIFORM_BUFFER;\r\n        gl.bindBuffer(target, internalBuffer);\r\n\r\n        usage = usage ?? BufferDataUsage.STATIC_READ;\r\n        bind = bind ?? false;\r\n\r\n        const bindingPoint = bind ? this.lastBindingPoint++ : undefined;\r\n        \r\n        gl.bufferData(target, byteLength, usage);\r\n        \r\n        return {\r\n            internalBuffer,\r\n            byteLength,\r\n            bindingPoint,\r\n            target,\r\n            usage\r\n        };\r\n    }\r\n\r\n    static createRangedUniformBuffers(gl: WebGL2RenderingContext, blocks: UniformBlock[], bind?: boolean, usage?: BufferDataUsage): UniformBuffer[] | null {\r\n\r\n        const offsetAlignment = gl.getParameter(gl.UNIFORM_BUFFER_OFFSET_ALIGNMENT);\r\n        const bufferByteLength = blocks.reduce(\r\n            (size, block) => size + Math.max(Math.ceil(block.blockSize / offsetAlignment), 1) * offsetAlignment, 0\r\n        );\r\n        \r\n        const buffer = this.createUniformBuffer(gl, bufferByteLength, false, usage);\r\n        if (buffer === null) {\r\n            return null;\r\n        }\r\n        \r\n        bind = bind ?? false;\r\n\r\n        let rangeOffset = 0;\r\n        const rangedUniformBuffers = blocks.map((block) => {\r\n            const {blockSize: rangeSize} = block;\r\n            const bindingPoint = bind ? this.lastBindingPoint++ : undefined;\r\n            const rangedUniformBuffer = {\r\n                ...buffer,\r\n                bindingPoint,\r\n                rangeOffset,\r\n                rangeSize\r\n            };\r\n            rangeOffset += Math.max(Math.ceil(rangeSize / offsetAlignment), 1) * offsetAlignment;\r\n            return rangedUniformBuffer;\r\n        });\r\n\r\n        return rangedUniformBuffers;\r\n    }\r\n\r\n    static setUniformBufferValues(gl: WebGL2RenderingContext, block: UniformBlock, buffer: UniformBuffer, uniforms: Record<string, Uniform>): void {\r\n        const {internalBuffer, target} = buffer;\r\n        const currentUniformBuffer = gl.getParameter(gl.UNIFORM_BUFFER_BINDING);\r\n        if (currentUniformBuffer !== internalBuffer) {\r\n            gl.bindBuffer(target, internalBuffer);\r\n        }\r\n        \r\n        const {layout, name} = block;\r\n        const {rangeOffset} = buffer;\r\n        Object.entries(uniforms).forEach(([uniformName, uniform]) => {\r\n            const {value} = uniform;\r\n            if (!(uniformName in layout)) {\r\n                console.warn(`${uniformName} does not exist in block ${name}.`);\r\n            }\r\n            const {byteOffset} = layout[uniformName];\r\n            gl.bufferSubData(target, byteOffset + (rangeOffset ?? 0), WebGLUniformUtilities.asArrayBufferView(value));\r\n        });\r\n    }\r\n\r\n    static setUniformBufferData(gl: WebGL2RenderingContext, buffer: UniformBuffer, data: ArrayBuffer | ArrayBufferView, dstByteOffset?: number, srcOffset?: number, length?: number): void {\r\n        const {internalBuffer, target} = buffer;\r\n        let {rangeOffset} = buffer;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        const byteOffset = (rangeOffset ?? 0) + (dstByteOffset ?? 0);\r\n        if (data instanceof ArrayBuffer) {\r\n            gl.bufferSubData(target, byteOffset, data);\r\n        }\r\n        else {\r\n            srcOffset = srcOffset ?? 0;\r\n            gl.bufferSubData(target, byteOffset, data, srcOffset, length);\r\n        }\r\n    }\r\n\r\n    static lastBindingPoint = 0;\r\n\r\n    static bindUniformBuffer(gl: WebGL2RenderingContext, block: UniformBlock, buffer: UniformBuffer): void {\r\n        const {internalBuffer, target} = buffer;\r\n        let {rangeOffset, rangeSize} = buffer;\r\n        const {bindingPoint} = buffer;\r\n        const {program, blockIndex} = block;\r\n        const {internalProgram} = program;\r\n\r\n        if (bindingPoint !== undefined) {\r\n            block.buffer = buffer;\r\n            gl.uniformBlockBinding(internalProgram, blockIndex, bindingPoint);\r\n            \r\n            if (bindingPoint !== undefined) {\r\n                if (rangeOffset !== undefined && rangeSize !== undefined) {\r\n                    gl.bindBufferRange(target, bindingPoint, internalBuffer, rangeOffset, rangeSize);\r\n                }\r\n                else {\r\n                    gl.bindBufferBase(target, bindingPoint, internalBuffer);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","export enum StencilAction {\r\n    KEEP = 0x1E00,\r\n    REPLACE\t= 0x1E01,\r\n    INCR = 0x1E02,\r\n    DECR = 0x1E03,\r\n    INVERT = 0x150A,\r\n    INCR_WRAP = 0x8507,\r\n    DECR_WRAP = 0x8508\r\n}\r\n\r\nexport enum BufferMask {\r\n    DEPTH_BUFFER_BIT = 0x00000100,\r\n    STENCIL_BUFFER_BIT = 0x00000400,\r\n    COLOR_BUFFER_BIT = 0x00004000\r\n}\r\n\r\nexport enum TestFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207,\r\n}\r\n\r\nexport enum BlendingMode {\r\n    ZERO = 0,\r\n    ONE = 1,\r\n    SRC_COLOR = 0x0300,\r\n    ONE_MINUS_SRC_COLOR = 0x0301,\r\n    SRC_ALPHA = 0x0302,\r\n    ONE_MINUS_SRC_ALPHA\t= 0x0303,\r\n    DST_ALPHA = 0x0304,\r\n    ONE_MINUS_DST_ALPHA = 0x0305,\r\n    DST_COLOR = 0x0306,\r\n    ONE_MINUS_DST_COLOR = 0x0307,\r\n    SRC_ALPHA_SATURATE = 0x0308,\r\n    CONSTANT_COLOR = 0x8001,\r\n    ONE_MINUS_CONSTANT_COLOR = 0x8002,\r\n    CONSTANT_ALPHA = 0x8003,\r\n    ONE_MINUS_CONSTANT_ALPHA = 0x8004\r\n}\r\n\r\nexport enum BlendingEquation {\r\n    FUNC_ADD = 0x8006,\r\n    FUNC_SUBTRACT = 0x800A,\r\n    FUNC_REVERSE_SUBTRACT = 0x800B,\r\n    MIN = 0x8007,\r\n    MAX = 0x8008,\r\n}\r\n\r\nexport enum Capabilities {\r\n    BLEND = 0x0BE2,\r\n    CULL_FACE = 0x0B44,\r\n    DEPTH_TEST = 0x0B71,\r\n    DITHER = 0x0BD0,\r\n    POLYGON_OFFSET_FILL = 0x8037,\r\n    SAMPLE_ALPHA_TO_COVERAGE = 0x809E,\r\n    SAMPLE_COVERAGE = 0x80A0,\r\n    SCISSOR_TEST = 0x0C11,\r\n    STENCIL_TEST= 0x0B90,\r\n    RASTERIZER_DISCARD = 0x8C89\r\n}\r\n\r\nexport enum Face {\r\n    FRONT = 0x0404,\r\n    BACK = 0x0405,\r\n    FRONT_AND_BACK = 0x0408\r\n}\r\n\r\nexport enum WindingOrder {\r\n    CW = 0x0900,\r\n    CCW = 0x0901\r\n}\r\n\r\nexport enum HintTarget {\r\n    GENERATE_MIPMAP_HINT = 0x8192,\r\n    FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B\r\n}\r\n\r\nexport enum HintMode {\r\n    DONT_CARE = 0x1100,\r\n    FASTEST\t= 0x1101,\r\n    NICEST = 0x1102\r\n}\r\n\r\nexport class WebGLRendererUtilities {\r\n\r\n    static hint(gl: WebGL2RenderingContext, target: HintTarget, mode: HintMode) {\r\n        gl.hint(target, mode);\r\n    }\r\n\r\n    static frontFace(gl: WebGL2RenderingContext, winding: WindingOrder): void {\r\n        gl.frontFace(winding);\r\n    }\r\n\r\n    static scissor(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.scissor(x, y, width, height);\r\n    }\r\n\r\n    static viewport(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.viewport(x, y, width, height);\r\n    }\r\n\r\n    static clearColor(gl: WebGL2RenderingContext, color: ArrayLike<number>): void {\r\n        gl.clearColor(color[0], color[1], color[2], color[3]);\r\n    }\r\n\r\n    static depthFunction(gl: WebGL2RenderingContext, func: TestFunction): void {\r\n        gl.depthFunc(func);\r\n    }\r\n\r\n    static blendEquation(gl: WebGL2RenderingContext, equ: BlendingEquation): void {\r\n        gl.blendEquation(equ);\r\n    }\r\n\r\n    static blendFunction(gl: WebGL2RenderingContext, srcFunc: BlendingMode, dstFunc: BlendingMode): void {\r\n        gl.blendFunc(srcFunc, dstFunc);\r\n    }\r\n\r\n    static blendFunctionSeparate(gl: WebGL2RenderingContext, srcFunc: BlendingMode, dstFunc: BlendingMode, srcAlpha: number, dstAlpha: number): void {\r\n        gl.blendFuncSeparate(srcFunc, dstFunc, srcAlpha, dstAlpha);\r\n    }\r\n\r\n    static stencilFunction(gl: WebGL2RenderingContext, func: TestFunction, ref: number, mask: number, face: Face): void {\r\n        gl.stencilFuncSeparate(face, func, ref, mask);\r\n    }\r\n\r\n    static stencilOperations(gl: WebGL2RenderingContext, fail: StencilAction, zFail: StencilAction, zPass: StencilAction, face: Face) {\r\n        gl.stencilOpSeparate(face, fail, zFail, zPass);\r\n    }\r\n\r\n    static stencilMask(gl: WebGL2RenderingContext, mask: number, face: Face) {\r\n        gl.stencilMaskSeparate(face, mask);\r\n    }\r\n\r\n    static colorMask(gl: WebGL2RenderingContext, red: boolean, green: boolean, blue: boolean, alpha: boolean) {\r\n        gl.colorMask(red, green, blue, alpha);\r\n    }\r\n\r\n    static enable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.enable(capability);\r\n    }\r\n\r\n    static disable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.disable(capability);\r\n    }\r\n\r\n    static clear(gl: WebGL2RenderingContext, buffer: BufferMask): void {\r\n        gl.clear(buffer);\r\n    }\r\n\r\n    static getViewport(gl: WebGL2RenderingContext): Int32Array {\r\n        return gl.getParameter(gl.VIEWPORT) as Int32Array;\r\n    }\r\n\r\n    static getMaxSamples(gl: WebGL2RenderingContext): number {\r\n        return gl.getParameter(gl.MAX_SAMPLES) as number;\r\n    }\r\n}","import { VertexArray, VertexArrayValues, VertexArrayProperties, WebGLVertexArrayUtilities, DrawMode } from \"./WebGLVertexArrayUtilities\"\r\nimport { Texture, TextureProperties, WebGLTextureUtilities } from \"./WebGLTextureUtilities\"\r\nimport { UniformBlock, UniformBlockProperties, UniformBuffer, UniformBufferProperties, WebGLUniformBlockUtilities } from \"./WebGLUniformBlockUtilities\"\r\nimport { Uniform, UniformsListSetter, WebGLUniformUtilities } from \"./WebGLUniformUtilities\"\r\nimport { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\"\r\n\r\nexport type PacketProperties = {\r\n    program: Program;\r\n    vertexArray: VertexArrayProperties;\r\n    uniformBuffers?: (UniformBufferProperties | UniformBuffer)[];\r\n    uniformBlocks?: Record<string, UniformBlockProperties>;\r\n    uniforms?: Record<string, Uniform>;\r\n    drawCommand: {\r\n        mode: DrawMode;\r\n        elementsCount?: number;\r\n        instanceCount?: number;\r\n        multiDraw?: {\r\n            firstsList?: Iterable<number> | Int32Array;\r\n            firstsOffset?: number;\r\n            countsList?: Iterable<number> | Int32Array;\r\n            countsOffset?: number;\r\n            offsetsList?: Iterable<number> | Int32Array;\r\n            offsetsOffset?: number;\r\n            instanceCountsList?: Iterable<number> | Int32Array;\r\n            instanceCountsOffset?: number;\r\n            drawCount?: number;\r\n        }\r\n    }\r\n}\r\n\r\nexport type PacketValues = {\r\n    vertexArray?: VertexArrayValues;\r\n    uniforms?: Record<string, Uniform>;\r\n    uniformBlocks?: Record<string, {\r\n        uniforms: Record<string, Uniform>;\r\n    }>;\r\n}\r\n\r\nexport type Packet = {\r\n    program: Program;\r\n    vertexArray: VertexArray;\r\n    uniforms?: UniformsListSetter;\r\n    uniformBlocks?: Record<string, UniformBlock>;\r\n    drawCommand: PacketDrawCommand;\r\n}\r\n\r\nexport interface PacketDrawCommand {\r\n    mode: DrawMode;\r\n    elementsCount?: number;\r\n    instanceCount?: number;\r\n    multiDraw?: {\r\n        firstsList?: Iterable<number> | Int32Array;\r\n        firstsOffset?: number;\r\n        countsList?: Iterable<number> | Int32Array;\r\n        countsOffset?: number;\r\n        offsetsList?: Iterable<number> | Int32Array;\r\n        offsetsOffset?: number;\r\n        instanceCountsList?: Iterable<number> | Int32Array;\r\n        instanceCountsOffset?: number;\r\n        drawCount?: number;\r\n    };\r\n}\r\n\r\nexport class WebGLPacketUtilities {\r\n\r\n    static createTextures(gl: WebGL2RenderingContext, textures: Record<string, TextureProperties>): Record<string, Texture> {\r\n        const _textures: {\r\n            [key: string]: Texture\r\n        } = {};\r\n        Object.entries(textures).forEach(([name, properties]) => {\r\n            const texture = WebGLTextureUtilities.createTexture(gl, name, properties);\r\n            if (texture !== null) {\r\n                _textures[name] = texture;\r\n            }\r\n        });\r\n        return _textures;\r\n    }\r\n    \r\n    static createPacket(gl: WebGL2RenderingContext, packet: PacketProperties): Packet | null {\r\n        const {program, vertexArray: vertexArrayProperties, uniforms: uniformsProperties, uniformBlocks: uniformBlocksProperties, uniformBuffers: uniformBuffersProperties} = packet;\r\n        const {drawCommand} = packet;\r\n\r\n        let vertexArray: VertexArray | null = null;\r\n        vertexArray = WebGLVertexArrayUtilities.createVertexArray(gl, program, vertexArrayProperties);\r\n        if (vertexArray === null) {\r\n            return null;\r\n        }\r\n      \r\n        let uniforms: UniformsListSetter | null | undefined = undefined;\r\n        if (uniformsProperties !== undefined) {\r\n            uniforms = WebGLUniformUtilities.getUniformsListSetter(gl, program, uniformsProperties);\r\n            if (uniforms === null) {\r\n                return null;\r\n            }\r\n            WebGLUniformUtilities.setUniformsListValues(gl, uniforms, uniformsProperties);\r\n        }\r\n\r\n        let uniformBlocks: Record<string, UniformBlock> = {};\r\n        const uniformBlocksPropertiesEntries = uniformBlocksProperties ? Object.entries(uniformBlocksProperties) : [];\r\n        const uniformBuffersMaxIndex = (uniformBuffersProperties?.length ?? 0) - 1;\r\n        uniformBlocksPropertiesEntries.forEach(([_, uniformBlockProperty]) => {\r\n            const {buffer} = uniformBlockProperty;\r\n            if (buffer !== undefined && buffer > uniformBuffersMaxIndex) {\r\n                console.error(`Uniform buffer with index ${buffer} does not exist.`);\r\n            }\r\n        });\r\n        if (uniformBuffersProperties) {\r\n            uniformBuffersProperties.forEach(\r\n                (uniformBuffersProperty_i, i) => {\r\n                    const relatedBlockProperties = uniformBlocksPropertiesEntries.filter(\r\n                        ([_, uniformBlockProperty]) => uniformBlockProperty.buffer === i\r\n                    );\r\n                    const relatedBlocks = <UniformBlock[]>relatedBlockProperties.map(\r\n                        ([blockName, _]) => WebGLUniformBlockUtilities.createUniformBlock(gl, program, blockName)\r\n                    );\r\n                    const {length: relatedBlocksCount} = relatedBlocks;        \r\n                    if (\"internalBuffer\" in uniformBuffersProperty_i) {\r\n                        relatedBlocks.forEach((block_i) => {\r\n                            const {name} = block_i!;\r\n                            WebGLUniformBlockUtilities.bindUniformBuffer(gl, block_i!, uniformBuffersProperty_i);\r\n                            uniformBlocks[name] = block_i!;\r\n                        });\r\n                    }\r\n                    else {\r\n                        if (relatedBlocksCount > 0) {\r\n                            const {usage, data} = uniformBuffersProperty_i;\r\n                            if (relatedBlocksCount > 1) {\r\n                                const rangedBuffers = WebGLUniformBlockUtilities.createRangedUniformBuffers(gl, <UniformBlock[]>relatedBlocks, true, usage)!;\r\n                                if (data) {\r\n                                    WebGLUniformBlockUtilities.setUniformBufferData(gl, rangedBuffers[0], data);\r\n                                }\r\n                                relatedBlocks.forEach((block_i, i) => {\r\n                                    const {name} = block_i!;\r\n                                    const rangedBuffer = rangedBuffers[i];\r\n                                    WebGLUniformBlockUtilities.bindUniformBuffer(gl, block_i!, rangedBuffer);\r\n                                    const {uniforms} = relatedBlockProperties[i][1];\r\n                                    if (uniforms) {\r\n                                        WebGLUniformBlockUtilities.setUniformBufferValues(gl, block_i, rangedBuffer, uniforms);\r\n                                    }\r\n                                    uniformBlocks[name] = block_i!;\r\n                                });\r\n                            }\r\n                            else {\r\n                                const relatedBlock = relatedBlocks[0];\r\n                                const {blockSize, name} = relatedBlock;\r\n                                const buffer = WebGLUniformBlockUtilities.createUniformBuffer(gl, blockSize, true, usage);\r\n                                if (buffer === null) {\r\n                                    return null;\r\n                                }\r\n                                if (data) {\r\n                                    WebGLUniformBlockUtilities.setUniformBufferData(gl, buffer, data);\r\n                                }\r\n                                WebGLUniformBlockUtilities.bindUniformBuffer(gl, relatedBlock!, buffer!);\r\n                                const {uniforms} = relatedBlockProperties[0][1];\r\n                                if (uniforms) {\r\n                                    WebGLUniformBlockUtilities.setUniformBufferValues(gl, relatedBlock, buffer, uniforms);\r\n                                }\r\n                                uniformBlocks[name] = relatedBlock!;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        const remainingBlockProperties = uniformBlocksPropertiesEntries.filter(\r\n            ([_, uniformBlockProperty]) => uniformBlockProperty.buffer === undefined\r\n        );\r\n        remainingBlockProperties.forEach(([blockName, uniformBlockProperties]) => {\r\n            const {uniforms} = uniformBlockProperties;\r\n            const block = WebGLUniformBlockUtilities.createUniformBlock(gl, program, blockName);\r\n            if (block === null) {\r\n                return null;\r\n            }\r\n            const {blockSize} = block;\r\n            const buffer = WebGLUniformBlockUtilities.createUniformBuffer(gl, blockSize, true);\r\n            if (buffer === null) {\r\n                return null;\r\n            }\r\n            WebGLUniformBlockUtilities.bindUniformBuffer(gl, block, buffer);\r\n            if (uniforms !== undefined) {\r\n                WebGLUniformBlockUtilities.setUniformBufferValues(gl, block, buffer, uniforms);\r\n            }\r\n            uniformBlocks[blockName] = block;\r\n        });\r\n\r\n        return {\r\n            program,\r\n            vertexArray,\r\n            uniforms,\r\n            uniformBlocks,\r\n            drawCommand\r\n        };\r\n    }\r\n\r\n    static setPacketValues(gl: WebGL2RenderingContext, packet: Packet, values: PacketValues): void {\r\n        const {vertexArray: vertexArrayValues, uniforms: uniformsValues, uniformBlocks: uniformsBlocksValues} = values;\r\n        const {vertexArray, uniforms, uniformBlocks} = packet;\r\n\r\n        if (vertexArrayValues !== undefined) {\r\n            WebGLVertexArrayUtilities.setVertexArrayValues(gl, vertexArray, vertexArrayValues);\r\n        }\r\n        if (uniforms !== undefined && uniformsValues !== undefined) {\r\n            WebGLUniformUtilities.setUniformsListValues(gl, uniforms, uniformsValues);\r\n        }\r\n        if (uniformBlocks !== undefined && uniformsBlocksValues !== undefined) {\r\n            const uniformBlocksValuesEntries = uniformsBlocksValues ? Object.entries(uniformsBlocksValues) : [];\r\n            uniformBlocksValuesEntries.forEach(([blockName, uniformBlock]) => {\r\n                const {uniforms} = uniformBlock;\r\n                const block = uniformBlocks[blockName];\r\n                const {buffer} = block;\r\n                if (buffer) {\r\n                    WebGLUniformBlockUtilities.setUniformBufferValues(gl, block, buffer, uniforms);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    static #multiDrawExtension: WEBGL_multi_draw | null = null;\r\n\r\n    static enableMultidrawExtension(gl: WebGL2RenderingContext) {\r\n        this.#multiDrawExtension = gl.getExtension(\"WEBGL_multi_draw\");\r\n    }\r\n\r\n    static drawPacket(gl: WebGL2RenderingContext, packet: Packet, drawCommand: PacketDrawCommand = packet.drawCommand): void {\r\n        const {vertexArray} = packet;\r\n        const {program, internalVertexArray, elementBuffer} = vertexArray;\r\n        const {mode, elementsCount, instanceCount, multiDraw} = drawCommand;\r\n\r\n        WebGLProgramUtilities.useProgram(gl, program);\r\n        \r\n        const currentVertexArray = gl.getParameter(gl.VERTEX_ARRAY_BINDING);\r\n        if (currentVertexArray !== internalVertexArray) {\r\n            gl.bindVertexArray(internalVertexArray);\r\n        }\r\n        \r\n        if (elementBuffer) {\r\n            const {indexType} = elementBuffer;\r\n            if (instanceCount !== undefined && elementsCount !== undefined) {\r\n                gl.drawElementsInstanced(mode, elementsCount, indexType, 0, instanceCount);\r\n            }\r\n            else if (multiDraw) {\r\n                const multiDrawExtension = this.#multiDrawExtension!;\r\n                const {countsList, countsOffset, offsetsList, offsetsOffset, drawCount, instanceCountsList, instanceCountsOffset} = multiDraw;\r\n                if (instanceCountsList !== undefined && instanceCountsOffset !== undefined) {\r\n                    multiDrawExtension.multiDrawElementsInstancedWEBGL(\r\n                        mode, countsList!, countsOffset!, indexType!,\r\n                        offsetsList!, offsetsOffset!, instanceCountsList, instanceCountsOffset, drawCount!\r\n                    );\r\n                }\r\n                else {\r\n                    multiDrawExtension.multiDrawElementsWEBGL(\r\n                        mode, countsList!, countsOffset!, indexType!,\r\n                        offsetsList!, offsetsOffset!, drawCount!\r\n                    );\r\n                }\r\n            }\r\n            else if (elementsCount !== undefined) {\r\n                gl.drawElements(mode, elementsCount, indexType, 0);\r\n            }\r\n        }\r\n        else {\r\n            if (instanceCount !== undefined && elementsCount !== undefined) {\r\n                gl.drawArraysInstanced(mode, 0, elementsCount, instanceCount);\r\n            }\r\n            else if (multiDraw) {\r\n                const multiDrawExtension = this.#multiDrawExtension!;\r\n                const {countsList, countsOffset, firstsList, firstsOffset, drawCount, instanceCountsList, instanceCountsOffset} = multiDraw;\r\n                if (instanceCountsList !== undefined && instanceCountsOffset !== undefined) {\r\n                    multiDrawExtension.multiDrawArraysInstancedWEBGL(\r\n                        mode, firstsList!, firstsOffset!,\r\n                        countsList!, countsOffset!, instanceCountsList, instanceCountsOffset, drawCount!\r\n                    );\r\n                }\r\n                else {\r\n                    multiDrawExtension.multiDrawArraysWEBGL(\r\n                        mode, firstsList!, firstsOffset!, \r\n                        countsList!, countsOffset!, drawCount!\r\n                    );\r\n                }\r\n            }\r\n            else if (elementsCount !== undefined) {\r\n                gl.drawArrays(mode, 0, elementsCount);\r\n            }\r\n        }\r\n    }\r\n}","export { ColorValues };\r\nexport { Color };\r\n\r\ntype ColorValues = [number, number, number];\r\n\r\ninterface ColorConstructor {\r\n    readonly prototype: Color;\r\n    new(): Color;\r\n    new(values: ColorValues): Color;\r\n    new(values?: ColorValues): Color;\r\n    readonly BLACK: Color;\r\n    readonly RED: Color;\r\n    readonly GREEN: Color;\r\n    readonly BLUE: Color;\r\n    readonly WHITE: Color;\r\n    array(...colors: Color[]): number[];\r\n    lerp(a: Color, b: Color, t: number): Color;\r\n}\r\n\r\ninterface Color extends ArrayLike<number> {\r\n    readonly array: Float32Array;\r\n    readonly length: number;\r\n    0: number;\r\n    1: number;\r\n    2: number;\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n    copy(color: Color): Color;\r\n    clone(): Color;\r\n    getValues(): ColorValues;\r\n    setValues(\r\n        r: number,\r\n        g: number,\r\n        b: number\r\n    ): Color;\r\n    lerp(color: Color, t: number): Color;\r\n    normalize(): Color;\r\n}\r\n\r\nclass ColorBase implements Color {\r\n    [index: number]: number;\r\n    readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n    constructor(r: number, g: number, b: number)\r\n    constructor(r?: number, g?: number, b?: number) {\r\n\t\tthis.array = new Float32Array([\r\n            r ?? 0, g ?? 0, b ?? 0\r\n        ]);\r\n    }\r\n    \r\n    static readonly BLACK = new ColorBase(0, 0, 0);\r\n    static readonly RED = new ColorBase(1, 0, 0);\r\n    static readonly GREEN = new ColorBase(0, 1, 0);\r\n    static readonly BLUE = new ColorBase(0, 0, 1);\r\n    static readonly WHITE = new ColorBase(1, 1, 1);\r\n\r\n    static array(...colors: Color[]): number[] {\r\n        const a = new Array<number>(colors.length * 4);\r\n        let c;\r\n        let i = 0;\r\n        for (const color of colors) {\r\n            c = color.array;\r\n            a[i + 0] = c[0];\r\n            a[i + 1] = c[1];\r\n            a[i + 2] = c[2];\r\n            i += 3;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    get length(): number {\r\n        return 3;\r\n    }\r\n\r\n    get r(): number {\r\n        return this.array[0];\r\n    }\r\n\r\n    set r(r: number) {\r\n        this.array[0] = r;\r\n    }\r\n\r\n    get g(): number {\r\n        return this.array[1];\r\n    }\r\n\r\n    set g(g: number) {\r\n        this.array[1] = g;\r\n    }\r\n\r\n    get b(): number {\r\n        return this.array[2];\r\n    }\r\n\r\n    set b(b: number) {\r\n        this.array[2] = b;\r\n    }\r\n\r\n    get a(): number {\r\n        return this.array[3];\r\n    }\r\n\r\n    set a(a: number) {\r\n        this.array[3] = a;\r\n    }\r\n\r\n    get 0(): number {\r\n        return this.array[0];\r\n    }\r\n\r\n    set 0(r: number) {\r\n        this.array[0] = r;\r\n    }\r\n\r\n    get 1(): number {\r\n        return this.array[1];\r\n    }\r\n\r\n    set 1(g: number) {\r\n        this.array[1] = g;\r\n    }\r\n\r\n    get 2(): number {\r\n        return this.array[2];\r\n    }\r\n\r\n    set 2(b: number) {\r\n        this.array[2] = b;\r\n    }\r\n\r\n    get 3(): number {\r\n        return this.array[3];\r\n    }\r\n\r\n    set 3(a: number) {\r\n        this.array[3] = a;\r\n    }\r\n\r\n    setValues(r: number, g: number, b: number): this {\r\n\t\tconst {array} = this;\r\n\r\n\t\tarray[0] = r;\r\n\t\tarray[1] = g;\r\n\t\tarray[2] = b;\r\n\r\n\t\treturn this;\r\n    }\r\n    \r\n    getValues(): ColorValues {\r\n\t\tconst {array} = this;\r\n\t\t\r\n\t\treturn [\r\n\t\t\tarray[0], array[1], array[2]\r\n\t\t];\r\n\t}\r\n    \r\n    copy(color: Color): this {\r\n        const {array} = this;\r\n        const {r, g, b} = color;\r\n\r\n        array[0] = r;\r\n        array[1] = g;\r\n        array[2] = b;\r\n\r\n        return this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn <this>(new ColorBase()).copy(this);\r\n    }\r\n\r\n    static lerp(a: Color, b: Color, t: number): Color {\r\n\t\treturn a.lerp(b, t);\r\n\t}\r\n    \r\n    lerp(color: Color, t: number): this {\r\n        const {array} = this;\r\n        const {r, g, b} = color;\r\n\r\n\t\tarray[0] = t * (r - array[0]);\r\n\t\tarray[1] = t * (g - array[1]);\r\n\t\tarray[2] = t * (b - array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n    \r\n\tnormalize(): this {\r\n\t\tconst {array} = this;\r\n\t\tconst length = 255;\r\n        array[0] /= length;\r\n        array[1] /= length;\r\n        array[2] /= length;\r\n\t\treturn this;\r\n\t}\r\n\r\n    [Symbol.iterator] (): Iterator<number> {\r\n\t\tconst {array} = this;\r\n\t\tconst {length} = array;\r\n\t\tlet i = 0;\r\n\t\treturn {\r\n\t\t\tnext() {\r\n\t\t\t\tif (i < length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: array[i++], done: false\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: undefined, done: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst Color: ColorConstructor = ColorBase;","import { multiDraw } from \"./src/samples/scenes/MultiDraw\";\r\nimport { Entity } from \"./src/engine/core/general/Entity\";\r\nimport { Scene } from \"./src/engine/core/general/Scene\";\r\nimport { FaceHalfEdgesIterator, FaceVerticesIterator, Vertex, VertexFacesIterator } from \"./src/engine/core/rendering/scenes/geometries/GeometryBuilder\";\r\nimport { QuadGeometry } from \"./src/engine/core/rendering/scenes/geometries/lib/QuadGeometry\";\r\nimport { Matrix3 } from \"./src/engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"./src/engine/libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector2 } from \"./src/engine/libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"./src/engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector4 } from \"./src/engine/libs/maths/algebra/vectors/Vector4\";\r\nimport { GOLDEN_RATIO } from \"./src/engine/libs/maths/geometry/GeometryConstants\";\r\nimport { Triangle } from \"./src/engine/libs/maths/geometry/primitives/Triangle\";\r\nimport { Space } from \"./src/engine/libs/maths/geometry/space/Space\";\r\nimport { buildArrayFromIndexedArrays } from \"./src/engine/utils/Snippets\";\r\nimport { start } from \"./src/samples/scenes/SimpleScene\";\r\nimport { octree } from \"./src/samples/scenes/Octree\";\r\n/*\r\nfunction windingOrder(v0: Vector3, v1: Vector3, v2: Vector3) {\r\n    const triangle = new Triangle(v0, v1, v2);\r\n    const centroid = triangle.getMidpoint(new Vector3());\r\n    const normal = triangle.getNormal(new Vector3());\r\n    \r\n    const e1 = v1.clone().sub(v0);\r\n    const e2 = e1.clone().cross(normal);\r\n\r\n    e1.normalize();\r\n    e2.normalize();\r\n\r\n    const v0_centered = v0.clone().sub(centroid);\r\n    const v1_centered = v1.clone().sub(centroid);\r\n    const v2_centered = v2.clone().sub(centroid);\r\n\r\n    const v0_t1 = e1.dot(v0_centered);\r\n    const v0_t2 = e2.dot(v0_centered);\r\n\r\n    const v1_t1 = e1.dot(v1_centered);\r\n    const v1_t2 = e2.dot(v1_centered);\r\n\r\n    const v2_t1 = e1.dot(v2_centered);\r\n    const v2_t2 = e2.dot(v2_centered);\r\n\r\n    const det = (v1_t1 - v0_t1) * (v2_t2 - v0_t2) - (v1_t2 - v0_t2) * (v2_t1 - v0_t1);\r\n    console.log(det < 0 ? \"CW\" : \"CCW\");\r\n\r\n    // const v0_out = new Vector2([v0_t1, v0_t2]);\r\n    // const v1_out = new Vector2([v1_t1, v1_t2]);\r\n    // const v2_out = new Vector2([v2_t1, v2_t2]);\r\n    // const v0_angle = Math.atan2(v0_out.y, v0_out.x);\r\n    // const v1_angle = Math.atan2(v1_out.y, v1_out.x);\r\n    // const v2_angle = Math.atan2(v2_out.y, v2_out.x);\r\n    \r\n    // const angles = [v0_angle, v1_angle, v2_angle];\r\n}*/\r\n\r\nexport async function main() {\r\n    //instanced();\r\n    //wireframe();\r\n\r\n    /*const myWorker = new Worker(\"./worker.js\");\r\n    const sab = new SharedArrayBuffer(1024);\r\n    const array = new Uint32Array(sab);\r\n    myWorker.addEventListener(\"message\", (event) => {\r\n        console.log(`Received back: ${array[10]}`);\r\n    });\r\n\r\n    myWorker.postMessage(sab);*/\r\n\r\n    octree();\r\n    //start();\r\n    //multiDraw();\r\n\r\n    //startMaps();\r\n\r\n    // const button = document.createElement(\"button\");\r\n    // button.textContent = \"Get bin\";\r\n    // document.body.insertAdjacentElement(\"beforebegin\", button);\r\n    // button.onclick = () => {\r\n    //     const anchor = document.createElement(\"a\");\r\n    //     const myData = new Float32Array([32.20, 1]);\r\n    //     const myBlob = new Blob([myData]);\r\n    //     anchor.download = \"dat.bin\";\r\n    //     anchor.href = URL.createObjectURL(myBlob);\r\n    //     anchor.click();\r\n    // };\r\n    \r\n    // const input = document.createElement(\"input\");\r\n    // input.type = \"file\";\r\n    // input.oninput = () => {\r\n    //     if (input.files) {\r\n    //         Array.from(input.files).forEach((file) => {\r\n    //             file.arrayBuffer().then((arr) => {\r\n    //                 console.log(Array.from(new Float32Array(arr)).map(val => val.toFixed(3)));\r\n    //             });\r\n    //         });\r\n    //     }\r\n    // };\r\n    // document.body.insertAdjacentElement(\"beforebegin\", input);\r\n}","import { ArcballCameraControl } from \"../../engine/core/controls/ArcballCameraControl\";\r\nimport { FreeCameraControl } from \"../../engine/core/controls/FreeCameraControl\";\r\nimport { Transform } from \"../../engine/core/general/Transform\";\r\nimport { Input } from \"../../engine/core/input/Input\";\r\nimport { PerspectiveCamera } from \"../../engine/core/rendering/scenes/cameras/PerspectiveCamera\";\r\nimport { GeometryBuffer } from \"../../engine/core/rendering/scenes/geometries/GeometryBuffer\";\r\nimport { CubeGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/CubeGeometry\";\r\nimport { QuadGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/QuadGeometry\";\r\nimport { BufferDataUsage } from \"../../engine/core/rendering/webgl/WebGLBufferUtilities\";\r\nimport { WebGLPacketUtilities } from \"../../engine/core/rendering/webgl/WebGLPacketUtilities\";\r\nimport { WebGLProgramUtilities } from \"../../engine/core/rendering/webgl/WebGLProgramUtilities\";\r\nimport { BufferMask, Capabilities, WebGLRendererUtilities } from \"../../engine/core/rendering/webgl/WebGLRendererUtilities\";\r\nimport { AttributeDataType, DrawMode, WebGLVertexArrayUtilities } from \"../../engine/core/rendering/webgl/WebGLVertexArrayUtilities\";\r\nimport { Color } from \"../../engine/libs/graphics/colors/Color\";\r\nimport { Vector3 } from \"../../engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../engine/libs/maths/geometry/space/Space\";\r\n\r\nexport async function octree() {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.style.display = \"block\";\r\n    canvas.tabIndex = 0;\r\n    canvas.oncontextmenu = () => {\r\n        return false;\r\n    };\r\n    canvas.width = 600;\r\n    canvas.height = 500;\r\n    const gl = canvas.getContext(\"webgl2\");\r\n    if (gl == null) {\r\n        return;\r\n    }\r\n\r\n    WebGLPacketUtilities.enableMultidrawExtension(gl);\r\n\r\n    const playpause = document.createElement(\"button\");\r\n    playpause.textContent = \"Pause\";\r\n    let paused = false;\r\n    if (playpause !== null) {\r\n        playpause.onclick = () => {\r\n        paused = !paused;\r\n        playpause.textContent = paused ? \"Play\" : \"Pause\";\r\n        if (!paused) {\r\n            requestAnimationFrame(render);\r\n        }\r\n      };\r\n    }\r\n\r\n    document.body.append(playpause, canvas);\r\n\r\n    const linesVert = await fetch(\"assets/engine/shaders/common/multi/lines.vert\").then(resp => resp.text());\r\n    const linesFrag = await fetch(\"assets/engine/shaders/common/multi/lines.frag\").then(resp => resp.text());\r\n    const linesProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: linesVert, fragmentSource: linesFrag});\r\n    if (linesProgram === null) return;\r\n\r\n    const fov = (1 / 3) * Math.PI;\r\n    const aspect = canvas.width / canvas.height;\r\n    const zNear = 0.1;\r\n    const zFar = 100;\r\n\r\n    const camera = new PerspectiveCamera(fov, aspect, zNear, zFar);\r\n    camera.transform.setTranslation(new Vector3([1, 0, 0]));\r\n    const cameraControl = new FreeCameraControl(camera)\r\n    \r\n    const cubeTransform = new Transform();\r\n    cubeTransform.setTranslation(camera.getFront(new Vector3()).scale(4));\r\n\r\n    const quadTransform = new Transform();\r\n    quadTransform.setTranslation(cubeTransform.getTranslation(new Vector3()).scale(2));\r\n\r\n    const cubeGeometry = new CubeGeometry();\r\n    const cubeGeometryBuilder = cubeGeometry.toBuilder();\r\n    const cubeLinesArray = cubeGeometryBuilder.verticesArray();\r\n    const cubeLinesIndicesArray = cubeGeometryBuilder.linesIndicesArray();\r\n\r\n    const quadGeometry = new QuadGeometry({\r\n        width: 2, height: 2\r\n    });\r\n    const quadGeometryBuilder = quadGeometry.toBuilder();\r\n    const quadLinesArray = quadGeometryBuilder.verticesArray();\r\n    const quadLinesIndicesArray = quadGeometryBuilder.linesIndicesArray();\r\n\r\n    const geometryBuffer = new GeometryBuffer({\r\n        u_model: {\r\n            array: Float32Array.of(\r\n                ...cubeTransform.matrix.array,\r\n                ...quadTransform.matrix.array,\r\n                ...cubeTransform.matrix.clone().translate(new Vector3(1, 1, 1)).array,\r\n                ...quadTransform.matrix.clone().translate(new Vector3(1, 1, 1)).array\r\n            ),\r\n            type: AttributeDataType.VEC3\r\n        },\r\n        u_color: {\r\n            array: Float32Array.of(\r\n                ...[1, 0, 0, 1],\r\n                ...[0, 1, 0, 1],\r\n                ...[0, 0, 1, 1],\r\n                ...[0, 1, 1, 1]\r\n            ),\r\n            type: AttributeDataType.VEC3\r\n        }\r\n    }, undefined, true);\r\n\r\n    console.log(geometryBuffer);\r\n    \r\n    const cubePacket = WebGLPacketUtilities.createPacket(gl, {\r\n        program: linesProgram,\r\n        vertexArray: {\r\n            vertexAttributes: {\r\n                a_position: { array: Float32Array.of(...quadLinesArray, ...cubeLinesArray), type: AttributeDataType.VEC3 }\r\n            },\r\n            elementIndices: Uint16Array.of(...quadLinesIndicesArray, ...cubeLinesIndicesArray.map(i => i + quadLinesIndicesArray.length))\r\n        },\r\n        uniformBuffers: [\r\n            {\r\n                //TODO: data as arraybuffer\r\n                usage:  BufferDataUsage.STATIC_READ,\r\n                data: geometryBuffer.buffer\r\n            }\r\n        ],\r\n        uniformBlocks: {\r\n            basicModelBlock: {\r\n                buffer: 0,\r\n                /*uniforms: {\r\n                    \"models[0].instances[0].u_model\": { value: cubeTransform.matrix.array },\r\n                    \"models[0].instances[0].u_color\": { value: [1, 0, 0] },\r\n                    \"models[1].instances[0].u_model\": { value: quadTransform.matrix.array },\r\n                    \"models[1].instances[0].u_color\": { value: [0, 1, 0] },\r\n                    \"models[0].instances[1].u_model\": { value: cubeTransform.matrix.clone().translate(new Vector3(1, 1, 1)).array },\r\n                    \"models[0].instances[1].u_color\": { value: [0, 0, 1] },\r\n                    \"models[1].instances[1].u_model\": { value: quadTransform.matrix.clone().translate(new Vector3(1, 1, 1)).array },\r\n                    \"models[1].instances[1].u_color\": { value: [0, 1, 1] }\r\n                }*/\r\n            },\r\n            viewBlock: {\r\n                uniforms: {\r\n                    u_view: { value: camera.view.array },\r\n                    u_projection: { value: camera.projection.array }\r\n                }\r\n            }\r\n        },\r\n        drawCommand: {\r\n            mode: DrawMode.LINES,\r\n            multiDraw: {\r\n                countsList: [quadLinesIndicesArray.length, cubeLinesIndicesArray.length],\r\n                countsOffset: 0,\r\n                offsetsList: [0, quadLinesIndicesArray.length * Uint16Array.BYTES_PER_ELEMENT],\r\n                offsetsOffset: 0,\r\n                instanceCountsList: [2, 2],\r\n                instanceCountsOffset: 0,\r\n                drawCount: 2\r\n            }\r\n        }\r\n    });\r\n    if (cubePacket === null) return;\r\n\r\n    console.log(cubePacket);\r\n    \r\n    console.log(geometryBuffer.getAttribute(\"u_color\"));\r\n    \r\n    WebGLRendererUtilities.viewport(gl, 0, 0, canvas.width, canvas.height);\r\n    WebGLRendererUtilities.enable(gl, Capabilities.CULL_FACE);\r\n    WebGLRendererUtilities.enable(gl, Capabilities.DEPTH_TEST);\r\n    WebGLRendererUtilities.clearColor(gl, Color.BLACK);\r\n\r\n    Input.initialize(canvas);\r\n\r\n    let deltaTime, lastFrameTime = 0;\r\n    const render = (frameTime: number) => {\r\n        if (paused) {\r\n            return;\r\n        }\r\n        frameTime *= 0.001;\r\n        deltaTime = frameTime - lastFrameTime;\r\n        lastFrameTime = frameTime;\r\n\r\n        WebGLRendererUtilities.clear(gl, BufferMask.COLOR_BUFFER_BIT | BufferMask.DEPTH_BUFFER_BIT);\r\n\r\n        cameraControl.update(deltaTime);\r\n\r\n        WebGLPacketUtilities.setPacketValues(gl, cubePacket, {\r\n            uniformBlocks: {\r\n                viewBlock: {\r\n                    uniforms: {\r\n                        u_view: { value: camera.view.array },\r\n                        u_projection: { value: camera.projection.array }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        WebGLPacketUtilities.drawPacket(gl, cubePacket);\r\n        \r\n        Input.clear();\r\n\r\n        requestAnimationFrame(render);\r\n    }\r\n\r\n    requestAnimationFrame(render);\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Injector","constructor","args","this","_defaultCtor","defaultCtor","_onDefaultOverride","onDefaultOverride","_constructors","Map","overrideDefaultCtor","forceQualifier","qualifier","_forcedQualifier","unforceQualifier","getConstructor","qualifierValue","Error","inject","Array","from","register","has","set","MathError","name","Vector2Base","array","Float32Array","length","values","x","y","setValues","equals","vec","v","copy","clone","setUnit","setZeros","add","addScalar","k","sub","lerp","t","clamp","min","max","l","g","Math","multScalar","cross","a","b","dot","sqrt","lengthSquared","dist","dx","dy","distSquared","normalize","lenSq","len","Number","EPSILON","negate","mult","arg0","Vector2","m","addScaled","writeIntoArray","out","offset","readFromArray","arr","copyAndSub","vecA","vecB","ctor","Vector3Base","toString","join","static","vectorA","vectorB","temp","Vector3","acos","z","vector","to","scale","t0","t1","t2","distance","dz","hypot","distanceSquared","toSpherical","center","thisArray","centerArray","roh","theta","phi","atan2","toCartesian","sin","cos","mat","copyAndCross","iterator","i","next","done","undefined","Key","Space","origin","right","left","up","down","forward","backward","KEYS_COUNT","keys","KeyModifier","MouseButton","MOUSE_BUTTONS_COUNT","MOUSE_BUTTONS_INDICES","freeze","reduce","map","button","index","assign","KEYS_INDICES","Input","keyFlags","fill","mouseFlags","pointerPosition","wheelDelta","canvas","canvasRectangle","initialize","getBoundingClientRect","addEventListener","getCanvasRect","rect","clear","handleEvent","event","eventIndex","type","canvasRect","clientX","clientY","top","deltaY","getKey","getKeyUp","getKeyDown","getMouseButton","getPointerPosition","getPointerScreenPosition","positionAray","width","height","getWheelDelta","getMouseButtonDown","getMouseButtonUp","PoolAutoExtendPolicy","StackPool","policy","autoExtendPolicy","AUTO_EXTEND_ONE","autoExtendTicks","autoExtend","extend","AUTO_EXTEND_POW2","pow","acquire","count","release","options","super","objects","size","target","slice","console","warn","push","PI","_bytes","ArrayBuffer","BYTES_PER_ELEMENT","_floatView","_intView","Uint32Array","Matrix3Base","checkArray","row1","row","row2","row3","col1","col","col2","col3","m11","val","m12","m13","m21","m22","m23","m31","m32","m33","getValues","other","setIdentity","det","trace","transpose","invert","t11","t12","t13","t21","t22","t23","t31","t32","t33","d","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","angle","setRotationX","cosAngle","sinAngle","setRotationY","setRotationZ","solve","bx","by","bz","rx","ry","rz","solve2","Matrix3","QuaternionBase","_array","_checkArray","w","pitch","sinPitch","abs","sign","asin","yaw","sinYawCosPitch","cosYawCosPitch","roll","sinRollCosPitch","cosRollCosPitch","axis","setAxisAngle","setEuler","quat","q","quatArray","getAxis","outArray","den","halfx","qSqrt","getMatrix3","matrix","s","xs","ys","zs","wx","wy","wz","xx","xy","xz","yy","yz","zz","getMatrix4","rotate","vectorArray","vx","vy","vz","qx","qy","qz","qw","tx","ty","tz","tw","toVector","cosYaw","sinYaw","cosPitch","cosRoll","sinRoll","axisLength","halfSin","axisArray","setMatrix","matrixArray","lookAt","source","dest","Quaternion","setVectors","crossArray","fromLength","toLength","angleTo","rotation","rotateTowards","slerp","conjugate","ax","ay","az","aw","bw","scalar","fromArray","toArray","cosHalfTheta","halfTheta","sinHalfTheta","trunc","ratioA","ratioB","copyIntoArray","Matrix4Base","m41","m42","m43","m14","m24","m34","m44","getRotation","setTRS","translation","scaling","rotationArray","translationArray","scalingArray","x2","y2","z2","sx","sy","sz","setRotation","quaternion","quaternionArray","matArray","det2_01_01","det2_01_02","det2_01_03","det2_01_12","det2_01_13","det2_01_23","det3_201_012","det3_201_013","det3_201_023","A","a41","a42","a43","a14","a24","a34","a44","o00","o01","o02","o03","o10","o11","o12","o13","o20","o21","o22","o23","o30","o31","o32","o33","t00","t01","t02","t03","t04","t05","t06","t07","t08","t09","t10","invDet","B","b41","b42","b43","b14","b24","b34","b44","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","bX","bY","bZ","bW","solve3","setTranslation","vecArray","translate","t3","t4","rotateX","t5","t6","t7","t8","rotateY","sinAngles","rotateZ","c","C","t9","setScaling","eye","eyeArray","upArray","targetArray","e0","e1","e2","u0","u1","u2","x0","x1","y0","y1","z0","z1","transformPoint","point","pointArray","transformDirection","direction","directionArray","transformNormal","normal","normalArray","thisInvArray","fov","aspect","zNear","zFar","setPerspective","tan","rangeInv","bottom","near","far","setOrthographic","setFrustrum","invWidth","invHeight","invDepth","Matrix4","Vector3Pool","_buffer","_bufferViews","subarray","_extensions","UUIDGenerator","_count","newUUID","tempMatrix","Transform","owner","isStatic","uuid","localArray","localMatrix","hasChanged","getMatrix","getLocalMatrix","thisLocalArray","setLocalMatrix","getRight","getLeft","getUp","getDown","getForward","getBackward","getTranslation","getScaling","transformVector","thisPosition","PlaneBase","constant","_normal","_constant","setFromNormalAndConstant","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","plane","point1","point2","point3","distanceToPoint","normalized","inverseNormalLength","Plane","FrustrumBase","nearPlane","farPlane","topPlane","bottomPlane","leftPlane","rightPlane","frustrum","setFromPerspectiveMatrix","intersectsSphere","sphere","radius","intersectsBox","box","intersects","boxMax","boxMin","containsPoint","BufferDataUsage","BufferTarget","DrawMode","DataComponentType","AttributeDataType","ElementArrayDataType","Frustrum","PerspectiveCamera","transform","projection","_projection","_frustrum","getFront","view","viewProjection","isViewing","mesh","updateFrustrum","perspective","WebGLVertexArrayUtilities","VEC2","VEC3","VEC4","FLOAT","BYTE","UNSIGNED_BYTE","Uint8Array","SHORT","Int16Array","UNSIGNED_SHORT","Uint16Array","INT","Int32Array","UNSIGNED_INT","Int8Array","gl","indices","internalBuffer","createBuffer","usage","STATIC_READ","ELEMENT_ARRAY_BUFFER","byteLength","indexType","getElementArrayBufferType","bindBuffer","bufferData","program","attributes","interleaved","internalProgram","DEFAULT_USAGE","attributesEntries","entries","_","attribute","ARRAY_BUFFER","dataBuffer","byteStride","vertexAttributes","forEach","componentType","stride","getComponentTypeArrayConstructor","getDataTypeNumComponents","bufferSlices","constantValue","byteOffset","attributeName","divisor","getArrayComponentType","location","getAttribLocation","numComponents","vertexAttribPointer","vertexAttribDivisor","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","bytesPerElement","bufferArray","arrayStrideOffset","arraySliceIndex","enableVertexAttribArray","vertexArray","elementsCount","attributeRecord","verticesBuffers","verticesBuffer","find","getParameter","ARRAY_BUFFER_BINDING","srcOffset","srcLength","dstOffset","slices","sliceOffset","bufferSubData","buffer","data","dstByteOffset","vertexBuffers","elementIndices","elementBuffer","elementBufferOrBufferProperties","internalVertexArray","createVertexArray","bindVertexArray","buffer_i","fromEntries","filter","attribute_i","setter","createVertexArrayBuffer","createVertexElementArrayBuffer","isVertexArray","deleteVertexArray","GeometryAttributes","GeometryBuffer","attributesBuffers","bufferByteLength","bufferArrayConstructor","toBlob","bufferLength","indicesData","indicesLength","headerData","TextEncoder","encode","JSON","stringify","headerLength","blobDataView","blobDataViewBuffer","blobDataHeaderView","blobDataHeaderLength","Blob","blob","arrayBuffer","blobDataHeaderByteLength","arrayConstructor","header","parse","TextDecoder","decode","geometryBuffer","getAttribute","attributeArrayConstructor","attributeArray","bufferStride","bufferArraySliceIndex","BoundingSphere","hitsSphere","otherCenter","otherRadius","hitsBox","sphereX","sphereY","sphereZ","minX","minY","minZ","maxX","maxZ","maxY","corners","BoundingBox","boxes","positiveInfinity","POSITIVE_INFINITY","negativeInfinity","NEGATIVE_INFINITY","box_i","boxMinX","boxMinY","boxMinZ","boxMaxX","boxMaxY","boxMaxZ","hits","otherMin","otherMax","otherMinX","otherMinZ","otherMaxX","otherMaxY","otherMaxZ","otherMinY","corner_i","GeometryBuilder","halfEdges","vertices","faces","create","structuredClone","addTriangleFace","v0","v1","v2","properties","addFace","addQuadFace","v3","addVertex","position","vertex","halfEdgeID","_halfEdges","_vertices","_faces","faceVerticesCount","error","face","faceID","sourceID","targetID","firstHalfEdgeID","halfEdge","previousHalfEdgeID","existingHalfEdge","vertexFacesIterator","face_i","faceHalfEdgesIterator","halfEdge_i","targetID_i","prevID","prevID_i","twinID","nextID","twinHalfEdge","indexOf","linesArray","flatMap","faceVertices","faceVerticesIterator","vertex_i","verticesArray","tangentsArray","faceUvs","uv","uv0","uv1","uv2","edge1","v1_i","edge2","deltaUV1","uv1_i","deltaUV2","f","tangent","edge1_i","tangent_i","normalsArray","ni","pi","normal_i","uvsArray","flat","trianglesIndicesArray","verticesCount","concat","linesIndicesArray","boundingBox","boundingSphere","FaceHalfEdgesIterator","FaceVerticesIterator","VertexFacesIterator","geometry","reset","current","nextHalfEdgeID","faceHalfEdgeID","firstVertexID","vertexID","vertexHalfEdgeID","CubeGeometry","toBuilder","depth","widthSegments","heightSegments","depthSegments","builder","floor","uvs","u","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","iy","ix","indicesCount","vi1","vi2","vi3","ui1","ui2","ui3","uv3","QuadGeometry","TexturePixelFormat","TextureInternalPixelFormat","TexturePixelType","TextureParameter","TextureTarget","TextureMagFilter","TextureMinFilter","TextureCompareMode","TextureWrapMode","TextureCompareFunction","ShaderType","UniformType","UniformDataType","WebGLTextureUtilities","internalTexture","createTexture","unit","pixels","subimages","format","internalFormat","lod","border","mipmap","ACTIVE_TEXTURE","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texImage2D","subimage_i","xoffset","yoffset","texSubImage2D","TEXTURE_CUBE_MAP","xPos","xNeg","yPos","yNeg","zPos","zNeg","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_2D_ARRAY","texImage3D","zoffset","texSubImage3D","generateMipmap","mag","wrapS","wrapT","wrapR","baseMipmapLevel","maxMipmapLevel","compareFunction","compareMode","minLod","maxLod","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","texParameterf","TEXTURE_MIN_LOD","TEXTURE_MAX_LOD","alignment","pixelStorei","UNPACK_ALIGNMENT","texture","isTexture","deleteTexture","delete","WebGLProgramUtilities","internalShader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","shaderInfoLog","getShaderInfoLog","deleteShader","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","programInfoLog","getProgramInfoLog","vertexInfoLog","fragmentInfoLog","deleteProgram","CURRENT_PROGRAM","useProgram","WebGLUniformUtilities","uniformValue","of","uniform","uniformType","num","uniform1f","uniform1ui","BOOL","uniform1i","INT_SAMPLER_2D","INT_SAMPLER_2D_ARRAY","INT_SAMPLER_3D","INT_SAMPLER_CUBE","SAMPLER_2D","SAMPLER_3D","SAMPLER_CUBE","SAMPLER_2D_SHADOW","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","tex","FLOAT_VEC2","isArray","list","uniform2fv","BOOL_VEC2","INT_VEC2","uniform2iv","UNSIGNED_INT_VEC2","uniform2uiv","FLOAT_VEC3","uniform3fv","BOOL_VEC3","INT_VEC3","uniform3iv","UNSIGNED_INT_VEC3","uniform3uiv","FLOAT_VEC4","uniform4fv","BOOL_VEC4","INT_VEC4","uniform4iv","UNSIGNED_INT_VEC4","uniform4uiv","FLOAT_MAT2","uniformMatrix2fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","FLOAT_MAT2x3","uniformMatrix2x3fv","FLOAT_MAT2x4","uniformMatrix2x4fv","FLOAT_MAT3x2","uniformMatrix3x2fv","FLOAT_MAT3x4","uniformMatrix3x4fv","FLOAT_MAT4x2","uniformMatrix4x2fv","FLOAT_MAT4x3","uniformMatrix4x3fv","uniformsNames","uniformIndices","getUniformIndices","activeUniforms","ACTIVE_UNIFORMS","validUniformIndices","index_i","isValid","setters","getActiveUniform","getUniformLocation","getUniformSetter","uniformName","WebGLUniformBlockUtilities","blockIndex","getUniformBlockIndex","INVALID_INDEX","blockSize","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","layout","blockUniformsIndices","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","getActiveUniforms","UNIFORM_OFFSET","uniformOffset_i","uniformIndex","uniformInfo","bind","UNIFORM_BUFFER","bindingPoint","lastBindingPoint","blocks","offsetAlignment","UNIFORM_BUFFER_OFFSET_ALIGNMENT","block","ceil","createUniformBuffer","rangeOffset","rangeSize","rangedUniformBuffer","uniforms","UNIFORM_BUFFER_BINDING","asArrayBufferView","uniformBlockBinding","bindBufferRange","bindBufferBase","StencilAction","BufferMask","TestFunction","BlendingMode","BlendingEquation","Capabilities","Face","WindingOrder","HintTarget","HintMode","WebGLPacketUtilities","textures","_textures","packet","vertexArrayProperties","uniformsProperties","uniformBlocks","uniformBlocksProperties","uniformBuffers","uniformBuffersProperties","drawCommand","getUniformsListSetter","setUniformsListValues","uniformBlocksPropertiesEntries","uniformBuffersMaxIndex","uniformBlockProperty","uniformBuffersProperty_i","relatedBlockProperties","relatedBlocks","blockName","createUniformBlock","relatedBlocksCount","block_i","bindUniformBuffer","rangedBuffers","createRangedUniformBuffers","setUniformBufferData","rangedBuffer","setUniformBufferValues","relatedBlock","uniformBlockProperties","vertexArrayValues","uniformsValues","uniformsBlocksValues","setVertexArrayValues","uniformBlock","getExtension","mode","instanceCount","multiDraw","VERTEX_ARRAY_BINDING","drawElementsInstanced","multiDrawExtension","countsList","countsOffset","offsetsList","offsetsOffset","drawCount","instanceCountsList","instanceCountsOffset","multiDrawElementsInstancedWEBGL","multiDrawElementsWEBGL","drawElements","drawArraysInstanced","firstsList","firstsOffset","multiDrawArraysInstancedWEBGL","multiDrawArraysWEBGL","drawArrays","WebGLRendererUtilities","hint","winding","frontFace","scissor","viewport","color","clearColor","func","depthFunc","equ","blendEquation","srcFunc","dstFunc","blendFunc","srcAlpha","dstAlpha","blendFuncSeparate","ref","mask","stencilFuncSeparate","fail","zFail","zPass","stencilOpSeparate","stencilMaskSeparate","red","green","blue","alpha","colorMask","capability","enable","disable","VIEWPORT","MAX_SAMPLES","ColorBase","r","colors","BLACK","RED","GREEN","BLUE","WHITE","Color","async","main","document","createElement","style","display","tabIndex","oncontextmenu","getContext","enableMultidrawExtension","playpause","textContent","paused","onclick","requestAnimationFrame","render","body","append","linesVert","fetch","then","resp","text","linesFrag","linesProgram","camera","cameraControl","params","rotationSpeed","translationSpeed","update","deltaTime","cameraTransform","lastPointerPosition","cameraPosition","cameraForward","cameraForwardArray","cameraUpSign","Z","ARROW_UP","Q","ARROW_LEFT","S","ARROW_DOWN","D","ARROW_RIGHT","RIGHT","newPointerPosition","newTheta","cubeTransform","quadTransform","cubeGeometryBuilder","cubeLinesArray","cubeLinesIndicesArray","quadGeometryBuilder","quadLinesArray","quadLinesIndicesArray","u_model","u_color","log","cubePacket","createPacket","a_position","basicModelBlock","viewBlock","u_view","u_projection","LINES","CULL_FACE","DEPTH_TEST","lastFrameTime","frameTime","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","setPacketValues","drawPacket","octree"],"sourceRoot":""}