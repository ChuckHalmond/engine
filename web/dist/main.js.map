{"version":3,"file":"main.js","mappings":"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","sources":["webpack://main/webpack/bootstrap","webpack://main/webpack/runtime/define property getters","webpack://main/webpack/runtime/hasOwnProperty shorthand","webpack://main/webpack/runtime/make namespace object","webpack://main/./src/engine/libs/patterns/injectors/Injector.ts","webpack://main/./src/engine/libs/maths/MathError.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector2.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector3.ts","webpack://main/./src/engine/core/input/Input.ts","webpack://main/./src/engine/libs/maths/geometry/space/Space.ts","webpack://main/./src/engine/libs/graphics/colors/Color.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector4.ts","webpack://main/./src/engine/core/rendering/hl/Mesh.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLBufferUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLVertexArrayUtilities.ts","webpack://main/./src/engine/core/rendering/hl/WireframeMaterial.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/GeometryBuffer.ts","webpack://main/./src/engine/libs/patterns/pools/Pool.ts","webpack://main/./src/engine/libs/patterns/pools/StackPool.ts","webpack://main/./src/engine/libs/maths/Snippets.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix3.ts","webpack://main/./src/engine/libs/maths/algebra/quaternions/Quaternion.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix4.ts","webpack://main/./src/engine/libs/maths/statistics/random/UUIDGenerator.ts","webpack://main/./src/engine/libs/maths/extensions/pools/Vector3Pools.ts","webpack://main/./src/engine/libs/maths/geometry/primitives/Plane.ts","webpack://main/./src/engine/libs/physics/collisions/Frustrum.ts","webpack://main/./src/engine/core/general/Transform.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/PerspectiveCamera.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/Camera.ts","webpack://main/./src/engine/core/rendering/scenes/objects/Object3D.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLTextureUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLProgramUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformBlockUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLRendererUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLPacketUtilities.ts","webpack://main/./main.ts","webpack://main/./src/samples/scenes/Grid.ts","webpack://main/./src/engine/core/controls/FreeCameraControl.ts","webpack://main/./src/engine/core/rendering/helpers/CameraHelper.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { Injector };\r\nexport { InjectorBase };\r\nexport { Inject };\r\nexport { Register };\r\n\r\ninterface InjectorConstructor {\r\n    readonly prototype: Injector;\r\n    new<C extends Constructor<any>>(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}): Injector<C>;\r\n}\r\n\r\ninterface Injector<C extends Constructor<any> = Constructor<any>> {\r\n    readonly defaultCtor: C;\r\n    overrideDefaultCtor(constructor: C): void;\r\n    forceQualifier(qualifier: string): void;\r\n    unforceQualifier(): void;\r\n    getConstructor(qualifier?: string): C;\r\n    inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C>;\r\n    register(constructor: C, qualifier: string): void; \r\n}\r\n\r\nclass InjectorBase<C extends Constructor<any> = Constructor<any>> implements Injector<C> {\r\n    private _forcedQualifier?: string;\r\n    private _constructors: Map<string, C>;\r\n    private _defaultCtor: C;\r\n    private _onDefaultOverride: (constructor: C) => void;\r\n\r\n    get defaultCtor(): C {\r\n        return this._defaultCtor;\r\n    }\r\n\r\n    overrideDefaultCtor(constructor: C): void {\r\n        this._defaultCtor = constructor;\r\n        this._onDefaultOverride(constructor);\r\n    }\r\n\r\n    constructor(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}) {\r\n        this._defaultCtor = args.defaultCtor;\r\n        this._onDefaultOverride = args.onDefaultOverride;\r\n        this._constructors = new Map();\r\n    }\r\n\r\n    forceQualifier(qualifier: string): void {\r\n        this._forcedQualifier = qualifier;\r\n    }\r\n\r\n    unforceQualifier(): void {\r\n        delete this._forcedQualifier;\r\n    }\r\n\r\n    getConstructor(qualifier?: string): C {\r\n        const qualifierValue = this._forcedQualifier || qualifier;\r\n        if (typeof qualifierValue === 'undefined') {\r\n            return this._defaultCtor;\r\n        }\r\n        const constructor = this._constructors.get(qualifierValue);\r\n        if (typeof constructor === 'undefined') {\r\n            throw new Error(`No constructor for qualifier ${qualifierValue}`);\r\n        }\r\n        return constructor;\r\n    }\r\n\r\n    inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C> {\r\n        const constructor = this.getConstructor(args?.qualifier);\r\n        if (args?.args) {\r\n            const parameters = Array.from(args.args);\r\n            return new constructor(...parameters);\r\n        }\r\n        return new constructor();\r\n    }\r\n\r\n    register(constructor: C, qualifier: string): void {\r\n        if (!this._constructors.has(qualifier)) {\r\n            this._constructors.set(qualifier, constructor);\r\n        }\r\n    }\r\n}\r\n\r\nconst Injector: InjectorConstructor = InjectorBase;\r\n\r\ntype UnwrappedInjectorConstructor<I> = I extends Injector<infer C> ? C : never;\r\n\r\ninterface RegisterDecorator {\r\n    <I extends Injector>(injector: I, qualifier?: string): <C extends UnwrappedInjectorConstructor<I>>(ctor: C) => C;\r\n}\r\n\r\nconst Register: RegisterDecorator = function<\r\n    I extends Injector\r\n>(injector: I, qualifier?: string): any {\r\n    return <C extends UnwrappedInjectorConstructor<I>>(\r\n        ctor: C\r\n    ) => {\r\n        if (typeof qualifier !== 'undefined') {\r\n            injector.register(ctor, qualifier);\r\n        }\r\n        injector.register(ctor, ctor.name);\r\n        return ctor;\r\n    }\r\n}\r\n\r\nfunction Inject<\r\n    I extends Injector,\r\n    P extends ConstructorParameters<UnwrappedInjectorConstructor<I>>,\r\n>(injector: I, options?: {qualifier?: string, args?: P}): any {\r\n    return (\r\n        target: any,\r\n        propertyKey: string\r\n    ) => {\r\n        const instance = injector.inject(options);\r\n\r\n        Object.defineProperty(target, propertyKey, {\r\n            value: instance\r\n        });\r\n    }\r\n}","export class MathError extends Error {\r\n    name = 'MathError';\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Matrix2 } from \"../matrices/Matrix2\";\r\n\r\nexport { Vector2Injector };\r\nexport { Vector2 };\r\nexport { Vector2Base };\r\n\r\nexport type Vector2Values = [number, ...number[]] & { length: 2 };\r\n\r\ninterface Vector2Constructor {\r\n\treadonly prototype: Vector2;\r\n\tnew(): Vector2;\r\n\tnew(a: number, y: number): Vector2;\r\n  \tnew(array: ArrayLike<number>): Vector2;\r\n}\r\n\r\ninterface Vector2 {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector2Values;\r\n\tx: number;\r\n\ty: number;\r\n\tsetValues(x: number, y: number): this;\r\n\tcopy(vec: Vector2): this;\r\n\tclone(): this;\r\n\tequals(vec: Vector2): boolean;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\tadd(vec: Vector2): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector2): this;\r\n\tlerp(vec: Vector2, t: number): this;\r\n\tclamp(min: Vector2, max: Vector2): this;\r\n\tmultScalar(k: number): this;\r\n\tcross(vec: Vector2): number;\r\n\tdot(vec: Vector2): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdist(vec: Vector2): number;\r\n\tdistSquared(vec: Vector2): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector2): this;\r\n\tmult(mat: Matrix2): this\r\n\taddScaled(vec: Vector2, k: number): this;\r\n\tcopyAndSub(vecA: Vector2, vecB: Vector2): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector2Base {\r\n\treadonly array: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(array: ArrayLike<number>)\r\n\t  constructor(\r\n\t  x: number, y: number\r\n\t)\r\n\tconstructor(\r\n\t  ...args: any[]\r\n\t) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([args[0], args[1]]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tconst array = args[0];\r\n\t\t\tif (array.length < 2) {\r\n\t\t\t\tthrow new MathError(`Array must be of length 2 at least.`);\r\n\t\t\t}\r\n\t\t\tif (array instanceof Float32Array) {\r\n\t\t\t\tthis.array = array;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.array = new Float32Array(array);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([0, 0]);\r\n\t\t}\r\n\t}\r\n\r\n\tget values(): Vector2Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1]\r\n\t\t];\r\n\t}\r\n\r\n\tset values(values: Vector2Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tsetValues(x: number, y: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = x;\r\n\t\to[1] = y;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tequals(vec: Vector2Base): boolean {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\t\t\r\n\t\treturn v[0] === o[0]\r\n\t\t\t&& v[1] === o[1];\r\n\t}\r\n\r\n\tcopy(vec: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\to[0] = v[0];\r\n\t\to[1] = v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new Vector2Base(this.values) as this;\r\n\t}\r\n\r\n\tsetUnit(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 1;\r\n\t\to[1] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetZeros(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 0;\r\n\t\to[1] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0];\r\n\t\to[1] = o[1] + v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + k;\r\n\t\to[1] = o[1] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] - v[0];\r\n\t\to[1] = o[1] - v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(vec: Vector2Base, t: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = t * (v[0] - o[0]);\r\n\t\to[1] = t * (v[1] - o[1]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min: Vector2Base, max: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst l = min.array;\r\n\t\tconst g = max.array;\r\n\r\n\t\to[0] = Math.min(g[0], Math.min(o[0], l[0])),\r\n\t\to[1] = Math.min(g[1], Math.min(o[1], l[1]))\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmultScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] * k;\r\n\t\to[1] = o[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcross(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn a[0] * b[1] - a[1] * b[0];\r\n\t}\r\n\r\n\tdot(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]);\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn v[0] * v[0] + v[1] * v[1];\r\n\t}\r\n\r\n\tdist(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn Math.sqrt(dx * dx + dy * dy);\r\n\t}\r\n\r\n\tdistSquared(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn dx * dx + dy * dy;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\tconst lenSq = o[0] * o[0] + o[1] * o[1];\r\n\t\tconst len = Math.sqrt(lenSq);\r\n\t\tif (len > Number.EPSILON) {\r\n\t\t\to[0] = o[0] / len;\r\n\t\t\to[1] = o[1] / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\to[0] = 0;\r\n\t\t\to[1] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = -o[0];\r\n\t\to[1] = -o[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(mat: Matrix2): this\r\n\tmult(vec: Vector2): this\r\n\tmult(arg0: Matrix2 | Vector2): this {\r\n\t\tif (arg0 instanceof Vector2) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tthis.array[0] = this.array[0] * v[0];\r\n\t\t\tthis.array[1] = this.array[1] * v[1];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst x = this.x;\r\n\t\t\tconst y = this.y;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[2];\r\n\t\t\tthis.y = x * m[1] + y * m[3];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\taddScaled(vec: Vector2Base, k: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0] * k;\r\n\t\to[1] = o[1] + v[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n    }\r\n    \r\n    readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = arr[offset    ];\r\n\t\to[1] = arr[offset + 1];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tcopyAndSub(vecA: Vector2Base, vecB: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\to[0] = a[0] - b[0];\r\n\t\to[1] = a[1] - b[1];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nvar Vector2: Vector2Constructor = Vector2Base;\r\nconst Vector2Injector: Injector<Vector2Constructor> = new Injector({\r\n\tdefaultCtor: Vector2Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector2Constructor) => {\r\n\t\t\tVector2 = ctor;\r\n\t\t}\r\n});","import { Matrix3 } from \"engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\n\r\nexport { Vector3Constructor };\r\nexport { Vector3 };\r\nexport { Vector3Base };\r\nexport { Vector3Injector };\r\n\r\nexport type Vector3Values = [number, ...number[]] & { length: 3 };\r\n\r\ninterface Vector3Constructor {\r\n\treadonly prototype: Vector3;\r\n\tnew(): Vector3;\r\n\tnew(x: number, y: number, z: number): Vector3;\r\n  \tnew(array: ArrayLike<number>): Vector3;\r\n\tangle(vectorA: Vector3, vectorB: Vector3): number;\r\n}\r\n\r\ninterface Vector3 extends Iterable<number> {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector3Values;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\ttoString(): string;\r\n\tsetValues(\r\n\t\tx: number,\r\n\t\ty: number,\r\n\t\tz: number\r\n\t): this;\r\n\tequals(vec: Vector3): boolean;\r\n\tcopy(vec: Vector3): this;\r\n\tclone(): this;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\ttoCartesian(center: Vector3): this;\r\n\ttoSpherical(center: Vector3): this;\r\n\tadd(vec: Vector3): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector3): this;\r\n\tlerp(from: Vector3, to: Vector3, t: number): this;\r\n\tmax(vecB: Vector3): this;\r\n\tmin(vecB: Vector3): this;\r\n\tclamp(min: Vector3, max: Vector3): this;\r\n\tscale(k: number): this;\r\n\tcross(vec: Vector3): this;\r\n\tdot(vec: Vector3): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdistance(vec: Vector3): number;\r\n\tdistanceSquared(vec: Vector3): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector3): this;\r\n\tmult(mat: Matrix3): this;\r\n\taddScaled(vec: Vector3, k: number): this;\r\n\tcopyAndSub(vecA: Vector3, vecB: Vector3): this;\r\n\tcopyAndCross(vecA: Vector3, vecB: Vector3): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector3Base implements Vector3 {\r\n\treadonly array: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(array: ArrayLike<number>)\r\n\t  constructor(\r\n\t  x: number, y: number, z: number\r\n\t)\r\n\tconstructor(\r\n\t  ...args: any[]\r\n\t) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([args[0], args[2], args[1]]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tconst array = args[0];\r\n\t\t\tif (array.length < 3) {\r\n\t\t\t\tthrow new MathError(`Array must be of length 3 at least.`);\r\n\t\t\t}\r\n\t\t\tif (array instanceof Float32Array) {\r\n\t\t\t\tthis.array = array;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.array = new Float32Array(array);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([0, 0, 0]);\r\n\t\t}\r\n\t}\r\n\r\n\ttoString(): string {\r\n\t\treturn `Vector3([${Array.from(this.array).join(\", \")}])`;\r\n\t}\r\n\r\n\tstatic angle(vectorA: Vector3, vectorB: Vector3): number {\r\n\t\tconst temp = new Vector3();\r\n\t\treturn Math.acos(temp.copy(vectorA).dot(vectorB) / (Math.sqrt(temp.copy(vectorA).dot(vectorA)) * Math.sqrt(temp.copy(vectorB).dot(vectorB))));\r\n\t}\r\n\r\n\tget values(): Vector3Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1],\r\n\t\t\tthis.array[2]\r\n\t\t];\r\n\t}\r\n\r\n\tset values(values: Vector3Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t\tthis.array[2] = values[2];\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tget z() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n\tset z(z: number) {\r\n\t\tthis.array[2] = z;\r\n\t}\r\n\r\n\tsetValues(x: number, y: number, z: number): this {\r\n\t\tthis.array[0] = x;\r\n\t\tthis.array[1] = y;\r\n\t\tthis.array[2] = z;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcopy(vec: Vector3): this {\r\n\t\tconst v = vec.array;\r\n\r\n\t\tthis.array[0] = v[0];\r\n\t\tthis.array[1] = v[1];\r\n\t\tthis.array[2] = v[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new Vector3Base(this.values) as this;\r\n\t}\r\n\r\n\tequals(vector: Vector3): boolean {\r\n\t\treturn vector.array[0] === this.array[0]\r\n\t\t\t&& vector.array[1] === this.array[1]\r\n\t\t\t&& vector.array[2] === this.array[2];\r\n\t}\r\n\r\n\tsetZeros(): this {\r\n\t\tthis.array[0] = 0;\r\n\t\tthis.array[1] = 0;\r\n\t\tthis.array[2] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetUnit(): this {\r\n\t\tthis.array[0] = 1;\r\n\t\tthis.array[1] = 1;\r\n\t\tthis.array[2] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0];\r\n\t\tthis.array[1] = this.array[1] + vector.array[1];\r\n\t\tthis.array[2] = this.array[2] + vector.array[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(k: number): this {\r\n\t\tthis.array[0] = this.array[0] + k;\r\n\t\tthis.array[1] = this.array[1] + k;\r\n\t\tthis.array[2] = this.array[2] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] - vector.array[0];\r\n\t\tthis.array[1] = this.array[1] - vector.array[1];\r\n\t\tthis.array[2] = this.array[2] - vector.array[2];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(from: Vector3, to: Vector3, t: number): this {\r\n\t\t\r\n\t\tthis.array[0] = (1 - t) * from.x + t * (to.x - from.x);\r\n\t\tthis.array[1] = (1 - t) * from.y + t * (to.y - from.y);\r\n\t\tthis.array[2] = (1 - t) * from.z + t * (to.z - from.z);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmax(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.max(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.max(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.max(this.array[2], vectorB.array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmin(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.min(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.min(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.min(this.array[2], vectorB.array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min: Vector3, max: Vector3): this {\r\n\t\tthis.array[0] = Math.min(max.array[0], Math.max(this.array[0], min.array[0]));\r\n\t\tthis.array[1] = Math.min(max.array[1], Math.max(this.array[1], min.array[1]));\r\n\t\tthis.array[2] = Math.min(max.array[2], Math.max(this.array[2], min.array[2]));\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tscale(k: number): this {\r\n\t\tthis.array[0] = this.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcross(vector: Vector3): this {\r\n\t\tconst t0 = this.array[1] * vector.array[2] - this.array[2] * vector.array[1];\r\n\t\tconst t1 = this.array[2] * vector.array[0] - this.array[0] * vector.array[2];\r\n\t\tconst t2 = this.array[0] * vector.array[1] - this.array[1] * vector.array[0];\r\n\t\t\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdot(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst a = this.array;\r\n\r\n\t\treturn Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst a = this.array;\r\n\t\t\r\n\t\treturn a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\r\n\t}\r\n\r\n\tdistance(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn Math.hypot(dx, dy, dz);\r\n\t}\r\n\r\n\tdistanceSquared(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst {array} = this;\r\n\t\tconst length = this.length();\r\n\t\tif (length > Number.EPSILON) {\r\n\t\t\tarray[0] /= length;\r\n\t\t\tarray[1] /= length;\r\n\t\t\tarray[2] /= length;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tarray[0] = 0;\r\n\t\t\tarray[1] = 0;\r\n\t\t\tarray[2] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate(): this {\r\n\t\tthis.array[0] *= -1;\r\n\t\tthis.array[1] *= -1;\r\n\t\tthis.array[2] *= -1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(mat: Matrix3): this\r\n\tmult(vec: Vector3): this\r\n\tmult(arg0: Matrix3 | Vector3): this {\r\n\t\tif (arg0 instanceof Vector3) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tthis.array[0] = this.array[0] * v[0];\r\n\t\t\tthis.array[1] = this.array[1] * v[1];\r\n\t\t\tthis.array[2] = this.array[2] * v[2];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst x = this.x;\r\n\t\t\tconst y = this.y;\r\n\t\t\tconst z = this.z;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[3] + z * m[6];\r\n\t\t\tthis.y = x * m[1] + y * m[4] + z * m[7];\r\n\t\t\tthis.z = x * m[2] + y * m[5] + z * m[8];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\ttoSpherical(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const x = thisArray[0] - centerArray[0];\r\n        const y = thisArray[1] - centerArray[1];\r\n        const z = thisArray[2] - centerArray[2];\r\n\r\n        const roh = Math.hypot(x, y, z);\r\n        const theta = Math.acos(y / roh);\r\n        const phi = Math.atan2(z, x);\r\n        thisArray[0] = roh;\r\n        thisArray[1] = theta;\r\n        thisArray[2] = phi;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n    toCartesian(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const roh = thisArray[0];\r\n        const theta = thisArray[1];\r\n        const phi = thisArray[2];\r\n\r\n        const x = roh * Math.sin(theta) * Math.cos(phi) + centerArray[0];\r\n        const y = roh * Math.cos(theta) + centerArray[1];\r\n        const z = roh * Math.sin(theta) * Math.sin(phi) + centerArray[2];\r\n        thisArray[0] = x;\r\n        thisArray[1] = y;\r\n        thisArray[2] = z;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tstatic mult(mat: Matrix3, vec: Vector3): Vector3 {\r\n\t\tconst m = mat.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\treturn new Vector3Base([\r\n\t\t\tm[0] * v[0] + m[1] * v[1] + m[2] * v[2],\r\n\t\t\tm[3] * v[0] + m[4] * v[1] + m[5] * v[2],\r\n\t\t\tm[6] * v[0] + m[7] * v[1] + m[8] * v[2]\r\n\t\t]);\r\n\t}\r\n\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n\t\tout[offset + 2] = v[2];\r\n    }\r\n    \r\n    readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tthis.array[0] = arr[offset    ];\r\n\t\tthis.array[1] = arr[offset + 1];\r\n\t\tthis.array[2] = arr[offset + 2];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\taddScaled(vector: Vector3, k: number): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] + vector.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] + vector.array[2] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcopyAndSub(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\tthis.array[0] = a[0] - b[0];\r\n\t\tthis.array[1] = a[1] - b[1];\r\n\t\tthis.array[2] = a[2] - b[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcopyAndCross(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\t\r\n\t\tconst t0 = a[1] * b[2] - a[2] * b[1];\r\n\t\tconst t1 = a[2] * b[0] - a[0] * b[2];\r\n\t\tconst t2 = a[0] * b[1] - a[1] * b[0];\r\n\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\t[Symbol.iterator] (): Iterator<number> {\r\n\t\tconst {array} = this;\r\n\t\tconst {length} = array;\r\n\t\tlet i = 0;\r\n\t\treturn {\r\n\t\t\tnext() {\r\n\t\t\t\tif (i < length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: array[i++], done: false\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: undefined, done: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar Vector3: Vector3Constructor = Vector3Base;\r\n\r\nconst Vector3Injector: Injector<Vector3Constructor> = new Injector({\r\n\tdefaultCtor: Vector3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector3Constructor) => {\r\n\t\t\tVector3 = ctor;\r\n\t\t}\r\n});","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\n\r\nexport { Key };\r\nexport { KeyModifier };\r\nexport { HotKey };\r\nexport { MouseButton };\r\nexport { Input };\r\n\r\nenum Key {\r\n    A = \"a\",\r\n    B = \"b\",\r\n    C = \"c\",\r\n    D = \"d\",\r\n    E = \"e\",\r\n    F = \"f\",\r\n    G = \"g\",\r\n    H = \"h\",\r\n    I = \"i\",\r\n    J = \"j\",\r\n    K = \"k\",\r\n    L = \"l\",\r\n    M = \"m\",\r\n    O = \"o\",\r\n    P = \"p\",\r\n    Q = \"q\",\r\n    R = \"r\",\r\n    S = \"s\",\r\n    T = \"t\",\r\n    U = \"u\",\r\n    V = \"v\",\r\n    W = \"w\",\r\n    X = \"x\",\r\n    Y = \"y\",\r\n    Z = \"z\",\r\n    ENTER = \"Enter\",\r\n    BACKSPACE = \"Backspace\",\r\n    ARROW_DOWN = \"ArrowDown\",\r\n    ARROW_LEFT = \"ArrowLeft\",\r\n    ARROW_RIGHT = \"ArrowRight\",\r\n    ARROW_UP = \"ArrowUp\",\r\n    SHIFT = \"Shift\"\r\n}\r\n\r\nconst KEYS_COUNT = Object.keys(Key).length;\r\n\r\nenum KeyModifier {\r\n    Alt = \"Alt\",\r\n    Control = \"Control\",\r\n    Shift = \"Shift\",\r\n}\r\n\r\nfunction displayKeyModifier(mode: KeyModifier): string {\r\n    switch (mode) {\r\n        case KeyModifier.Control:\r\n            return \"Ctrl\";\r\n        default:\r\n            return mode;\r\n    }\r\n}\r\n\r\nenum MouseButton {\r\n    LEFT = 0,\r\n    WHEEL = 1,\r\n    RIGHT = 2,\r\n    FORWARD = 3,\r\n    BACK = 4\r\n}\r\n\r\nconst MOUSE_BUTTONS_COUNT = Object.keys(MouseButton).length;\r\n\r\nconst MOUSE_BUTTONS_INDICES = Object.freeze(\r\n    Object.values(MouseButton).reduce(\r\n        (map, button, index) => Object.assign(map, {[button]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst KEYS_INDICES = Object.freeze(\r\n    Object.values(Key).reduce(\r\n        (map, key, index) => Object.assign(map, {[key]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst INPUT_EVENT_UP = 0;\r\nconst INPUT_EVENT_DOWN = 1;\r\nconst INPUT_EVENT_REPEAT = 2;\r\n\r\nconst testKeyModifier = (mod: KeyModifier, event: KeyboardEvent) => {\r\n    switch (mod) {\r\n        case \"Alt\":\r\n            return event.altKey;\r\n        case \"Control\":\r\n            return event.ctrlKey;\r\n        case \"Shift\":\r\n            return event.shiftKey;\r\n        default:\r\n            return () => true;\r\n    }\r\n}\r\n\r\nclass HotKey {\r\n\r\n    readonly key: Key;\r\n    readonly mod1?: KeyModifier;\r\n    readonly mod2?: KeyModifier;\r\n\r\n    constructor(key: Key, mod1?: KeyModifier, mod2?: KeyModifier) {\r\n        this.key = key;\r\n        this.mod1 = mod1;\r\n        this.mod2 = mod2;\r\n    }\r\n\r\n    toString(): string {\r\n        return `${this.mod1 ? `${displayKeyModifier(this.mod1)}+` : ''}${this.mod2 ? `${displayKeyModifier(this.mod2)}+` : ''}${(this.key.length === 1) ? this.key.toUpperCase() : this.key}`;\r\n    }\r\n\r\n    /*static fromString(str: string): HotKey | null {\r\n        const keys = Object.values(Key);\r\n        const keyModifiers = Object.values(KeyModifier);\r\n\r\n        let key: Key;\r\n        let mod1: KeyModifier | undefined;\r\n        let mod2: KeyModifier | undefined;\r\n\r\n        const keysStr = str.split(' + ');\r\n        if (keysStr.length >= 1) {\r\n            key = keysStr[0] as Key;\r\n            if (!keys.indexOf(key)) {\r\n                return null;\r\n            }\r\n            if (keysStr.length >= 2) {\r\n                mod1 = keysStr[1] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod1)) {\r\n                    return null;\r\n                }\r\n            }\r\n            if (keysStr.length >= 3) {\r\n                mod2 = keysStr[2] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod2)) {\r\n                    return null;\r\n                }\r\n            }\r\n            return new HotKey(key, mod1, mod2);\r\n        }\r\n        return null;\r\n    }*/\r\n\r\n    test(event: KeyboardEvent): boolean {\r\n        return ((!this.mod1 || testKeyModifier(this.mod1, event)) && (!this.mod2 || testKeyModifier(this.mod2, event)) && event.key === this.key);\r\n    }\r\n}\r\n\r\ninterface Input {\r\n    initialize(canvas: HTMLCanvasElement): void;\r\n    clear(): void;\r\n    getKey(key: Key): boolean;\r\n    getKeyUp(key: Key): boolean;\r\n    getKeyDown(key: Key): boolean;\r\n    getMouseButton(button: MouseButton): boolean;\r\n    getPointerPosition(): Vector2;\r\n    getPointerScreenPosition(): Vector2;\r\n    getWheelDelta(): number;\r\n    getMouseButtonDown(button: MouseButton): boolean;\r\n    getMouseButtonUp(button: MouseButton): boolean;\r\n}\r\n\r\nclass InputBase implements Input {\r\n    private readonly keyFlags = new Array<boolean>(3 * KEYS_COUNT).fill(false);\r\n    private readonly mouseFlags = new Array<boolean>(3 * MOUSE_BUTTONS_COUNT).fill(false);\r\n    private readonly pointerPosition = new Vector2();\r\n    private wheelDelta = 0;\r\n    private canvas: HTMLCanvasElement | null = null;\r\n    private canvasRectangle: DOMRect | null = null;\r\n\r\n    initialize(canvas: HTMLCanvasElement): void {\r\n        this.canvas = canvas;\r\n        this.canvasRectangle = canvas.getBoundingClientRect();\r\n        canvas.addEventListener(\"pointerdown\", this);\r\n        canvas.addEventListener(\"pointerup\", this);\r\n        canvas.addEventListener(\"contextmenu\", this);\r\n        canvas.addEventListener(\"pointermove\", this);\r\n        canvas.addEventListener(\"wheel\", this);\r\n        canvas.addEventListener(\"keydown\", this);\r\n        canvas.addEventListener(\"keyup\", this);\r\n        canvas.addEventListener(\"focusout\", this);\r\n    }\r\n\r\n    getCanvasRect(): DOMRect {\r\n        const rect = this.canvasRectangle;\r\n        if (rect === null) {\r\n            throw new Error(`Input manager not initialized.`);\r\n        }\r\n        return rect;\r\n    }\r\n\r\n    clear(): void {\r\n        this.keyFlags.fill(false, 0, INPUT_EVENT_REPEAT * KEYS_COUNT);\r\n        this.mouseFlags.fill(false, 0, INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT);\r\n        this.wheelDelta = 0;\r\n    }\r\n    \r\n    handleEvent(event: Event): void {\r\n        let eventIndex = -1;\r\n        switch (event.type) {\r\n            case \"pointerdown\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"pointerup\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"pointermove\":\r\n                const canvasRect = this.getCanvasRect();\r\n                this.pointerPosition.setValues(\r\n                    ((event as MouseEvent).clientX - canvasRect.left),\r\n                    ((event as MouseEvent).clientY - canvasRect.top),\r\n                );\r\n                break;\r\n            case \"wheel\":\r\n                this.wheelDelta = (event as WheelEvent).deltaY / 100;\r\n                break;\r\n            case \"keydown\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"keyup\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"focusout\":\r\n                this.keyFlags.fill(false);\r\n                this.mouseFlags.fill(false);\r\n                this.wheelDelta = 0;\r\n                this.pointerPosition.setZeros();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    /*static getAxis(axisName: string) {\r\n\r\n    }\r\n\r\n    static getButton(buttonName: string) {\r\n\r\n    }\r\n\r\n    static getButtonUp(buttonName: string) {\r\n\r\n    }\r\n\r\n    static getButtonDown(buttonName: string) {\r\n\r\n    }*/\r\n\r\n    getKey(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getKeyUp(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getKeyDown(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getMouseButton(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    getPointerPosition(): Vector2 {\r\n        return this.pointerPosition.clone();\r\n    }\r\n\r\n    getPointerScreenPosition(): Vector2 {\r\n        const positionAray = this.pointerPosition.array;\r\n        const canvasRect = this.getCanvasRect();\r\n        const x = (positionAray[0] / canvasRect.width) * 2 - 1;\r\n        const y = (positionAray[1] / canvasRect.height) * 2 - 1;\r\n        return new Vector2([x, y]);\r\n    }\r\n\r\n    getWheelDelta(): number {\r\n        return this.wheelDelta;\r\n    }\r\n\r\n    getMouseButtonDown(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    getMouseButtonUp(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n}\r\n\r\nvar Input: Input = new InputBase();","import { Vector3 } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport class Space {\r\n\r\n    private constructor () {};\r\n    \r\n    static readonly origin:      Vector3 = new Vector3([ 0,  0,  0]);\r\n    static readonly right:       Vector3 = new Vector3([ 1,  0,  0]);\r\n    static readonly left:        Vector3 = new Vector3([-1,  0,  0]);\r\n    static readonly up:          Vector3 = new Vector3([ 0,  1,  0]);\r\n    static readonly down:        Vector3 = new Vector3([ 0, -1,  0]);\r\n    static readonly forward:     Vector3 = new Vector3([ 0,  0,  1]);\r\n    static readonly backward:    Vector3 = new Vector3([ 0,  0, -1]);\r\n}","export { ColorValues };\r\nexport { Color };\r\n\r\ntype ColorValues = [number, number, number];\r\n\r\ninterface ColorConstructor {\r\n    readonly prototype: Color;\r\n    new(): Color;\r\n    new(values: ColorValues): Color;\r\n    new(values?: ColorValues): Color;\r\n    readonly BLACK: Color;\r\n    readonly RED: Color;\r\n    readonly GREEN: Color;\r\n    readonly BLUE: Color;\r\n    readonly WHITE: Color;\r\n    array(...colors: Color[]): number[];\r\n    lerp(a: Color, b: Color, t: number): Color;\r\n}\r\n\r\ninterface Color extends ArrayLike<number>, Iterable<number> {\r\n    readonly array: Float32Array;\r\n    readonly length: number;\r\n    0: number;\r\n    1: number;\r\n    2: number;\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n    copy(color: Color): Color;\r\n    clone(): Color;\r\n    getValues(): ColorValues;\r\n    setValues(\r\n        r: number,\r\n        g: number,\r\n        b: number\r\n    ): Color;\r\n    lerp(color: Color, t: number): Color;\r\n    normalize(): Color;\r\n}\r\n\r\nclass ColorBase implements Color {\r\n    [index: number]: number;\r\n    readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n    constructor(r: number, g: number, b: number)\r\n    constructor(r?: number, g?: number, b?: number) {\r\n\t\tthis.array = new Float32Array([\r\n            r ?? 0, g ?? 0, b ?? 0\r\n        ]);\r\n    }\r\n    \r\n    static readonly BLACK = new ColorBase(0, 0, 0);\r\n    static readonly RED = new ColorBase(1, 0, 0);\r\n    static readonly GREEN = new ColorBase(0, 1, 0);\r\n    static readonly BLUE = new ColorBase(0, 0, 1);\r\n    static readonly WHITE = new ColorBase(1, 1, 1);\r\n\r\n    static array(...colors: Color[]): number[] {\r\n        const a = new Array<number>(colors.length * 4);\r\n        let c;\r\n        let i = 0;\r\n        for (const color of colors) {\r\n            c = color.array;\r\n            a[i + 0] = c[0];\r\n            a[i + 1] = c[1];\r\n            a[i + 2] = c[2];\r\n            i += 3;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    get length(): number {\r\n        return 3;\r\n    }\r\n\r\n    get r(): number {\r\n        return this.array[0];\r\n    }\r\n\r\n    set r(r: number) {\r\n        this.array[0] = r;\r\n    }\r\n\r\n    get g(): number {\r\n        return this.array[1];\r\n    }\r\n\r\n    set g(g: number) {\r\n        this.array[1] = g;\r\n    }\r\n\r\n    get b(): number {\r\n        return this.array[2];\r\n    }\r\n\r\n    set b(b: number) {\r\n        this.array[2] = b;\r\n    }\r\n\r\n    get a(): number {\r\n        return this.array[3];\r\n    }\r\n\r\n    set a(a: number) {\r\n        this.array[3] = a;\r\n    }\r\n\r\n    get 0(): number {\r\n        return this.array[0];\r\n    }\r\n\r\n    set 0(r: number) {\r\n        this.array[0] = r;\r\n    }\r\n\r\n    get 1(): number {\r\n        return this.array[1];\r\n    }\r\n\r\n    set 1(g: number) {\r\n        this.array[1] = g;\r\n    }\r\n\r\n    get 2(): number {\r\n        return this.array[2];\r\n    }\r\n\r\n    set 2(b: number) {\r\n        this.array[2] = b;\r\n    }\r\n\r\n    get 3(): number {\r\n        return this.array[3];\r\n    }\r\n\r\n    set 3(a: number) {\r\n        this.array[3] = a;\r\n    }\r\n\r\n    setValues(r: number, g: number, b: number): this {\r\n\t\tconst {array} = this;\r\n\r\n\t\tarray[0] = r;\r\n\t\tarray[1] = g;\r\n\t\tarray[2] = b;\r\n\r\n\t\treturn this;\r\n    }\r\n    \r\n    getValues(): ColorValues {\r\n\t\tconst {array} = this;\r\n\t\t\r\n\t\treturn [\r\n\t\t\tarray[0], array[1], array[2]\r\n\t\t];\r\n\t}\r\n    \r\n    copy(color: Color): this {\r\n        const {array} = this;\r\n        const {r, g, b} = color;\r\n\r\n        array[0] = r;\r\n        array[1] = g;\r\n        array[2] = b;\r\n\r\n        return this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn <this>(new ColorBase()).copy(this);\r\n    }\r\n\r\n    static lerp(a: Color, b: Color, t: number): Color {\r\n\t\treturn a.lerp(b, t);\r\n\t}\r\n    \r\n    lerp(color: Color, t: number): this {\r\n        const {array} = this;\r\n        const {r, g, b} = color;\r\n\r\n\t\tarray[0] = t * (r - array[0]);\r\n\t\tarray[1] = t * (g - array[1]);\r\n\t\tarray[2] = t * (b - array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n    \r\n\tnormalize(): this {\r\n\t\tconst {array} = this;\r\n\t\tconst length = 255;\r\n        array[0] /= length;\r\n        array[1] /= length;\r\n        array[2] /= length;\r\n\t\treturn this;\r\n\t}\r\n\r\n    [Symbol.iterator] (): Iterator<number> {\r\n\t\tconst {array} = this;\r\n\t\tconst {length} = array;\r\n\t\tlet i = 0;\r\n\t\treturn {\r\n\t\t\tnext() {\r\n\t\t\t\tif (i < length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: array[i++], done: false\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: undefined, done: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst Color: ColorConstructor = ColorBase;","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Matrix4 } from \"../matrices/Matrix4\";\r\n\r\nexport { Vector4 };\r\nexport { Vector4Constructor };\r\nexport { Vector4Injector };\r\nexport { Vector4Base };\r\n\r\nexport type Vector4Values = [number, ...number[]] & { length: 4 };\r\n\r\ninterface Vector4Constructor {\r\n\treadonly prototype: Vector4;\r\n\tnew(): Vector4;\r\n\tnew(x: number, y: number, z: number, w: number): Vector4;\r\n\tnew(array: ArrayLike<number>): Vector4;\r\n\tmult(mat: Matrix4, vec: Vector4): Vector4;\r\n}\r\n\r\ninterface Vector4 {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector4Values;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\tw: number;\r\n\tsetValues(\r\n\t\tx: number,\r\n\t\ty: number,\r\n\t\tz: number,\r\n\t\tw: number\r\n\t): this;\r\n\tcopy(vec: Vector4): this;\r\n\tclone(): this;\r\n\tequals(vec: Vector4): boolean;\r\n\tsetZeros(): this;\r\n\tsetUnit(): this;\r\n\tadd(vec: Vector4): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector4): this;\r\n\tlerp(vec: Vector4, t: number): this;\r\n\tclamp(min: Vector4, max: Vector4): this;\r\n\tmultScalar(k: number): this;\r\n\tdot(vec: Vector4): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdist(vec: Vector4): number;\r\n\tdistSquared(vec: Vector4): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector4): this;\r\n\taddScaled(vec: Vector4, k: number): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector4Base implements Vector4 {\r\n\treadonly array: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(array: ArrayLike<number>)\r\n\t  constructor(\r\n\t  x: number, y: number, z: number, w: number\r\n\t)\r\n\tconstructor(\r\n\t  ...args: any[]\r\n\t) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([args[0], args[1], args[2], args[3]]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tconst array = args[0];\r\n\t\t\tif (array.length < 4) {\r\n\t\t\t\tthrow new MathError(`Array must be of length 4 at least.`);\r\n\t\t\t}\r\n\t\t\tif (array instanceof Float32Array) {\r\n\t\t\t\tthis.array = array;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.array = new Float32Array(array);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([0, 0, 0, 0]);\r\n\t\t}\r\n\t}\r\n\t\r\n\tget values(): Vector4Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1],\r\n\t\t\tthis.array[2],\r\n\t\t\tthis.array[3]\r\n\t\t];\r\n\t}\r\n\r\n\tset values(values: Vector4Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t\tthis.array[2] = values[2];\r\n\t\tthis.array[3] = values[3];\r\n\t}\r\n\r\n\tget 0() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset 0(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget 1() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset 1(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tget 2() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n\tset 2(z: number) {\r\n\t\tthis.array[2] = z;\r\n\t}\r\n\r\n\tget 3() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset 3(w: number) {\r\n\t\tthis.array[3] = w;\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget y(): number {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tget z(): number {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n\tset z(z: number) {\r\n\t\tthis.array[2] = z;\r\n    }\r\n    \r\n\tget w(): number {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset w(w: number) {\r\n\t\tthis.array[3] = w;\r\n\t}\r\n\r\n\tsetValues(x: number, y: number, z: number, w: number): this {\r\n\t\tconst o = this.array;\r\n\t\t\r\n\t\to[0] = x;\r\n\t\to[1] = y;\r\n\t\to[2] = z;\r\n\t\to[3] = w;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcopy(vec: Vector4): this {\r\n\t\tconst o = this.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\to[0] = v[0];\r\n\t\to[1] = v[1];\r\n\t\to[2] = v[2];\r\n\t\to[3] = v[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new Vector4Base(this.values) as this;\r\n\t}\r\n\r\n\tequals(vec: Vector4): boolean {\r\n\t\tconst o = this.array;\r\n\t\tconst v = vec.array;\r\n\t\t\r\n\t\treturn v[0] === o[0]\r\n\t\t\t&& v[1] === o[1]\r\n\t\t\t&& v[2] === o[2]\r\n\t\t\t&& v[3] === o[3];\r\n\t}\r\n\r\n\tsetZeros(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 0;\r\n\t\to[1] = 0;\r\n\t\to[2] = 0;\r\n\t\to[3] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetUnit(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 1;\r\n\t\to[1] = 1;\r\n\t\to[2] = 1;\r\n\t\to[3] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(vec: Vector4): this {\r\n\t\tconst o = this.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\to[0] = o[0] + v[0];\r\n\t\to[1] = o[1] + v[1];\r\n\t\to[2] = o[2] + v[2];\r\n\t\to[3] = o[3] + v[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + k;\r\n\t\to[1] = o[1] + k;\r\n\t\to[2] = o[2] + k;\r\n\t\to[3] = o[3] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(vec: Vector4): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] - v[0];\r\n\t\to[1] = o[1] - v[1];\r\n\t\to[2] = o[2] - v[2];\r\n\t\to[3] = o[3] - v[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(vec: Vector4, t: number): this {\r\n\t\tconst o = this.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\to[0] = t * (v[0] - o[0]);\r\n\t\to[1] = t * (v[1] - o[1]);\r\n\t\to[2] = t * (v[2] - o[2]);\r\n\t\to[3] = t * (v[3] - o[3]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min: Vector4, max: Vector4): this {\r\n\t\tconst o = this.array;\r\n\t\tconst l = min.array;\r\n\t\tconst g = max.array;\r\n\t\t\r\n\t\to[0] = Math.min(g[0], Math.max(l[0], o[0]));\r\n\t\to[1] = Math.min(g[1], Math.max(l[0], o[1]));\r\n\t\to[2] = Math.min(g[2], Math.max(l[0], o[2]));\r\n\t\to[3] = Math.min(g[3], Math.max(l[0], o[3]));\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmultScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] * k;\r\n\t\to[1] = o[1] * k;\r\n\t\to[2] = o[2] * k;\r\n\t\to[3] = o[3] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdot(vec: Vector4): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]) + (a[3] * b[3]);\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2] + v[3] * v[3]);\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn v[0] * v[0] + v[1] * v[1] + v[2] * v[2] + v[3] * v[3];\r\n\t}\r\n\r\n\tdist(vec: Vector4): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\t\t\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n        const dz = a[2] - b[2];\r\n        const dw = a[3] - b[3];\r\n\r\n\t\treturn Math.sqrt(dx * dx + dy * dy + dz * dz + dw * dw);\r\n\t}\r\n\r\n\tdistSquared(vec: Vector4): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n        const dz = a[2] - b[2];\r\n\t\tconst dw = a[3] - b[3];\r\n\t\t\r\n\t\treturn dx * dx + dy * dy + dz * dz + dw * dw;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\tconst lenSq = o[0] * o[0] + o[1] * o[1] + o[2] * o[2] + o[3] * o[3];\r\n\t\tconst len = Math.sqrt(lenSq);\r\n\t\tif (len > Number.EPSILON) {\r\n\t\t\to[0] = o[0] / len;\r\n\t\t\to[1] = o[1] / len;\r\n\t\t\to[2] = o[2] / len;\r\n\t\t\to[3] = o[3] / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\to[0] = 0;\r\n\t\t\to[1] = 0;\r\n            o[2] = 0;\r\n\t\t\to[3] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = -o[0];\r\n\t\to[1] = -o[1];\r\n\t\to[2] = -o[2];\r\n\t\to[3] = -o[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(vec: Vector4): this {\r\n\t\tconst o = this.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\to[0] = o[0] * v[0];\r\n\t\to[1] = o[1] * v[1];\r\n\t\to[2] = o[2] * v[2];\r\n\t\to[3] = o[3] * v[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tstatic mult(mat: Matrix4, vec: Vector4): Vector4 {\r\n\t\tconst m = mat.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\treturn new Vector4Base([\r\n\t\t\tm[ 0] * v[0] + m[ 1] * v[1] + m[ 2] * v[2] + m[ 3] * v[3],\r\n\t\t\tm[ 4] * v[0] + m[ 5] * v[1] + m[ 6] * v[2] + m[ 7] * v[3],\r\n\t\t\tm[ 8] * v[0] + m[ 9] * v[1] + m[10] * v[2] + m[11] * v[3],\r\n\t\t\tm[12] * v[0] + m[13] * v[1] + m[14] * v[2] + m[15] * v[3]\r\n\t\t]);\r\n\t}\r\n\r\n\taddScaled(vec: Vector4, k: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0] * k;\r\n\t\to[1] = o[1] + v[1] * k;\r\n\t\to[2] = o[2] + v[2] * k;\r\n\t\to[3] = o[3] + v[3] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n\t\tout[offset + 2] = v[2];\r\n\t\tout[offset + 3] = v[3];\r\n    }\r\n    \r\n    readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = arr[offset    ];\r\n\t\to[1] = arr[offset + 1];\r\n\t\to[2] = arr[offset + 2];\r\n\t\to[3] = arr[offset + 3];\r\n\r\n\t\treturn this;\r\n    }\r\n}\r\n\r\nvar Vector4: Vector4Constructor = Vector4Base;\r\nconst Vector4Injector: Injector<Vector4Constructor> = new Injector({\r\n\tdefaultCtor: Vector4Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector4Constructor) => {\r\n\t\t\tVector4 = ctor;\r\n\t\t}\r\n});","import { GeometryBuffer } from \"../scenes/geometries/GeometryBuffer\";\r\n\r\nexport { Mesh };\r\n\r\ninterface MeshProperties {\r\n    geometry: GeometryBuffer;\r\n    material: Object;\r\n}\r\n\r\ninterface MeshConstructor {\r\n    prototype: Mesh;\r\n    new(properties: MeshProperties): Mesh;\r\n}\r\n\r\ninterface Mesh {\r\n    geometry: GeometryBuffer;\r\n    material: Object;\r\n}\r\n\r\nclass MeshBase implements Mesh {\r\n    geometry: GeometryBuffer;\r\n    material: Object;\r\n\r\n    constructor(properties: MeshProperties) {\r\n        this.geometry = properties.geometry;\r\n        this.material = properties.material;\r\n    }\r\n}\r\n\r\nvar Mesh: MeshConstructor = MeshBase;","export { Buffer };\r\n\r\nexport enum BufferDataUsage {\r\n    STATIC_DRAW = 0x88E4,\r\n    DYNAMIC_DRAW = 0x88E8,\r\n    STREAM_DRAW = 0x88E0,\r\n    STATIC_READ = 0x88E5,\r\n    DYNAMIC_READ = 0x88E9,\r\n    STREAM_READ = 0x88E1,\r\n    STATIC_COPY = 0x88E6,\r\n    DYNAMIC_COPY = 0x88EA,\r\n    STREAM_COPY = 0x88E2\r\n}\r\n\r\nexport enum BufferTarget {\r\n    ARRAY_BUFFER = 0x8892,\r\n    ELEMENT_ARRAY_BUFFER = 0x8893,\r\n    TRANSFORM_FEEDBACK_BUFFER = 0x8C8E,\r\n    UNIFORM_BUFFER = 0x8A11,\r\n}\r\n\r\ntype Buffer = {\r\n    internalBuffer: WebGLBuffer;\r\n    target: BufferTarget;\r\n    usage: BufferDataUsage;\r\n    byteLength: number;\r\n}","import { BufferDataUsage, Buffer } from \"./WebGLBufferUtilities\";\r\nimport { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\n\r\nexport { VertexAttributeValue };\r\nexport { VertexAttributeProperties };\r\nexport { VertexArrayProperties };\r\nexport { VertexArrayValues };\r\nexport { VertexArray };\r\nexport { WebGLVertexArrayUtilities };\r\n\r\nexport enum DrawMode {\r\n    POINTS = 0x0000,\r\n    LINES = 0x0001,\r\n    LINE_LOOP = 0x0002,\r\n    LINE_STRIP = 0x0003,\r\n    TRIANGLES = 0x0004,\r\n    TRIANGLE_STRIP = 0x0005,\r\n    TRIANGLE_FAN = 0x0006\r\n}\r\n\r\nexport enum DataComponentType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406\r\n}\r\n\r\nexport enum AttributeDataType {\r\n    VEC2 = \"VEC2\",\r\n    VEC3 = \"VEC3\",\r\n    VEC4 = \"VEC4\",\r\n}\r\n\r\nexport enum ElementArrayDataType {\r\n    UNSIGNED_BYTE = 0x1401,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    UNSIGNED_INT = 0x1405\r\n}\r\n\r\nexport type AttributeArray =\r\n    Float32Array | Int32Array | Uint32Array |\r\n    Int16Array | Uint16Array |\r\n    Int8Array | Uint8Array;\r\n\r\ntype VertexAttributeProperties = {\r\n    type: AttributeDataType;\r\n    array?: AttributeArray;\r\n    componentType?: DataComponentType;\r\n    byteLength?: number;\r\n    buffer?: number;\r\n    divisor?: number;\r\n    normalize?: boolean;\r\n    constant?: boolean;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n}\r\n\r\ntype VertexAttributeValue = {\r\n    array: AttributeArray;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n    constant?: boolean;\r\n}\r\n\r\ntype VertexAttribute = {\r\n    divisor: number;\r\n    componentType: DataComponentType;\r\n    numComponents: number;\r\n    constant: boolean;\r\n    constantValue?: AttributeArray;\r\n    byteOffset: number;\r\n    bytesPerElement: number;\r\n    type: AttributeDataType;\r\n    normalize: boolean;\r\n}\r\n\r\ntype VertexArrayProperties = {\r\n    vertexBuffers?: (VertexArrayBuffer | VertexArrayBufferProperties)[];\r\n    vertexAttributes?: Record<string, VertexAttributeProperties>;\r\n    elementBuffer?: VertexElementArrayBuffer | VertexElementArrayBufferProperties;\r\n    elementIndices?: Uint8Array | Uint16Array | Uint32Array;\r\n}\r\n\r\ntype VertexArrayValues = {\r\n    attributes: Record<string, VertexAttributeValue>;\r\n    drawMode?: DrawMode;\r\n    elementsCount?: number;\r\n    instanceCount?: number;\r\n}\r\n\r\ntype VertexArray = {\r\n    internalVertexArray: WebGLVertexArrayObject;\r\n    program: Program;\r\n    verticesBuffers: VertexArrayBuffer[];\r\n    elementBuffer?: VertexElementArrayBuffer;\r\n}\r\n\r\nexport type VertexArrayBuffer = Buffer & {\r\n    vertexAttributes: Record<string, VertexAttribute>;\r\n    byteLength: number;\r\n    byteStride: number;\r\n    interleaved: boolean;\r\n}\r\n\r\nexport type VertexArrayBufferProperties = {\r\n    usage?: BufferDataUsage;\r\n    interleaved?: boolean;\r\n}\r\n\r\nexport type VertexElementArrayBuffer = Buffer & {\r\n    indexType: ElementArrayDataType;\r\n};\r\n\r\nexport type VertexElementArrayBufferProperties = {\r\n    usage?: BufferDataUsage;\r\n}\r\n\r\nexport type VertexArrayBufferLayout = Record<string, {\r\n    byteOffset: number;\r\n    bytesPerElement: number;\r\n}>;\r\n\r\nclass WebGLVertexArrayUtilities {\r\n\r\n    static getDataTypeNumComponents(type: AttributeDataType): number {\r\n        switch (type) {\r\n            case AttributeDataType.VEC2:\r\n                return 2;\r\n            case AttributeDataType.VEC3:\r\n                return 3;\r\n            case AttributeDataType.VEC4:\r\n                return 4;\r\n        }\r\n    }\r\n\r\n    static getComponentTypeArrayConstructor(type: DataComponentType):\r\n        Float32ArrayConstructor | Int32ArrayConstructor | Uint32ArrayConstructor |\r\n        Int16ArrayConstructor | Uint16ArrayConstructor |\r\n        Int8ArrayConstructor | Uint8ArrayConstructor {\r\n        switch (type) {\r\n            case DataComponentType.FLOAT:\r\n                return Float32Array;\r\n            case DataComponentType.BYTE:\r\n                return Uint8Array;\r\n            case DataComponentType.UNSIGNED_BYTE:\r\n                return Uint8Array;\r\n            case DataComponentType.SHORT:\r\n                return Int16Array;\r\n            case DataComponentType.UNSIGNED_SHORT:\r\n                return Uint16Array;\r\n            case DataComponentType.INT:\r\n                return Int32Array;\r\n            case DataComponentType.UNSIGNED_INT:\r\n                return Uint32Array;\r\n        }\r\n    }\r\n\r\n    static getArrayComponentType(array: AttributeArray): DataComponentType {\r\n        if (array instanceof Float32Array) {\r\n            return DataComponentType.FLOAT;\r\n        }\r\n        else if (array instanceof Int32Array) {\r\n            return DataComponentType.INT;\r\n        }\r\n        else if (array instanceof Uint32Array) {\r\n            return DataComponentType.UNSIGNED_INT;\r\n        }\r\n        else if (array instanceof Int16Array) {\r\n            return DataComponentType.SHORT;\r\n        }\r\n        else if (array instanceof Uint16Array) {\r\n            return DataComponentType.UNSIGNED_SHORT;\r\n        }\r\n        else if (array instanceof Int8Array) {\r\n            return DataComponentType.BYTE;\r\n        }\r\n        else {\r\n            return DataComponentType.UNSIGNED_BYTE;\r\n        }\r\n    }\r\n\r\n    static createVertexElementArrayBuffer(gl: WebGL2RenderingContext, indices: Uint8Array | Uint16Array | Uint32Array): VertexElementArrayBuffer | null {\r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n        const usage = BufferDataUsage.STATIC_READ;\r\n        const target = gl.ELEMENT_ARRAY_BUFFER;\r\n        const {byteLength} = indices;\r\n        const indexType = this.getElementArrayBufferType(indices);\r\n\r\n        gl.bindBuffer(target, internalBuffer);\r\n        gl.bufferData(target, indices, usage);\r\n\r\n        return {\r\n            internalBuffer,\r\n            target,\r\n            usage,\r\n            byteLength,\r\n            indexType\r\n        };\r\n    }\r\n    \r\n    static createVertexArrayBuffer(gl: WebGL2RenderingContext, program: Program, attributes: Record<string, VertexAttributeProperties>, usage?: BufferDataUsage, interleaved?: boolean): VertexArrayBuffer | null {\r\n        const {internalProgram} = program;\r\n\r\n        const DEFAULT_USAGE = BufferDataUsage.STATIC_READ;\r\n        const DEFAULT_INTERLEAVED = false;\r\n        interleaved = interleaved ?? DEFAULT_INTERLEAVED;\r\n        usage = usage ?? DEFAULT_USAGE;\r\n\r\n        const attributesEntries = attributes ? Object.entries(attributes) : null;\r\n        const byteLength = (attributesEntries !== null) ? attributesEntries.reduce(\r\n            (byteLength, [_, attribute]) => byteLength + (attribute.array?.byteLength ?? attribute.byteLength ?? 0), 0\r\n        ) : 0;\r\n        \r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n\r\n        const target = gl.ARRAY_BUFFER;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        const dataBuffer = new ArrayBuffer(byteLength);\r\n        let byteStride = 0;\r\n\r\n        const vertexAttributes: Record<string, VertexAttribute> = {};\r\n        if (attributesEntries !== null) {\r\n\r\n            attributesEntries.forEach(([_, attribute]) => {\r\n                const {array, componentType, byteLength} = attribute;\r\n                if (!array && !(componentType && byteLength)) {\r\n                    throw new Error(\"Every attribute requires either an array or a componentType and a byteLength\");\r\n                }\r\n            });\r\n\r\n            byteStride = interleaved ? attributesEntries.reduce(\r\n                (stride, [_, attribute]) => {\r\n                    const {constant} = attribute;\r\n                    if (!constant) {\r\n                        const {array, type, componentType} = attribute;\r\n                        const {BYTES_PER_ELEMENT} = array ?? this.getComponentTypeArrayConstructor(componentType!);\r\n                        const numComponents = this.getDataTypeNumComponents(type);\r\n                        return stride + BYTES_PER_ELEMENT * numComponents;\r\n                    }\r\n                    return stride;\r\n                }, 0\r\n            ) : 0;\r\n            const bufferSlices = interleaved ? Math.trunc(byteLength / byteStride) : 0;\r\n            let byteOffset = 0;\r\n            let constantValue: AttributeArray | undefined;\r\n    \r\n            attributesEntries.forEach(([attributeName, attribute]) => {\r\n                const {array, type} = attribute;\r\n                let {constant, divisor, normalize, componentType} = attribute;\r\n                constant = constant ?? false;\r\n                componentType = array?this.getArrayComponentType(array) : componentType!;\r\n\r\n                const location = gl.getAttribLocation(internalProgram, attributeName);\r\n                if (location === -1) {\r\n                    console.warn(`Attribute ${attributeName} could not be located.`);\r\n                    return;\r\n                }\r\n\r\n                const numComponents = this.getDataTypeNumComponents(type);\r\n                divisor = divisor ?? 0;\r\n                normalize = normalize ?? false;\r\n                \r\n                gl.vertexAttribPointer(location, numComponents, componentType, normalize, byteStride, byteOffset);\r\n                if (divisor > 0) {\r\n                    gl.vertexAttribDivisor(location, divisor);\r\n                }\r\n                if (constant) {\r\n                    if (!array) {\r\n                        throw new Error(\"constant flag requires an array parameter\");\r\n                    }\r\n                    constantValue = array;\r\n                    switch (numComponents) {\r\n                        case 1:\r\n                            gl.vertexAttrib1fv(location, constantValue);\r\n                            break;\r\n                        case 2:\r\n                            gl.vertexAttrib2fv(location, constantValue);\r\n                            break;\r\n                        case 3:\r\n                            gl.vertexAttrib3fv(location, constantValue);\r\n                            break;\r\n                        case 4:\r\n                            gl.vertexAttrib4fv(location, constantValue);\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    if (!constant) {\r\n                        const {array, type} = attribute;\r\n                        const numComponents = this.getDataTypeNumComponents(type);\r\n                        let byteLength = 0;\r\n                        let bytesPerElement = 0;\r\n                        if (interleaved) {\r\n                            if (array) {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement, byteLength} = array);\r\n                                const bufferArrayConstructor = this.getComponentTypeArrayConstructor(\r\n                                    this.getArrayComponentType(array)\r\n                                );\r\n                                const bufferArray = new bufferArrayConstructor(dataBuffer, byteOffset);\r\n                                const arrayStrideOffset = byteStride / bytesPerElement;\r\n                                for (let i = 0; i < bufferSlices; i++) {\r\n                                    let arraySliceIndex = i * numComponents;\r\n                                    bufferArray.set(\r\n                                        array.slice(\r\n                                            arraySliceIndex,\r\n                                            arraySliceIndex + numComponents\r\n                                        ),\r\n                                        i * arrayStrideOffset\r\n                                    );\r\n                                }\r\n                            }\r\n                            else {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement} = this.getComponentTypeArrayConstructor(componentType!));\r\n                                byteLength = attribute.byteLength!;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (array) {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement, byteLength} = array);\r\n                                const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                                    WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                                );\r\n                                const bufferArray = new bufferArrayConstructor(dataBuffer, byteOffset);\r\n                                bufferArray.set(array);\r\n                            }\r\n                            else {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement} = this.getComponentTypeArrayConstructor(componentType!));\r\n                                byteLength = attribute.byteLength!;\r\n                            }\r\n                        }\r\n                        vertexAttributes[attributeName] = {\r\n                            constantValue,\r\n                            numComponents,\r\n                            divisor,\r\n                            componentType,\r\n                            constant,\r\n                            byteOffset,\r\n                            bytesPerElement,\r\n                            type,\r\n                            normalize\r\n                        };\r\n                        byteOffset += interleaved ? bytesPerElement * numComponents : byteLength;\r\n                    }\r\n                    gl.enableVertexAttribArray(location);\r\n                }\r\n            });\r\n        }\r\n        gl.bufferData(target, dataBuffer, usage);\r\n        return {\r\n            internalBuffer,\r\n            target,\r\n            usage,\r\n            byteLength,\r\n            interleaved,\r\n            byteStride,\r\n            vertexAttributes\r\n        };\r\n    }\r\n\r\n    static setVertexArrayValues(gl: WebGL2RenderingContext, vertexArray: VertexArray, values: VertexArrayValues): void {\r\n        const {attributes, elementsCount} = values;\r\n        \r\n        const attributesRecords = Object.keys(attributes);\r\n        attributesRecords.forEach((attributeRecord) => {\r\n            const {verticesBuffers} = vertexArray;\r\n            const verticesBuffer = verticesBuffers.find(\r\n                (verticesBuffer) => attributeRecord in verticesBuffer.vertexAttributes\r\n            );\r\n            if (verticesBuffer) {\r\n                const {internalBuffer, target, byteStride, interleaved, vertexAttributes} = verticesBuffer;\r\n                const currentArrayBufferBinding = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\r\n                if (currentArrayBufferBinding !== internalBuffer) {\r\n                    gl.bindBuffer(target, internalBuffer);\r\n                }\r\n                const attribute = attributes[attributeRecord];\r\n                const {byteOffset, numComponents} = vertexAttributes[attributeRecord];\r\n                let {array, srcOffset, srcLength} = attribute;\r\n                const {length} = array;\r\n                let dstOffset = byteOffset;\r\n                if (interleaved) {\r\n                    if (srcOffset || srcLength) {\r\n                        array = array.slice(srcOffset ?? 0, srcLength);\r\n                    }\r\n                    const slices = interleaved ? Math.trunc(length / numComponents) : 0;\r\n                    let sliceOffset = 0;\r\n                    for (let i = 0; i < slices; i++) {\r\n                        gl.bufferSubData(target, dstOffset, array, sliceOffset, numComponents);\r\n                        sliceOffset += numComponents;\r\n                        dstOffset += byteStride;\r\n                    }\r\n                }\r\n                else {\r\n                    srcOffset = srcOffset ?? 0;\r\n                    srcLength = srcLength ?? length;\r\n                    gl.bufferSubData(target, 0, array, srcOffset, srcLength);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    static setVertexArrayBufferData(gl: WebGL2RenderingContext, buffer: VertexArrayBuffer | VertexElementArrayBuffer, data: ArrayBufferView, dstByteOffset?: number, srcOffset?: number, length?: number): void {\r\n        const {internalBuffer, target} = buffer;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        dstByteOffset = dstByteOffset ?? 0;\r\n        srcOffset = srcOffset ?? 0;\r\n        gl.bufferSubData(target, dstByteOffset, data, srcOffset, length);\r\n    }\r\n\r\n    static createVertexArray(gl: WebGL2RenderingContext, program: Program, vertexArray: VertexArrayProperties): VertexArray | null {\r\n        const {vertexAttributes, vertexBuffers, elementIndices, elementBuffer: elementBufferOrBufferProperties} = vertexArray;\r\n        \r\n        const internalVertexArray = gl.createVertexArray();\r\n        if (internalVertexArray === null) {\r\n            return null;\r\n        }\r\n        gl.bindVertexArray(internalVertexArray);\r\n\r\n        const attributesEntries = vertexAttributes ? Object.entries(vertexAttributes) : [];\r\n        \r\n        const {internalProgram} = program;\r\n        const verticesBuffers: VertexArray[\"verticesBuffers\"] = [];\r\n        if (vertexBuffers) {\r\n            vertexBuffers.forEach((buffer_i, i) => {\r\n                const attributes = Object.fromEntries(attributesEntries.filter(\r\n                    ([_, attribute_i]) => attribute_i.buffer == i \r\n                ));\r\n                let buffer: VertexArrayBuffer | null = null;\r\n                if (buffer_i !== undefined) {\r\n                    if (\"internalBuffer\" in buffer_i) {\r\n                        const {target, internalBuffer} = buffer_i;\r\n                        buffer = buffer_i;\r\n                        gl.bindBuffer(target, internalBuffer);\r\n                        const {byteStride, vertexAttributes} = buffer;\r\n                        Object.entries(vertexAttributes).forEach(([attributeName, setter]) => {\r\n                            const {numComponents, componentType, normalize, byteOffset, divisor, constant, constantValue} = setter;\r\n                            const location = gl.getAttribLocation(internalProgram, attributeName);\r\n                            if (location > -1) {\r\n                                gl.vertexAttribPointer(location, numComponents, componentType, normalize, byteStride, byteOffset);\r\n                                if (divisor > 0) {\r\n                                    gl.vertexAttribDivisor(location, divisor);\r\n                                }\r\n                                if (constant && constantValue) {\r\n                                    switch (numComponents) {\r\n                                        case 1:\r\n                                            gl.vertexAttrib1fv(location, constantValue);\r\n                                            break;\r\n                                        case 2:\r\n                                            gl.vertexAttrib2fv(location, constantValue);\r\n                                            break;\r\n                                        case 3:\r\n                                            gl.vertexAttrib3fv(location, constantValue);\r\n                                            break;\r\n                                        case 4:\r\n                                            gl.vertexAttrib4fv(location, constantValue);\r\n                                            break;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    gl.enableVertexAttribArray(location);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (attributes) {\r\n                        const {usage, interleaved} = buffer_i;\r\n                        buffer = this.createVertexArrayBuffer(gl, program, attributes, usage, interleaved);\r\n                    }\r\n                }\r\n                else if (attributes) {\r\n                    buffer = this.createVertexArrayBuffer(gl, program, attributes);\r\n                }\r\n                if (buffer === null) {\r\n                    return null;\r\n                }\r\n                verticesBuffers.push(buffer);\r\n            });\r\n        }\r\n        else if (vertexAttributes) {\r\n            let buffer: VertexArrayBuffer | null = null;\r\n            buffer = this.createVertexArrayBuffer(gl, program, vertexAttributes);\r\n            if (buffer === null) {\r\n                return null;\r\n            }\r\n            verticesBuffers.push(buffer);\r\n        }\r\n        \r\n        let elementBuffer: VertexElementArrayBuffer | null | undefined = undefined;\r\n        if (elementBufferOrBufferProperties !== undefined) {\r\n            if (\"internalBuffer\" in elementBufferOrBufferProperties) {\r\n                const {target, internalBuffer} = elementBufferOrBufferProperties;\r\n                elementBuffer = elementBufferOrBufferProperties;\r\n                gl.bindBuffer(target, internalBuffer);\r\n            }\r\n            else if (elementIndices) {\r\n                elementBuffer = this.createVertexElementArrayBuffer(gl, elementIndices);\r\n            }\r\n        }\r\n        else if (elementIndices) {\r\n            elementBuffer = this.createVertexElementArrayBuffer(gl, elementIndices);\r\n        }\r\n        if (elementBuffer === null) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            verticesBuffers,\r\n            elementBuffer,\r\n            program,\r\n            internalVertexArray\r\n        };\r\n    }\r\n\r\n    static deleteVertexArray(gl: WebGL2RenderingContext, vertexArray: VertexArray): void {\r\n        const {internalVertexArray} = vertexArray;\r\n        if (gl.isVertexArray(internalVertexArray)) {\r\n            gl.deleteVertexArray(internalVertexArray);\r\n        }\r\n    }\r\n\r\n    static getElementArrayBufferType(indices: Uint8Array | Uint16Array | Uint32Array): ElementArrayDataType {\r\n        if (indices instanceof Uint8Array) {\r\n            return ElementArrayDataType.UNSIGNED_BYTE;\r\n        }\r\n        else if (indices instanceof Uint16Array) {\r\n            return ElementArrayDataType.UNSIGNED_SHORT;\r\n        }\r\n        else {\r\n            return ElementArrayDataType.UNSIGNED_INT;\r\n        }\r\n    }\r\n}","import { Color } from \"../../../libs/graphics/colors/Color\";\r\n\r\nexport { WireframeMaterial };\r\n\r\ndeclare global {\r\n    interface Materials {\r\n        \"wireframe\": WireframeMaterial;\r\n    }\r\n}\r\n\r\ninterface WireframeMaterialProperties {\r\n    color?: Color;\r\n}\r\n\r\ninterface WireframeMaterialConstructor {\r\n    prototype: WireframeMaterial;\r\n    new(properties?: WireframeMaterialProperties): WireframeMaterial;\r\n}\r\n\r\ninterface WireframeMaterial {\r\n    color: Color;\r\n}\r\n\r\nclass WireframeMaterialBase implements WireframeMaterial {\r\n    color: Color;\r\n\r\n    constructor(properties?: WireframeMaterialProperties) {\r\n        const DEFAULT_COLOR = Color.RED;\r\n        if (properties !== undefined) {\r\n            this.color = properties.color ?? DEFAULT_COLOR;\r\n        }\r\n        this.color = DEFAULT_COLOR;\r\n    }\r\n}\r\n\r\nvar WireframeMaterial: WireframeMaterialConstructor = WireframeMaterialBase;","import { AttributeArray, AttributeDataType, DataComponentType, WebGLVertexArrayUtilities } from \"../../webgl/WebGLVertexArrayUtilities\";\r\n\r\nexport { GeometryBuffer };\r\n\r\ninterface GeometryBufferConstructor {\r\n    readonly prototype: GeometryBuffer;\r\n    new(): GeometryBuffer;\r\n    new(\r\n        attributes: Record<string, GeometryBufferAttribute>,\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    ): GeometryBuffer;\r\n    fromBlob(blob: Blob): Promise<GeometryBuffer>;\r\n}\r\n\r\ninterface GeometryBuffer {\r\n    interleaved: boolean;\r\n    buffer: ArrayBuffer;\r\n    stride: number;\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    attributes: Record<string, {\r\n        type: AttributeDataType;\r\n        componentType: DataComponentType;\r\n        byteOffset: number;\r\n        byteLength: number;\r\n        constant?: boolean;\r\n        normalize?: boolean;\r\n    }>;\r\n    getAttribute(name: string): GeometryBufferAttribute | null;\r\n    toBlob(): Blob;\r\n}\r\n\r\ninterface GeometryBufferAttribute {\r\n    array: AttributeArray,\r\n    type: AttributeDataType;\r\n    constant?: boolean;\r\n    normalize?: boolean;\r\n}\r\n\r\nclass GeometryBufferBase implements GeometryBuffer {\r\n    buffer: ArrayBuffer;\r\n    attributes: Record<string, {\r\n        type: AttributeDataType;\r\n        componentType: DataComponentType;\r\n        byteOffset: number;\r\n        byteLength: number;\r\n        constant?: boolean;\r\n        normalize?: boolean;\r\n    }>;\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    interleaved: boolean;\r\n    stride: number;\r\n\r\n    constructor()\r\n    constructor(\r\n        attributes: Record<string, GeometryBufferAttribute>,\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    )\r\n    constructor(\r\n        attributes: Record<string, GeometryBufferAttribute> = {},\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    ) {\r\n        if (attributes) {\r\n            const attributesBuffers = Object.values(attributes);\r\n            const bufferByteLength = attributesBuffers.reduce(\r\n                (byteLength, attribute) => byteLength + attribute.array.byteLength, 0\r\n            );\r\n            const buffer = new ArrayBuffer(bufferByteLength);\r\n            const stride = (interleaved) ? attributesBuffers.reduce(\r\n                (stride, attribute) => {\r\n                    const {array, type} = attribute;\r\n                    return stride + array.BYTES_PER_ELEMENT * WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n                }, 0\r\n            ) : 0;\r\n            const bufferSlices = Math.trunc(bufferByteLength / stride);\r\n            \r\n            this.attributes = {};\r\n            this.indices = indices;\r\n            this.interleaved = interleaved ?? false;\r\n            this.stride = stride;\r\n            this.buffer = buffer;\r\n            \r\n            let byteOffset = 0;\r\n            if (interleaved) {\r\n                Object.entries(attributes).forEach(([name, attribute]) => {\r\n                    const {array, type, constant, normalize} = attribute;\r\n                    const componentType = WebGLVertexArrayUtilities.getArrayComponentType(array);\r\n                    const numComponents = WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n                    const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                        WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                    );\r\n                    const {byteLength, BYTES_PER_ELEMENT} = array;\r\n                    const bufferArray = new bufferArrayConstructor(buffer, byteOffset);\r\n                    const arrayStrideOffset = stride / BYTES_PER_ELEMENT;\r\n                    for (let i = 0; i < bufferSlices; i++) {\r\n                        let arraySliceIndex = i * numComponents;\r\n                        bufferArray.set(\r\n                            array.slice(\r\n                                arraySliceIndex,\r\n                                arraySliceIndex + numComponents\r\n                            ),\r\n                            i * arrayStrideOffset\r\n                        );\r\n                    }\r\n                    this.attributes[name] = {\r\n                        type,\r\n                        byteOffset,\r\n                        byteLength,\r\n                        componentType,\r\n                        constant,\r\n                        normalize\r\n                    };\r\n                    byteOffset += numComponents * BYTES_PER_ELEMENT;\r\n                });\r\n            }\r\n            else {\r\n                Object.entries(attributes).forEach(([name, attribute]) => {\r\n                    const {array, type} = attribute;\r\n                    const {byteLength} = array;\r\n                    const componentType = WebGLVertexArrayUtilities.getArrayComponentType(array);\r\n                    const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                        WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                    );\r\n                    const bufferArray = new bufferArrayConstructor(buffer, byteOffset);\r\n                    bufferArray.set(array);\r\n                    this.attributes[name] = {\r\n                        byteOffset,\r\n                        byteLength,\r\n                        type,\r\n                        componentType\r\n                    };\r\n                    byteOffset += byteLength;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.attributes = {};\r\n            this.indices = undefined;\r\n            this.interleaved = false;\r\n            this.stride = 0;\r\n            this.buffer = new ArrayBuffer(0);\r\n        }\r\n    }\r\n\r\n    toBlob(): Blob {\r\n        const {attributes, buffer, stride, interleaved, indices} = this;\r\n        const bufferData = new Uint8Array(buffer);\r\n        const {length: bufferLength} = bufferData;\r\n        const indicesData = Uint8Array.from(indices ?? []);\r\n        const indicesLength = indices?.length ?? 0;\r\n        const headerData = new TextEncoder().encode(JSON.stringify({attributes, stride, interleaved}));\r\n        const {length: headerLength} = headerData;\r\n\r\n        const blobDataView = new Uint8Array(4 + headerLength + indicesLength + bufferLength);\r\n        const {buffer: blobDataViewBuffer} = blobDataView;\r\n        const blobDataHeaderView = new Uint16Array(blobDataViewBuffer, 0, 2);\r\n        const blobDataHeaderLength = blobDataHeaderView.length * (Uint16Array.BYTES_PER_ELEMENT / Uint8Array.BYTES_PER_ELEMENT);\r\n        blobDataHeaderView[0] = headerLength;\r\n        blobDataHeaderView[1] = indicesLength;\r\n        blobDataView.set(headerData, blobDataHeaderLength);\r\n        blobDataView.set(indicesData, blobDataHeaderLength + headerLength);\r\n        blobDataView.set(bufferData, blobDataHeaderLength + headerLength + indicesLength);\r\n\r\n        return new Blob([blobDataView], {type: \"application/octet-stream\"});\r\n    }\r\n\r\n    static async fromBlob(blob: Blob): Promise<GeometryBuffer> {\r\n        const arrayBuffer = await blob.arrayBuffer();\r\n        const blobDataHeaderView = new Uint16Array(arrayBuffer, 0, 2);\r\n        const {byteLength: blobDataHeaderByteLength} = blobDataHeaderView;\r\n        const headerLength = blobDataHeaderView[0];\r\n        const indicesLength = blobDataHeaderView[1];\r\n        const headerData = new Uint8Array(arrayBuffer, blobDataHeaderByteLength, headerLength);\r\n        const arrayConstructor = (indicesLength < Math.pow(2, 8)) ? Uint8Array : (indicesLength < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        const indices = new arrayConstructor(arrayBuffer.slice(blobDataHeaderByteLength + headerLength * Uint8Array.BYTES_PER_ELEMENT, indicesLength * arrayConstructor.BYTES_PER_ELEMENT));\r\n        const buffer = arrayBuffer.slice(blobDataHeaderByteLength + (indicesLength + headerLength) * Uint8Array.BYTES_PER_ELEMENT);\r\n        const header = <Pick<GeometryBuffer, \"attributes\" | \"stride\" | \"interleaved\">>JSON.parse(new TextDecoder().decode(headerData));\r\n        const {attributes, interleaved, stride} = header;\r\n        const geometryBuffer = new GeometryBuffer();\r\n        geometryBuffer.buffer = buffer;\r\n        geometryBuffer.attributes = attributes;\r\n        geometryBuffer.interleaved = interleaved;\r\n        geometryBuffer.stride = stride;\r\n        geometryBuffer.indices = indices;\r\n        return geometryBuffer;\r\n    }\r\n\r\n    getAttribute(name: string): GeometryBufferAttribute | null {\r\n        const {attributes} = this;\r\n        const attribute = attributes[name];\r\n        if (attribute) {\r\n            const {buffer, interleaved, stride} = this;\r\n            const {type, byteOffset, byteLength, componentType} = attribute;\r\n            const attributeArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(componentType);\r\n            const bytesPerElement = attributeArrayConstructor.BYTES_PER_ELEMENT;\r\n            const length = byteLength / bytesPerElement;\r\n            const numComponents = WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n            const {byteLength: bufferByteLength} = buffer;\r\n            const {BYTES_PER_ELEMENT} = attributeArrayConstructor;\r\n            const attributeArray = new attributeArrayConstructor(length);\r\n            if (interleaved) {\r\n                const bufferArray = new attributeArrayConstructor(buffer, byteOffset);\r\n                const bufferStride = stride;\r\n                const bufferSlices = Math.trunc(bufferByteLength / bufferStride);\r\n                const arrayStrideOffset = bufferStride / BYTES_PER_ELEMENT;\r\n                for (let i = 0; i < bufferSlices; i++) {\r\n                    let bufferArraySliceIndex = arrayStrideOffset * i;\r\n                    attributeArray.set(\r\n                        bufferArray.slice(\r\n                            bufferArraySliceIndex,\r\n                            bufferArraySliceIndex + numComponents\r\n                        ),\r\n                        numComponents * i\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                const bufferArray = new attributeArrayConstructor(buffer, byteOffset, length);\r\n                attributeArray.set(bufferArray);\r\n            }\r\n            return {\r\n                array: attributeArray,\r\n                type: type\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nvar GeometryBuffer: GeometryBufferConstructor = GeometryBufferBase;","export { PoolAutoExtendPolicy };\r\nexport { Pool };\r\nexport { PoolBase };\r\n\r\nenum PoolAutoExtendPolicy {\r\n    NO_AUTO_EXTEND = 0,\r\n    AUTO_EXTEND_ONE = 1,\r\n    AUTO_EXTEND_POW2 = 2\r\n}\r\n\r\ninterface PoolConstructor {\r\n    readonly prototype: Pool;\r\n    new<O extends object>(constructor: Constructor<O>, policy?: PoolAutoExtendPolicy): Pool<O>;\r\n}\r\n\r\ninterface Pool<O extends object = object> {\r\n    readonly ctor: Constructor<O>;\r\n    readonly autoExtendPolicy: PoolAutoExtendPolicy;\r\n    autoExtend(): void;\r\n    acquire(count: number): O[];\r\n    release(...args: any[]): void;\r\n    extend(count: number): void;\r\n    clear(): void;\r\n}\r\n\r\nclass PoolBase<O extends object = object> implements Pool<O> {\r\n    readonly ctor: Constructor<O>;\r\n    autoExtendPolicy: PoolAutoExtendPolicy;\r\n    autoExtendTicks: number;\r\n\r\n    constructor(constructor: Constructor<O>, policy?: PoolAutoExtendPolicy) {\r\n        this.ctor = constructor;\r\n        this.autoExtendPolicy = policy || PoolAutoExtendPolicy.AUTO_EXTEND_ONE;\r\n        this.autoExtendTicks = 0;\r\n    }\r\n\r\n    autoExtend(): void {\r\n        switch (this.autoExtendPolicy) {\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_ONE:\r\n                this.extend(1);\r\n                break;\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_POW2:\r\n                this.extend(Math.pow(2, this.autoExtendTicks));\r\n                break;\r\n        }\r\n        this.autoExtendTicks++;\r\n    }\r\n\r\n    acquire(count: number): O[] {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    release(...args: any[]): void {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    extend(count: number): void {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n\r\n    clear(): void {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n}\r\n\r\nvar Pool: PoolConstructor = PoolBase;","import { PoolAutoExtendPolicy, PoolBase, Pool } from \"./Pool\";\r\n\r\nexport { StackPool };\r\n\r\ninterface StackPool<O extends object = object> extends Pool<O> {\r\n    release(count: number): void;\r\n}\r\n\r\ninterface StackPoolConstructor {\r\n    readonly prototype: StackPool;\r\n    new<O extends object>(constructor: Constructor<O>, options?: {args?: ConstructorParameters<Constructor<O>>, policy?: PoolAutoExtendPolicy, size?: number}): StackPool<O>;\r\n}\r\n\r\nclass StackPoolBase<O extends object = object> extends PoolBase<O> implements Pool<O> {\r\n    objects: Array<O>;\r\n    top: number;\r\n\r\n    constructor(constructor: Constructor<O>, options?: {args?: any, policy?: PoolAutoExtendPolicy, size?: number}) {\r\n        super(constructor, options?.policy);\r\n        this.objects = new Array(options?.size || 0).fill(0).map(() => {\r\n            return new this.ctor(options?.args);\r\n        });\r\n        this.top = 0;\r\n    }\r\n    \r\n    acquire(count: number): O[] {\r\n        const top = this.top;\r\n        const target = top + count;\r\n\r\n        if (this.autoExtendPolicy) {\r\n            while (this.objects.length < target) {\r\n                this.autoExtend();\r\n            }\r\n        }\r\n        this.top = target;\r\n        \r\n        return this.objects.slice(top, target);\r\n    }\r\n\r\n    release(count: number): void {\r\n        const top = this.top;\r\n        if (count > top) {\r\n            console.warn(\"Releasing under zero.\");\r\n        }\r\n        this.top = Math.max(top - count, 0);\r\n    }\r\n\r\n    extend(count: number): void {\r\n        this.objects.push(...Array(count).fill(0).map(() => {\r\n            return new this.ctor();\r\n        }));\r\n    }\r\n    \r\n    clear(): void {\r\n        this.objects = [];\r\n        this.top = 0;\r\n        this.autoExtendTicks = 0;\r\n    }\r\n}\r\n\r\nvar StackPool: StackPoolConstructor = StackPoolBase;","\r\nexport { deg2Rad };\r\nexport { rad2Deg };\r\nexport { qSqrt };\r\nexport { pow2 };\r\nexport { inRange };\r\nexport { clamp };\r\nexport { lerp };\r\nexport { smoothstep };\r\nexport { smootherstep };\r\nexport { randInt };\r\nexport { randFloat };\r\nexport { randFloatSpread };\r\nexport { degToRad };\r\nexport { radToDeg };\r\nexport { isPowerOfTwo };\r\nexport { ceilPowerOfTwo };\r\nexport { floorPowerOfTwo };\r\n\r\nconst DEG2RAD = Math.PI / 180;\r\nconst RAD2DEG = 180 / Math.PI;\r\n\r\nconst deg2Rad = function(deg: number): number {\r\n\treturn DEG2RAD * deg;\r\n}\r\n\r\nconst rad2Deg = function(rad: number): number {\r\n\treturn RAD2DEG / rad;\r\n}\r\n\r\nconst _bytes = new ArrayBuffer(Float32Array.BYTES_PER_ELEMENT);\r\nconst _floatView = new Float32Array(_bytes);\r\nconst _intView = new Uint32Array(_bytes);\r\n\r\nconst qSqrt = function(x: number) {\r\n\tconst halfx = x * 0.5;\r\n\r\n\t_floatView[0] = x;\r\n\t_intView[0] = 0x5f3759df -(_intView[0] >> 1);\r\n\r\n\tlet y = _floatView[0];\r\n\ty = y * (1.5 - (halfx * y * y));\r\n\r\n\treturn y;\r\n}\r\n\r\nconst pow2 = function(k: number): number {\r\n\treturn 1 << k;\r\n}\r\n\t\r\nconst inRange = function(x: number, min: number, max: number): boolean {\r\n\treturn (min <= x) && (x <= max);\r\n}\r\n\r\nconst clamp = function(value: number, min: number, max: number): number {\r\n\treturn Math.max(min, Math.min(max, value));\r\n}\r\n\r\nconst lerp = function(x: number, y: number, t: number): number {\r\n\treturn (1 - t) * x + t * y;\r\n}\r\n\r\nconst smoothstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * (3 - 2 * x);\r\n}\r\n\r\nconst smootherstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * x * ( x * ( x * 6 - 15) + 10);\r\n}\r\n\r\nconst randInt = function(low: number, high: number): number {\r\n\treturn low + Math.floor(Math.random() * (high - low + 1));\r\n}\r\n\r\nconst randFloat = function(low: number, high: number): number {\r\n\treturn low + Math.random() * (high - low);\r\n}\r\n\r\nconst randFloatSpread = function(range: number): number {\r\n\treturn range * (0.5 - Math.random());\r\n}\r\n\r\nconst degToRad = function(degrees: number): number {\r\n\treturn degrees * DEG2RAD;\r\n}\r\n\r\nconst radToDeg = function(radians: number): number {\r\n\treturn radians * RAD2DEG;\r\n}\r\nconst isPowerOfTwo = function(value: number): boolean {\r\n\treturn (value & (value - 1)) === 0 && value !== 0;\r\n}\r\n\r\nconst ceilPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\r\n}\r\n\r\nconst floorPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3Values, Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { Matrix3Values };\r\nexport { Matrix3 };\r\nexport { Matrix3Injector };\r\nexport { Matrix3Base };\r\n\r\ntype Matrix3Values = [\r\n  number, number, number,\r\n  number, number, number,\r\n  number, number, number\r\n];\r\n\r\ninterface Matrix3Constructor {\r\n\treadonly prototype: Matrix3;\r\n\tnew(): Matrix3;\r\n\tnew(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): Matrix3;\r\n  new(array: ArrayLike<number>): Matrix3;\r\n  rotationX(angle: number): Matrix3;\r\n  rotationY(angle: number): Matrix3;\r\n  rotationZ(angle: number): Matrix3;\r\n}\r\n\r\ninterface Matrix3 {\r\n  readonly array: WritableArrayLike<number>;\r\n  setValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this;\r\n  getValues(): Matrix3Values;\r\n  row1: Vector3Values;\r\n  row2: Vector3Values;\r\n  row3: Vector3Values;\r\n  col1: Vector3Values;\r\n  col2: Vector3Values;\r\n  col3: Vector3Values;\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  setRotationX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n\r\n  equals(mat: Matrix3): boolean;\r\n  copy(mat: Matrix3): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix3): this;\r\n  sub(mat: Matrix3): this;\r\n  mult(mat: Matrix3): this;\r\n  multScalar(k: number): this;\r\n  solve(vecB: Vector3): Vector3Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass Matrix3Base implements Matrix3 {\r\n  readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  )\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[0], args[1], args[2],\r\n        args[3], args[4], args[5],\r\n        args[6], args[7], args[8]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([\r\n        0, 0, 0,\r\n        0, 0, 0,\r\n        0, 0, 0\r\n      ]);\r\n\t\t}\r\n  }\r\n\r\n  get row1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[3],\r\n      this.array[6]\r\n    ];\r\n\t}\r\n\r\n\tset row1(row: Vector3Values) {\r\n    this.array[0] = row[0];\r\n    this.array[3] = row[1];\r\n    this.array[6] = row[2];\r\n  }\r\n\r\n  get row2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[1],\r\n      this.array[4],\r\n      this.array[7]\r\n    ];\r\n\t}\r\n\r\n\tset row2(row: Vector3Values) {\r\n    this.array[1] = row[0];\r\n    this.array[4] = row[1];\r\n    this.array[7] = row[2]\r\n  }\r\n\r\n  get row3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[2],\r\n      this.array[5],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tset row3(row: Vector3Values) {\r\n    this.array[2] = row[0];\r\n    this.array[5] = row[1];\r\n    this.array[8] = row[2]\r\n  }\r\n\r\n  get col1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[1],\r\n      this.array[2]\r\n    ];\r\n\t}\r\n\r\n\tset col1(col: Vector3Values) {\r\n    this.array[0] = col[0];\r\n    this.array[1] = col[1];\r\n    this.array[2] = col[2];\r\n  }\r\n\r\n  get col2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[3],\r\n      this.array[4],\r\n      this.array[5]\r\n    ];\r\n\t}\r\n\r\n\tset col2(col: Vector3Values) {\r\n    this.array[3] = col[0];\r\n    this.array[4] = col[1];\r\n    this.array[5] = col[2]\r\n  }\r\n\r\n  get col3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[6],\r\n      this.array[7],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tset col3(col: Vector3Values) {\r\n    this.array[6] = col[0];\r\n    this.array[7] = col[1];\r\n    this.array[8] = col[2];\r\n  }\r\n\r\n  get m11() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  get m12() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset m12(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  get m13() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tset m13(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  get m22() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tset m22(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  get m23() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tset m23(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  get m32() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tset m32(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  get m33() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n  set m33(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 9) {\r\n\t\t\tthrow new MathError(`Array must be of length 9 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n  getValues(): Matrix3Values {\r\n\t\treturn [\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8],\r\n    ];\r\n\t}\r\n\r\n\tsetValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this {\r\n    this.array[0] = m11;\r\n    this.array[1] = m21;\r\n    this.array[2] = m31;\r\n    this.array[3] = m12;\r\n    this.array[4] = m22;\r\n    this.array[5] = m32;\r\n    this.array[6] = m13;\r\n    this.array[7] = m23;\r\n    this.array[8] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n\tequals(other: Matrix3): boolean {\r\n    const o = other.array;\r\n    return this.array[0] === o[0]\r\n      && this.array[1] === o[1]\r\n      && this.array[2] === o[2]\r\n      && this.array[3] === o[3]\r\n      && this.array[4] === o[4]\r\n      && this.array[5] === o[5]\r\n      && this.array[6] === o[6]\r\n      && this.array[7] === o[7]\r\n      && this.array[8] === o[8];\r\n  }\r\n\r\n  copy(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = m[0];\r\n    o[1] = m[1];\r\n    o[2] = m[2];\r\n    o[3] = m[3];\r\n    o[4] = m[4];\r\n    o[5] = m[5];\r\n    o[6] = m[6];\r\n    o[7] = m[7];\r\n    o[8] = m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  clone(): this {\r\n    return new Matrix3Base(\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8]\r\n    ) as this;\r\n  }\r\n\r\n  setIdentity(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 1;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 1;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  setZeros(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 0;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 0;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  det(): number {\r\n    const o = this.array;\r\n\r\n    const x = o[0] * ((o[4] * o[8]) - (o[5] * o[7]));\r\n    const y = o[1] * ((o[3] * o[8]) - (o[5] * o[6]));\r\n    const z = o[2] * ((o[3] * o[7]) - (o[4] * o[6]));\r\n\r\n    return x - y + z;\r\n  }\r\n\r\n  trace(): number {\r\n    const o = this.array;\r\n    \r\n    return o[0] + o[4] + o[8];\r\n  }\r\n\r\n  negate(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = -o[0];\r\n    o[1] = -o[1];\r\n    o[2] = -o[2];\r\n    o[3] = -o[3];\r\n    o[4] = -o[4];\r\n    o[5] = -o[5];\r\n    o[6] = -o[6];\r\n    o[7] = -o[7];\r\n    o[8] = -o[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  transpose(): this {\r\n    const o = this.array;\r\n\r\n    let t;\r\n\r\n    t = o[1];\r\n    o[1] = o[3];\r\n    o[3] = t;\r\n\r\n    t = o[2];\r\n    o[2] = o[6];\r\n    o[6] = t;\r\n\r\n    t = o[5];\r\n    o[5] = o[7];\r\n    o[7] = t;\r\n    \r\n    return this;\r\n  }\r\n\r\n  invert(): this {\r\n    const o = this.array;\r\n\r\n    const t11 = o[1 * 3 + 1] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 1];\r\n    const t12 = o[0 * 3 + 1] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 1];\r\n    const t13 = o[0 * 3 + 1] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 1];\r\n\r\n    const t21 = o[1 * 3 + 0] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 0];\r\n    const t22 = o[0 * 3 + 0] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 0];\r\n    const t23 = o[0 * 3 + 0] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 0];\r\n\r\n    const t31 = o[1 * 3 + 0] * o[2 * 3 + 1] - o[1 * 3 + 1] * o[2 * 3 + 0];\r\n    const t32 = o[0 * 3 + 0] * o[2 * 3 + 1] - o[0 * 3 + 1] * o[2 * 3 + 0];\r\n    const t33 = o[0 * 3 + 0] * o[1 * 3 + 1] - o[0 * 3 + 1] * o[1 * 3 + 0];\r\n\r\n    const d = 1.0 / (o[0 * 3 + 0] * t11 - o[1 * 3 + 0] * t12 + o[2 * 3 + 0] * t13);\r\n\r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    o[0] = d * t11;\r\n    o[1] = -d * t12;\r\n    o[2] = d * t13;\r\n\r\n    o[3] = -d * t21;\r\n    o[4] = d * t22;\r\n    o[5] = -d * t23;\r\n\r\n    o[6] = d * t31;\r\n    o[7] = -d * t32;\r\n    o[8] = d * t33;\r\n\r\n    return this;\r\n  }\r\n\r\n  add(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] + m[0];\r\n    o[1] = o[1] + m[1];\r\n    o[2] = o[2] + m[2];\r\n    o[3] = o[3] + m[3];\r\n    o[4] = o[4] + m[4];\r\n    o[5] = o[5] + m[5];\r\n    o[6] = o[6] + m[6];\r\n    o[7] = o[7] + m[7];\r\n    o[8] = o[8] + m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  sub(mat: Matrix3Base): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] - m[0];\r\n    o[1] = o[1] - m[1];\r\n    o[2] = o[2] - m[2];\r\n    o[3] = o[3] - m[3];\r\n    o[4] = o[4] - m[4];\r\n    o[5] = o[5] - m[5];\r\n    o[6] = o[6] - m[6];\r\n    o[7] = o[7] - m[7];\r\n    o[8] = o[8] - m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  mult(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    const a11 = o[0 * 3 + 0];\r\n    const a12 = o[0 * 3 + 1];\r\n    const a13 = o[0 * 3 + 2];\r\n    const a21 = o[1 * 3 + 0];\r\n    const a22 = o[1 * 3 + 1];\r\n    const a23 = o[1 * 3 + 2];\r\n    const a31 = o[2 * 3 + 0];\r\n    const a32 = o[2 * 3 + 1];\r\n    const a33 = o[2 * 3 + 2];\r\n    const b11 = m[0 * 3 + 0];\r\n    const b12 = m[0 * 3 + 1];\r\n    const b13 = m[0 * 3 + 2];\r\n    const b21 = m[1 * 3 + 0];\r\n    const b22 = m[1 * 3 + 1];\r\n    const b23 = m[1 * 3 + 2];\r\n    const b31 = m[2 * 3 + 0];\r\n    const b32 = m[2 * 3 + 1];\r\n    const b33 = m[2 * 3 + 2];\r\n\r\n    o[0] = b11 * a11 + b12 * a21 + b13 * a31;\r\n    o[1] = b11 * a12 + b12 * a22 + b13 * a32;\r\n    o[2] = b11 * a13 + b12 * a23 + b13 * a33;\r\n    o[3] = b21 * a11 + b22 * a21 + b23 * a31;\r\n    o[4] = b21 * a12 + b22 * a22 + b23 * a32;\r\n    o[5] = b21 * a13 + b22 * a23 + b23 * a33;\r\n    o[6] = b31 * a11 + b32 * a21 + b33 * a31;\r\n    o[7] = b31 * a12 + b32 * a22 + b33 * a32;\r\n    o[8] = b31 * a13 + b32 * a23 + b33 * a33;\r\n\r\n    return this;\r\n  }\r\n\r\n  multScalar(k: number): this {\r\n    const o = this.array;\r\n\r\n    o[0] = o[0] * k;\r\n    o[1] = o[1] * k;\r\n    o[2] = o[2] * k;\r\n    o[3] = o[3] * k;\r\n    o[4] = o[4] * k;\r\n    o[5] = o[5] * k;\r\n    o[6] = o[6] * k;\r\n    o[7] = o[7] * k;\r\n    o[8] = o[8] * k;\r\n\r\n    return this;\r\n  }\r\n\r\n  writeIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst m = this.array;\r\n\r\n\t\tout[offset     ] = m[ 0];\r\n\t\tout[offset +  1] = m[ 1];\r\n    out[offset +  2] = m[ 2];\r\n    out[offset +  3] = m[ 3];\r\n\t\tout[offset +  4] = m[ 4];\r\n    out[offset +  5] = m[ 5];\r\n    out[offset +  6] = m[ 6];\r\n\t\tout[offset +  7] = m[ 7];\r\n    out[offset +  8] = m[ 8];\r\n  }\r\n    \r\n  readFromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[ 0] = arr[offset     ];\r\n\t\to[ 1] = arr[offset +  1];\r\n    o[ 2] = arr[offset +  2];\r\n    o[ 3] = arr[offset +  3];\r\n    o[ 4] = arr[offset +  4];\r\n    o[ 5] = arr[offset +  5];\r\n    o[ 6] = arr[offset +  6];\r\n\t\to[ 7] = arr[offset +  7];\r\n    o[ 8] = arr[offset +  8];\r\n  }\r\n\r\n  static rotationX(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationX(angle);\r\n  }\r\n\r\n  setRotationX(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = 1;\r\n    this.array[1] = 0;\r\n    this.array[2] = 0;\r\n    this.array[3] = 0;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = sinAngle;\r\n    this.array[6] = 0;\r\n    this.array[7] = -sinAngle;\r\n    this.array[8] = cosAngle;\r\n\r\n    return this;\r\n  }\r\n  \r\n  static rotationY(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationY(angle);\r\n  }\r\n\r\n  setRotationY(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n    \r\n    this.array[0] = cosAngle;\r\n    this.array[1] = 0;\r\n    this.array[2] = -sinAngle;\r\n    this.array[3] = 0;\r\n    this.array[4] = 1;\r\n    this.array[5] = 0;\r\n    this.array[6] = sinAngle;\r\n    this.array[7] = 0;\r\n    this.array[8] = cosAngle;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static rotationZ(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationZ(angle);\r\n  }\r\n\r\n  setRotationZ(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = cosAngle;\r\n    this.array[1] = sinAngle;\r\n    this.array[2] = 0;\r\n    this.array[3] = -sinAngle;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = 0;\r\n    this.array[6] = 0;\r\n    this.array[7] = 0;\r\n    this.array[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  solve(vecB: Vector3): Vector3Values {\r\n    const a = this.array;\r\n    \r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a13 = a[2];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const a23 = a[5];\r\n    const a31 = a[6];\r\n    const a32 = a[7];\r\n    const a33 = a[8];\r\n    const bx = vecB.x;\r\n    const by = vecB.y;\r\n    const bz = vecB.z;\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n  \r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n    \r\n    return [\r\n      x, y, z\r\n    ];\r\n  }\r\n\r\n  solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const bx = vecB.x - a[4];\r\n    const by = vecB.y - a[7];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by)\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n}\r\n\r\nvar Matrix3: Matrix3Constructor = Matrix3Base;\r\nconst Matrix3Injector: Injector<Matrix3Constructor> = new Injector({\r\n\tdefaultCtor: Matrix3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix3Constructor) => {\r\n\t\t\tMatrix3 = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Space } from \"../../geometry/space/Space\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { qSqrt } from \"../../Snippets\";\r\nimport { Matrix3 } from \"../matrices/Matrix3\";\r\nimport { Matrix4 } from \"../matrices/Matrix4\";\r\nimport { Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { QuaternionValues };\r\nexport { Quaternion };\r\nexport { QuaternionInjector };\r\nexport { QuaternionPool };\r\n\r\ntype QuaternionValues = [number, ...number[]] & { length: 4 };\r\n\r\ninterface QuaternionConstructor {\r\n\treadonly prototype: Quaternion;\r\n\tnew(): Quaternion;\r\n\tnew(x: number, y: number, z: number, w: number): Quaternion;\r\n\tnew(array: WritableArrayLike<number>): Quaternion;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tslerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tfromArray(vector: ArrayLike<number>): Quaternion;\r\n\tfromAxisAngle(axis: Vector3, angle?: number): Quaternion;\r\n\tfromEuler(pitch: number, yaw: number, roll: number): Quaternion;\r\n\tfromVector(vector: Vector3): Quaternion;\r\n\tfromMatrix(matrix: Matrix3): Quaternion;\r\n}\r\n// TODO?:\r\n// roll => pitch\r\n// pitch => yaw\r\n// yaw => roll\r\ninterface Quaternion {\r\n\treadonly array: WritableArrayLike<number>;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\tw: number;\r\n\tpitch: number;\r\n\tyaw: number;\r\n\troll: number;\r\n\tgetValues(): QuaternionValues;\r\n\tsetValues(\r\n\t  x: number, y: number,\r\n\t  z: number, w: number\r\n\t): this;\r\n\t//setArray(array: WritableArrayLike<number>): this;\r\n\tlookAt(source: Vector3, dest: Vector3): Quaternion ;\r\n\tsetEuler(pitch: number, yaw: number, roll: number): this;\r\n\r\n\tsetMatrix(matrix: Matrix3): Quaternion;\r\n\tsetMatrix(matrix: Matrix4): Quaternion;\r\n\r\n\tsetAxisAngle(axis: Vector3, angle: number): this;\r\n\tsetVectors(from: Vector3, to: Vector3): this;\r\n\t\r\n\tcopy(quat: Quaternion): this;\r\n\tclone(): this;\r\n\tgetAxis(out: Vector3): Vector3;\r\n\r\n\tgetMatrix3(matrix: Matrix3): Matrix3;\r\n\tgetMatrix4(matrix: Matrix4): Matrix4;\r\n\r\n\trotate(vec: Vector3): Vector3;\r\n\ttoVector(): Vector3;\r\n\r\n\tangleTo(quat: Quaternion): number;\r\n\trotateTowards(quat: Quaternion): this;\r\n\tinvert(): this;\r\n\tconjugate(): this;\r\n\tdot(quat: Quaternion): number;\r\n\tlengthSquared(): number;\r\n\tlength(): number;\r\n\tnormalize(): this;\r\n\tadd(quat: Quaternion): this;\r\n\tsub(quat: Quaternion): this;\r\n\tmult(quat: Quaternion): this;\r\n\tscale(scalar: number): this;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): this;\r\n\tequals(quat: Quaternion): boolean;\r\n\tcopyIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass QuaternionBase {\r\n\tprivate _array: WritableArrayLike<number>;\r\n\r\n\tget array(): WritableArrayLike<number> {\r\n\t\treturn this._array;\r\n\t}\r\n\r\n\tconstructor()\r\n\tconstructor(array: WritableArrayLike<number>)\r\n\tconstructor(x: number, y: number, z: number, w: number)\r\n\tconstructor(...args: any[]) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis._array = [\r\n\t\t\t\targs[0], args[1], args[2], args[3]\r\n\t\t\t];\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tthis._checkArray(args[0]);\r\n\t\t\tthis._array = args[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._array = [0, 0, 0, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tget x(): number {\r\n        return this._array[0];\r\n    }\r\n\r\n    set x(x: number) {\r\n\t\tthis._array[0] = x;\r\n    }\r\n\r\n    get y(): number {\r\n        return this._array[1];\r\n    }\r\n\r\n    set y(y: number) {\r\n\t\tthis._array[1] = y;\r\n    }\r\n\r\n    set z(z: number) {\r\n\t\tthis._array[2] = z;\r\n\t}\r\n\t\r\n    get z(): number {\r\n\t\treturn this._array[2];\r\n    }\r\n\r\n    set w(w: number) {\r\n\t\tthis._array[3] = w;\r\n\t}\r\n\r\n    get w(): number {\r\n\t\treturn this._array[3];\r\n\t}\r\n\t\r\n\tget pitch(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinPitch = 2 * (w * y - z * x);\r\n\t\tif (Math.abs(sinPitch) >= 1) {\r\n            return Math.sign(sinPitch) * (Math.PI / 2);\r\n        }\r\n\t\telse {\r\n            return Math.asin(sinPitch);\r\n        }\r\n\t}\r\n\r\n\tget yaw(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinYawCosPitch = 2 * (w * z + x * y);\r\n\t\tconst cosYawCosPitch = 1 - 2 * (y * y + z * z);\r\n\t\treturn Math.atan2(sinYawCosPitch, cosYawCosPitch);\r\n\t}\r\n\r\n\tget roll(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinRollCosPitch = 2 * (w * x + y * z);\r\n\t\tconst cosRollCosPitch = 1 - 2 * (x * x + y * y);\r\n\t\treturn Math.atan2(sinRollCosPitch, cosRollCosPitch);\r\n\t}\r\n\r\n\tgetValues(): QuaternionValues {\r\n\t\treturn [\r\n\t\t\tthis._array[0],\r\n\t\t\tthis._array[1],\r\n\t\t\tthis._array[2],\r\n\t\t\tthis._array[3]\r\n\t\t];\r\n\t}\r\n\r\n\tsetValues(x: number, y: number, z: number, w: number): this {\r\n\t\tthis._array[0] = x;\r\n\t\tthis._array[1] = y;\r\n\t\tthis._array[2] = z;\r\n\t\tthis._array[3] = w;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate _checkArray(array: WritableArrayLike<number>): void {\r\n\t\tif (array.length < 4) {\r\n\t\t\tthrow new MathError(`Array must be of length 4 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t/*setArray(array: WritableArrayLike<number>): this {\r\n\t\tthis._checkArray(array);\r\n\t\tthis._array = array;\r\n\t\treturn this;\r\n\t}*/\r\n\r\n\tstatic fromArray(array: WritableArrayLike<number>): QuaternionBase {\r\n\t\treturn new QuaternionBase(array);\r\n\t}\r\n\r\n\tstatic fromAxisAngle(axis: Vector3, angle: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setAxisAngle(axis, angle);\r\n\t}\r\n\r\n\tstatic fromVector(vector: Vector3): QuaternionBase {\r\n\t\treturn new QuaternionBase(vector.x, vector.y, vector.z, 1);\r\n\t}\r\n\t\r\n\tstatic fromEuler(yaw: number, pitch: number, roll: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setEuler(yaw, pitch, roll);\r\n\t}\r\n\r\n\tcopy(quat: Quaternion): this {\r\n\t\tconst o = this._array;\r\n\t\tconst q = quat.array;\r\n\r\n\t\to[0] = q[0];\r\n\t\to[1] = q[1];\r\n\t\to[2] = q[2];\r\n\t\to[3] = q[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new QuaternionBase(this.x, this.y, this.z, this.w) as this;\r\n\t}\r\n\r\n\tequals(quat: Quaternion): boolean {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\treturn (thisArray[0] === quatArray[0])\r\n\t\t\t&& (thisArray[1] === quatArray[1])\r\n\t\t\t&& (thisArray[2] === quatArray[2])\r\n\t\t\t&& (thisArray[3] === quatArray[3]);\r\n\t}\r\n\r\n\tgetAxis(out: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst outArray = out.array;\r\n\r\n\t\tconst den = 1 - (thisArray[3] * thisArray[3]);\r\n\r\n\t\tif (den < Number.EPSILON) {\r\n\t\t  return out.setZeros();\r\n\t\t}\r\n\t  \r\n\t\tconst scale = qSqrt(den);\r\n\t\t\r\n\t\toutArray[0] = thisArray[0] * scale;\r\n\t\toutArray[1] = thisArray[1] * scale;\r\n\t\toutArray[2] = thisArray[2] * scale;\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\tgetMatrix3(matrix: Matrix3): Matrix3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst thisLengthSquared = this.lengthSquared();\r\n\t\tconst s = 2.0 / thisLengthSquared;\r\n\r\n\t\tconst x = thisArray[0];\r\n\t\tconst y = thisArray[1];\r\n\t\tconst z = thisArray[2];\r\n\t\tconst w = thisArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n\t\treturn matrix.setValues(\r\n\t\t\t1 - (yy + zz),\txy + wz,\t\txz - wy,\r\n\t\t\txy - wz,\t\t1 - (xx + zz),\tyz + wx,\r\n\t\t\txz + wy,\t\tyz - wx,\t\t1 - (xx + yy)\r\n\t\t);\r\n\t}\r\n\r\n\tgetMatrix4(matrix: Matrix4): Matrix4 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst thisLengthSquared = this.lengthSquared();\r\n\t\tconst s = 2.0 / thisLengthSquared;\r\n\r\n\t\tconst x = thisArray[0];\r\n\t\tconst y = thisArray[1];\r\n\t\tconst z = thisArray[2];\r\n\t\tconst w = thisArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n\t\treturn matrix.setValues(\r\n\t\t\t1 - (yy + zz),\txy + wz,\t\txz - wy, \t\t0,\r\n\t\t\txy - wz,\t\t1 - (xx + zz),\tyz + wx, \t\t0,\r\n\t\t\txz + wy,\t\tyz - wx,\t\t1 - (xx + yy), \t0,\r\n\t\t\t0, \t\t\t\t0, \t\t\t\t0, \t\t\t\t1\r\n\t\t);\r\n\t}\r\n\r\n\trotate(vector: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst vectorArray = vector.array;\r\n\r\n\t\tconst vx = vectorArray[0];\r\n\t\tconst vy = vectorArray[1];\r\n\t\tconst vz = vectorArray[2];\t\t\r\n\t\t\r\n\t\tconst qx = thisArray[0];\r\n\t\tconst qy = thisArray[1];\r\n\t\tconst qz = thisArray[2];\r\n\t\tconst qw = thisArray[3];\r\n\r\n\t\tconst tx = qw * vx + -qx * 0 + -qy * vz + qz * vy;\r\n\t\tconst ty = qw * vy + -qy * 0 + -qz * vx + qx * vz;\r\n\t\tconst tz = qw * vz + -qz * 0 + -qx * vy + qy * vx;\r\n\t\tconst tw = qx * vx + qw * 0 + qy * vy + qz * vz;\r\n\r\n\t\tvectorArray[0] = tw * qz + tz * qw + tx * qy - ty * qx;\r\n\t\tvectorArray[1] = tw * qy + ty * qw + tz * qx - tx * qz;\r\n\t\tvectorArray[2] = tw * qx + tx * qw + ty * qz - tz * qy;\r\n\r\n\t\treturn vector;\r\n\t}\r\n\r\n\ttoVector(): Vector3 {\r\n\t\treturn new Vector3([\r\n\t\t\tthis.x, this.y, this.z\r\n\t\t]);\r\n\t}\r\n\t\r\n\tsetEuler(pitch: number, yaw: number, roll: number): this {\r\n\t\tconst cosYaw = Math.cos(yaw * 0.5);\r\n\t\tconst sinYaw = Math.sin(yaw * 0.5);\r\n\t\tconst cosPitch = Math.cos(pitch * 0.5);\r\n\t\tconst sinPitch = Math.sin(pitch * 0.5);\r\n\t\tconst cosRoll = Math.cos(roll * 0.5);\r\n\t\tconst sinRoll = Math.sin(roll * 0.5);\r\n\t\tconst thisArray = this.array;\r\n\r\n        thisArray[0] = sinRoll * cosPitch * cosYaw - cosRoll * sinPitch * sinYaw;\r\n        thisArray[1] = cosRoll * sinPitch * cosYaw + sinRoll * cosPitch * sinYaw;\r\n        thisArray[2] = cosRoll * cosPitch * sinYaw - sinRoll * sinPitch * cosYaw;\r\n\t\tthisArray[3] = cosRoll * cosPitch * cosYaw + sinRoll * sinPitch * sinYaw;\r\n        \r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetAxisAngle(axis: Vector3, angle: number = 0): this {\r\n\t\tconst axisLength = axis.length();\r\n\t\tif (axisLength === 0) {\r\n\t\t  return this;\r\n\t\t}\r\n\t\tconst halfSin = Math.sin(angle * 0.5) / axisLength;\r\n\t\tconst axisArray = axis.array;\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] = axisArray[0] * halfSin;\r\n\t\tthisArray[1] = axisArray[1] * halfSin;\r\n\t\tthisArray[2] = axisArray[2] * halfSin;\r\n\t\tthisArray[3] = Math.cos(angle * 0.5);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetMatrix(matrix: Matrix3): this\r\n\tsetMatrix(matrix: Matrix4): this\r\n\tsetMatrix(matrix: Matrix3 | Matrix4): this {\r\n\t\tconst matrixArray = matrix.array;\r\n\t\tlet m11 = 0, m12 = 0, m13 = 0,\r\n\t\t\tm21 = 0, m22 = 0, m23 = 0,\r\n\t\t\tm31 = 0, m32 = 0, m33 = 0;\r\n\r\n\t\tif (matrix instanceof Matrix3) {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[3], m13 = matrixArray[6],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[4], m23 = matrixArray[7],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[5], m33 = matrixArray[8];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[4], m13 = matrixArray[ 8],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[5], m23 = matrixArray[ 9],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[6], m33 = matrixArray[10];\r\n\t\t}\r\n\r\n\t\tconst trace = m11 + m22 + m33;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tif (trace > 0) {\r\n\t\t\tconst s = Math.sqrt(trace + 1) * 2;\r\n\t\t\tthisArray[3] = 0.25 * s;\r\n\t\t\tthisArray[0] = (m32 - m23) / s;\r\n\t\t\tthisArray[1] = (m13 - m31) / s;\r\n\t\t\tthisArray[2] = (m21 - m12) / s;\r\n\t\t}\r\n\t\telse if (m11 > m22 && m11 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n\t\t\tthisArray[3] = (m32 - m23) / s;\r\n\t\t\tthisArray[0] = 0.25 * s;\r\n\t\t\tthisArray[1] = (m12 + m21) / s;\r\n\t\t\tthisArray[2] = (m13 + m31) / s;\r\n\t\t}\r\n\t\telse if (m22 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n\t\t\tthisArray[3] = (m13 - m31) / s;\r\n\t\t\tthisArray[0] = (m12 + m21) / s;\r\n\t\t\tthisArray[1] = 0.25 * s;\r\n\t\t\tthisArray[2] = (m23 + m32) / s;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n\t\t\tthisArray[3] = (m21 - m12) / s;\r\n\t\t\tthisArray[0] = (m13 + m31) / s;\r\n\t\t\tthisArray[1] = (m23 + m32) / s;\r\n\t\t\tthisArray[2] = 0.25 * s;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlookAt(source: Vector3, dest: Vector3): Quaternion {\r\n\t\tconst forward = dest.clone().sub(source).normalize();\r\n\r\n\t\tconst axis = Space.forward.clone().cross(forward);\r\n\t\tconst dot = Space.forward.dot(forward);\r\n\r\n\t\treturn new Quaternion(axis.x, axis.y, axis.z, dot + 1).normalize();\r\n\t}\r\n\r\n\tstatic fromMatrix(matrix: Matrix3): QuaternionBase {\r\n\t\treturn new QuaternionBase().setMatrix(matrix);\r\n\t}\r\n\r\n\tsetVectors(from: Vector3, to: Vector3): this {\r\n\t\tconst dot = from.dot(to);\r\n\t\tconst cross = from.cross(to);\r\n\t\tconst crossArray = cross.array;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = crossArray[0];\r\n\t\tthisArray[1] = crossArray[1];\r\n\t\tthisArray[2] = crossArray[2];\r\n\r\n\t\tconst fromLength = from.length();\r\n\t\tconst toLength = from.length();\r\n\r\n\t\tthisArray[3] = Math.sqrt(fromLength * fromLength * toLength * toLength) + dot;\r\n\r\n\t\treturn this.normalize();\r\n\t}\r\n\r\n\tdot(quat: Quaternion): number {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\treturn thisArray[0] * quatArray[0] + thisArray[1] * quatArray[1] + thisArray[2] * quatArray[2] + thisArray[3] * quatArray[3];\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn thisArray[0] ** 2 + thisArray[1] ** 2 + thisArray[2] ** 2 + thisArray[3] ** 2;\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn Math.hypot(thisArray[0], thisArray[1], thisArray[2], thisArray[3]);\r\n\t}\r\n\r\n\tangleTo(rotation: Quaternion): number {\r\n\t\treturn 2 * Math.acos(Math.abs(Math.max(-1, Math.min(1, this.dot(rotation)))));\r\n\t}\r\n\r\n\trotateTowards(rotation: Quaternion): this {\r\n\t\tconst angle = this.angleTo(rotation);\r\n\r\n\t\tif (angle === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconst t = Math.min(1, angle);\r\n\t\tthis.slerp(this, rotation, t);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tinvert(): this {\r\n\t\treturn this.conjugate();\r\n\t}\r\n\t\r\n\tconjugate(): this {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] *= -1;\r\n\t\tthisArray[1] *= -1;\r\n\t\tthisArray[2] *= -1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tlet length = this.length();\r\n\r\n\t\tif (length === 0) {\r\n\t\t\tthisArray[0] = 0;\r\n\t\t\tthisArray[1] = 0;\r\n\t\t\tthisArray[2] = 0;\r\n\t\t\tthisArray[3] = 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlength = 1 / length;\r\n\t\t\tthisArray[0] *= length;\r\n\t\t\tthisArray[1] *= length;\r\n\t\t\tthisArray[2] *= length;\r\n\t\t\tthisArray[3] *= length;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tadd(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] += quatArray[0];\r\n\t\tthisArray[1] += quatArray[1];\r\n\t\tthisArray[2] += quatArray[2];\r\n\t\tthisArray[3] += quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] -= quatArray[0];\r\n\t\tthisArray[1] -= quatArray[1];\r\n\t\tthisArray[2] -= quatArray[2];\r\n\t\tthisArray[3] -= quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\tconst ax = thisArray[0], ay = thisArray[1], az = thisArray[2], aw = thisArray[3];\r\n\t\tconst bx = quatArray[0], by = quatArray[1], bz = quatArray[2], bw = quatArray[3];\r\n\r\n\t\tthisArray[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n\t\tthisArray[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n\t\tthisArray[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n\t\tthisArray[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tscale(scalar: number): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] *= scalar;\r\n\t\tthisArray[1] *= scalar;\r\n\t\tthisArray[2] *= scalar;\r\n\t\tthisArray[3] *= scalar;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number, out?: Quaternion): Quaternion {\r\n\t\tif (!(out instanceof Quaternion)) {\r\n\t\t\tout = new Quaternion();\r\n\t\t}\r\n\t\tif (t === 0) return out.copy(from);\r\n\t\tif (t === 1) return out.copy(to);\r\n\r\n\t\tconst outArray = out.array;\r\n\t\tconst fromArray = from.array;\r\n\t\tconst toArray = to.array;\r\n\r\n\t\tconst cosHalfTheta = fromArray[3] * toArray[3] + fromArray[0] * toArray[0] + fromArray[1] * toArray[1] + fromArray[2] * toArray[2];\r\n\t\t\r\n\t\tif (Math.abs(cosHalfTheta) >= 1) {\r\n\t\t\toutArray[3] = fromArray[3];\r\n\t\t\toutArray[0] = fromArray[0];\r\n\t\t\toutArray[1] = fromArray[1];\r\n\t\t\toutArray[2] = fromArray[2];\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst halfTheta = Math.acos(cosHalfTheta);\r\n\t\tconst sinHalfTheta = Math.sqrt(1 - cosHalfTheta * cosHalfTheta);\r\n\t\t\r\n\t\tif (Math.abs(sinHalfTheta - Math.trunc(sinHalfTheta)) < Number.EPSILON) {\r\n\t\t\toutArray[3] = (fromArray[3] * 0.5 + toArray[3] * 0.5);\r\n\t\t\toutArray[0] = (fromArray[0] * 0.5 + toArray[0] * 0.5);\r\n\t\t\toutArray[1] = (fromArray[1] * 0.5 + toArray[1] * 0.5);\r\n\t\t\toutArray[2] = (fromArray[2] * 0.5 + toArray[2] * 0.5);\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta;\r\n\t\tconst ratioB = Math.sin(t * halfTheta) / sinHalfTheta; \r\n\t\toutArray[3] = (fromArray[3] * ratioA + toArray[3] * ratioB);\r\n\t\toutArray[0] = (fromArray[0] * ratioA + toArray[0] * ratioB);\r\n\t\toutArray[1] = (fromArray[1] * ratioA + toArray[1] * ratioB);\r\n\t\toutArray[2] = (fromArray[2] * ratioA + toArray[2] * ratioB);\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * https://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t */\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): this {\r\n\t\treturn Quaternion.slerp(from, to, t, this) as this;\r\n\t}\r\n\r\n\tcopyIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tarray[offset    ] = thisArray[0];\r\n\t\tarray[offset + 1] = thisArray[1];\r\n\t\tarray[offset + 2] = thisArray[2];\r\n\t\tarray[offset + 3] = thisArray[3];\r\n    }\r\n    \r\n    readFromArray(array: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = array[offset    ];\r\n\t\tthisArray[1] = array[offset + 1];\r\n\t\tthisArray[2] = array[offset + 2];\r\n\t\tthisArray[3] = array[offset + 3];\r\n    }\r\n}\r\n\r\nvar Quaternion: QuaternionConstructor = QuaternionBase;\r\nconst QuaternionPool: StackPool<Quaternion> = new StackPool(QuaternionBase);\r\nconst QuaternionInjector: Injector<QuaternionConstructor> = new Injector({\r\n\tdefaultCtor: QuaternionBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: QuaternionConstructor) => {\r\n\t\t\tQuaternion = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Quaternion } from \"../quaternions/Quaternion\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"../vectors/Vector3\";\r\nimport { Vector4, Vector4Values } from \"../vectors/Vector4\";\r\nimport { Matrix3, Matrix3Values } from \"./Matrix3\";\r\n\r\nexport { Matrix4Values };\r\nexport { Matrix4 };\r\nexport { Matrix4Injector };\r\nexport { Matrix4Base };\r\n\r\ntype Matrix4Values = [\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number\r\n];\r\n\r\ninterface Matrix4Constructor {\r\n\treadonly prototype: Matrix4;\r\n\tnew(): Matrix4;\r\n\tnew(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  new(array: ArrayLike<number>): Matrix4;\r\n\r\n  fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  fromArray(array: ArrayLike<number>): Matrix4;\r\n\r\n  invert(A: Matrix4, out: Matrix4): Matrix4;\r\n  transpose(A: Matrix4, out: Matrix4): Matrix4;\r\n  add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n\r\n  identity(): Matrix4;\r\n  zeros(): Matrix4;\r\n\r\n  translation(vector: Vector3): Matrix4;\r\n  rotationX(angle: number): Matrix4;\r\n  rotationY(angle: number): Matrix4;\r\n  rotationZ(angle: number): Matrix4;\r\n  rotation(matrix: Matrix3): Matrix4;\r\n  scaling(vector: Vector3): Matrix4;\r\n  \r\n  perspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): Matrix4;\r\n  orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n  frustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n}\r\n\r\n/**\r\n * 4x4 matrix. Values are stored in column major order.\r\n */\r\ninterface Matrix4 {\r\n  readonly array: Float32Array;\r\n  getValues(): Matrix4Values\r\n  setValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this;\r\n  /*row1: Vector4Values;\r\n  row2: Vector4Values;\r\n  row3: Vector4Values;\r\n  row4: Vector4Values;\r\n  col1: Vector4Values;\r\n  col2: Vector4Values;\r\n  col3: Vector4Values;\r\n  col4: Vector4Values;*/\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m14: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m24: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  m34: number;\r\n  m41: number;\r\n  m42: number;\r\n  m43: number;\r\n  m44: number;\r\n  //setArray(array: WritableArrayLike<number>): this;\r\n  getRotation(): Quaternion;\r\n  setRotation(rotation: Quaternion): this;\r\n  setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this;\r\n  equals(mat: Matrix4): boolean;\r\n  copy(mat: Matrix4): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix4): this;\r\n  sub(mat: Matrix4): this;\r\n  mult(mat: Matrix4): this;\r\n\r\n  getMaxScaleOnAxis(): number;\r\n  solve(vecB: Vector4): Vector4Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  solve3(vecB: Vector3): Vector3Values;\r\n\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n\r\n  setTranslation(vector: Vector3): this;\r\n  translate(vector: Vector3): this;\r\n\r\n  setRotationX(angle: number): this;\r\n  rotateX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  rotateY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n  rotateZ(angle: number): this;\r\n\r\n  rotate(vector: Vector3, angle: number): this\r\n  rotation(matrix: Matrix3): this;\r\n\r\n  setScaling(vector: Vector3): this;\r\n  scale(vector: Vector3): this;\r\n\r\n  lookAt(eye: Vector3 | Vector3Values, target: Vector3, up: Vector3): this;\r\n\r\n  transformPoint(point: Vector3): Vector3;\r\n  transformPoint4(point: Vector4): Vector4;\r\n  transformDirection(direction: Vector3): Vector3;\r\n  transformNormal(normal: Vector3): Vector3;\r\n  \r\n  setFrustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n  setPerspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): this;\r\n  setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n}\r\n\r\nclass Matrix4Base implements Matrix4 {\r\n  readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  )\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[ 0], args[ 1], args[ 2], args[ 3],\r\n        args[ 4], args[ 5], args[ 6], args[ 7],\r\n        args[ 8], args[ 9], args[10], args[11],\r\n        args[12], args[13], args[14], args[15]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array(16);\r\n\t\t}\r\n  }\r\n\r\n  static fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4Base {\r\n    return new Matrix4Base(\r\n      m11, m21, m31, m41,\r\n      m12, m22, m32, m42,\r\n      m13, m23, m33, m43,\r\n      m14, m24, m34, m44\r\n    );\r\n  }\r\n\r\n  static fromArray(array: ArrayLike<number>): Matrix4Base {\r\n    if (array.length < 16) {\r\n      throw new Error(`Matrix4 needs an array of size 16 at least.`);\r\n    }\r\n    return new Matrix4Base(array);\r\n  }\r\n\r\n  getValues(): Matrix4Values {\r\n    const thisArray = this.array;\r\n\t\treturn [\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ];\r\n\t}\r\n\r\n\tsetValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 3] = m41;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 7] = m42;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n    thisArray[11] = m43;\r\n    thisArray[12] = m14;\r\n    thisArray[13] = m24;\r\n    thisArray[14] = m34;\r\n    thisArray[15] = m44;\r\n\r\n    return this;\r\n  }\r\n  \r\n  get m11(): number {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  get m12() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tset m12(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  get m13() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n\tset m13(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n  \r\n  get m14() {\r\n\t\treturn this.array[12];\r\n\t}\r\n\r\n\tset m14(val: number) {\r\n\t\tthis.array[12] = val;\r\n  }\r\n  \r\n  get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  get m22() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tset m22(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  get m23() {\r\n\t\treturn this.array[9];\r\n\t}\r\n\r\n\tset m23(val: number) {\r\n\t\tthis.array[9] = val;\r\n  }\r\n  \r\n  get m24() {\r\n\t\treturn this.array[13];\r\n\t}\r\n\r\n\tset m24(val: number) {\r\n\t\tthis.array[13] = val;\r\n  }\r\n  \r\n  get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  get m32() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tset m32(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  get m33() {\r\n\t\treturn this.array[10];\r\n\t}\r\n\r\n  set m33(val: number) {\r\n\t\tthis.array[10] = val;\r\n  }\r\n  \r\n  get m34() {\r\n\t\treturn this.array[14];\r\n\t}\r\n\r\n\tset m34(m34: number) {\r\n\t\tthis.array[14] = m34;\r\n  }\r\n  \r\n  get m41() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset m41(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  get m42() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tset m42(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  get m43() {\r\n\t\treturn this.array[11];\r\n\t}\r\n\r\n\tset m43(val: number) {\r\n\t\tthis.array[11] = val;\r\n  }\r\n  \r\n  get m44() {\r\n\t\treturn this.array[15];\r\n\t}\r\n\r\n\tset m44(m44: number) {\r\n\t\tthis.array[15] = m44;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 16) {\r\n\t\t\tthrow new MathError(`Array must be of length 16 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t// setArray(array: WritableArrayLike<number>): this {\r\n\t// \tthis._checkArray(array);\r\n\t// \tthisArray = array;\r\n\t// \treturn this;\r\n\t// }\r\n\r\n  getRotation(): Quaternion {\r\n    const thisArray = this.array;\r\n    const m11 = thisArray[0], m12 = thisArray[4], m13 = thisArray[ 8],\r\n          m21 = thisArray[1], m22 = thisArray[5], m23 = thisArray[ 9],\r\n          m31 = thisArray[2], m32 = thisArray[6], m33 = thisArray[10];\r\n    const trace = m11 + m22 + m33;\r\n    \r\n    let x = 0;\r\n    let y = 0;\r\n    let z = 0;\r\n    let w = 0;\r\n\r\n    if (trace > 0) {\r\n      const s = Math.sqrt(trace + 1) * 2;\r\n      w = 0.25 * s;\r\n      x = (m32 - m23) / s;\r\n      y = (m13 - m31) / s;\r\n      z = (m21 - m12) / s;\r\n    }\r\n    else if (m11 > m22 && m11 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n      w = (m32 - m23) / s;\r\n      x = 0.25 * s;\r\n      y = (m12 + m21) / s;\r\n      z = (m13 + m31) / s;\r\n    }\r\n    else if (m22 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n      w = (m13 - m31) / s;\r\n      x = (m12 + m21) / s;\r\n      y = 0.25 * s;\r\n      z = (m23 + m32) / s;\r\n    }\r\n    else {\r\n      const s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n      w = (m21 - m12) / s;\r\n      x = (m13 + m31) / s;\r\n      y = (m23 + m32) / s;\r\n      z = 0.25 * s;\r\n    }\r\n    \r\n    return new Quaternion(x, y, z, w);\r\n  }\r\n\r\n  setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this {\r\n    const thisArray = this.array;\r\n    const rotationArray = rotation.array;\r\n    const translationArray = translation.array;\r\n    const scalingArray = scaling.array;\r\n\r\n    const x = rotationArray[0];\r\n    const y = rotationArray[1];\r\n    const z = rotationArray[2];\r\n    const w = rotationArray[3];\r\n\r\n    const x2 = x + x;\r\n    const y2 = y + y;\r\n    const z2 = z + z;\r\n\r\n    const xx = x * x2;\r\n    const xy = x * y2;\r\n    const xz = x * z2;\r\n    const yy = y * y2;\r\n    const yz = y * z2;\r\n    const zz = z * z2;\r\n    const wx = w * x2;\r\n    const wy = w * y2;\r\n    const wz = w * z2;\r\n    const sx = scalingArray[0];\r\n    const sy = scalingArray[1];\r\n    const sz = scalingArray[2];\r\n\r\n    thisArray[0] = (1 - (yy + zz)) * sx;\r\n    thisArray[1] = (xy + wz) * sx;\r\n    thisArray[2] = (xz - wy) * sx;\r\n    thisArray[3] = 0;\r\n    thisArray[4] = (xy - wz) * sy;\r\n    thisArray[5] = (1 - (xx + zz)) * sy;\r\n    thisArray[6] = (yz + wx) * sy;\r\n    thisArray[7] = 0;\r\n    thisArray[8] = (xz + wy) * sz;\r\n    thisArray[9] = (yz - wx) * sz;\r\n    thisArray[10] = (1 - (xx + yy)) * sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = translationArray[0];\r\n    thisArray[13] = translationArray[1];\r\n    thisArray[14] = translationArray[2];\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n  \r\n  setRotation(quaternion: Quaternion): this {\r\n    const thisArray = this.array;\r\n    const quaternionArray = quaternion.array;\r\n\t\tconst quaternionLengthSquared = quaternion.lengthSquared();\r\n\t\tconst s = 2.0 / quaternionLengthSquared;\r\n\r\n\t\tconst x = quaternionArray[0];\r\n\t\tconst y = quaternionArray[1];\r\n\t\tconst z = quaternionArray[2];\r\n\t\tconst w = quaternionArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n    const m11 = 1 - (yy + zz);\r\n    const m21 = xy + wz;\r\n    const m31 = xz - wy;\r\n    const m12 = xy - wz;\r\n    const m22 = 1 - (xx + zz);\r\n    const m32 = yz + wx;\r\n    const m13 = xz + wy;\r\n    const m23 = yz - wx;\r\n    const m33 = 1 - (xx + yy);\r\n\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n  equals(mat: Matrix4): boolean {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n    return thisArray[ 0] === matArray[ 0]\r\n      && thisArray[ 1] === matArray[ 1]\r\n      && thisArray[ 2] === matArray[ 2]\r\n      && thisArray[ 3] === matArray[ 3]\r\n      && thisArray[ 4] === matArray[ 4]\r\n      && thisArray[ 5] === matArray[ 5]\r\n      && thisArray[ 6] === matArray[ 6]\r\n      && thisArray[ 7] === matArray[ 7]\r\n      && thisArray[ 8] === matArray[ 8]\r\n      && thisArray[ 9] === matArray[ 9]\r\n      && thisArray[10] === matArray[10]\r\n      && thisArray[11] === matArray[11]\r\n      && thisArray[12] === matArray[12]\r\n      && thisArray[13] === matArray[13]\r\n      && thisArray[14] === matArray[14]\r\n      && thisArray[15] === matArray[15];\r\n  }\r\n\r\n  copy(mat: Matrix4): this {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n\r\n    thisArray[ 0] = matArray[ 0];\r\n    thisArray[ 1] = matArray[ 1];\r\n    thisArray[ 2] = matArray[ 2];\r\n    thisArray[ 3] = matArray[ 3];\r\n    thisArray[ 4] = matArray[ 4];\r\n    thisArray[ 5] = matArray[ 5];\r\n    thisArray[ 6] = matArray[ 6];\r\n    thisArray[ 7] = matArray[ 7];\r\n    thisArray[ 8] = matArray[ 8];\r\n    thisArray[ 9] = matArray[ 9];\r\n    thisArray[10] = matArray[10];\r\n    thisArray[11] = matArray[11];\r\n    thisArray[12] = matArray[12];\r\n    thisArray[13] = matArray[13];\r\n    thisArray[14] = matArray[14];\r\n    thisArray[15] = matArray[15];\r\n\r\n    return this;\r\n  }\r\n\r\n  clone(): this {\r\n    const thisArray = this.array;\r\n    return new Matrix4Base(\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ) as this;\r\n  }\r\n\r\n  static identity(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      1, 0, 0, 0,\r\n      0, 1, 0, 0,\r\n      0, 0, 1, 0,\r\n      0, 0, 0, 1\r\n    );\r\n  }\r\n\r\n  setIdentity(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  static zeros(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0\r\n    );\r\n  }\r\n\r\n  setZeros(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 0;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 0;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 0;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  det(): number {\r\n    const thisArray = this.array;\r\n    const det2_01_01 = thisArray[0] * thisArray[5] - thisArray[1] * thisArray[4];\r\n    const det2_01_02 = thisArray[0] * thisArray[6] - thisArray[2] * thisArray[4];\r\n    const det2_01_03 = thisArray[0] * thisArray[7] - thisArray[3] * thisArray[4];\r\n    const det2_01_12 = thisArray[1] * thisArray[6] - thisArray[2] * thisArray[5];\r\n    const det2_01_13 = thisArray[1] * thisArray[7] - thisArray[3] * thisArray[5];\r\n    const det2_01_23 = thisArray[2] * thisArray[7] - thisArray[3] * thisArray[6];\r\n    const det3_201_012 = thisArray[8] * det2_01_12 - thisArray[ 9] * det2_01_02 + thisArray[10] * det2_01_01;\r\n    const det3_201_013 = thisArray[8] * det2_01_13 - thisArray[ 9] * det2_01_03 + thisArray[11] * det2_01_01;\r\n    const det3_201_023 = thisArray[8] * det2_01_23 - thisArray[10] * det2_01_03 + thisArray[11] * det2_01_02;\r\n    const det3_201_123 = thisArray[9] * det2_01_23 - thisArray[10] * det2_01_13 + thisArray[11] * det2_01_12;\r\n\r\n    return -det3_201_123 * thisArray[12] + det3_201_023 * thisArray[13]\r\n      - det3_201_013 * thisArray[14] + det3_201_012 * thisArray[15];\r\n  }\r\n\r\n  trace(): number {\r\n    const thisArray = this.array;\r\n    return thisArray[0] + thisArray[5] + thisArray[10] + thisArray[15];\r\n  }\r\n\r\n  static negate(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = -a[ 0];\r\n    o[ 1] = -a[ 1];\r\n    o[ 2] = -a[ 2];\r\n    o[ 3] = -a[ 3];\r\n    o[ 4] = -a[ 4];\r\n    o[ 5] = -a[ 5];\r\n    o[ 6] = -a[ 6];\r\n    o[ 7] = -a[ 7];\r\n    o[ 8] = -a[ 8];\r\n    o[ 9] = -a[ 9];\r\n    o[10] = -a[10];\r\n    o[11] = -a[11];\r\n    o[12] = -a[12];\r\n    o[13] = -a[13];\r\n    o[14] = -a[14];\r\n    o[15] = -a[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  negate(): this {\r\n    return Matrix4Base.negate(this, this) as this;\r\n  }\r\n\r\n  static transpose(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    o[ 0] = a11;\r\n    o[ 1] = a12;\r\n    o[ 2] = a13;\r\n    o[ 3] = a14;\r\n    o[ 4] = a21;\r\n    o[ 5] = a22;\r\n    o[ 6] = a23;\r\n    o[ 7] = a24;\r\n    o[ 8] = a31;\r\n    o[ 9] = a32;\r\n    o[10] = a33;\r\n    o[11] = a34;\r\n    o[12] = a41;\r\n    o[13] = a42;\r\n    o[14] = a43;\r\n    o[15] = a44;\r\n    \r\n    return out;\r\n  }\r\n\r\n  transpose(): this {\r\n    return Matrix4Base.transpose(this, this) as this;\r\n  }\r\n\r\n  static invert(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const o00 = a[ 0];\r\n    const o01 = a[ 1];\r\n    const o02 = a[ 2];\r\n    const o03 = a[ 3];\r\n    const o10 = a[ 4];\r\n    const o11 = a[ 5];\r\n    const o12 = a[ 6];\r\n    const o13 = a[ 7];\r\n    const o20 = a[ 8];\r\n    const o21 = a[ 9];\r\n    const o22 = a[10];\r\n    const o23 = a[11];\r\n    const o30 = a[12];\r\n    const o31 = a[13];\r\n    const o32 = a[14];\r\n    const o33 = a[15];\r\n\r\n    const t00 = o00 * o11 - o01 * o10;\r\n    const t01 = o00 * o12 - o02 * o10;\r\n    const t02 = o00 * o13 - o03 * o10;\r\n    const t03 = o01 * o12 - o02 * o11;\r\n    const t04 = o01 * o13 - o03 * o11;\r\n    const t05 = o02 * o13 - o03 * o12;\r\n    const t06 = o20 * o31 - o21 * o30;\r\n    const t07 = o20 * o32 - o22 * o30;\r\n    const t08 = o20 * o33 - o23 * o30;\r\n    const t09 = o21 * o32 - o22 * o31;\r\n    const t10 = o21 * o33 - o23 * o31;\r\n    const t11 = o22 * o33 - o23 * o32;\r\n\r\n    const d = (t00 * t11 - t01 * t10 + t02 * t09 + t03 * t08 - t04 * t07 + t05 * t06);\r\n    \r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    const invDet = 1 / d;\r\n\r\n    o[ 0] = (o11 * t11 - o12 * t10 + o13 * t09) * invDet;\r\n    o[ 1] = (-o01 * t11 + o02 * t10 - o03 * t09) * invDet;\r\n    o[ 2] = (o31 * t05 - o32 * t04 + o33 * t03) * invDet;\r\n    o[ 3] = (-o21 * t05 + o22 * t04 - o23 * t03) * invDet;\r\n    o[ 4] = (-o10 * t11 + o12 * t08 - o13 * t07) * invDet;\r\n    o[ 5] = (o00 * t11 - o02 * t08 + o03 * t07) * invDet;\r\n    o[ 6] = (-o30 * t05 + o32 * t02 - o33 * t01) * invDet;\r\n    o[ 7] = (o20 * t05 - o22 * t02 + o23 * t01) * invDet;\r\n    o[ 8] = (o10 * t10 - o11 * t08 + o13 * t06) * invDet;\r\n    o[ 9] = (-o00 * t10 + o01 * t08 - o03 * t06) * invDet;\r\n    o[10] = (o30 * t04 - o31 * t02 + o33 * t00) * invDet;\r\n    o[11] = (-o20 * t04 + o21 * t02 - o23 * t00) * invDet;\r\n    o[12] = (-o10 * t09 + o11 * t07 - o12 * t06) * invDet;\r\n    o[13] = (o00 * t09 - o01 * t07 + o02 * t06) * invDet;\r\n    o[14] = (-o30 * t03 + o31 * t01 - o32 * t00) * invDet;\r\n    o[15] = (o20 * t03 - o21 * t01 + o22 * t00) * invDet;\r\n\r\n    return out;\r\n  }\r\n\r\n  invert(): this {\r\n    return Matrix4Base.invert(this, this) as this;\r\n  }\r\n\r\n  static add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] + b[ 0];\r\n    o[ 1] = a[ 1] + b[ 1];\r\n    o[ 2] = a[ 2] + b[ 2];\r\n    o[ 3] = a[ 3] + b[ 3];\r\n    o[ 4] = a[ 4] + b[ 4];\r\n    o[ 5] = a[ 5] + b[ 5];\r\n    o[ 6] = a[ 6] + b[ 6];\r\n    o[ 7] = a[ 7] + b[ 7];\r\n    o[ 8] = a[ 8] + b[ 8];\r\n    o[ 9] = a[ 9] + b[ 9];\r\n    o[10] = a[10] + b[10];\r\n    o[11] = a[11] + b[11];\r\n    o[12] = a[12] + b[12];\r\n    o[13] = a[13] + b[13];\r\n    o[14] = a[14] + b[14];\r\n    o[15] = a[15] + b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  add(matrix: Matrix4): this {\r\n    return Matrix4Base.add(this, matrix, this) as this;\r\n  }\r\n\r\n  static sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] - b[ 0];\r\n    o[ 1] = a[ 1] - b[ 1];\r\n    o[ 2] = a[ 2] - b[ 2];\r\n    o[ 3] = a[ 3] - b[ 3];\r\n    o[ 4] = a[ 4] - b[ 4];\r\n    o[ 5] = a[ 5] - b[ 5];\r\n    o[ 6] = a[ 6] - b[ 6];\r\n    o[ 7] = a[ 7] - b[ 7];\r\n    o[ 8] = a[ 8] - b[ 8];\r\n    o[ 9] = a[ 9] - b[ 9];\r\n    o[10] = a[10] - b[10];\r\n    o[11] = a[11] - b[11];\r\n    o[12] = a[12] - b[12];\r\n    o[13] = a[13] - b[13];\r\n    o[14] = a[14] - b[14];\r\n    o[15] = a[15] - b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  sub(matrix: Matrix4): this {\r\n    return Matrix4Base.sub(this, matrix, this) as this;\r\n  }\r\n\r\n  static mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    const b11 = b[ 0];\r\n    const b21 = b[ 1];\r\n    const b31 = b[ 2];\r\n    const b41 = b[ 3];\r\n    const b12 = b[ 4];\r\n    const b22 = b[ 5];\r\n    const b32 = b[ 6];\r\n    const b42 = b[ 7];\r\n    const b13 = b[ 8];\r\n    const b23 = b[ 9];\r\n    const b33 = b[10];\r\n    const b43 = b[11];\r\n    const b14 = b[12];\r\n    const b24 = b[13];\r\n    const b34 = b[14];\r\n    const b44 = b[15];\r\n\r\n    o[ 0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n    o[ 1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n    o[ 2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n    o[ 3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n    o[ 4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n    o[ 5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n    o[ 6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n    o[ 7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n    o[ 8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n    o[ 9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n    o[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n    o[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n    o[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n    o[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n    o[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n    o[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n    return out;\r\n  }\r\n\r\n  mult(matrix: Matrix4): this {\r\n    return Matrix4Base.mult(this, matrix, this) as this;\r\n  }\r\n\r\n\tgetMaxScaleOnAxis(): number {\r\n    const thisArray = this.array;\r\n    const scaleXSq = thisArray[ 0] * thisArray[ 0] + thisArray[ 1] * thisArray[ 1] + thisArray[ 2] * thisArray[ 2];\r\n    const scaleYSq = thisArray[ 4] * thisArray[ 4] + thisArray[ 5] * thisArray[ 5] + thisArray[ 6] * thisArray[ 6];\r\n    const scaleZSq = thisArray[ 8] * thisArray[ 8] + thisArray[ 9] * thisArray[ 9] + thisArray[10] * thisArray[10];\r\n\r\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\r\n  }\r\n\r\n  writeIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n    const thisArray = this.array;\r\n\t\tarray[offset     ] = thisArray[ 0];\r\n\t\tarray[offset +  1] = thisArray[ 1];\r\n    array[offset +  2] = thisArray[ 2];\r\n    array[offset +  3] = thisArray[ 3];\r\n\t\tarray[offset +  4] = thisArray[ 4];\r\n    array[offset +  5] = thisArray[ 5];\r\n    array[offset +  6] = thisArray[ 6];\r\n\t\tarray[offset +  7] = thisArray[ 7];\r\n    array[offset +  8] = thisArray[ 8];\r\n    array[offset +  9] = thisArray[ 9];\r\n\t\tarray[offset + 10] = thisArray[10];\r\n    array[offset + 11] = thisArray[11];\r\n    array[offset + 12] = thisArray[12];\r\n\t\tarray[offset + 13] = thisArray[13];\r\n    array[offset + 14] = thisArray[14];\r\n    array[offset + 15] = thisArray[15];\r\n  }\r\n    \r\n  readFromArray(array: ArrayLike<number>, offset: number = 0): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = array[offset     ];\r\n    thisArray[ 1] = array[offset +  1];\r\n    thisArray[ 2] = array[offset +  2];\r\n    thisArray[ 3] = array[offset +  3];\r\n    thisArray[ 4] = array[offset +  4];\r\n    thisArray[ 5] = array[offset +  5];\r\n    thisArray[ 6] = array[offset +  6];\r\n    thisArray[ 7] = array[offset +  7];\r\n    thisArray[ 8] = array[offset +  8];\r\n    thisArray[ 9] = array[offset +  9];\r\n    thisArray[10] = array[offset + 10];\r\n    thisArray[11] = array[offset + 11];\r\n    thisArray[12] = array[offset + 12];\r\n    thisArray[13] = array[offset + 13];\r\n    thisArray[14] = array[offset + 14];\r\n    thisArray[15] = array[offset + 15];\r\n\r\n    return this;\r\n  }\r\n\r\n  solve(vecB: Vector4): Vector4Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a14 = a[ 3];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a24 = a[ 7];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const a34 = a[11];\r\n    const a41 = a[12];\r\n    const a42 = a[13];\r\n    const a43 = a[14];\r\n    const a44 = a[15];\r\n    const b00 = a11 * a22 - a12 * a21;\r\n    const b01 = a11 * a23 - a13 * a21;\r\n    const b02 = a11 * a24 - a14 * a21;\r\n    const b03 = a12 * a23 - a13 * a22;\r\n    const b04 = a12 * a24 - a14 * a22;\r\n    const b05 = a13 * a24 - a14 * a23;\r\n    const b06 = a31 * a42 - a32 * a41;\r\n    const b07 = a31 * a43 - a33 * a41;\r\n    const b08 = a31 * a44 - a34 * a41;\r\n    const b09 = a32 * a43 - a33 * a42;\r\n    const b10 = a32 * a44 - a34 * a42;\r\n    const b11 = a33 * a44 - a34 * a43;\r\n\r\n    const bX = vecB.x;\r\n    const bY = vecB.y;\r\n    const bZ = vecB.z;\r\n    const bW = vecB.w;\r\n\r\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (det != 0) {\r\n      det = 1 / det;\r\n    }\r\n\r\n    const x = det *\r\n      ((a22 * b11 - a23 * b10 + a24 * b09) * bX -\r\n      (a21 * b11 - a23 * b08 + a24 * b07) * bY +\r\n      (a21 * b10 - a22 * b08 + a24 * b06) * bZ -\r\n      (a21 * b09 - a22 * b07 + a23 * b06) * bW)\r\n    const y = det *\r\n      -((a12 * b11 - a13 * b10 + a14 * b09) * bX -\r\n      (a11 * b11 - a13 * b08 + a14 * b07) * bY +\r\n      (a11 * b10 - a12 * b08 + a14 * b06) * bZ -\r\n      (a11 * b09 - a12 * b07 + a13 * b06) * bW)\r\n    const z = det *\r\n      ((a42 * b05 - a43 * b04 + a44 * b03) * bX -\r\n      (a41 * b05 - a43 * b02 + a44 * b01) * bY +\r\n      (a41 * b04 - a42 * b02 + a44 * b00) * bZ -\r\n      (a41 * b03 - a42 * b01 + a43 * b00) * bW)\r\n    const w = det *\r\n      -((a32 * b05 - a33 * b04 + a34 * b03) * bX -\r\n      (a31 * b05 - a33 * b02 + a34 * b01) * bY +\r\n      (a31 * b04 - a32 * b02 + a34 * b00) * bZ -\r\n      (a31 * b03 - a32 * b01 + a33 * b00) * bW);\r\n    \r\n    return [\r\n      x, y, z, w\r\n    ];\r\n  }\r\n\r\n  solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[4];\r\n    const a22 = a[5];\r\n    const bx = vecB.x - a[8];\r\n    const by = vecB.y - a[9];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by);\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n\r\n  solve3(vecB: Vector3): Vector3Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const bx = vecB.x - a[12];\r\n    const by = vecB.y - a[13];\r\n    const bz = vecB.z - a[14];\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n\r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n\r\n    return [\r\n      x, y, z\r\n    ];\r\n  }\r\n\r\n  static translation(vector: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setTranslation(vector);\r\n  }\r\n\r\n  setTranslation(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n\r\n    const x = vecArray[0];\r\n    const y = vecArray[1];\r\n    const z = vecArray[2];\r\n\r\n    /*thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;*/\r\n    thisArray[12] = x;\r\n    thisArray[13] = y;\r\n    thisArray[14] = z;\r\n    //thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  translate(vector: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vectorArray = vector.array;\r\n\r\n    const tx = vectorArray[0];\r\n    const ty = vectorArray[1];\r\n    const tz = vectorArray[2];\r\n    const tw = 1;\r\n\r\n    const t1 = thisArray[0] * tx + thisArray[4] * ty + thisArray[ 8] * tz + thisArray[12] * tw;\r\n    const t2 = thisArray[1] * tx + thisArray[5] * ty + thisArray[ 9] * tz + thisArray[13] * tw;\r\n    const t3 = thisArray[2] * tx + thisArray[6] * ty + thisArray[10] * tz + thisArray[14] * tw;\r\n    const t4 = thisArray[3] * tx + thisArray[7] * ty + thisArray[11] * tz + thisArray[15] * tw;\r\n\r\n    thisArray[12] = t1;\r\n    thisArray[13] = t2;\r\n    thisArray[14] = t3;\r\n    thisArray[15] = t4;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationX(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationX(angle);\r\n  }\r\n\r\n  setRotationX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = sinAngle;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = -sinAngle;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  rotateX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[4] *  cosAngle + thisArray[ 8] * sinAngle;\r\n    const t2 = thisArray[5] *  cosAngle + thisArray[ 9] * sinAngle;\r\n    const t3 = thisArray[6] *  cosAngle + thisArray[10] * sinAngle;\r\n    const t4 = thisArray[7] *  cosAngle + thisArray[11] * sinAngle;\r\n    const t5 = thisArray[4] * -sinAngle + thisArray[ 8] * cosAngle;\r\n    const t6 = thisArray[5] * -sinAngle + thisArray[ 9] * cosAngle;\r\n    const t7 = thisArray[6] * -sinAngle + thisArray[10] * cosAngle;\r\n    const t8 = thisArray[7] * -sinAngle + thisArray[11] * cosAngle;\r\n\r\n    thisArray[ 4] = t1;\r\n    thisArray[ 5] = t2;\r\n    thisArray[ 6] = t3;\r\n    thisArray[ 7] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationY(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationY(angle);\r\n  }\r\n\r\n  setRotationY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = -sinAngle;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = sinAngle;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  rotateY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[ 0] * cosAngle + thisArray[ 8] * -sinAngle;\r\n    const t2 = thisArray[ 1] * cosAngle + thisArray[ 9] * -sinAngle;\r\n    const t3 = thisArray[ 2] * cosAngle + thisArray[10] * -sinAngle;\r\n    const t4 = thisArray[ 3] * cosAngle + thisArray[11] * -sinAngle;\r\n    const t5 = thisArray[ 0] * sinAngle + thisArray[ 8] *  cosAngle;\r\n    const t6 = thisArray[ 1] * sinAngle + thisArray[ 9] *  cosAngle;\r\n    const t7 = thisArray[ 2] * sinAngle + thisArray[10] *  cosAngle;\r\n    const t8 = thisArray[ 3] * sinAngle + thisArray[11] *  cosAngle;\r\n\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationZ(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationZ(angle);\r\n  }\r\n\r\n  setRotationZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngles = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = sinAngles;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = -sinAngles;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  rotateZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[0] *  cosAngle + thisArray[4] * sinAngle;\r\n    const t2 = thisArray[1] *  cosAngle + thisArray[5] * sinAngle;\r\n    const t3 = thisArray[2] *  cosAngle + thisArray[6] * sinAngle;\r\n    const t4 = thisArray[3] *  cosAngle + thisArray[7] * sinAngle;\r\n    const t5 = thisArray[0] * -sinAngle + thisArray[4] * cosAngle;\r\n    const t6 = thisArray[1] * -sinAngle + thisArray[5] * cosAngle;\r\n    const t7 = thisArray[2] * -sinAngle + thisArray[6] * cosAngle;\r\n    const t8 = thisArray[3] * -sinAngle + thisArray[7] * cosAngle;\r\n    \r\n    thisArray[0] = t1;\r\n    thisArray[1] = t2;\r\n    thisArray[2] = t3;\r\n    thisArray[3] = t4;\r\n    thisArray[4] = t5;\r\n    thisArray[5] = t6;\r\n    thisArray[6] = t7;\r\n    thisArray[7] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotation(matrix: Matrix3): Matrix4Base {\r\n    return new Matrix4Base().rotation(matrix);\r\n  }\r\n\r\n  rotation(matrix: Matrix3): this {\r\n    const thisArray = this.array;\r\n    const matArray = matrix.array;\r\n\r\n    thisArray[ 0] = matArray[0];\r\n    thisArray[ 1] = matArray[1];\r\n    thisArray[ 2] = matArray[2];\r\n    thisArray[ 4] = matArray[3];\r\n    thisArray[ 5] = matArray[4];\r\n    thisArray[ 6] = matArray[5];\r\n    thisArray[ 8] = matArray[6];\r\n    thisArray[ 9] = matArray[7];\r\n    thisArray[10] = matArray[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  rotate(axis: Vector3, angle: number): this {\r\n    const thisArray = this.array;\r\n    const axisArray = axis.array;\r\n    const axisLength = axis.length();\r\n    const x = axisArray[0] / axisLength;\r\n    const y = axisArray[1] / axisLength;\r\n    const z = axisArray[2] / axisLength;\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n    const C = 1.0 - c;\r\n    const m11 = x * x * C + c;\r\n    const m12 = x * y * C - z * s;\r\n    const m13 = x * z * C + y * s;\r\n    const m21 = y * x * C + z * s;\r\n    const m22 = y * y * C + c;\r\n    const m23 = y * z * C - x * s;\r\n    const m31 = z * x * C - y * s;\r\n    const m32 = z * y * C + x * s;\r\n    const m33 = z * z * C + c;\r\n    const t1  = thisArray[0] * m11 + thisArray[4] * m21 + thisArray[8] * m31;\r\n    const t2  = thisArray[1] * m11 + thisArray[5] * m21 + thisArray[9] * m31;\r\n    const t3  = thisArray[2] * m11 + thisArray[6] * m21 + thisArray[10] * m31;\r\n    const t4  = thisArray[3] * m11 + thisArray[7] * m21 + thisArray[11] * m31;\r\n    const t5  = thisArray[0] * m12 + thisArray[4] * m22 + thisArray[8] * m32;\r\n    const t6  = thisArray[1] * m12 + thisArray[5] * m22 + thisArray[9] * m32;\r\n    const t7  = thisArray[2] * m12 + thisArray[6] * m22 + thisArray[10] * m32;\r\n    const t8  = thisArray[3] * m12 + thisArray[7] * m22 + thisArray[11] * m32;\r\n    const t9  = thisArray[0] * m13 + thisArray[4] * m23 + thisArray[8] * m33;\r\n    const t10 = thisArray[1] * m13 + thisArray[5] * m23 + thisArray[9] * m33;\r\n    const t11 = thisArray[2] * m13 + thisArray[6] * m23 + thisArray[10] * m33;\r\n    const t12 = thisArray[3] * m13 + thisArray[7] * m23 + thisArray[11] * m33;\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 4] = t5;\r\n    thisArray[ 5] = t6;\r\n    thisArray[ 6] = t7;\r\n    thisArray[ 7] = t8;\r\n    thisArray[ 8] = t9;\r\n    thisArray[ 9] = t10;\r\n    thisArray[10] = t11;\r\n    thisArray[11] = t12;\r\n\r\n    return this;\r\n  }\r\n\r\n  static scaling(vec: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setScaling(vec);\r\n  }\r\n\r\n  setScaling(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] = sx;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = sy;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  scale(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] *= sx;\r\n    thisArray[ 1] *= sx;\r\n    thisArray[ 2] *= sx;\r\n    thisArray[ 3] *= sx;\r\n    thisArray[ 4] *= sy;\r\n    thisArray[ 5] *= sy;\r\n    thisArray[ 6] *= sy;\r\n    thisArray[ 7] *= sy;\r\n    thisArray[ 8] *= sz;\r\n    thisArray[ 9] *= sz;\r\n    thisArray[10] *= sz;\r\n    thisArray[11] *= sz;\r\n    thisArray[12] *= sw;\r\n    thisArray[13] *= sw;\r\n    thisArray[14] *= sw;\r\n    thisArray[15] *= sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4): Matrix4 {\r\n    const eyeArray = eye.array;\r\n    const upArray = up.array;\r\n    const targetArray = target.array;\r\n    const outArray = out.array;\r\n    const e0 = eyeArray[0];\r\n    const e1 = eyeArray[1];\r\n    const e2 = eyeArray[2];\r\n    const u0 = upArray[0];\r\n    const u1 = upArray[1];\r\n    const u2 = upArray[2];\r\n    const t0 = targetArray[0];\r\n    const t1 = targetArray[1];\r\n    const t2 = targetArray[2];\r\n    let x0, x1, x2, y0, y1, y2, z0, z1, z2, length;\r\n\r\n    z0 = e0 - t0;\r\n    z1 = e1 - t1;\r\n    z2 = e2 - t2;\r\n    length = Math.hypot(z0, z1, z2);\r\n    if (length > 0) {\r\n      length = 1 / Math.hypot(z0, z1, z2);\r\n      z0 *= length;\r\n      z1 *= length;\r\n      z2 *= length;\r\n    }\r\n  \r\n    x0 = u1 * z2 - u2 * z1;\r\n    x1 = u2 * z0 - u0 * z2;\r\n    x2 = u0 * z1 - u1 * z0;\r\n    length = Math.hypot(x0, x1, x2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      x0 *= length;\r\n      x1 *= length;\r\n      x2 *= length;\r\n    }\r\n\r\n    y0 = z1 * x2 - z2 * x1;\r\n    y1 = z2 * x0 - z0 * x2;\r\n    y2 = z0 * x1 - z1 * x0;\r\n    length = Math.hypot(y0, y1, y2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      y0 *= length;\r\n      y1 *= length;\r\n      y2 *= length;\r\n    }\r\n  \r\n    outArray[ 0] = x0;\r\n    outArray[ 1] = x1;\r\n    outArray[ 2] = x2;\r\n    outArray[ 3] = 0;\r\n    outArray[ 4] = y0;\r\n    outArray[ 5] = y1;\r\n    outArray[ 6] = y2;\r\n    outArray[ 7] = 0;\r\n    outArray[ 8] = z0;\r\n    outArray[ 9] = z1;\r\n    outArray[10] = z2;\r\n    outArray[11] = 0;\r\n    outArray[12] = e0;\r\n    outArray[13] = e1;\r\n    outArray[14] = e2;\r\n    outArray[15] = 1;\r\n  \r\n    return out;\r\n  }\r\n\r\n  lookAt(eye: Vector3, target: Vector3, up: Vector3): this {\r\n    return Matrix4Base.lookAt(eye, target, up, this) as this;\r\n  }\r\n\r\n  transformPoint(point: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const pointArray = point.array;\r\n\r\n    const x = pointArray[0];\r\n    const y = pointArray[1];\r\n    const z = pointArray[2];\r\n\r\n    const d = x * thisArray[3] + y * thisArray[7] + z * thisArray[11] + thisArray[15];\r\n\r\n    point.setValues(\r\n      (x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8] + thisArray[12]) / d,\r\n      (x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9] + thisArray[13]) / d,\r\n      (x * thisArray[2] + y * thisArray[6] + z * thisArray[10] + thisArray[14]) / d\r\n    );\r\n\r\n    return point;\r\n  }\r\n\r\n  transformPoint4(point: Vector4): Vector4 {\r\n    const thisArray = this.array;\r\n    const pointArray = point.array;\r\n\r\n    const x = pointArray[0];\r\n    const y = pointArray[1];\r\n    const z = pointArray[2];\r\n    const w = pointArray[3];\r\n\r\n    const d = x * thisArray[3] + y * thisArray[7] + z * thisArray[11] + w * thisArray[15];\r\n\r\n    point.setValues(\r\n      (x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8] + thisArray[12]) / d,\r\n      (x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9] + thisArray[13]) / d,\r\n      (x * thisArray[2] + y * thisArray[6] + z * thisArray[10] + thisArray[14]) / d,\r\n      (x * thisArray[3] + y * thisArray[7] + z * thisArray[11] + thisArray[15]) / d\r\n    );\r\n\r\n    return point;\r\n  }\r\n\r\n  transformDirection(direction: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const directionArray = direction.array;\r\n\r\n    const x = directionArray[0];\r\n    const y = directionArray[1];\r\n    const z = directionArray[2];\r\n\r\n    direction.setValues(\r\n      x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8],\r\n      x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9],\r\n      x * thisArray[2] + y * thisArray[6] + z * thisArray[10]\r\n    );\r\n\r\n    return direction;\r\n  }\r\n\r\n  transformNormal(normal: Vector3): Vector3 {\r\n    const normalArray = normal.array;\r\n\r\n    const thisInvArray = this.invert().array;\r\n\r\n    const x = normalArray[0];\r\n    const y = normalArray[1];\r\n    const z = normalArray[2];\r\n\r\n    normal.setValues(\r\n      x * thisInvArray[0] + y * thisInvArray[4] + z * thisInvArray[ 8],\r\n      x * thisInvArray[1] + y * thisInvArray[5] + z * thisInvArray[ 9],\r\n      x * thisInvArray[2] + y * thisInvArray[6] + z * thisInvArray[10]\r\n    );\r\n\r\n    this.invert();\r\n\r\n    return normal;\r\n  }\r\n\r\n  static perspective(fov: number, aspect: number, zNear: number, zFar: number): Matrix4Base {\r\n    return new Matrix4Base().setPerspective(fov, aspect, zNear, zFar);\r\n  }\r\n\r\n  setPerspective(fov: number, aspect: number, zNear: number, zFar: number): this {\r\n    const thisArray = this.array;\r\n    const width = Math.tan(Math.PI * 0.5 - 0.5 * fov);\r\n    const height = width / aspect;\r\n    const rangeInv = 1 / (zNear - zFar);\r\n\r\n    thisArray[ 0] = height;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = width;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = (zNear + zFar) * rangeInv;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = (2 * zNear * zFar) * rangeInv;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setOrthographic(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 2 / (right - left);\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 2 / (top - bottom);\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 2 / (near - far);\r\n    thisArray[11] = 0;\r\n    thisArray[12] = (right + left) / (left - right);\r\n    thisArray[13] = (top + bottom) / (bottom - top);\r\n    thisArray[14] = (far + near) / (near - far);\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static frustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setFrustrum(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  setFrustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    const invWidth = 1 / (right - left);\r\n    const invHeight = 1 / (top - bottom);\r\n    const invDepth = 1 / (near - far);\r\n\r\n    thisArray[ 0] = near * 2 * invWidth;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = near * 2 * invHeight;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = (right + left) * invWidth;\r\n    thisArray [9] = (top + bottom) * invHeight;\r\n    thisArray[10] = (far + near) * invDepth;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = far * near * 2 * invDepth;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n}\r\n\r\nvar Matrix4: Matrix4Constructor = Matrix4Base;\r\n\r\nconst Matrix4Injector: Injector<Matrix4Constructor> = new Injector({\r\n\tdefaultCtor: Matrix4Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix4Constructor) => {\r\n\t\t\tMatrix4 = ctor;\r\n\t\t}\r\n});","export { UUID };\r\nexport { Identifiable };\r\nexport { UUIDGeneratorBase };\r\nexport { UUIDGenerator };\r\n\r\ntype UUID = string;\r\n\r\ninterface Identifiable {\r\n    readonly uuid: UUID;\r\n}\r\n\r\ninterface UUIDGenerator {\r\n    newUUID(): UUID;\r\n}\r\n\r\nclass UUIDGeneratorBase {\r\n\r\n    private _count: number;\r\n\r\n    constructor() {\r\n        this._count = 0\r\n    }\r\n\r\n    newUUID(): UUID {\r\n        return (++this._count).toString(16);\r\n    }\r\n}\r\n\r\nconst UUIDGenerator: UUIDGenerator = new UUIDGeneratorBase();","import { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Matrix4 } from \"../../algebra/matrices/Matrix4\";\r\nimport { Vector3, Vector3Constructor } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport { Vector3Pool };\r\n\r\nclass Vector3PoolBase extends StackPool<Vector3> implements StackPool<Vector3> {\r\n    private _buffer: Float32Array;\r\n    private _bufferViews: Array<WritableArrayLike<number>>;\r\n    private _extensions: Array<WritableArrayLike<number>>;\r\n\r\n    constructor(ctor: Vector3Constructor, options?: any) {\r\n        super(ctor, options);\r\n        this._buffer = new Float32Array(0);\r\n        this._bufferViews = Array(options?.size || 0).fill(0).map(() => {\r\n            return this._buffer.subarray();\r\n        });\r\n        this._extensions = [];\r\n    }\r\n}\r\n\r\nconst Vector3Pool: StackPool<Vector3> = new Vector3PoolBase(Vector3);","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3 } from \"../../algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\n\r\nexport { Plane };\r\nexport { PlaneInjector };\r\nexport { PlaneBase };\r\n\r\ninterface Plane {\r\n    normal: Vector3;\r\n    constant: number;\r\n\r\n    copy(plane: Plane): Plane;\r\n    set(x: number, y: number, z: number, constant: number): Plane;\r\n    setFromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n\tsetFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n\tsetFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): Plane;\r\n\tdistanceToPoint(point: Vector3): number;\r\n    normalized(): Plane;\r\n}\r\n\r\ninterface PlaneConstructor {\r\n    readonly prototype: Plane;\r\n    new(): Plane;\r\n    new(normal: Vector3, constant: number): Plane;\r\n    new(normal?: Vector3, constant?: number): Plane;\r\n    fromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n    fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n    fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane;\r\n}\r\n\r\nclass PlaneBase implements Plane {\r\n\r\n    private _normal: Vector3;\r\n    private _constant: number;\r\n\r\n    constructor()\r\n    constructor(normal: Vector3, constant: number)\r\n    constructor(normal?: Vector3, constant?: number) {\r\n        this._normal = normal || new Vector3([0, 0, 0]);\r\n        this._constant = constant || 0;\r\n    }\r\n\r\n    static fromNormalAndConstant(normal: Vector3, constant: number): Plane {\r\n        return new PlaneBase().setFromNormalAndConstant(normal, constant);\r\n    }\r\n\r\n\tstatic fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane {\r\n\t\treturn new PlaneBase().setFromNormalAndCoplanarPoint(normal, point);\r\n\t}\r\n\r\n\tstatic fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane {\r\n        return new PlaneBase().setFromCoplanarPoints(a, b, c);\r\n    }\r\n\r\n    get normal(): Vector3 {\r\n\t\treturn this._normal;\r\n\t}\r\n\r\n\tset normal(normal: Vector3) {\r\n\t\tthis._normal = normal;\r\n\t}\r\n\r\n\tget constant(): number {\r\n\t\treturn this._constant;\r\n\t}\r\n\r\n\tset constant(constant: number) {\r\n\t\tthis._constant = constant;\r\n\t}\r\n\r\n    copy(plane: PlaneBase): PlaneBase {\r\n        this._normal = plane._normal.clone();\r\n        this._constant = plane._constant;\r\n\r\n        return this;\r\n    }\r\n\r\n    set(x: number, y: number, z: number, constant: number): PlaneBase {\r\n        this._normal.setValues(x, y, z);\r\n        this._constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n    setFromNormalAndConstant(normal: Vector3, constant: number): PlaneBase {\r\n        this._normal.copy(normal);\r\n        this._constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n\tsetFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): PlaneBase {\r\n\t\tthis._normal.copy(normal);\r\n        this._constant = -point.dot(this._normal);\r\n        \r\n        return this;\r\n\t}\r\n\r\n\tsetFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): PlaneBase {\r\n        const normal = point3.clone();\r\n        const [temp] = Vector3Pool.acquire(1);\r\n        temp.copy(point1);\r\n        normal.sub(point2).cross(temp.sub(point2)).normalize();\r\n        this.setFromNormalAndCoplanarPoint(normal, point1);\r\n        Vector3Pool.release(1);\r\n\t\treturn this;\r\n    }\r\n\r\n\tdistanceToPoint(point: Vector3): number {\r\n\t\treturn this._normal.dot(point) + this._constant;\r\n\t}\r\n    \r\n    normalized(): PlaneBase {\r\n        const inverseNormalLength = 1.0 / this._normal.length();\r\n        \r\n        this._normal.scale(inverseNormalLength);\r\n\t\tthis._constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nvar Plane: PlaneConstructor = PlaneBase;\r\nconst PlaneInjector: Injector<PlaneConstructor> = new Injector({\r\n\tdefaultCtor: PlaneBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: PlaneConstructor) => {\r\n\t\t\tPlane = ctor;\r\n\t\t}\r\n});","import { Matrix4 } from \"../../maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../maths/algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../maths/extensions/pools/Vector3Pools\";\r\nimport { Plane } from \"../../maths/geometry/primitives/Plane\";\r\nimport { Injector } from \"../../patterns/injectors/Injector\";\r\nimport { BoundingBox } from \"./AxisAlignedBoundingBox\";\r\nimport { BoundingSphere } from \"./BoundingSphere\";\r\n\r\nexport { Frustrum };\r\nexport { FrustrumInjector };\r\nexport { FrustrumBase };\r\n\r\ninterface Frustrum {\r\n    readonly nearPlane: Plane;\r\n    readonly farPlane: Plane;\r\n    readonly topPlane: Plane;\r\n    readonly bottomPlane: Plane;\r\n    readonly leftPlane: Plane;\r\n    readonly rightPlane: Plane;\r\n    copy(frustrum: Frustrum): Frustrum;\r\n\tclone(): Frustrum;\r\n\tsetFromPerspectiveMatrix(matrix: Matrix4): Frustrum;\r\n\tset(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane\r\n    ): Frustrum;\r\n\tintersectsSphere(sphere: BoundingSphere): boolean;\r\n\tintersectsBox(box: BoundingBox): boolean;\r\n\tcontainsPoint(point: Vector3): boolean;\r\n}\r\n\r\ninterface FrustrumConstructor {\r\n    readonly prototype: Frustrum;\r\n    new(): Frustrum;\r\n}\r\n\r\nclass FrustrumBase implements Frustrum {\r\n    readonly nearPlane: Plane;\r\n    readonly farPlane: Plane;\r\n    readonly topPlane: Plane;\r\n    readonly bottomPlane: Plane;\r\n    readonly leftPlane: Plane;\r\n    readonly rightPlane: Plane;\r\n\r\n    constructor() {\r\n\t\tthis.nearPlane = new Plane();\r\n        this.farPlane = new Plane();\r\n        this.topPlane = new Plane();\r\n        this.bottomPlane = new Plane();\r\n        this.leftPlane = new Plane();\r\n        this.rightPlane = new Plane();\r\n    }\r\n\r\n    set(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane): Frustrum {\r\n\r\n\t\tthis.nearPlane.copy(nearPlane);\r\n\t\tthis.farPlane.copy(farPlane);\r\n        this.topPlane.copy(topPlane);\r\n        this.bottomPlane.copy(bottomPlane);\r\n        this.leftPlane.copy(leftPlane);\r\n        this.rightPlane.copy(rightPlane);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n    copy(frustrum: FrustrumBase): FrustrumBase {\r\n        this.set(\r\n            frustrum.nearPlane,\r\n            frustrum.farPlane,\r\n            frustrum.topPlane,\r\n            frustrum.bottomPlane,\r\n            frustrum.leftPlane,\r\n            frustrum.rightPlane\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n\tclone(): FrustrumBase {\r\n\t\treturn new FrustrumBase().copy(this);\r\n    }\r\n    \r\n\tsetFromPerspectiveMatrix(matrix: Matrix4): FrustrumBase {\r\n        const m11 = matrix.m11;\r\n        const m12 = matrix.m12;\r\n        const m13 = matrix.m13;\r\n        const m14 = matrix.m14;\r\n        const m21 = matrix.m21;\r\n        const m22 = matrix.m22;\r\n        const m23 = matrix.m23;\r\n        const m24 = matrix.m24;\r\n        const m31 = matrix.m31;\r\n        const m32 = matrix.m32;\r\n        const m33 = matrix.m33;\r\n        const m34 = matrix.m34;\r\n        const m41 = matrix.m41;\r\n        const m42 = matrix.m42;\r\n        const m43 = matrix.m43;\r\n        const m44 = matrix.m44;\r\n\r\n        this.nearPlane.set(m31 + m41, m32 + m42, m33 + m43, m34 + m44).normalized();\r\n        this.farPlane.set(-m31 + m41, -m32 + m42, -m33 + m43, -m34 + m44).normalized();\r\n        this.bottomPlane.set(m21 + m41, m22 + m42, m23 + m43, m24 + m44).normalized();\r\n        this.topPlane.set(-m21 + m41, -m22 + m42, -m23 + m43, -m24 + m44).normalized();\r\n        this.leftPlane.set(m11 + m41, m12 + m42, m13 + m43, m14 + m44).normalized();\r\n        this.rightPlane.set(-m11 + m41, -m12 + m42, -m13 + m43, -m14 + m44).normalized();\r\n        \r\n\t\treturn this;\r\n    }\r\n    \r\n\tintersectsSphere(sphere: BoundingSphere): boolean {\r\n        const center = sphere.center;\r\n        const radius = sphere.radius;\r\n        return center.dot(this.nearPlane.normal) + this.nearPlane.constant + radius <= 0 ||\r\n            center.dot(this.farPlane.normal) + this.farPlane.constant + radius <= 0 ||\r\n            center.dot(this.bottomPlane.normal) + this.bottomPlane.constant + radius <= 0 ||\r\n            center.dot(this.topPlane.normal) + this.topPlane.constant + radius <= 0 ||\r\n            center.dot(this.leftPlane.normal) + this.leftPlane.constant + radius <= 0 ||\r\n            center.dot(this.rightPlane.normal) + this.rightPlane.constant + radius <= 0;\r\n\t}\r\n\r\n\tintersectsBox(box: BoundingBox): boolean {\r\n        let intersects = true;\r\n\r\n        const boxMax = box.max;\r\n        const boxMin = box.min;\r\n\r\n        const [temp] = Vector3Pool.acquire(1);\r\n        intersects = \r\n            this.nearPlane.distanceToPoint(temp.setValues(\r\n                this.nearPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.nearPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.nearPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.farPlane.distanceToPoint(temp.setValues(\r\n                this.farPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.farPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.farPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.bottomPlane.distanceToPoint(temp.setValues(\r\n                this.bottomPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.bottomPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.bottomPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.topPlane.distanceToPoint(temp.setValues(\r\n                this.topPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.topPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.topPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.leftPlane.distanceToPoint(temp.setValues(\r\n                this.leftPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.leftPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.leftPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.rightPlane.distanceToPoint(temp.setValues(\r\n                this.rightPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.rightPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.rightPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0;\r\n        Vector3Pool.release(1);\r\n\r\n\t\treturn intersects;\r\n\t}\r\n\r\n\tcontainsPoint(point: Vector3): boolean {\r\n        return this.nearPlane.distanceToPoint(point) >= 0 &&\r\n            this.farPlane.distanceToPoint(point) >= 0 &&\r\n            this.bottomPlane.distanceToPoint(point) >= 0 &&\r\n            this.topPlane.distanceToPoint(point) >= 0 &&\r\n            this.leftPlane.distanceToPoint(point) >= 0 &&\r\n            this.rightPlane.distanceToPoint(point) >= 0;\r\n    }\r\n}\r\n\r\nvar Frustrum: FrustrumConstructor = FrustrumBase;\r\nconst FrustrumInjector: Injector<FrustrumConstructor> = new Injector({\r\n\tdefaultCtor: FrustrumBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: FrustrumConstructor) => {\r\n\t\t\tFrustrum = ctor;\r\n\t\t}\r\n});","import { EulerAngles } from \"../../libs/maths/algebra/angles/EulerAngles\";\r\nimport { Matrix3 } from \"../../libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Quaternion, QuaternionPool } from \"../../libs/maths/algebra/quaternions/Quaternion\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../libs/maths/extensions/pools/Vector3Pools\";\r\nimport { UUID, UUIDGenerator } from \"../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Object3D } from \"../rendering/scenes/objects/Object3D\";\r\n\r\nexport { Transform };\r\nexport { TransformBase };\r\n\r\ninterface TransformConstructor {\r\n    readonly prototype: Transform;\r\n    new(): Transform;\r\n    new(owner: Object3D): Transform;\r\n}\r\n\r\nconst tempMatrix = new Matrix4();\r\n\r\ninterface Transform {\r\n    hasChanged: boolean;\r\n\r\n    readonly localArray: Float32Array;\r\n    readonly array: Float32Array;\r\n    readonly uuid: UUID;\r\n    readonly owner: Object3D | null;\r\n\r\n    localMatrix: Matrix4;\r\n    matrix: Matrix4;\r\n\r\n    getMatrix(matrix: Matrix4): Matrix4;\r\n    setMatrix(matrix: Matrix4): this;\r\n    getLocalMatrix(matrix: Matrix4): Matrix4;\r\n    setLocalMatrix(matrix: Matrix4): this;\r\n\r\n    getRight(vector: Vector3): Vector3;\r\n    getLeft(vector: Vector3): Vector3;\r\n    getUp(vector: Vector3): Vector3;\r\n    getDown(vector: Vector3): Vector3;\r\n    getForward(vector: Vector3): Vector3;\r\n    getBackward(vector: Vector3): Vector3;\r\n\r\n    getTranslation(vector: Vector3): Vector3;\r\n    setTranslation(vector: Vector3): this;\r\n    translate(vector: Vector3): this;\r\n\r\n    getRotation(rotation: Quaternion): Quaternion;\r\n    setRotation(rotation: Quaternion): this;\r\n    rotate(rotation: Quaternion): this;\r\n\r\n    getScaling(scaling: Vector3): Vector3;\r\n    setScaling(scaling: Vector3): this;\r\n    scale(scaling: Vector3): this;\r\n    \r\n    lookAt(target: Vector3, up: Vector3): this;\r\n}\r\n\r\nclass TransformBase implements Transform {\r\n    readonly localArray: Float32Array;\r\n    readonly array: Float32Array;\r\n    readonly uuid: UUID;\r\n    readonly owner: Object3D | null;\r\n\r\n    readonly matrix: Matrix4;\r\n    readonly localMatrix: Matrix4;;\r\n\r\n    hasChanged: boolean;\r\n    readonly isStatic: boolean;\r\n\r\n    constructor(owner?: Object3D, isStatic?: boolean) {\r\n        this.uuid = UUIDGenerator.newUUID();\r\n        this.owner = owner || null;\r\n\r\n        this.isStatic = isStatic ?? false;\r\n        \r\n        this.array = new Float32Array(16);\r\n        this.localArray = new Float32Array(16);\r\n\r\n        this.matrix = new Matrix4(this.array).setIdentity();\r\n        this.localMatrix = new Matrix4(this.localArray).setIdentity();\r\n\r\n        this.hasChanged = false;\r\n    }\r\n\r\n    getMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisArray[ 0];\r\n        matrixArray[ 1] = thisArray[ 1];\r\n        matrixArray[ 2] = thisArray[ 2];\r\n        matrixArray[ 3] = thisArray[ 3];\r\n        matrixArray[ 4] = thisArray[ 4];\r\n        matrixArray[ 5] = thisArray[ 5];\r\n        matrixArray[ 6] = thisArray[ 6];\r\n        matrixArray[ 7] = thisArray[ 7];\r\n        matrixArray[ 8] = thisArray[ 8];\r\n        matrixArray[ 9] = thisArray[ 9];\r\n        matrixArray[10] = thisArray[10];\r\n        matrixArray[11] = thisArray[11];\r\n        matrixArray[12] = thisArray[12];\r\n        matrixArray[13] = thisArray[13];\r\n        matrixArray[14] = thisArray[14];\r\n        matrixArray[15] = thisArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    setMatrix(matrix: Matrix4): this {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        thisArray[ 0] = matrixArray[ 0];\r\n        thisArray[ 1] = matrixArray[ 1];\r\n        thisArray[ 2] = matrixArray[ 2];\r\n        thisArray[ 3] = matrixArray[ 3];\r\n        thisArray[ 4] = matrixArray[ 4];\r\n        thisArray[ 5] = matrixArray[ 5];\r\n        thisArray[ 6] = matrixArray[ 6];\r\n        thisArray[ 7] = matrixArray[ 7];\r\n        thisArray[ 8] = matrixArray[ 8];\r\n        thisArray[ 9] = matrixArray[ 9];\r\n        thisArray[10] = matrixArray[10];\r\n        thisArray[11] = matrixArray[11];\r\n        thisArray[12] = matrixArray[12];\r\n        thisArray[13] = matrixArray[13];\r\n        thisArray[14] = matrixArray[14];\r\n        thisArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    getLocalMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisLocalArray[ 0];\r\n        matrixArray[ 1] = thisLocalArray[ 1];\r\n        matrixArray[ 2] = thisLocalArray[ 2];\r\n        matrixArray[ 3] = thisLocalArray[ 3];\r\n        matrixArray[ 4] = thisLocalArray[ 4];\r\n        matrixArray[ 5] = thisLocalArray[ 5];\r\n        matrixArray[ 6] = thisLocalArray[ 6];\r\n        matrixArray[ 7] = thisLocalArray[ 7];\r\n        matrixArray[ 8] = thisLocalArray[ 8];\r\n        matrixArray[ 9] = thisLocalArray[ 9];\r\n        matrixArray[10] = thisLocalArray[10];\r\n        matrixArray[11] = thisLocalArray[11];\r\n        matrixArray[12] = thisLocalArray[12];\r\n        matrixArray[13] = thisLocalArray[13];\r\n        matrixArray[14] = thisLocalArray[14];\r\n        matrixArray[15] = thisLocalArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    setLocalMatrix(matrix: Matrix4): this {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        thisLocalArray[ 0] = matrixArray[ 0];\r\n        thisLocalArray[ 1] = matrixArray[ 1];\r\n        thisLocalArray[ 2] = matrixArray[ 2];\r\n        thisLocalArray[ 3] = matrixArray[ 3];\r\n        thisLocalArray[ 4] = matrixArray[ 4];\r\n        thisLocalArray[ 5] = matrixArray[ 5];\r\n        thisLocalArray[ 6] = matrixArray[ 6];\r\n        thisLocalArray[ 7] = matrixArray[ 7];\r\n        thisLocalArray[ 8] = matrixArray[ 8];\r\n        thisLocalArray[ 9] = matrixArray[ 9];\r\n        thisLocalArray[10] = matrixArray[10];\r\n        thisLocalArray[11] = matrixArray[11];\r\n        thisLocalArray[12] = matrixArray[12];\r\n        thisLocalArray[13] = matrixArray[13];\r\n        thisLocalArray[14] = matrixArray[14];\r\n        thisLocalArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    getRight(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[0];\r\n        vectorArray[1] = thisArray[1];\r\n        vectorArray[2] = thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    getLeft(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[0];\r\n        vectorArray[1] = -thisArray[1];\r\n        vectorArray[2] = -thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    getUp(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[4];\r\n        vectorArray[1] = thisArray[5];\r\n        vectorArray[2] = thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    getDown(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[4];\r\n        vectorArray[1] = -thisArray[5];\r\n        vectorArray[2] = -thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    getForward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 8];\r\n        vectorArray[1] = thisArray[ 9];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    getBackward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[ 8];\r\n        vectorArray[1] = -thisArray[ 9];\r\n        vectorArray[2] = -thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    getTranslation(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[12];\r\n        vectorArray[1] = thisArray[13];\r\n        vectorArray[2] = thisArray[14];\r\n        return vector;\r\n    }\r\n\r\n    setTranslation(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] = vectorArray[0];\r\n        thisArray[13] = vectorArray[1];\r\n        thisArray[14] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    translate(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] += vectorArray[0];\r\n        thisArray[13] += vectorArray[1];\r\n        thisArray[14] += vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    getScaling(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 0];\r\n        vectorArray[1] = thisArray[ 5];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    setScaling(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] = vectorArray[0];\r\n        thisArray[ 5] = vectorArray[1];\r\n        thisArray[10] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    scale(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] *= vectorArray[0];\r\n        thisArray[ 5] *= vectorArray[1];\r\n        thisArray[10] *= vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    getRotation(rotation: Quaternion): Quaternion {\r\n        rotation.setMatrix(this.matrix);\r\n        return rotation;\r\n    }\r\n    \r\n    setRotation(rotation: Quaternion): this {\r\n        this.matrix.setRotation(rotation);\r\n        return this;\r\n    }\r\n\r\n    rotate(rotation: Quaternion): this {\r\n        this.matrix.mult(\r\n            rotation.getMatrix4(tempMatrix)\r\n        );\r\n        return this;\r\n    }\r\n\r\n    transformPoint(point: Vector3): Vector3 {\r\n        return point;\r\n    }\r\n\r\n    transformDirection(direction: Vector3): Vector3 {\r\n        return direction;\r\n    }\r\n\r\n    transformVector(vector: Vector3): Vector3 {\r\n        return vector;\r\n    }\r\n\r\n    lookAt(target: Vector3, up: Vector3): this {\r\n        const thisPosition = this.getTranslation(Vector3Pool.acquire(1)[0]);\r\n        this.matrix.lookAt(thisPosition, target, up);\r\n        Vector3Pool.release(1);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Transform: TransformConstructor = TransformBase;","import { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { CameraBase } from \"./Camera\";\r\n\r\nexport class PerspectiveCamera extends CameraBase {\r\n    \r\n    constructor(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number) {\r\n        super(Matrix4.perspective(fov, aspect, zNear, zFar));\r\n    }\r\n\r\n    setValues(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number): PerspectiveCamera\r\n    {\r\n        this.projection.setPerspective(fov, aspect, zNear, zFar);\r\n        this.updateFrustrum();\r\n        return this;\r\n    }\r\n}","import { Vector3 } from \"engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Space } from \"../../../../libs/maths/geometry/space/Space\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Frustrum } from \"../../../../libs/physics/collisions/Frustrum\";\r\nimport { Mesh } from \"../objects/meshes/Mesh\";\r\nimport { Object3D, Object3DBase } from \"../objects/Object3D\";\r\n\r\nexport { Camera };\r\nexport { CameraBase };\r\n\r\ninterface Camera extends Object3D {\r\n  readonly uuid: UUID;\r\n  readonly viewProjection: Matrix4;\r\n  readonly projection: Matrix4;\r\n  readonly view: Matrix4;\r\n  readonly frustrum: Frustrum;\r\n  isViewing(mesh: Mesh): boolean;\r\n}\r\n\r\nclass CameraBase extends Object3DBase {\r\n    readonly uuid: UUID;\r\n    readonly projection: Matrix4;\r\n    readonly frustrum: Frustrum;\r\n  \r\n    constructor()\r\n    constructor(projection: Matrix4)\r\n    constructor(projection?: Matrix4) {\r\n      super();\r\n      this.uuid = UUIDGenerator.newUUID();\r\n      this.projection = projection || new Matrix4();\r\n      this.frustrum = new Frustrum().setFromPerspectiveMatrix(this.projection);\r\n    }\r\n\r\n    getFront(vector: Vector3): Vector3 {\r\n      return this.transform.getBackward(vector);\r\n    }\r\n\r\n    get view(): Matrix4 {\r\n      return this.transform.matrix.clone().invert();\r\n    }\r\n\r\n    get viewProjection(): Matrix4 {\r\n      return this.projection.clone().mult(this.view);\r\n    }\r\n\r\n    isViewing(mesh: Mesh): boolean {\r\n      /*if (typeof mesh.geometry.boundingBox === 'undefined') {\r\n        const boundingBox = mesh.geometry.computeBoundingBox();\r\n        return this._frustrum.intersectsBox(boundingBox);\r\n      }\r\n      return this._frustrum.intersectsBox(mesh.geometry.boundingBox);*/\r\n      return true;\r\n    }\r\n\r\n    protected updateFrustrum(): void {\r\n      this.frustrum.setFromPerspectiveMatrix(this.projection);\r\n    }\r\n}","import { Transform } from \"../../../general/Transform\";\r\n\r\nexport { Object3D };\r\nexport { Object3DBase };\r\n\r\ninterface Object3D {\r\n    transform: Transform;\r\n}\r\n\r\nclass Object3DBase implements Object3D {\r\n    readonly transform: Transform;\r\n\r\n    constructor() {\r\n        this.transform = new Transform(this);\r\n    }\r\n}","export enum TexturePixelFormat {\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    DEPTH_COMPONENT = 0x1902,\r\n    DEPTH_STENCIL = 0x84F9,\r\n    RED = 0x1903,\r\n    RG = 0x8227,\r\n    RED_INTEGER = 0x8D94,\r\n    RG_INTEGER = 0x8228,\r\n    RGB_INTEGER = 0x8D98,\r\n    RGBA_INTEGER = 0x8D99\r\n}\r\n\r\nexport enum TextureInternalPixelFormat {\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    DEPTH_COMPONENT16 = 0x81A5,\r\n    DEPTH_COMPONENT24 = 0x81A6,\r\n    DEPTH_COMPONENT32F = 0x8CAC,\r\n    DEPTH24_STENCIL8 = 0x88F0,\r\n    DEPTH32F_STENCIL8 = 0x8CAD,\r\n    R8 = 0x8229,\r\n    R8_SNORM = 0x8F94,\r\n    RG8 = 0x822B,\r\n    RG8_SNORM = 0x8F95,\r\n    RGB8 = 0x8051,\r\n    RGB8_SNORM = 0x8F96,\r\n    RGB565 = 0x8D62,\r\n    RGBA8 = 0x8058,\r\n    RGBA4 = 0x8056,\r\n    RGB5_A1 = 0x8057,\r\n    RGBA8_SNORM = 0x8F97,\r\n    RGB10_A2UI = 0x906F,\r\n    SRGB = 0x8C40,\r\n    SRGB8 = 0x8C41,\r\n    SRGB8_ALPHA8 = 0x8C43,\r\n    R16F = 0x822D,\r\n    RGB16F = 0x881B,\r\n    RGBA16F = 0x881A,\r\n    R32F = 0x822E,\r\n    RG32F = 0x8230,\r\n    RGB32F = 0x8815,\r\n    RGBA32F\t= 0x8814,\r\n    R11F_G11F_B10F = 0x8C3A,\r\n    RGB9_E5 = 0x8C3D,\r\n    R8UI = 0x8232,\r\n    R16I = 0x8233,\r\n    R16UI = 0x8234,\r\n    R32I = 0x8235,\r\n    R32UI = 0x8236,\r\n    RG8I = 0x8237,\r\n    RG8UI = 0x8238,\r\n    RG16I = 0x8239,\r\n    RG16UI = 0x823A,\r\n    RG32I = 0x823B,\r\n    RG32UI = 0x823C,\r\n    RGB8I = 0x8D8F,\r\n    RGB8UI = 0x8D7D,\r\n    RGB16I = 0x8D89,\r\n    RGB16UI = 0x8D77,\r\n    RGB32I = 0x8D83,\r\n    RGB32UI = 0x8D71,\r\n    RGBA8I = 0x8D8E,\r\n    RGBA8UI = 0x8D7C,\r\n    RGBA16I = 0x8D88,\r\n    RGBA16UI = 0x8D76,\r\n    RGBA32I = 0x8D82,\r\n    RGBA32UI = 0x8D70,\r\n}\r\n\r\nexport enum TexturePixelType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406,\r\n    HALF_FLOAT = 0x140B,\r\n    UNSIGNED_SHORT_4_4_4_4 = 0x8033,\r\n    UNSIGNED_SHORT_5_5_5_1 = 0x8034,\r\n    UNSIGNED_SHORT_5_6_5 = 0x8363,\r\n    UNSIGNED_INT_2_10_10_10_REV = 0x8368,\r\n    UNSIGNED_INT_24_8 = 0x84FA,\r\n    UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B,\r\n    UNSIGNED_INT_5_9_9_9_REV = 0x8C3E,\r\n    FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD,\r\n    INT_2_10_10_10_REV = 0x8D9F\r\n}\r\n\r\nexport enum TextureParameter {\r\n    TEXTURE_MAG_FILTER = 0x2800,\r\n    TEXTURE_MIN_FILTER = 0x2801,\r\n    TEXTURE_WRAP_S = 0x2802,\r\n    TEXTURE_WRAP_T = 0x2803,\r\n    TEXTURE_BASE_LEVEL = 0x813C,\r\n    TEXTURE_MAX_LEVEL = 0x813D,\r\n    TEXTURE_MAX_LOD = 0x813B,\r\n    TEXTURE_MIN_LOD = 0x813A,\r\n    TEXTURE_WRAP_R = 0x8072,\r\n    TEXTURE_COMPARE_FUNC = 0x884D,\r\n    TEXTURE_COMPARE_MODE = 0x884C\r\n}\r\n\r\nexport enum TextureTarget {\r\n    TEXTURE_2D = 0x0DE1,\r\n    TEXTURE_CUBE_MAP = 0x8513,\r\n    TEXTURE_3D = 0x806F,\r\n    TEXTURE_2D_ARRAY = 0x8C1A,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A\r\n}\r\n\r\nexport enum TextureMagFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600\r\n}\r\n\r\nexport enum TextureMinFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600,\r\n    NEAREST_MIPMAP_NEAREST = 0x2700, \r\n    LINEAR_MIPMAP_NEAREST = 0x2701, \r\n    NEAREST_MIPMAP_LINEAR = 0x2702,\r\n    LINEAR_MIPMAP_LINEAR = 0x2703\r\n}\r\n\r\nexport enum TextureCompareMode {\r\n    COMPARE_REF_TO_TEXTURE = 0x884E,\r\n    NONE = 0\r\n}\r\n\r\nexport enum TextureWrapMode {\r\n    REPEAT = 0x2901,\r\n    CLAMP_TO_EDGE = 0x812F, \r\n    MIRRORED_REPEAT = 0x8370\r\n}\r\n\r\nexport enum TextureCompareFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207\r\n}\r\n\r\nexport type Texture2DPixels = Uint32Array |  Uint16Array | Uint8Array | TexImageSource;\r\n\r\nexport type TextureCubeMapPixels = {\r\n    xPos: TexImageSource;\r\n    xNeg: TexImageSource;\r\n    yPos: TexImageSource;\r\n    yNeg: TexImageSource;\r\n    zPos: TexImageSource;\r\n    zNeg: TexImageSource;\r\n}\r\n\r\nexport type TextureProperties = {\r\n    target: TextureTarget;\r\n    pixels: Texture2DPixels | TextureCubeMapPixels | null;\r\n    width: number;\r\n    height: number;\r\n    format: TexturePixelFormat;\r\n    internalFormat: TextureInternalPixelFormat;\r\n    type: TexturePixelType;\r\n\r\n    depth?: number;\r\n    lod?: number;\r\n    border?: number;\r\n\r\n    subimages?: {\r\n        pixels: Texture2DPixels;\r\n        xoffset: number;\r\n        yoffset: number;\r\n        zoffset?: number;\r\n        width: number;\r\n        height: number;\r\n        depth?: number;\r\n    }[];\r\n\r\n    mipmap?: boolean;\r\n    min?: TextureMinFilter;\r\n    mag?: TextureMagFilter;\r\n\r\n    wrapS?: TextureWrapMode;\r\n    wrapT?: TextureWrapMode;\r\n    wrapR?: TextureWrapMode;\r\n\r\n    baseMipmapLevel?: number;\r\n    maxMipmapLevel?: number;\r\n\r\n    minLod?: number;\r\n    maxLod?: number;\r\n\r\n    compareFunction?: TextureCompareFunction;\r\n    compareMode?: TextureCompareMode;\r\n}\r\n\r\nexport type Texture = {\r\n    name: string;\r\n    unit: number;\r\n    internalTexture: WebGLTexture;\r\n    properties?: TextureProperties;\r\n}\r\n\r\nexport class WebGLTextureUtilities {\r\n\r\n    static #textureUnits: Map<string, number> = new Map();\r\n\r\n\r\n    static getTexturesUnitsEntries(): IterableIterator<[string, number]> {\r\n        return this.#textureUnits.entries();\r\n    }\r\n\r\n    static createTexture(gl: WebGL2RenderingContext, name: string, properties: TextureProperties): Texture | null {\r\n        const internalTexture = gl.createTexture();\r\n        if (internalTexture === null) {\r\n            return null;\r\n        }\r\n\r\n        let unit = this.#textureUnits.get(name);\r\n        if (unit == undefined) {\r\n            unit = Math.max(-1, ...this.#textureUnits.values()) + 1;\r\n            this.#textureUnits.set(name, unit);\r\n        }\r\n\r\n        const {pixels, target, subimages, width, height, format, internalFormat, type} = properties;\r\n        let {lod, border, depth, mipmap} = properties;\r\n\r\n        lod = lod ?? 0;\r\n        border = border ?? 0;\r\n        depth = depth ?? 0;\r\n        mipmap = mipmap ?? true;\r\n\r\n        const activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE);\r\n        if (activeTexture !== unit) {\r\n            gl.activeTexture(gl.TEXTURE0 + unit);\r\n            gl.bindTexture(target, internalTexture);\r\n        }\r\n        \r\n        switch (target) {\r\n            case TextureTarget.TEXTURE_2D: {\r\n                gl.texImage2D(target, lod, internalFormat, width, height, border, format, type, <ArrayBufferView | null>pixels);\r\n                if (subimages) {\r\n                    subimages.forEach((subimage_i) => {\r\n                        const {xoffset, yoffset, width, height, pixels} = subimage_i;\r\n                        gl.texSubImage2D(target, lod!, xoffset, yoffset, width, height, format, type, pixels as ArrayBufferView);\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case TextureTarget.TEXTURE_CUBE_MAP: {\r\n                if (pixels === null) {\r\n                    gl.texImage2D(target, lod, internalFormat, width, height, border, format, type, null);  \r\n                }\r\n                else {\r\n                    if (\"xPos\" in pixels) {\r\n                        const {xPos, xNeg, yPos, yNeg, zPos, zNeg} = pixels;\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_X, lod, internalFormat, width, height, border, format, type, xPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_X, lod, internalFormat, width, height, border, format, type, xNeg);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Y, lod, internalFormat, width, height, border, format, type, yPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Y, lod, internalFormat, width, height, border, format, type, yNeg);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Z, lod, internalFormat, width, height, border, format, type, zPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Z, lod, internalFormat, width, height, border, format, type, zNeg);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case TextureTarget.TEXTURE_2D_ARRAY: {\r\n                gl.texImage3D(target, lod, internalFormat, width, height,  depth, border, format, type, <ArrayBufferView | null>pixels);\r\n                if (subimages) {\r\n                    subimages.forEach((subimage_i, i) => {\r\n                        const {xoffset, yoffset, zoffset, width, height, depth, pixels} = subimage_i;\r\n                        gl.texSubImage3D(target, lod!, xoffset, yoffset, zoffset!, width, height, depth!, format, type, pixels as ArrayBufferView);\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (mipmap) {\r\n            gl.generateMipmap(target);\r\n        }\r\n\r\n        const {min, mag, wrapS, wrapT, wrapR, baseMipmapLevel, maxMipmapLevel, compareFunction, compareMode, minLod, maxLod} = properties;\r\n\r\n        if (min !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MIN_FILTER, min);\r\n        if (mag !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MAG_FILTER, mag);\r\n        if (wrapS  !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_S, wrapS);\r\n        if (wrapT !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_T, wrapT);\r\n        if (wrapR !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_R, wrapR);\r\n        if (baseMipmapLevel !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_BASE_LEVEL, baseMipmapLevel);\r\n        if (maxMipmapLevel !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MAX_LEVEL, maxMipmapLevel);\r\n        if (compareFunction !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_COMPARE_FUNC, compareFunction);\r\n        if (compareMode !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_COMPARE_MODE, compareMode);\r\n        if (minLod !== undefined)\r\n            gl.texParameterf(target, TextureParameter.TEXTURE_MIN_LOD, minLod);\r\n        if (maxLod !== undefined)\r\n            gl.texParameterf(target, TextureParameter.TEXTURE_MAX_LOD, maxLod);\r\n        \r\n        return {\r\n            unit,\r\n            internalTexture,\r\n            name,\r\n            properties: {\r\n                pixels,\r\n                target,\r\n                subimages,\r\n                lod,\r\n                width,\r\n                height,\r\n                format,\r\n                internalFormat,\r\n                type,\r\n                min,\r\n                mag,\r\n                wrapS,\r\n                wrapT,\r\n                wrapR,\r\n                baseMipmapLevel,\r\n                maxMipmapLevel,\r\n                compareFunction,\r\n                compareMode,\r\n                minLod,\r\n                maxLod\r\n            }\r\n        };\r\n    }\r\n\r\n    static setUnpackAlignment(gl: WebGL2RenderingContext, alignment: number): void {\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, alignment);\r\n    }\r\n\r\n    static deleteTexture(gl: WebGL2RenderingContext, texture: Texture): void {\r\n        const {internalTexture, name} = texture;\r\n        if (gl.isTexture(internalTexture)) {\r\n            gl.deleteTexture(internalTexture);\r\n            this.#textureUnits.delete(name);\r\n        }\r\n    }\r\n}","export enum ShaderType {\r\n    FRAGMENT_SHADER = 0x8B30,\r\n    VERTEX_SHADER = 0x8B31,\r\n}\r\n\r\nexport type Program = {\r\n    internalProgram: WebGLProgram;\r\n    vertexShader: Shader;\r\n    fragmentShader: Shader;\r\n}\r\n\r\nexport type Shader = {\r\n    internalShader: WebGLShader;\r\n    type: ShaderType;\r\n    source: string;\r\n}\r\n\r\nexport type ProgramProperties = {\r\n    vertexSource: string;\r\n    vertexFlags?: string[];\r\n    fragmentSource: string;\r\n    fragmentFlags?: string[];\r\n}\r\n\r\nexport class WebGLProgramUtilities {\r\n\r\n    static createShader(gl: WebGL2RenderingContext, type: ShaderType, source: string): Shader | null {\r\n        const internalShader = gl.createShader(type);\r\n        if (internalShader === null) {\r\n            return null;\r\n        }\r\n        gl.shaderSource(internalShader, source);\r\n        gl.compileShader(internalShader);\r\n        \r\n        const success = gl.getShaderParameter(internalShader, gl.COMPILE_STATUS);\r\n        if (success) {\r\n            return {\r\n                type,\r\n                internalShader,\r\n                source\r\n            };\r\n        }\r\n\r\n        const shaderInfoLog = gl.getShaderInfoLog(internalShader);\r\n        if (shaderInfoLog !== null) {\r\n            console.warn(shaderInfoLog);\r\n        }\r\n\r\n        gl.deleteShader(internalShader);\r\n        return null;\r\n    }\r\n    \r\n    static createProgram(gl: WebGL2RenderingContext, properties: ProgramProperties): Program | null {\r\n        const {vertexSource, fragmentSource} = properties;\r\n\r\n        const vertexShader = this.createShader(gl, ShaderType.VERTEX_SHADER, vertexSource);\r\n        if (vertexShader === null) {\r\n            return null;\r\n        }\r\n\r\n        const fragmentShader = this.createShader(gl, ShaderType.FRAGMENT_SHADER, fragmentSource);\r\n        if (fragmentShader === null) {\r\n            return null;\r\n        }\r\n        \r\n        const internalProgram = gl.createProgram();\r\n        if (internalProgram === null) {\r\n            return null;\r\n        }\r\n\r\n        const program: Program = {\r\n            internalProgram,\r\n            vertexShader,\r\n            fragmentShader\r\n        };\r\n        \r\n        gl.attachShader(internalProgram, vertexShader.internalShader);\r\n        gl.attachShader(internalProgram, fragmentShader.internalShader);\r\n        gl.linkProgram(internalProgram);\r\n\r\n        const success = gl.getProgramParameter(internalProgram, gl.LINK_STATUS);\r\n        if (success) {\r\n            return program;\r\n        }\r\n\r\n        const programInfoLog = gl.getProgramInfoLog(internalProgram);\r\n        if (programInfoLog !== null) {\r\n            const vertexInfoLog = gl.getShaderInfoLog(vertexShader.internalShader);\r\n            const fragmentInfoLog = gl.getShaderInfoLog(fragmentShader.internalShader);\r\n            console.warn(programInfoLog);\r\n            console.warn(vertexInfoLog);\r\n            console.warn(fragmentInfoLog);\r\n        }\r\n        this.deleteProgram(gl, program);\r\n\r\n        return null;\r\n    }\r\n\r\n    static recompileProgram(gl: WebGL2RenderingContext, program: Program, properties: Partial<ProgramProperties>) {\r\n        const {internalProgram, vertexShader, fragmentShader} = program;\r\n        let {vertexSource, fragmentSource} = properties;\r\n        if (typeof vertexSource === \"string\") {\r\n            const {internalShader} = vertexShader;\r\n            gl.shaderSource(internalShader, vertexSource);\r\n            gl.compileShader(internalShader);\r\n            vertexShader.source = vertexSource;\r\n        }\r\n        if (typeof fragmentSource === \"string\") {\r\n            const {internalShader} = fragmentShader;\r\n            gl.shaderSource(internalShader, fragmentSource);\r\n            gl.compileShader(internalShader);\r\n            fragmentShader.source = fragmentSource;\r\n        }\r\n        gl.linkProgram(internalProgram);\r\n\r\n        const success = gl.getProgramParameter(internalProgram, gl.LINK_STATUS);\r\n        if (success) {\r\n            return program;\r\n        }\r\n\r\n        const programInfoLog = gl.getProgramInfoLog(internalProgram);\r\n        if (programInfoLog !== null) {\r\n            const vertexInfoLog = gl.getShaderInfoLog(vertexShader.internalShader);\r\n            const fragmentInfoLog = gl.getShaderInfoLog(fragmentShader.internalShader);\r\n            console.warn(programInfoLog);\r\n            console.warn(vertexInfoLog);\r\n            console.warn(fragmentInfoLog);\r\n        }\r\n        return program;\r\n    }\r\n    \r\n    static deleteProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        const {vertexShader, fragmentShader, internalProgram} = program;\r\n        gl.deleteShader(vertexShader.internalShader);\r\n        gl.deleteShader(fragmentShader.internalShader);\r\n        gl.deleteProgram(internalProgram);\r\n    }\r\n\r\n    static useProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        const {internalProgram} = program;\r\n        const currentProgram = gl.getParameter(gl.CURRENT_PROGRAM);\r\n        if (currentProgram !== internalProgram) {\r\n            gl.useProgram(internalProgram);\r\n        }\r\n    }\r\n}","import { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\nimport { Texture } from \"./WebGLTextureUtilities\";\r\n\r\nexport { UniformValue };\r\nexport { Uniform };\r\nexport { UniformSetter };\r\nexport { UniformsListSetter };\r\nexport { WebGLUniformUtilities };\r\n\r\nexport enum UniformType {\r\n    BOOL = 0x8B56,\r\n    BOOL_VEC2 = 0x8B57,\t \r\n    BOOL_VEC3 = 0x8B58,\t \r\n    BOOL_VEC4 = 0x8B59,\r\n    INT = 0x1404,\r\n    INT_VEC2 = 0x8B53,\t \r\n    INT_VEC3 = 0x8B54,\t \r\n    INT_VEC4 = 0x8B55,\t \r\n    INT_SAMPLER_2D = 0x8DCA,\r\n    INT_SAMPLER_3D = 0x8DCB,\r\n    INT_SAMPLER_CUBE = 0x8DCC,\r\n    INT_SAMPLER_2D_ARRAY = 0x8DCF,\r\n    UNSIGNED_INT_SAMPLER_2D = 0x8DD2,\r\n    UNSIGNED_INT_SAMPLER_3D = 0x8DD3,\r\n    UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4,\r\n    UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7,\r\n    UNSIGNED_INT = 0x1405,\r\n    UNSIGNED_INT_VEC2 = 0x8DC6,\r\n    UNSIGNED_INT_VEC3 = 0x8DC7,\r\n    UNSIGNED_INT_VEC4 = 0x8DC8,\r\n    FLOAT = 0x1406,\r\n    FLOAT_VEC2 = 0x8B50,\t \r\n    FLOAT_VEC3 = 0x8B51,\t \r\n    FLOAT_VEC4 = 0x8B52,\r\n    FLOAT_MAT2 = 0x8B5A,\t \r\n    FLOAT_MAT3 = 0x8B5B,\t \r\n    FLOAT_MAT4 = 0x8B5C,\t \r\n    FLOAT_MAT2x3 = 0x8B65,\r\n    FLOAT_MAT2x4 = 0x8B66,\r\n    FLOAT_MAT3x2 = 0x8B67,\r\n    FLOAT_MAT3x4 = 0x8B68,\r\n    FLOAT_MAT4x2 = 0x8B69,\r\n    FLOAT_MAT4x3 = 0x8B6A,\r\n    SAMPLER_2D = 0x8B5E,\t \r\n    SAMPLER_3D = 0x8B5F,\r\n    SAMPLER_CUBE = 0x8B60,\r\n    SAMPLER_2D_SHADOW = 0x8B62,\r\n    SAMPLER_2D_ARRAY = 0x8DC1,\r\n    SAMPLER_2D_ARRAY_SHADOW = 0x8DC4,\r\n    SAMPLER_CUBE_SHADOW = 0x8DC5\r\n}\r\n\r\ntype UniformValue = number | Float32List | Uint32List | Int32List | Texture;\r\n\r\ntype Uniform = {\r\n    value: UniformValue;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n    transpose?: boolean;\r\n}\r\n\r\ntype UniformSetter = {\r\n    type: UniformType;\r\n    set: (value: any) => void;\r\n}\r\n\r\ntype UniformsListSetter = {\r\n    setters: Record<string, UniformSetter>;\r\n    program: Program;\r\n}\r\n\r\nexport enum UniformDataType {\r\n    SCALAR = \"SCALAR\",\r\n    VEC2 = \"VEC2\",\r\n    VEC3 = \"VEC3\",\r\n    VEC4 = \"VEC4\",\r\n    MAT2 = \"MAT2\",\r\n    MAT3 = \"MAT3\",\r\n    MAT4 = \"MAT4\"\r\n}\r\n\r\nclass WebGLUniformUtilities {\r\n\r\n    static asArrayBufferView(uniformValue: UniformValue): ArrayBufferView {\r\n        if (typeof uniformValue === \"object\") {\r\n            if (\"buffer\" in uniformValue) {\r\n                return uniformValue;\r\n            }\r\n            else if (\"unit\" in uniformValue) {\r\n                return Float32Array.of(uniformValue.unit);\r\n            }\r\n            else {\r\n                return Float32Array.from(uniformValue);\r\n            }\r\n        }\r\n        else {\r\n            return Float32Array.of(uniformValue);\r\n        }\r\n    }\r\n\r\n    static getUniformSetter(gl: WebGL2RenderingContext, uniform: Uniform, location: WebGLUniformLocation , uniformType: UniformType): UniformSetter | null { \r\n        const {value, srcOffset, srcLength} = uniform;\r\n        let {transpose} = uniform;\r\n        transpose = transpose ?? false;\r\n\r\n        switch (uniformType) {\r\n            case UniformType.FLOAT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1f(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1ui(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL:\r\n            case UniformType.INT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1i(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.INT_SAMPLER_2D:\r\n            case UniformType.INT_SAMPLER_2D_ARRAY:\r\n            case UniformType.INT_SAMPLER_3D:\r\n            case UniformType.INT_SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D:\r\n            case UniformType.SAMPLER_3D:\r\n            case UniformType.SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D_SHADOW:\r\n            case UniformType.SAMPLER_2D_ARRAY:\r\n            case UniformType.SAMPLER_2D_ARRAY_SHADOW:\r\n            case UniformType.SAMPLER_CUBE_SHADOW:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_3D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_CUBE:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D_ARRAY:\r\n                if (typeof value == \"object\" && \"unit\" in value) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (tex: Texture) => {\r\n                            const {unit} = tex;\r\n                            gl.uniform1i(location, unit);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform2fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC2:\r\n            case UniformType.INT_VEC2:\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform2iv(location, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC2:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform2uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform3fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC3:\r\n            case UniformType.INT_VEC3:\t\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform3iv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC3:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform3uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform4fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC4:\r\n            case UniformType.INT_VEC4:\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform4iv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC4:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform4uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4:\t\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4fv(location, transpose!, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x4fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x4fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static getUniformsListSetter(gl: WebGL2RenderingContext, program: Program, list: Record<string, Uniform>): UniformsListSetter | null {\r\n        const {internalProgram} = program;\r\n        \r\n        const uniformsNames = Object.keys(list);\r\n        let uniformIndices = gl.getUniformIndices(internalProgram, uniformsNames);\r\n        if (uniformIndices === null) {\r\n            console.error(`No uniform indices found.`);\r\n            return null;\r\n        }\r\n\r\n        const activeUniforms = gl.getProgramParameter(internalProgram, gl.ACTIVE_UNIFORMS);\r\n        const validUniformIndices = Array.from(uniformIndices).filter((index_i, i) => {\r\n            const isValid = index_i >= 0 && index_i < activeUniforms;\r\n            if (!isValid) {\r\n                console.warn(`Uniform ${uniformsNames[i]} could not be located.`);\r\n            }\r\n            return isValid;\r\n        });\r\n        \r\n        const setters: Record<string, UniformSetter> = {};\r\n\r\n        const activeUniformsInfo: WebGLActiveInfo[] = validUniformIndices.map(index => gl.getActiveUniform(internalProgram, index)!);\r\n        activeUniformsInfo.forEach(({name, type}) => {\r\n            const uniform = list[name];\r\n            const location = gl.getUniformLocation(internalProgram, name);\r\n            if (location === null) {\r\n                console.warn(`Uniform ${name} could not be located.`);\r\n                return null;\r\n            }\r\n            const setter = this.getUniformSetter(gl, uniform, location, type);\r\n            if (setter) {\r\n                setters[name] = setter;\r\n            }\r\n        });\r\n        \r\n        return {\r\n            setters,\r\n            program\r\n        };\r\n    }\r\n\r\n    static setUniformsListValues(gl: WebGL2RenderingContext, setter: UniformsListSetter, list: Record<string, Uniform>): void {\r\n        const {program, setters} = setter;\r\n        WebGLProgramUtilities.useProgram(gl, program);\r\n        \r\n        Object.entries(list).forEach(([uniformName, uniform]) => {\r\n            if (uniformName in setters) {\r\n                const setter = setters[uniformName];\r\n                const {value} = uniform;\r\n                setter.set(value);\r\n            }\r\n            else {\r\n                console.error(`Uniform ${uniformName} does not match any of the given setters.`);\r\n            }\r\n        });\r\n    }\r\n}","import { Uniform, WebGLUniformUtilities } from \"./WebGLUniformUtilities\";\r\nimport { Buffer, BufferDataUsage } from \"./WebGLBufferUtilities\";\r\nimport { Program } from \"./WebGLProgramUtilities\";\r\n\r\nexport type UniformBlock = {\r\n    name: string;\r\n    blockIndex: number;\r\n    program: Program;\r\n    layout: Record<string, {\r\n        byteOffset: number;\r\n    }>;\r\n    blockSize: number;\r\n    bindingPoint?: number;\r\n    buffer?: UniformBuffer;\r\n}\r\n\r\nexport type UniformBlockProperties = {\r\n    buffer?: number;\r\n    uniforms?: Record<string, Uniform>;\r\n}\r\n\r\nexport type UniformBuffer = Buffer & {\r\n    bindingPoint?: number;\r\n    rangeOffset?: number;\r\n    rangeSize?: number;\r\n}\r\n\r\nexport type UniformBufferProperties = {\r\n    usage: BufferDataUsage;\r\n    data?: ArrayBuffer;\r\n}\r\n\r\nexport type UniformBlocksProperties = {\r\n    buffers: (UniformBuffer | UniformBufferProperties)[];\r\n    blocks: Record<string, {\r\n        buffer: number;\r\n        uniforms: Record<string, Uniform>;\r\n    }>;\r\n}\r\n\r\nexport class WebGLUniformBlockUtilities {\r\n\r\n    static #bindingPoints: Map<string, number> = new Map();\r\n\r\n    static getBindingPointsEntries(): IterableIterator<[string, number]> {\r\n        const bindingPoints = this.#bindingPoints;\r\n        return bindingPoints.entries();\r\n    }\r\n\r\n    static createUniformBlock(gl: WebGL2RenderingContext, program: Program, name: string): UniformBlock | null {\r\n        const {internalProgram} = program;\r\n\r\n        const blockIndex = gl.getUniformBlockIndex(internalProgram, name);\r\n        if (blockIndex === gl.INVALID_INDEX) {\r\n            console.error(`Block '${name}' does not identify a valid uniform block.`);\r\n            return null;\r\n        }\r\n\r\n        const blockSize = gl.getActiveUniformBlockParameter(internalProgram, blockIndex, gl.UNIFORM_BLOCK_DATA_SIZE);\r\n        const layout: UniformBlock[\"layout\"] = {};\r\n        const blockUniformsIndices = gl.getActiveUniformBlockParameter(internalProgram, blockIndex, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES);\r\n        const activeUniformsOffsets = gl.getActiveUniforms(internalProgram, blockUniformsIndices, gl.UNIFORM_OFFSET);\r\n        activeUniformsOffsets.forEach((uniformOffset_i: number, i: number) => {\r\n            const uniformIndex = blockUniformsIndices[i];\r\n            const uniformInfo = gl.getActiveUniform(internalProgram, uniformIndex);\r\n            if (uniformInfo !== null) {\r\n                const {name} = uniformInfo;\r\n                layout[name] = {\r\n                    byteOffset: uniformOffset_i\r\n                };\r\n            }\r\n        });\r\n\r\n        return {\r\n            name,\r\n            blockIndex,\r\n            blockSize,\r\n            layout,\r\n            program\r\n        };\r\n    }\r\n\r\n    static createUniformBuffer(gl: WebGL2RenderingContext, byteLength: number, bind?: boolean, usage?: BufferDataUsage): UniformBuffer | null {\r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n        \r\n        const target = gl.UNIFORM_BUFFER;\r\n        gl.bindBuffer(target, internalBuffer);\r\n\r\n        usage = usage ?? BufferDataUsage.STATIC_READ;\r\n        bind = bind ?? false;\r\n\r\n        const bindingPoint = bind ? this.lastBindingPoint++ : undefined;\r\n        \r\n        gl.bufferData(target, byteLength, usage);\r\n        \r\n        return {\r\n            internalBuffer,\r\n            byteLength,\r\n            bindingPoint,\r\n            target,\r\n            usage\r\n        };\r\n    }\r\n\r\n    static createRangedUniformBuffers(gl: WebGL2RenderingContext, blocks: UniformBlock[], bind?: boolean, usage?: BufferDataUsage): UniformBuffer[] | null {\r\n\r\n        const offsetAlignment = gl.getParameter(gl.UNIFORM_BUFFER_OFFSET_ALIGNMENT);\r\n        const bufferByteLength = blocks.reduce(\r\n            (size, block) => size + Math.max(Math.ceil(block.blockSize / offsetAlignment), 1) * offsetAlignment, 0\r\n        );\r\n        \r\n        const buffer = this.createUniformBuffer(gl, bufferByteLength, false, usage);\r\n        if (buffer === null) {\r\n            return null;\r\n        }\r\n        \r\n        bind = bind ?? false;\r\n\r\n        let rangeOffset = 0;\r\n        const rangedUniformBuffers = blocks.map((block) => {\r\n            const {blockSize: rangeSize} = block;\r\n            const bindingPoint = bind ? this.lastBindingPoint++ : undefined;\r\n            const rangedUniformBuffer = {\r\n                ...buffer,\r\n                bindingPoint,\r\n                rangeOffset,\r\n                rangeSize\r\n            };\r\n            rangeOffset += Math.max(Math.ceil(rangeSize / offsetAlignment), 1) * offsetAlignment;\r\n            return rangedUniformBuffer;\r\n        });\r\n\r\n        return rangedUniformBuffers;\r\n    }\r\n\r\n    static setUniformBufferValues(gl: WebGL2RenderingContext, block: UniformBlock, buffer: UniformBuffer, uniforms: Record<string, Uniform>): void {\r\n        const {internalBuffer, target} = buffer;\r\n        const currentUniformBuffer = gl.getParameter(gl.UNIFORM_BUFFER_BINDING);\r\n        if (currentUniformBuffer !== internalBuffer) {\r\n            gl.bindBuffer(target, internalBuffer);\r\n        }\r\n        \r\n        const {layout, name} = block;\r\n        const {rangeOffset} = buffer;\r\n        Object.entries(uniforms).forEach(([uniformName, uniform]) => {\r\n            const {value} = uniform;\r\n            if (!(uniformName in layout)) {\r\n                console.warn(`${uniformName} does not exist in block ${name}.`);\r\n            }\r\n            const {byteOffset} = layout[uniformName];\r\n            gl.bufferSubData(target, byteOffset + (rangeOffset ?? 0), WebGLUniformUtilities.asArrayBufferView(value));\r\n        });\r\n    }\r\n\r\n    static setUniformBufferData(gl: WebGL2RenderingContext, buffer: UniformBuffer, data: ArrayBuffer | ArrayBufferView, dstByteOffset?: number, srcOffset?: number, length?: number): void {\r\n        const {internalBuffer, target} = buffer;\r\n        let {rangeOffset} = buffer;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        const byteOffset = (rangeOffset ?? 0) + (dstByteOffset ?? 0);\r\n        if (data instanceof ArrayBuffer) {\r\n            gl.bufferSubData(target, byteOffset, data);\r\n        }\r\n        else {\r\n            srcOffset = srcOffset ?? 0;\r\n            gl.bufferSubData(target, byteOffset, data, srcOffset, length);\r\n        }\r\n    }\r\n\r\n    static lastBindingPoint = 0;\r\n\r\n    static bindUniformBuffer(gl: WebGL2RenderingContext, block: UniformBlock, buffer: UniformBuffer): void {\r\n        const {internalBuffer, target} = buffer;\r\n        let {rangeOffset, rangeSize} = buffer;\r\n        const {bindingPoint} = buffer;\r\n        const {program, blockIndex} = block;\r\n        const {internalProgram} = program;\r\n\r\n        if (bindingPoint !== undefined) {\r\n            block.buffer = buffer;\r\n            gl.uniformBlockBinding(internalProgram, blockIndex, bindingPoint);\r\n            \r\n            if (bindingPoint !== undefined) {\r\n                if (rangeOffset !== undefined && rangeSize !== undefined) {\r\n                    gl.bindBufferRange(target, bindingPoint, internalBuffer, rangeOffset, rangeSize);\r\n                }\r\n                else {\r\n                    gl.bindBufferBase(target, bindingPoint, internalBuffer);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","export enum StencilAction {\r\n    KEEP = 0x1E00,\r\n    REPLACE\t= 0x1E01,\r\n    INCR = 0x1E02,\r\n    DECR = 0x1E03,\r\n    INVERT = 0x150A,\r\n    INCR_WRAP = 0x8507,\r\n    DECR_WRAP = 0x8508\r\n}\r\n\r\nexport enum BufferMask {\r\n    DEPTH_BUFFER_BIT = 0x00000100,\r\n    STENCIL_BUFFER_BIT = 0x00000400,\r\n    COLOR_BUFFER_BIT = 0x00004000\r\n}\r\n\r\nexport enum Buffer {\r\n    COLOR = 0x1800,\r\n    DEPTH = 0x1801,\r\n    STENCIL = 0x1802,\r\n    DEPTH_STENCIL = 0x84F9\r\n}\r\n\r\nexport enum TestFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207,\r\n}\r\n\r\nexport enum BlendingMode {\r\n    ZERO = 0,\r\n    ONE = 1,\r\n    SRC_COLOR = 0x0300,\r\n    ONE_MINUS_SRC_COLOR = 0x0301,\r\n    SRC_ALPHA = 0x0302,\r\n    ONE_MINUS_SRC_ALPHA\t= 0x0303,\r\n    DST_ALPHA = 0x0304,\r\n    ONE_MINUS_DST_ALPHA = 0x0305,\r\n    DST_COLOR = 0x0306,\r\n    ONE_MINUS_DST_COLOR = 0x0307,\r\n    SRC_ALPHA_SATURATE = 0x0308,\r\n    CONSTANT_COLOR = 0x8001,\r\n    ONE_MINUS_CONSTANT_COLOR = 0x8002,\r\n    CONSTANT_ALPHA = 0x8003,\r\n    ONE_MINUS_CONSTANT_ALPHA = 0x8004\r\n}\r\n\r\nexport enum BlendingEquation {\r\n    FUNC_ADD = 0x8006,\r\n    FUNC_SUBTRACT = 0x800A,\r\n    FUNC_REVERSE_SUBTRACT = 0x800B,\r\n    MIN = 0x8007,\r\n    MAX = 0x8008,\r\n}\r\n\r\nexport enum Capabilities {\r\n    BLEND = 0x0BE2,\r\n    CULL_FACE = 0x0B44,\r\n    DEPTH_TEST = 0x0B71,\r\n    DITHER = 0x0BD0,\r\n    POLYGON_OFFSET_FILL = 0x8037,\r\n    SAMPLE_ALPHA_TO_COVERAGE = 0x809E,\r\n    SAMPLE_COVERAGE = 0x80A0,\r\n    SCISSOR_TEST = 0x0C11,\r\n    STENCIL_TEST= 0x0B90,\r\n    RASTERIZER_DISCARD = 0x8C89\r\n}\r\n\r\nexport enum Face {\r\n    FRONT = 0x0404,\r\n    BACK = 0x0405,\r\n    FRONT_AND_BACK = 0x0408\r\n}\r\n\r\nexport enum WindingOrder {\r\n    CW = 0x0900,\r\n    CCW = 0x0901\r\n}\r\n\r\nexport enum HintTarget {\r\n    GENERATE_MIPMAP_HINT = 0x8192,\r\n    FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B\r\n}\r\n\r\nexport enum HintMode {\r\n    DONT_CARE = 0x1100,\r\n    FASTEST\t= 0x1101,\r\n    NICEST = 0x1102\r\n}\r\n\r\nexport class WebGLRendererUtilities {\r\n\r\n    static hint(gl: WebGL2RenderingContext, target: HintTarget, mode: HintMode) {\r\n        gl.hint(target, mode);\r\n    }\r\n\r\n    static frontFace(gl: WebGL2RenderingContext, winding: WindingOrder): void {\r\n        gl.frontFace(winding);\r\n    }\r\n\r\n    static scissor(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.scissor(x, y, width, height);\r\n    }\r\n\r\n    static viewport(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.viewport(x, y, width, height);\r\n    }\r\n\r\n    static clearColor(gl: WebGL2RenderingContext, color: ArrayLike<number>): void {\r\n        gl.clearColor(color[0], color[1], color[2], color[3]);\r\n    }\r\n\r\n    static depthFunction(gl: WebGL2RenderingContext, func: TestFunction): void {\r\n        gl.depthFunc(func);\r\n    }\r\n\r\n    static blendEquation(gl: WebGL2RenderingContext, equ: BlendingEquation): void {\r\n        gl.blendEquation(equ);\r\n    }\r\n\r\n    static blendFunction(gl: WebGL2RenderingContext, srcFunc: BlendingMode, dstFunc: BlendingMode): void {\r\n        gl.blendFunc(srcFunc, dstFunc);\r\n    }\r\n\r\n    static blendFunctionSeparate(gl: WebGL2RenderingContext, srcFunc: BlendingMode, dstFunc: BlendingMode, srcAlpha: number, dstAlpha: number): void {\r\n        gl.blendFuncSeparate(srcFunc, dstFunc, srcAlpha, dstAlpha);\r\n    }\r\n\r\n    static stencilFunction(gl: WebGL2RenderingContext, func: TestFunction, ref: number, mask: number, face: Face): void {\r\n        gl.stencilFuncSeparate(face, func, ref, mask);\r\n    }\r\n\r\n    static stencilOperations(gl: WebGL2RenderingContext, fail: StencilAction, zFail: StencilAction, zPass: StencilAction, face: Face) {\r\n        gl.stencilOpSeparate(face, fail, zFail, zPass);\r\n    }\r\n\r\n    static stencilMask(gl: WebGL2RenderingContext, mask: number, face: Face) {\r\n        gl.stencilMaskSeparate(face, mask);\r\n    }\r\n\r\n    static colorMask(gl: WebGL2RenderingContext, red: boolean, green: boolean, blue: boolean, alpha: boolean) {\r\n        gl.colorMask(red, green, blue, alpha);\r\n    }\r\n\r\n    static depthMask(gl: WebGL2RenderingContext, flag: boolean) {\r\n        gl.depthMask(flag);\r\n    }\r\n\r\n    static enable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.enable(capability);\r\n    }\r\n\r\n    static disable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.disable(capability);\r\n    }\r\n\r\n    static clear(gl: WebGL2RenderingContext, buffer: BufferMask): void {\r\n        gl.clear(buffer);\r\n    }\r\n\r\n    static getViewport(gl: WebGL2RenderingContext): Int32Array {\r\n        return gl.getParameter(gl.VIEWPORT) as Int32Array;\r\n    }\r\n\r\n    static getMaxSamples(gl: WebGL2RenderingContext): number {\r\n        return gl.getParameter(gl.MAX_SAMPLES) as number;\r\n    }\r\n\r\n    static drawBuffers(gl: WebGL2RenderingContext, buffers: Iterable<number>): void {\r\n        gl.drawBuffers(buffers);\r\n    }\r\n\r\n    static clearBuffers(gl: WebGL2RenderingContext, buffer: Buffer, index: number, values: Float32Array | Int32Array | Uint32Array, srcOffset?: number): void {\r\n        if (values instanceof Float32Array) {\r\n            gl.clearBufferfv(buffer, index, values, srcOffset);\r\n        }\r\n        else if (values instanceof Int32Array) {\r\n            gl.clearBufferiv(buffer, index, values, srcOffset);\r\n        }\r\n        else if (values instanceof Uint32Array) {\r\n            gl.clearBufferuiv(buffer, index, values, srcOffset);\r\n        }\r\n    }\r\n}","import { VertexArray, VertexArrayValues, VertexArrayProperties, WebGLVertexArrayUtilities, DrawMode } from \"./WebGLVertexArrayUtilities\"\r\nimport { Texture, TextureProperties, WebGLTextureUtilities } from \"./WebGLTextureUtilities\"\r\nimport { UniformBlock, UniformBlockProperties, UniformBuffer, UniformBufferProperties, WebGLUniformBlockUtilities } from \"./WebGLUniformBlockUtilities\"\r\nimport { Uniform, UniformsListSetter, WebGLUniformUtilities } from \"./WebGLUniformUtilities\"\r\nimport { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\"\r\n\r\nexport type PacketProperties = {\r\n    program: Program;\r\n    vertexArray: VertexArrayProperties;\r\n    uniformBuffers?: (UniformBufferProperties | UniformBuffer)[];\r\n    uniformBlocks?: Record<string, UniformBlockProperties>;\r\n    uniforms?: Record<string, Uniform>;\r\n    drawCommand: {\r\n        mode: DrawMode;\r\n        elementsCount?: number;\r\n        instanceCount?: number;\r\n        multiDraw?: {\r\n            firstsList?: Iterable<number> | Int32Array;\r\n            firstsOffset?: number;\r\n            countsList?: Iterable<number> | Int32Array;\r\n            countsOffset?: number;\r\n            offsetsList?: Iterable<number> | Int32Array;\r\n            offsetsOffset?: number;\r\n            instanceCountsList?: Iterable<number> | Int32Array;\r\n            instanceCountsOffset?: number;\r\n            drawCount?: number;\r\n        }\r\n    }\r\n}\r\n\r\nexport type PacketValues = {\r\n    vertexArray?: VertexArrayValues;\r\n    uniforms?: Record<string, Uniform>;\r\n    uniformBlocks?: Record<string, {\r\n        uniforms: Record<string, Uniform>;\r\n    }>;\r\n}\r\n\r\nexport type Packet = {\r\n    program: Program;\r\n    vertexArray: VertexArray;\r\n    uniforms?: UniformsListSetter;\r\n    uniformBlocks?: Record<string, UniformBlock>;\r\n    drawCommand: PacketDrawCommand;\r\n}\r\n\r\nexport interface PacketDrawCommand {\r\n    mode: DrawMode;\r\n    elementsCount?: number;\r\n    instanceCount?: number;\r\n    multiDraw?: {\r\n        firstsList?: Iterable<number> | Int32Array;\r\n        firstsOffset?: number;\r\n        countsList?: Iterable<number> | Int32Array;\r\n        countsOffset?: number;\r\n        offsetsList?: Iterable<number> | Int32Array;\r\n        offsetsOffset?: number;\r\n        instanceCountsList?: Iterable<number> | Int32Array;\r\n        instanceCountsOffset?: number;\r\n        drawCount?: number;\r\n    };\r\n}\r\n\r\nexport class WebGLPacketUtilities {\r\n\r\n    static createTextures(gl: WebGL2RenderingContext, textures: Record<string, TextureProperties>): Record<string, Texture> {\r\n        const _textures: {\r\n            [key: string]: Texture\r\n        } = {};\r\n        Object.entries(textures).forEach(([name, properties]) => {\r\n            const texture = WebGLTextureUtilities.createTexture(gl, name, properties);\r\n            if (texture !== null) {\r\n                _textures[name] = texture;\r\n            }\r\n        });\r\n        return _textures;\r\n    }\r\n    \r\n    static createPacket(gl: WebGL2RenderingContext, packet: PacketProperties): Packet | null {\r\n        const {program, vertexArray: vertexArrayProperties, uniforms: uniformsProperties, uniformBlocks: uniformBlocksProperties, uniformBuffers: uniformBuffersProperties} = packet;\r\n        const {drawCommand} = packet;\r\n\r\n        let vertexArray: VertexArray | null = null;\r\n        vertexArray = WebGLVertexArrayUtilities.createVertexArray(gl, program, vertexArrayProperties);\r\n        if (vertexArray === null) {\r\n            return null;\r\n        }\r\n      \r\n        let uniforms: UniformsListSetter | null | undefined = undefined;\r\n        if (uniformsProperties !== undefined) {\r\n            uniforms = WebGLUniformUtilities.getUniformsListSetter(gl, program, uniformsProperties);\r\n            if (uniforms === null) {\r\n                return null;\r\n            }\r\n            WebGLUniformUtilities.setUniformsListValues(gl, uniforms, uniformsProperties);\r\n        }\r\n\r\n        let uniformBlocks: Record<string, UniformBlock> = {};\r\n        const uniformBlocksPropertiesEntries = uniformBlocksProperties ? Object.entries(uniformBlocksProperties) : [];\r\n        const uniformBuffersMaxIndex = (uniformBuffersProperties?.length ?? 0) - 1;\r\n        uniformBlocksPropertiesEntries.forEach(([_, uniformBlockProperty]) => {\r\n            const {buffer} = uniformBlockProperty;\r\n            if (buffer !== undefined && buffer > uniformBuffersMaxIndex) {\r\n                console.error(`Uniform buffer with index ${buffer} does not exist.`);\r\n            }\r\n        });\r\n        if (uniformBuffersProperties) {\r\n            uniformBuffersProperties.forEach(\r\n                (uniformBuffersProperty_i, i) => {\r\n                    const relatedBlockProperties = uniformBlocksPropertiesEntries.filter(\r\n                        ([_, uniformBlockProperty]) => uniformBlockProperty.buffer === i\r\n                    );\r\n                    const relatedBlocks = <UniformBlock[]>relatedBlockProperties.map(\r\n                        ([blockName, _]) => WebGLUniformBlockUtilities.createUniformBlock(gl, program, blockName)\r\n                    );\r\n                    const {length: relatedBlocksCount} = relatedBlocks;        \r\n                    if (\"internalBuffer\" in uniformBuffersProperty_i) {\r\n                        relatedBlocks.forEach((block_i) => {\r\n                            const {name} = block_i!;\r\n                            WebGLUniformBlockUtilities.bindUniformBuffer(gl, block_i!, uniformBuffersProperty_i);\r\n                            uniformBlocks[name] = block_i!;\r\n                        });\r\n                    }\r\n                    else {\r\n                        if (relatedBlocksCount > 0) {\r\n                            const {usage, data} = uniformBuffersProperty_i;\r\n                            if (relatedBlocksCount > 1) {\r\n                                const rangedBuffers = WebGLUniformBlockUtilities.createRangedUniformBuffers(gl, <UniformBlock[]>relatedBlocks, true, usage)!;\r\n                                if (data) {\r\n                                    WebGLUniformBlockUtilities.setUniformBufferData(gl, rangedBuffers[0], data);\r\n                                }\r\n                                relatedBlocks.forEach((block_i, i) => {\r\n                                    const {name} = block_i!;\r\n                                    const rangedBuffer = rangedBuffers[i];\r\n                                    WebGLUniformBlockUtilities.bindUniformBuffer(gl, block_i!, rangedBuffer);\r\n                                    const {uniforms} = relatedBlockProperties[i][1];\r\n                                    if (uniforms) {\r\n                                        WebGLUniformBlockUtilities.setUniformBufferValues(gl, block_i, rangedBuffer, uniforms);\r\n                                    }\r\n                                    uniformBlocks[name] = block_i!;\r\n                                });\r\n                            }\r\n                            else {\r\n                                const relatedBlock = relatedBlocks[0];\r\n                                const {blockSize, name} = relatedBlock;\r\n                                const buffer = WebGLUniformBlockUtilities.createUniformBuffer(gl, blockSize, true, usage);\r\n                                if (buffer === null) {\r\n                                    return null;\r\n                                }\r\n                                if (data) {\r\n                                    WebGLUniformBlockUtilities.setUniformBufferData(gl, buffer, data);\r\n                                }\r\n                                WebGLUniformBlockUtilities.bindUniformBuffer(gl, relatedBlock!, buffer!);\r\n                                const {uniforms} = relatedBlockProperties[0][1];\r\n                                if (uniforms) {\r\n                                    WebGLUniformBlockUtilities.setUniformBufferValues(gl, relatedBlock, buffer, uniforms);\r\n                                }\r\n                                uniformBlocks[name] = relatedBlock!;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        const remainingBlockProperties = uniformBlocksPropertiesEntries.filter(\r\n            ([_, uniformBlockProperty]) => uniformBlockProperty.buffer === undefined\r\n        );\r\n        remainingBlockProperties.forEach(([blockName, uniformBlockProperties]) => {\r\n            const {uniforms} = uniformBlockProperties;\r\n            const block = WebGLUniformBlockUtilities.createUniformBlock(gl, program, blockName);\r\n            if (block === null) {\r\n                return null;\r\n            }\r\n            const {blockSize} = block;\r\n            const buffer = WebGLUniformBlockUtilities.createUniformBuffer(gl, blockSize, true);\r\n            if (buffer === null) {\r\n                return null;\r\n            }\r\n            WebGLUniformBlockUtilities.bindUniformBuffer(gl, block, buffer);\r\n            if (uniforms !== undefined) {\r\n                WebGLUniformBlockUtilities.setUniformBufferValues(gl, block, buffer, uniforms);\r\n            }\r\n            uniformBlocks[blockName] = block;\r\n        });\r\n\r\n        return {\r\n            program,\r\n            vertexArray,\r\n            uniforms,\r\n            uniformBlocks,\r\n            drawCommand\r\n        };\r\n    }\r\n\r\n    static setPacketValues(gl: WebGL2RenderingContext, packet: Packet, values: PacketValues): void {\r\n        const {vertexArray: vertexArrayValues, uniforms: uniformsValues, uniformBlocks: uniformsBlocksValues} = values;\r\n        const {vertexArray, uniforms, uniformBlocks} = packet;\r\n\r\n        if (vertexArrayValues !== undefined) {\r\n            WebGLVertexArrayUtilities.setVertexArrayValues(gl, vertexArray, vertexArrayValues);\r\n        }\r\n        if (uniforms !== undefined && uniformsValues !== undefined) {\r\n            WebGLUniformUtilities.setUniformsListValues(gl, uniforms, uniformsValues);\r\n        }\r\n        if (uniformBlocks !== undefined && uniformsBlocksValues !== undefined) {\r\n            const uniformBlocksValuesEntries = uniformsBlocksValues ? Object.entries(uniformsBlocksValues) : [];\r\n            uniformBlocksValuesEntries.forEach(([blockName, uniformBlock]) => {\r\n                const {uniforms} = uniformBlock;\r\n                const block = uniformBlocks[blockName];\r\n                const {buffer} = block;\r\n                if (buffer) {\r\n                    WebGLUniformBlockUtilities.setUniformBufferValues(gl, block, buffer, uniforms);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    static #multiDrawExtension: WEBGL_multi_draw | null = null;\r\n\r\n    static enableMultidrawExtension(gl: WebGL2RenderingContext) {\r\n        this.#multiDrawExtension = gl.getExtension(\"WEBGL_multi_draw\");\r\n    }\r\n\r\n    static drawPacket(gl: WebGL2RenderingContext, packet: Packet, drawCommand: PacketDrawCommand = packet.drawCommand): void {\r\n        const {vertexArray} = packet;\r\n        const {program, internalVertexArray, elementBuffer} = vertexArray;\r\n        const {mode, elementsCount, instanceCount, multiDraw} = drawCommand;\r\n\r\n        WebGLProgramUtilities.useProgram(gl, program);\r\n        \r\n        const currentVertexArray = gl.getParameter(gl.VERTEX_ARRAY_BINDING);\r\n        if (currentVertexArray !== internalVertexArray) {\r\n            gl.bindVertexArray(internalVertexArray);\r\n        }\r\n        \r\n        if (elementBuffer) {\r\n            const {indexType} = elementBuffer;\r\n            if (instanceCount !== undefined && elementsCount !== undefined) {\r\n                gl.drawElementsInstanced(mode, elementsCount, indexType, 0, instanceCount);\r\n            }\r\n            else if (multiDraw) {\r\n                const multiDrawExtension = this.#multiDrawExtension!;\r\n                const {countsList, countsOffset, offsetsList, offsetsOffset, drawCount, instanceCountsList, instanceCountsOffset} = multiDraw;\r\n                if (instanceCountsList !== undefined && instanceCountsOffset !== undefined) {\r\n                    multiDrawExtension.multiDrawElementsInstancedWEBGL(\r\n                        mode, countsList!, countsOffset!, indexType!,\r\n                        offsetsList!, offsetsOffset!, instanceCountsList, instanceCountsOffset, drawCount!\r\n                    );\r\n                }\r\n                else {\r\n                    multiDrawExtension.multiDrawElementsWEBGL(\r\n                        mode, countsList!, countsOffset!, indexType!,\r\n                        offsetsList!, offsetsOffset!, drawCount!\r\n                    );\r\n                }\r\n            }\r\n            else if (elementsCount !== undefined) {\r\n                gl.drawElements(mode, elementsCount, indexType, 0);\r\n            }\r\n        }\r\n        else {\r\n            if (instanceCount !== undefined && elementsCount !== undefined) {\r\n                gl.drawArraysInstanced(mode, 0, elementsCount, instanceCount);\r\n            }\r\n            else if (multiDraw) {\r\n                const multiDrawExtension = this.#multiDrawExtension!;\r\n                const {countsList, countsOffset, firstsList, firstsOffset, drawCount, instanceCountsList, instanceCountsOffset} = multiDraw;\r\n                if (instanceCountsList !== undefined && instanceCountsOffset !== undefined) {\r\n                    multiDrawExtension.multiDrawArraysInstancedWEBGL(\r\n                        mode, firstsList!, firstsOffset!,\r\n                        countsList!, countsOffset!, instanceCountsList, instanceCountsOffset, drawCount!\r\n                    );\r\n                }\r\n                else {\r\n                    multiDrawExtension.multiDrawArraysWEBGL(\r\n                        mode, firstsList!, firstsOffset!, \r\n                        countsList!, countsOffset!, drawCount!\r\n                    );\r\n                }\r\n            }\r\n            else if (elementsCount !== undefined) {\r\n                gl.drawArrays(mode, 0, elementsCount);\r\n            }\r\n        }\r\n    }\r\n}","import { multiDraw } from \"./src/samples/scenes/MultiDraw\";\r\nimport { Entity } from \"./src/engine/core/general/Entity\";\r\nimport { Scene } from \"./src/engine/core/general/Scene\";\r\nimport { FaceHalfEdgesIterator, FaceVerticesIterator, Vertex, VertexFacesIterator } from \"./src/engine/core/rendering/scenes/geometries/GeometryBuilder\";\r\nimport { QuadGeometry } from \"./src/engine/core/rendering/scenes/geometries/lib/QuadGeometry\";\r\nimport { Matrix3 } from \"./src/engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"./src/engine/libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector2 } from \"./src/engine/libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"./src/engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector4 } from \"./src/engine/libs/maths/algebra/vectors/Vector4\";\r\nimport { GOLDEN_RATIO } from \"./src/engine/libs/maths/geometry/GeometryConstants\";\r\nimport { Triangle } from \"./src/engine/libs/maths/geometry/primitives/Triangle\";\r\nimport { Space } from \"./src/engine/libs/maths/geometry/space/Space\";\r\nimport { buildArrayFromIndexedArrays } from \"./src/engine/utils/Snippets\";\r\nimport { start } from \"./src/samples/scenes/SimpleScene\";\r\nimport { octree } from \"./src/samples/scenes/Octree\";\r\nimport { deferred } from \"./src/samples/scenes/Deferred\";\r\nimport { grid } from \"./src/samples/scenes/Grid\";\r\n/*\r\nfunction windingOrder(v0: Vector3, v1: Vector3, v2: Vector3) {\r\n    const triangle = new Triangle(v0, v1, v2);\r\n    const centroid = triangle.getMidpoint(new Vector3());\r\n    const normal = triangle.getNormal(new Vector3());\r\n    \r\n    const e1 = v1.clone().sub(v0);\r\n    const e2 = e1.clone().cross(normal);\r\n\r\n    e1.normalize();\r\n    e2.normalize();\r\n\r\n    const v0_centered = v0.clone().sub(centroid);\r\n    const v1_centered = v1.clone().sub(centroid);\r\n    const v2_centered = v2.clone().sub(centroid);\r\n\r\n    const v0_t1 = e1.dot(v0_centered);\r\n    const v0_t2 = e2.dot(v0_centered);\r\n\r\n    const v1_t1 = e1.dot(v1_centered);\r\n    const v1_t2 = e2.dot(v1_centered);\r\n\r\n    const v2_t1 = e1.dot(v2_centered);\r\n    const v2_t2 = e2.dot(v2_centered);\r\n\r\n    const det = (v1_t1 - v0_t1) * (v2_t2 - v0_t2) - (v1_t2 - v0_t2) * (v2_t1 - v0_t1);\r\n    console.log(det < 0 ? \"CW\" : \"CCW\");\r\n\r\n    // const v0_out = new Vector2([v0_t1, v0_t2]);\r\n    // const v1_out = new Vector2([v1_t1, v1_t2]);\r\n    // const v2_out = new Vector2([v2_t1, v2_t2]);\r\n    // const v0_angle = Math.atan2(v0_out.y, v0_out.x);\r\n    // const v1_angle = Math.atan2(v1_out.y, v1_out.x);\r\n    // const v2_angle = Math.atan2(v2_out.y, v2_out.x);\r\n    \r\n    // const angles = [v0_angle, v1_angle, v2_angle];\r\n}*/\r\n\r\nexport async function main() {\r\n    //instanced();\r\n    //wireframe();\r\n\r\n    /*const myWorker = new Worker(\"./worker.js\");\r\n    const sab = new SharedArrayBuffer(1024);\r\n    const array = new Uint32Array(sab);\r\n    myWorker.addEventListener(\"message\", (event) => {\r\n        console.log(`Received back: ${array[10]}`);\r\n    });\r\n\r\n    myWorker.postMessage(sab);*/\r\n\r\n    grid();\r\n    //deferred();\r\n    //octree();\r\n    //start();\r\n    //multiDraw();\r\n\r\n    //startMaps();\r\n\r\n    // const button = document.createElement(\"button\");\r\n    // button.textContent = \"Get bin\";\r\n    // document.body.insertAdjacentElement(\"beforebegin\", button);\r\n    // button.onclick = () => {\r\n    //     const anchor = document.createElement(\"a\");\r\n    //     const myData = new Float32Array([32.20, 1]);\r\n    //     const myBlob = new Blob([myData]);\r\n    //     anchor.download = \"dat.bin\";\r\n    //     anchor.href = URL.createObjectURL(myBlob);\r\n    //     anchor.click();\r\n    // };\r\n    \r\n    // const input = document.createElement(\"input\");\r\n    // input.type = \"file\";\r\n    // input.oninput = () => {\r\n    //     if (input.files) {\r\n    //         Array.from(input.files).forEach((file) => {\r\n    //             file.arrayBuffer().then((arr) => {\r\n    //                 console.log(Array.from(new Float32Array(arr)).map(val => val.toFixed(3)));\r\n    //             });\r\n    //         });\r\n    //     }\r\n    // };\r\n    // document.body.insertAdjacentElement(\"beforebegin\", input);\r\n}","import { FreeCameraControl } from \"../../engine/core/controls/FreeCameraControl\";\r\nimport { Input } from \"../../engine/core/input/Input\";\r\nimport { CameraHelper } from \"../../engine/core/rendering/helpers/CameraHelper\";\r\nimport { GridHelper } from \"../../engine/core/rendering/helpers/GridHelper\";\r\nimport { OrthographicCamera } from \"../../engine/core/rendering/scenes/cameras/OrthographicCamera\";\r\nimport { PerspectiveCamera } from \"../../engine/core/rendering/scenes/cameras/PerspectiveCamera\";\r\nimport { BufferDataUsage } from \"../../engine/core/rendering/webgl/WebGLBufferUtilities\";\r\nimport { WebGLPacketUtilities } from \"../../engine/core/rendering/webgl/WebGLPacketUtilities\";\r\nimport { WebGLProgramUtilities } from \"../../engine/core/rendering/webgl/WebGLProgramUtilities\";\r\nimport { BufferMask, Capabilities, WebGLRendererUtilities } from \"../../engine/core/rendering/webgl/WebGLRendererUtilities\";\r\nimport { DrawMode } from \"../../engine/core/rendering/webgl/WebGLVertexArrayUtilities\";\r\nimport { Color } from \"../../engine/libs/graphics/colors/Color\";\r\nimport { Matrix4 } from \"../../engine/libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../engine/libs/maths/geometry/space/Space\";\r\n\r\nexport async function grid() {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.style.display = \"block\";\r\n    canvas.tabIndex = 0;\r\n    canvas.oncontextmenu = () => {\r\n        return false;\r\n    };\r\n    canvas.width = 1000;\r\n    canvas.height = 800;\r\n    const gl = canvas.getContext(\"webgl2\");\r\n    if (gl == null) {\r\n        return;\r\n    }\r\n\r\n    WebGLPacketUtilities.enableMultidrawExtension(gl);\r\n\r\n    const playpause = document.createElement(\"button\");\r\n    playpause.textContent = \"Pause\";\r\n    let paused = false;\r\n    if (playpause !== null) {\r\n        playpause.onclick = () => {\r\n        paused = !paused;\r\n        playpause.textContent = paused ? \"Play\" : \"Pause\";\r\n        if (!paused) {\r\n            requestAnimationFrame(render);\r\n        }\r\n      };\r\n    }\r\n\r\n    document.body.append(playpause, canvas);\r\n\r\n    const linesVert = await fetch(\"assets/engine/shaders/common/multi/lines.vert\").then(resp => resp.text());\r\n    const linesFrag = await fetch(\"assets/engine/shaders/common/multi/lines.frag\").then(resp => resp.text());\r\n    const linesProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: linesVert, fragmentSource: linesFrag});\r\n    if (linesProgram === null) return;\r\n\r\n    const fov = (1 / 3) * Math.PI;\r\n    const aspect = canvas.width / canvas.height;\r\n    const zNear = 0.1;\r\n    const zFar = 1000;\r\n\r\n    const camera = new PerspectiveCamera(fov, aspect, zNear, zFar);\r\n    camera.transform.setTranslation(new Vector3([0, 10, 0]));\r\n    camera.transform.lookAt(new Vector3(0, -1, 0), Space.up);\r\n    const cameraControl = new FreeCameraControl(camera)\r\n\r\n    const grid = new CameraHelper(new PerspectiveCamera(fov, aspect, zNear, zFar / 4));//new GridHelper();\r\n    const gridTransform = new Matrix4().setIdentity();\r\n    const gridLines = grid.geometry.getAttribute(\"a_position\")!;\r\n    const gridColors = grid.geometry.getAttribute(\"a_color\")!;\r\n    \r\n\r\n    const gridPacket = WebGLPacketUtilities.createPacket(gl, {\r\n        program: linesProgram,\r\n        vertexArray: {\r\n            vertexAttributes: {\r\n                a_position: gridLines,\r\n                a_color: gridColors\r\n            }\r\n        },\r\n        uniformBuffers: [\r\n            {\r\n                usage: BufferDataUsage.STATIC_READ\r\n            }\r\n        ],\r\n        uniformBlocks: {\r\n            basicModelBlock: {\r\n                buffer: 0,\r\n                uniforms: {\r\n                    \"instances[0].u_model\": { value: gridTransform.array },\r\n                    \"instances[0].u_color\": { value: [1, 0, 0] },\r\n                }\r\n            },\r\n            viewBlock: {\r\n                uniforms: {\r\n                    u_view: { value: camera.view.array },\r\n                    u_projection: { value: camera.projection.array }\r\n                }\r\n            }\r\n        },\r\n        drawCommand: {\r\n            mode: DrawMode.LINES,\r\n            elementsCount: gridLines.array.length\r\n        }\r\n    });\r\n    if (gridPacket === null) return;\r\n    console.log(gridPacket);\r\n    \r\n    WebGLRendererUtilities.viewport(gl, 0, 0, canvas.width, canvas.height);\r\n    WebGLRendererUtilities.enable(gl, Capabilities.CULL_FACE);\r\n    WebGLRendererUtilities.enable(gl, Capabilities.DEPTH_TEST);\r\n    WebGLRendererUtilities.clearColor(gl, Color.BLACK);\r\n\r\n    Input.initialize(canvas);\r\n\r\n    let deltaTime, lastFrameTime = 0;\r\n    const render = (frameTime: number) => {\r\n        if (paused) {\r\n            return;\r\n        }\r\n        frameTime *= 0.001;\r\n        deltaTime = frameTime - lastFrameTime;\r\n        lastFrameTime = frameTime;\r\n\r\n        WebGLRendererUtilities.clear(gl, BufferMask.COLOR_BUFFER_BIT | BufferMask.DEPTH_BUFFER_BIT);\r\n\r\n        cameraControl.update(deltaTime);\r\n\r\n        WebGLPacketUtilities.setPacketValues(gl, gridPacket, {\r\n            uniformBlocks: {\r\n                viewBlock: {\r\n                    uniforms: {\r\n                        u_view: { value: camera.view.array },\r\n                        u_projection: { value: camera.projection.array }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        WebGLPacketUtilities.drawPacket(gl, gridPacket);\r\n        \r\n        Input.clear();\r\n\r\n        requestAnimationFrame(render);\r\n    }\r\n\r\n    requestAnimationFrame(render);\r\n}","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../libs/maths/geometry/space/Space\";\r\nimport { Input, MouseButton, Key } from \"../input/Input\";\r\nimport { Camera } from \"../rendering/scenes/cameras/Camera\";\r\n\r\nexport { FreeCameraControl };\r\n\r\ninterface FreeCameraControlConstructor {\r\n    readonly prototype: FreeCameraControl;\r\n    new(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}): FreeCameraControl;\r\n}\r\n\r\ninterface FreeCameraControl {\r\n    update(deltaTime: number): void;\r\n}\r\n\r\nclass FreeCameraControlBase {\r\n    camera: Camera;\r\n    rotationSpeed: number;\r\n    translationSpeed: number;\r\n\r\n    #lastPointerPosition: Vector2;\r\n\r\n    constructor(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}) {\r\n        this.camera = camera;\r\n        this.rotationSpeed = params?.rotationSpeed ?? 50;\r\n        this.translationSpeed = params?.translationSpeed ?? 8;\r\n        this.#lastPointerPosition = new Vector2();\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        const {camera, rotationSpeed, translationSpeed} = this;\r\n        const {transform: cameraTransform} = camera;\r\n        const lastPointerPosition = this.#lastPointerPosition;\r\n        const cameraPosition = cameraTransform.getTranslation(new Vector3());\r\n        const cameraForward = cameraTransform.getBackward(new Vector3());\r\n        const {array: cameraForwardArray} = cameraForward;\r\n        const {origin, up, down} = Space;\r\n        let cameraUpSign = cameraTransform.getUp(new Vector3()).dot(up);\r\n      \r\n        if (Input.getKey(Key.Z) || Input.getKey(Key.ARROW_UP)) {\r\n            const forward = cameraTransform.getBackward(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(forward);\r\n        }\r\n        if (Input.getKey(Key.Q) || Input.getKey(Key.ARROW_LEFT)) {\r\n            const left = cameraTransform.getLeft(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(left);\r\n        }\r\n        if (Input.getKey(Key.S) || Input.getKey(Key.ARROW_DOWN)) {\r\n            const backward = cameraTransform.getForward(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(backward);\r\n        }\r\n        if (Input.getKey(Key.D) || Input.getKey(Key.ARROW_RIGHT)) {\r\n            const right = cameraTransform.getRight(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(right);\r\n        }\r\n\r\n        if (Input.getMouseButtonDown(MouseButton.RIGHT)) {\r\n            lastPointerPosition.copy(Input.getPointerScreenPosition());\r\n        }\r\n        \r\n        if (Input.getMouseButton(MouseButton.RIGHT)) {\r\n            const newPointerPosition = Input.getPointerScreenPosition();\r\n            if (!newPointerPosition.equals(lastPointerPosition)) {\r\n                const dx = (lastPointerPosition.x - newPointerPosition.x) * rotationSpeed * deltaTime;\r\n                const dy = (lastPointerPosition.y - newPointerPosition.y) * rotationSpeed * deltaTime;\r\n                cameraPosition.copy(cameraTransform.getTranslation(new Vector3()));\r\n                if (dx !== 0 || dy !== 0) {\r\n                    cameraUpSign = Math.sign(cameraTransform.getUp(new Vector3()).dot(up));\r\n                    cameraForward.toSpherical(origin);\r\n                    const theta = cameraForwardArray[1];\r\n                    const phi = cameraForwardArray[2];\r\n                    const newTheta = theta + cameraUpSign * -dy;\r\n                    if (newTheta <= 0 || newTheta >= Math.PI) {\r\n                        cameraForwardArray[2] = (phi - dx + Math.PI) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = newTheta < 0 ? -newTheta : Math.PI - (newTheta - Math.PI);\r\n                        cameraUpSign *= -1;\r\n                    }\r\n                    else {\r\n                        cameraForwardArray[2] = (phi - dx) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = theta + cameraUpSign * -dy;\r\n                    }\r\n                    cameraForward.toCartesian(origin);\r\n                    cameraTransform.lookAt(cameraPosition.add(cameraForward), (cameraUpSign > 0) ? up : down);\r\n                }\r\n                lastPointerPosition.copy(newPointerPosition);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar FreeCameraControl: FreeCameraControlConstructor = FreeCameraControlBase;","import { Color } from \"../../../libs/graphics/colors/Color\";\r\nimport { Matrix3 } from \"../../../libs/maths/algebra/matrices/Matrix3\";\r\nimport { Vector3 } from \"../../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector4 } from \"../../../libs/maths/algebra/vectors/Vector4\";\r\nimport { Mesh } from \"../hl/Mesh\";\r\nimport { WireframeMaterial } from \"../hl/WireframeMaterial\";\r\nimport { Camera } from \"../scenes/cameras/Camera\";\r\nimport { GeometryBuffer } from \"../scenes/geometries/GeometryBuffer\";\r\nimport { AttributeDataType } from \"../webgl/WebGLVertexArrayUtilities\";\r\n\r\nexport { CameraHelper };\r\n\r\ninterface CameraHelperConstructor {\r\n    prototype: CameraHelper;\r\n    new(camera: Camera): CameraHelper;\r\n}\r\n\r\ninterface CameraHelper extends Mesh {\r\n    readonly camera: Camera;\r\n}\r\n\r\nclass CameraHelperBase extends Mesh implements CameraHelper {\r\n    readonly camera: Camera;\r\n\r\n    constructor(camera: Camera) {\r\n        const {viewProjection} = camera;\r\n        const viewProjectionInvert = viewProjection.invert();\r\n        const clipPoints = [\r\n            new Vector4(-1, -1, 0, 1),\r\n            new Vector4(-1, 1, 0, 1),\r\n            new Vector4(1, 1, 0, 1),\r\n            new Vector4(1, -1, 0, 1),\r\n            new Vector4(-1, -1, 1, 1),\r\n            new Vector4(-1, 1, 1, 1),\r\n            new Vector4(1, 1, 1, 1),\r\n            new Vector4(1, -1, 1, 1),\r\n        ];\r\n        clipPoints.forEach((point) => {\r\n            viewProjectionInvert.transformPoint4(point);\r\n            console.log(point.w);\r\n            point.multScalar(1 / point.w);\r\n        });\r\n        const [\r\n            leftBottomNear, leftTopNear, rightTopNear, rightBottomNear,\r\n            leftBottomFar, leftTopFar, rightTopFar, rightBottomFar\r\n        ] = clipPoints.map((vector) => {\r\n            const [x, y, z] = vector.array;\r\n            return new Vector3(x, y, z);\r\n        });\r\n        /*const {frustrum} = camera;\r\n        const {nearPlane, farPlane, bottomPlane, topPlane, leftPlane, rightPlane} = frustrum;\r\n        console.log(nearPlane, farPlane, bottomPlane, topPlane, leftPlane, rightPlane);\r\n        const {normal: nearPlaneNormal, constant: nearPlaneConstant} = nearPlane;\r\n        const {normal: farPlaneNormal, constant: farPlaneConstant} = farPlane;\r\n        const {normal: bottomPlaneNormal, constant: bottomPlaneConstant} = bottomPlane;\r\n        const {normal: topPlaneNormal, constant: topPlaneConstant} = topPlane;\r\n        const {normal: leftPlaneNormal, constant: leftPlaneConstant} = leftPlane;\r\n        const {normal: rightPlaneNormal, constant: rightPlaneConstant} = rightPlane;\r\n        const leftBottomNear = new Matrix3(\r\n            [...leftPlaneNormal, ...bottomPlaneNormal, ...nearPlaneNormal]\r\n        ).solve(new Vector3(leftPlaneConstant, bottomPlaneConstant, nearPlaneConstant));\r\n        const leftTopNear = new Matrix3(\r\n            [...leftPlaneNormal, ...topPlaneNormal, ...nearPlaneNormal]\r\n        ).solve(new Vector3(leftPlaneConstant, topPlaneConstant, nearPlaneConstant));\r\n        const rightBottomNear = new Matrix3(\r\n            [...rightPlaneNormal, ...bottomPlaneNormal, ...nearPlaneNormal]\r\n        ).solve(new Vector3(rightPlaneConstant, bottomPlaneConstant, nearPlaneConstant));\r\n        const rightTopNear = new Matrix3(\r\n            [...rightPlaneNormal, ...topPlaneNormal, ...nearPlaneNormal]\r\n        ).solve(new Vector3(rightPlaneConstant, topPlaneConstant, nearPlaneConstant));\r\n        const leftBottomFar = new Matrix3(\r\n            [...leftPlaneNormal, ...bottomPlaneNormal, ...farPlaneNormal]\r\n        ).solve(new Vector3(leftPlaneConstant, bottomPlaneConstant, farPlaneConstant));\r\n        const leftTopFar = new Matrix3(\r\n            [...leftPlaneNormal, ...topPlaneNormal, ...farPlaneNormal]\r\n        ).solve(new Vector3(leftPlaneConstant, topPlaneConstant, farPlaneConstant));\r\n        const rightBottomFar = new Matrix3(\r\n            [...rightPlaneNormal, ...bottomPlaneNormal, ...farPlaneNormal]\r\n        ).solve(new Vector3(rightPlaneConstant, bottomPlaneConstant, farPlaneConstant));\r\n        const rightTopFar = new Matrix3(\r\n            [...rightPlaneNormal, ...topPlaneNormal, ...farPlaneNormal]\r\n        ).solve(new Vector3(rightPlaneConstant, topPlaneConstant, farPlaneConstant));\r\n        console.log(leftBottomNear, leftTopNear, rightBottomNear, rightTopNear, leftBottomFar, leftTopFar, rightBottomFar, rightTopFar);*/\r\n\r\n        const vertices = [\r\n            ...leftBottomNear, ...leftTopNear,\r\n            ...leftTopNear, ...rightTopNear,\r\n            ...rightTopNear, ...rightBottomNear,\r\n            ...rightBottomNear, ...leftBottomNear,\r\n            \r\n            ...leftBottomNear, ...leftBottomFar,\r\n            ...leftTopNear, ...leftTopFar,\r\n            ...rightBottomNear, ...rightBottomFar,\r\n            ...rightTopNear, ...rightTopFar,\r\n\r\n            ...leftBottomFar, ...leftTopFar,\r\n            ...leftTopFar, ...rightTopFar,\r\n            ...rightTopFar, ...rightBottomFar,\r\n            ...rightBottomFar, ...leftBottomFar,\r\n        ];\r\n\r\n        const nearColor = Color.RED;\r\n        const farColor = Color.GREEN;\r\n        const sideColor = Color.BLUE;\r\n\r\n        const colors = [\r\n            ...nearColor, ...nearColor,\r\n            ...nearColor, ...nearColor,\r\n            ...nearColor, ...nearColor,\r\n            ...nearColor, ...nearColor,\r\n\r\n            ...sideColor, ...sideColor,\r\n            ...sideColor, ...sideColor,\r\n            ...sideColor, ...sideColor,\r\n            ...sideColor, ...sideColor,\r\n\r\n            ...farColor, ...farColor,\r\n            ...farColor, ...farColor,\r\n            ...farColor, ...farColor,\r\n            ...farColor, ...farColor,\r\n        ];\r\n        \r\n\t\tconst geometry = new GeometryBuffer({\r\n            \"a_position\": {\r\n                array: new Float32Array(vertices),\r\n                type: AttributeDataType.VEC3\r\n            },\r\n            \"a_color\": {\r\n                array: new Float32Array(colors),\r\n                type: AttributeDataType.VEC3\r\n            }\r\n        });\r\n\r\n\t\tconst material = new WireframeMaterial();\r\n        super({geometry, material});\r\n\r\n        this.camera = camera;\r\n    }\r\n}\r\n\r\nvar CameraHelper: CameraHelperConstructor = CameraHelperBase;"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Injector","constructor","args","this","_defaultCtor","defaultCtor","_onDefaultOverride","onDefaultOverride","_constructors","Map","overrideDefaultCtor","forceQualifier","qualifier","_forcedQualifier","unforceQualifier","getConstructor","qualifierValue","Error","inject","Array","from","register","has","set","MathError","name","Vector2Base","array","Float32Array","length","values","x","y","setValues","equals","vec","v","copy","clone","setUnit","setZeros","add","addScalar","k","sub","lerp","t","clamp","min","max","l","g","Math","multScalar","cross","a","b","dot","sqrt","lengthSquared","dist","dx","dy","distSquared","normalize","lenSq","len","Number","EPSILON","negate","mult","arg0","Vector2","m","addScaled","writeIntoArray","out","offset","readFromArray","arr","copyAndSub","vecA","vecB","ctor","Vector3Base","toString","join","static","vectorA","vectorB","temp","Vector3","acos","z","vector","to","scale","t0","t1","t2","distance","dz","hypot","distanceSquared","toSpherical","center","thisArray","centerArray","roh","theta","phi","atan2","toCartesian","sin","cos","mat","copyAndCross","iterator","i","next","done","undefined","Key","Space","origin","right","left","up","down","forward","backward","KEYS_COUNT","keys","KeyModifier","MouseButton","MOUSE_BUTTONS_COUNT","MOUSE_BUTTONS_INDICES","freeze","reduce","map","button","index","assign","KEYS_INDICES","Input","keyFlags","fill","mouseFlags","pointerPosition","wheelDelta","canvas","canvasRectangle","initialize","getBoundingClientRect","addEventListener","getCanvasRect","rect","clear","handleEvent","event","eventIndex","type","canvasRect","clientX","clientY","top","deltaY","getKey","getKeyUp","getKeyDown","getMouseButton","getPointerPosition","getPointerScreenPosition","positionAray","width","height","getWheelDelta","getMouseButtonDown","getMouseButtonUp","ColorBase","r","colors","c","color","getValues","BLACK","RED","GREEN","BLUE","WHITE","Color","Vector4Base","w","dw","Vector4","BufferDataUsage","BufferTarget","DrawMode","DataComponentType","AttributeDataType","ElementArrayDataType","WireframeMaterial","properties","DEFAULT_COLOR","WebGLVertexArrayUtilities","VEC2","VEC3","VEC4","FLOAT","BYTE","UNSIGNED_BYTE","Uint8Array","SHORT","Int16Array","UNSIGNED_SHORT","Uint16Array","INT","Int32Array","UNSIGNED_INT","Uint32Array","Int8Array","gl","indices","internalBuffer","createBuffer","usage","STATIC_READ","target","ELEMENT_ARRAY_BUFFER","byteLength","indexType","getElementArrayBufferType","bindBuffer","bufferData","program","attributes","interleaved","internalProgram","DEFAULT_USAGE","attributesEntries","entries","_","attribute","ARRAY_BUFFER","dataBuffer","ArrayBuffer","byteStride","vertexAttributes","forEach","componentType","stride","constant","BYTES_PER_ELEMENT","getComponentTypeArrayConstructor","getDataTypeNumComponents","bufferSlices","trunc","constantValue","byteOffset","attributeName","divisor","getArrayComponentType","location","getAttribLocation","console","warn","numComponents","vertexAttribPointer","vertexAttribDivisor","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","bytesPerElement","bufferArray","arrayStrideOffset","arraySliceIndex","slice","enableVertexAttribArray","vertexArray","elementsCount","attributeRecord","verticesBuffers","verticesBuffer","find","getParameter","ARRAY_BUFFER_BINDING","srcOffset","srcLength","dstOffset","slices","sliceOffset","bufferSubData","buffer","data","dstByteOffset","vertexBuffers","elementIndices","elementBuffer","elementBufferOrBufferProperties","internalVertexArray","createVertexArray","bindVertexArray","buffer_i","fromEntries","filter","attribute_i","setter","createVertexArrayBuffer","push","createVertexElementArrayBuffer","isVertexArray","deleteVertexArray","PoolAutoExtendPolicy","GeometryBuffer","attributesBuffers","bufferByteLength","bufferArrayConstructor","toBlob","bufferLength","indicesData","indicesLength","headerData","TextEncoder","encode","JSON","stringify","headerLength","blobDataView","blobDataViewBuffer","blobDataHeaderView","blobDataHeaderLength","Blob","blob","arrayBuffer","blobDataHeaderByteLength","arrayConstructor","pow","header","parse","TextDecoder","decode","geometryBuffer","getAttribute","attributeArrayConstructor","attributeArray","bufferStride","bufferArraySliceIndex","StackPool","policy","autoExtendPolicy","AUTO_EXTEND_ONE","autoExtendTicks","autoExtend","extend","AUTO_EXTEND_POW2","acquire","count","release","options","super","objects","size","PI","_bytes","_floatView","_intView","Matrix3Base","checkArray","row1","row","row2","row3","col1","col","col2","col3","m11","val","m12","m13","m21","m22","m23","m31","m32","m33","other","setIdentity","det","trace","transpose","invert","t11","t12","t13","t21","t22","t23","t31","t32","t33","d","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","angle","setRotationX","cosAngle","sinAngle","setRotationY","setRotationZ","solve","bx","by","bz","rx","ry","rz","solve2","Matrix3","QuaternionBase","_array","_checkArray","pitch","sinPitch","abs","sign","asin","yaw","sinYawCosPitch","cosYawCosPitch","roll","sinRollCosPitch","cosRollCosPitch","axis","setAxisAngle","setEuler","quat","q","quatArray","getAxis","outArray","den","halfx","qSqrt","getMatrix3","matrix","s","xs","ys","zs","wx","wy","wz","xx","xy","xz","yy","yz","zz","getMatrix4","rotate","vectorArray","vx","vy","vz","qx","qy","qz","qw","tx","ty","tz","tw","toVector","cosYaw","sinYaw","cosPitch","cosRoll","sinRoll","axisLength","halfSin","axisArray","setMatrix","matrixArray","lookAt","source","dest","Quaternion","setVectors","crossArray","fromLength","toLength","angleTo","rotation","rotateTowards","slerp","conjugate","ax","ay","az","aw","bw","scalar","fromArray","toArray","cosHalfTheta","halfTheta","sinHalfTheta","ratioA","ratioB","copyIntoArray","Matrix4Base","m41","m42","m43","m14","m24","m34","m44","getRotation","setTRS","translation","scaling","rotationArray","translationArray","scalingArray","x2","y2","z2","sx","sy","sz","setRotation","quaternion","quaternionArray","matArray","det2_01_01","det2_01_02","det2_01_03","det2_01_12","det2_01_13","det2_01_23","det3_201_012","det3_201_013","det3_201_023","A","a41","a42","a43","a14","a24","a34","a44","o00","o01","o02","o03","o10","o11","o12","o13","o20","o21","o22","o23","o30","o31","o32","o33","t00","t01","t02","t03","t04","t05","t06","t07","t08","t09","t10","invDet","B","b41","b42","b43","b14","b24","b34","b44","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","bX","bY","bZ","bW","solve3","setTranslation","vecArray","translate","t3","t4","rotateX","t5","t6","t7","t8","rotateY","sinAngles","rotateZ","C","t9","setScaling","eye","eyeArray","upArray","targetArray","e0","e1","e2","u0","u1","u2","x0","x1","y0","y1","z0","z1","transformPoint","point","pointArray","transformPoint4","transformDirection","direction","directionArray","transformNormal","normal","normalArray","thisInvArray","fov","aspect","zNear","zFar","setPerspective","tan","rangeInv","bottom","near","far","setOrthographic","setFrustrum","invWidth","invHeight","invDepth","Matrix4","UUIDGenerator","_count","newUUID","Vector3Pool","_buffer","_bufferViews","subarray","_extensions","PlaneBase","_normal","_constant","setFromNormalAndConstant","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","plane","point1","point2","point3","distanceToPoint","normalized","inverseNormalLength","Plane","FrustrumBase","nearPlane","farPlane","topPlane","bottomPlane","leftPlane","rightPlane","frustrum","setFromPerspectiveMatrix","intersectsSphere","sphere","radius","intersectsBox","box","intersects","boxMax","boxMin","containsPoint","Frustrum","tempMatrix","PerspectiveCamera","transform","owner","isStatic","uuid","localArray","localMatrix","hasChanged","getMatrix","getLocalMatrix","thisLocalArray","setLocalMatrix","getRight","getLeft","getUp","getDown","getForward","getBackward","getTranslation","getScaling","transformVector","thisPosition","projection","getFront","view","viewProjection","isViewing","mesh","updateFrustrum","perspective","TexturePixelFormat","TextureInternalPixelFormat","TexturePixelType","TextureParameter","TextureTarget","TextureMagFilter","TextureMinFilter","TextureCompareMode","TextureWrapMode","TextureCompareFunction","ShaderType","UniformType","UniformDataType","WebGLTextureUtilities","internalTexture","createTexture","unit","pixels","subimages","format","internalFormat","lod","border","depth","mipmap","ACTIVE_TEXTURE","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texImage2D","subimage_i","xoffset","yoffset","texSubImage2D","TEXTURE_CUBE_MAP","xPos","xNeg","yPos","yNeg","zPos","zNeg","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_2D_ARRAY","texImage3D","zoffset","texSubImage3D","generateMipmap","mag","wrapS","wrapT","wrapR","baseMipmapLevel","maxMipmapLevel","compareFunction","compareMode","minLod","maxLod","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","texParameterf","TEXTURE_MIN_LOD","TEXTURE_MAX_LOD","alignment","pixelStorei","UNPACK_ALIGNMENT","texture","isTexture","deleteTexture","delete","WebGLProgramUtilities","internalShader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","shaderInfoLog","getShaderInfoLog","deleteShader","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","programInfoLog","getProgramInfoLog","vertexInfoLog","fragmentInfoLog","deleteProgram","CURRENT_PROGRAM","useProgram","WebGLUniformUtilities","uniformValue","of","uniform","uniformType","num","uniform1f","uniform1ui","BOOL","uniform1i","INT_SAMPLER_2D","INT_SAMPLER_2D_ARRAY","INT_SAMPLER_3D","INT_SAMPLER_CUBE","SAMPLER_2D","SAMPLER_3D","SAMPLER_CUBE","SAMPLER_2D_SHADOW","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","tex","FLOAT_VEC2","isArray","list","uniform2fv","BOOL_VEC2","INT_VEC2","uniform2iv","UNSIGNED_INT_VEC2","uniform2uiv","FLOAT_VEC3","uniform3fv","BOOL_VEC3","INT_VEC3","uniform3iv","UNSIGNED_INT_VEC3","uniform3uiv","FLOAT_VEC4","uniform4fv","BOOL_VEC4","INT_VEC4","uniform4iv","UNSIGNED_INT_VEC4","uniform4uiv","FLOAT_MAT2","uniformMatrix2fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","FLOAT_MAT2x3","uniformMatrix2x3fv","FLOAT_MAT2x4","uniformMatrix2x4fv","FLOAT_MAT3x2","uniformMatrix3x2fv","FLOAT_MAT3x4","uniformMatrix3x4fv","FLOAT_MAT4x2","uniformMatrix4x2fv","FLOAT_MAT4x3","uniformMatrix4x3fv","uniformsNames","uniformIndices","getUniformIndices","error","activeUniforms","ACTIVE_UNIFORMS","validUniformIndices","index_i","isValid","setters","getActiveUniform","getUniformLocation","getUniformSetter","uniformName","WebGLUniformBlockUtilities","blockIndex","getUniformBlockIndex","INVALID_INDEX","blockSize","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","layout","blockUniformsIndices","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","getActiveUniforms","UNIFORM_OFFSET","uniformOffset_i","uniformIndex","uniformInfo","bind","UNIFORM_BUFFER","bindingPoint","lastBindingPoint","blocks","offsetAlignment","UNIFORM_BUFFER_OFFSET_ALIGNMENT","block","ceil","createUniformBuffer","rangeOffset","rangeSize","rangedUniformBuffer","uniforms","UNIFORM_BUFFER_BINDING","asArrayBufferView","uniformBlockBinding","bindBufferRange","bindBufferBase","StencilAction","BufferMask","Buffer","TestFunction","BlendingMode","BlendingEquation","Capabilities","Face","WindingOrder","HintTarget","HintMode","WebGLPacketUtilities","textures","_textures","packet","vertexArrayProperties","uniformsProperties","uniformBlocks","uniformBlocksProperties","uniformBuffers","uniformBuffersProperties","drawCommand","getUniformsListSetter","setUniformsListValues","uniformBlocksPropertiesEntries","uniformBuffersMaxIndex","uniformBlockProperty","uniformBuffersProperty_i","relatedBlockProperties","relatedBlocks","blockName","createUniformBlock","relatedBlocksCount","block_i","bindUniformBuffer","rangedBuffers","createRangedUniformBuffers","setUniformBufferData","rangedBuffer","setUniformBufferValues","relatedBlock","uniformBlockProperties","vertexArrayValues","uniformsValues","uniformsBlocksValues","setVertexArrayValues","uniformBlock","getExtension","mode","instanceCount","multiDraw","VERTEX_ARRAY_BINDING","drawElementsInstanced","multiDrawExtension","countsList","countsOffset","offsetsList","offsetsOffset","drawCount","instanceCountsList","instanceCountsOffset","multiDrawElementsInstancedWEBGL","multiDrawElementsWEBGL","drawElements","drawArraysInstanced","firstsList","firstsOffset","multiDrawArraysInstancedWEBGL","multiDrawArraysWEBGL","drawArrays","WebGLRendererUtilities","hint","winding","frontFace","scissor","viewport","clearColor","func","depthFunc","equ","blendEquation","srcFunc","dstFunc","blendFunc","srcAlpha","dstAlpha","blendFuncSeparate","ref","mask","face","stencilFuncSeparate","fail","zFail","zPass","stencilOpSeparate","stencilMaskSeparate","red","green","blue","alpha","colorMask","flag","depthMask","capability","enable","disable","VIEWPORT","MAX_SAMPLES","buffers","drawBuffers","clearBufferfv","clearBufferiv","clearBufferuiv","async","main","document","createElement","style","display","tabIndex","oncontextmenu","getContext","enableMultidrawExtension","playpause","textContent","paused","onclick","requestAnimationFrame","render","body","append","linesVert","fetch","then","resp","text","linesFrag","linesProgram","camera","cameraControl","params","rotationSpeed","translationSpeed","update","deltaTime","cameraTransform","lastPointerPosition","cameraPosition","cameraForward","cameraForwardArray","cameraUpSign","Z","ARROW_UP","Q","ARROW_LEFT","S","ARROW_DOWN","D","ARROW_RIGHT","RIGHT","newPointerPosition","newTheta","grid","geometry","material","viewProjectionInvert","clipPoints","log","leftBottomNear","leftTopNear","rightTopNear","rightBottomNear","leftBottomFar","leftTopFar","rightTopFar","rightBottomFar","vertices","nearColor","farColor","sideColor","gridTransform","gridLines","gridColors","gridPacket","createPacket","a_position","a_color","basicModelBlock","viewBlock","u_view","u_projection","LINES","CULL_FACE","DEPTH_TEST","lastFrameTime","frameTime","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","setPacketValues","drawPacket"],"sourceRoot":""}