{"version":3,"file":"main.js","mappings":"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EAAG6W,kBAAkB1C,EAE7B,CAEAr1B,0BAA0BkhB,EAA4B4V,GAClD,MAAM,qBAACtB,GAAwBsB,EAC3B5V,EAAG8W,eAAexC,IAClBtU,EAAG+W,mBAAmBzC,EAE9B,E,UIzOQ0C,GAgBAC,GA4DAC,GAoBAC,GAcAC,GAaAC,GAKAC,GASAC,GAKAC,GAMAC,GC3IAC,GA8DAC,G,4SDvEZ,SAAYX,GACR,wBACA,oBACA,sBACA,gCACA,4CACA,4CACA,yCACA,oBACA,mBACA,qCACA,mCACA,qCACA,sCACH,CAdD,CAAYA,KAAAA,GAAkB,KAgB9B,SAAYC,GACR,wBACA,oBACA,sBACA,gCACA,4CACA,iDACA,iDACA,mDACA,+CACA,iDACA,mBACA,+BACA,qBACA,iCACA,uBACA,mCACA,2BACA,yBACA,yBACA,6BACA,qCACA,mCACA,uBACA,yBACA,uCACA,uBACA,2BACA,6BACA,uBACA,yBACA,2BACA,6BACA,2CACA,6BACA,uBACA,uBACA,yBACA,uBACA,yBACA,uBACA,yBACA,yBACA,2BACA,yBACA,2BACA,yBACA,2BACA,2BACA,6BACA,2BACA,6BACA,2BACA,6BACA,6BACA,+BACA,6BACA,8BACH,CA1DD,CAAYA,KAAAA,GAA0B,KA4DtC,SAAYC,GACR,sBACA,wCACA,wBACA,0CACA,oBACA,sCACA,wBACA,kCACA,2DACA,2DACA,uDACA,qEACA,iDACA,uEACA,+DACA,2EACA,kDACH,CAlBD,CAAYA,KAAAA,GAAgB,KAoB5B,SAAYC,GACR,mDACA,mDACA,2CACA,2CACA,mDACA,iDACA,6CACA,6CACA,2CACA,uDACA,sDACH,CAZD,CAAYA,KAAAA,GAAgB,KAc5B,SAAYC,GACR,kCACA,+CACA,mCACA,+CACA,qEACA,qEACA,qEACA,qEACA,qEACA,oEACH,CAXD,CAAYA,KAAAA,GAAa,KAazB,SAAYC,GACR,0BACA,2BACH,CAHD,CAAYA,KAAAA,GAAgB,KAK5B,SAAYC,GACR,0BACA,4BACA,0DACA,wDACA,wDACA,qDACH,CAPD,CAAYA,KAAAA,GAAgB,KAS5B,SAA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","sources":["webpack://main/webpack/bootstrap","webpack://main/webpack/runtime/define property getters","webpack://main/webpack/runtime/hasOwnProperty shorthand","webpack://main/webpack/runtime/make namespace object","webpack://main/./src/engine/libs/patterns/injectors/Injector.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector2.ts","webpack://main/./src/engine/libs/maths/MathError.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector3.ts","webpack://main/./src/engine/core/input/Input.ts","webpack://main/./src/engine/libs/maths/geometry/space/Space.ts","webpack://main/./src/engine/core/controls/FreeCameraControl.ts","webpack://main/./src/engine/libs/patterns/pools/Pool.ts","webpack://main/./src/engine/libs/patterns/pools/StackPool.ts","webpack://main/./src/engine/libs/maths/Snippets.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix3.ts","webpack://main/./src/engine/libs/maths/algebra/quaternions/Quaternion.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix4.ts","webpack://main/./src/engine/libs/maths/extensions/pools/Vector3Pools.ts","webpack://main/./src/engine/libs/maths/statistics/random/UUIDGenerator.ts","webpack://main/./src/engine/core/general/Transform.ts","webpack://main/./src/engine/libs/maths/geometry/primitives/Plane.ts","webpack://main/./src/engine/libs/physics/collisions/Frustrum.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLBufferUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLProgramUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLVertexArrayUtilities.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/PerspectiveCamera.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/Camera.ts","webpack://main/./src/engine/core/rendering/scenes/objects/Object3D.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/GeometryBuffer.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/Geometry.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/bounding/BoundingBox.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/geometry.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLFramebufferUtilities.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/GeometryBuilder.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/lib/polyhedron/CubeGeometry.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/lib/QuadGeometry.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLTextureUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLRendererUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformBlockUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLPacketUtilities.ts","webpack://main/./src/engine/libs/graphics/colors/Color.ts","webpack://main/./src/samples/scenes/SimpleScene.ts","webpack://main/./main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { Injector };\r\nexport { InjectorBase };\r\nexport { Inject };\r\nexport { Register };\r\n\r\ninterface InjectorConstructor {\r\n    readonly prototype: Injector;\r\n    new<C extends Constructor<any>>(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}): Injector<C>;\r\n}\r\n\r\ninterface Injector<C extends Constructor<any> = Constructor<any>> {\r\n    readonly defaultCtor: C;\r\n    overrideDefaultCtor(constructor: C): void;\r\n    forceQualifier(qualifier: string): void;\r\n    unforceQualifier(): void;\r\n    getConstructor(qualifier?: string): C;\r\n    inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C>;\r\n    register(constructor: C, qualifier: string): void; \r\n}\r\n\r\nclass InjectorBase<C extends Constructor<any> = Constructor<any>> implements Injector<C> {\r\n    private _forcedQualifier?: string;\r\n    private _constructors: Map<string, C>;\r\n    private _defaultCtor: C;\r\n    private _onDefaultOverride: (constructor: C) => void;\r\n\r\n    get defaultCtor(): C {\r\n        return this._defaultCtor;\r\n    }\r\n\r\n    overrideDefaultCtor(constructor: C): void {\r\n        this._defaultCtor = constructor;\r\n        this._onDefaultOverride(constructor);\r\n    }\r\n\r\n    constructor(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}) {\r\n        this._defaultCtor = args.defaultCtor;\r\n        this._onDefaultOverride = args.onDefaultOverride;\r\n        this._constructors = new Map();\r\n    }\r\n\r\n    forceQualifier(qualifier: string): void {\r\n        this._forcedQualifier = qualifier;\r\n    }\r\n\r\n    unforceQualifier(): void {\r\n        delete this._forcedQualifier;\r\n    }\r\n\r\n    getConstructor(qualifier?: string): C {\r\n        const qualifierValue = this._forcedQualifier || qualifier;\r\n        if (typeof qualifierValue === 'undefined') {\r\n            return this._defaultCtor;\r\n        }\r\n        const constructor = this._constructors.get(qualifierValue);\r\n        if (typeof constructor === 'undefined') {\r\n            throw new Error(`No constructor for qualifier ${qualifierValue}`);\r\n        }\r\n        return constructor;\r\n    }\r\n\r\n    inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C> {\r\n        const constructor = this.getConstructor(args?.qualifier);\r\n        if (args?.args) {\r\n            const parameters = Array.from(args.args);\r\n            return new constructor(...parameters);\r\n        }\r\n        return new constructor();\r\n    }\r\n\r\n    register(constructor: C, qualifier: string): void {\r\n        if (!this._constructors.has(qualifier)) {\r\n            this._constructors.set(qualifier, constructor);\r\n        }\r\n    }\r\n}\r\n\r\nconst Injector: InjectorConstructor = InjectorBase;\r\n\r\ntype UnwrappedInjectorConstructor<I> = I extends Injector<infer C> ? C : never;\r\n\r\ninterface RegisterDecorator {\r\n    <I extends Injector>(injector: I, qualifier?: string): <C extends UnwrappedInjectorConstructor<I>>(ctor: C) => C;\r\n}\r\n\r\nconst Register: RegisterDecorator = function<\r\n    I extends Injector\r\n>(injector: I, qualifier?: string): any {\r\n    return <C extends UnwrappedInjectorConstructor<I>>(\r\n        ctor: C\r\n    ) => {\r\n        if (typeof qualifier !== 'undefined') {\r\n            injector.register(ctor, qualifier);\r\n        }\r\n        injector.register(ctor, ctor.name);\r\n        return ctor;\r\n    }\r\n}\r\n\r\nfunction Inject<\r\n    I extends Injector,\r\n    P extends ConstructorParameters<UnwrappedInjectorConstructor<I>>,\r\n>(injector: I, options?: {qualifier?: string, args?: P}): any {\r\n    return (\r\n        target: any,\r\n        propertyKey: string\r\n    ) => {\r\n        const instance = injector.inject(options);\r\n\r\n        Object.defineProperty(target, propertyKey, {\r\n            value: instance\r\n        });\r\n    }\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Matrix2 } from \"../matrices/Matrix2\";\r\n\r\nexport { Vector2Injector };\r\nexport { Vector2 };\r\nexport { Vector2Base };\r\n\r\nexport type Vector2Values = [number, ...number[]] & { length: 2 };\r\n\r\ninterface Vector2Constructor {\r\n\treadonly prototype: Vector2;\r\n\tnew(): Vector2;\r\n\tnew(values: Vector2Values): Vector2;\r\n\tnew(values?: Vector2Values): Vector2;\r\n}\r\n\r\ninterface Vector2 {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector2Values;\r\n\tx: number;\r\n\ty: number;\r\n\tsetValues(x: number, y: number): this;\r\n\tcopy(vec: Vector2): this;\r\n\tclone(): this;\r\n\tequals(vec: Vector2): boolean;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\tadd(vec: Vector2): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector2): this;\r\n\tlerp(vec: Vector2, t: number): this;\r\n\tclamp(min: Vector2, max: Vector2): this;\r\n\tmultScalar(k: number): this;\r\n\tcross(vec: Vector2): number;\r\n\tdot(vec: Vector2): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdist(vec: Vector2): number;\r\n\tdistSquared(vec: Vector2): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector2): this;\r\n\tmult(mat: Matrix2): this\r\n\taddScaled(vec: Vector2, k: number): this;\r\n\tcopyAndSub(vecA: Vector2, vecB: Vector2): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector2Base {\r\n\tarray: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(values: Vector2Values)\r\n\tconstructor(values?: Vector2Values) {\r\n\t\tthis.array = (values) ? new Float32Array([\r\n\t\t\tvalues[0], values[1]\r\n\t\t]) : new Float32Array([0, 0]);\r\n\t}\r\n\r\n\tget values(): Vector2Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1]\r\n\t\t];\r\n\t}\r\n\r\n\tset values(values: Vector2Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tsetValues(x: number, y: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = x;\r\n\t\to[1] = y;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tequals(vec: Vector2Base): boolean {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\t\t\r\n\t\treturn v[0] === o[0]\r\n\t\t\t&& v[1] === o[1];\r\n\t}\r\n\r\n\tcopy(vec: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\to[0] = v[0];\r\n\t\to[1] = v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new Vector2Base(this.values) as this;\r\n\t}\r\n\r\n\tsetUnit(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 1;\r\n\t\to[1] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetZeros(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 0;\r\n\t\to[1] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0];\r\n\t\to[1] = o[1] + v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + k;\r\n\t\to[1] = o[1] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] - v[0];\r\n\t\to[1] = o[1] - v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(vec: Vector2Base, t: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = t * (v[0] - o[0]);\r\n\t\to[1] = t * (v[1] - o[1]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min: Vector2Base, max: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst l = min.array;\r\n\t\tconst g = max.array;\r\n\r\n\t\to[0] = Math.min(g[0], Math.min(o[0], l[0])),\r\n\t\to[1] = Math.min(g[1], Math.min(o[1], l[1]))\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmultScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] * k;\r\n\t\to[1] = o[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcross(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn a[0] * b[1] - a[1] * b[0];\r\n\t}\r\n\r\n\tdot(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]);\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn v[0] * v[0] + v[1] * v[1];\r\n\t}\r\n\r\n\tdist(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn Math.sqrt(dx * dx + dy * dy);\r\n\t}\r\n\r\n\tdistSquared(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn dx * dx + dy * dy;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\tconst lenSq = o[0] * o[0] + o[1] * o[1];\r\n\t\tconst len = Math.sqrt(lenSq);\r\n\t\tif (len > Number.EPSILON) {\r\n\t\t\to[0] = o[0] / len;\r\n\t\t\to[1] = o[1] / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\to[0] = 0;\r\n\t\t\to[1] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = -o[0];\r\n\t\to[1] = -o[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(mat: Matrix2): this\r\n\tmult(vec: Vector2): this\r\n\tmult(arg0: Matrix2 | Vector2): this {\r\n\t\tif (arg0 instanceof Vector2) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tthis.array[0] = this.array[0] * v[0];\r\n\t\t\tthis.array[1] = this.array[1] * v[1];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst x = this.x;\r\n\t\t\tconst y = this.y;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[2];\r\n\t\t\tthis.y = x * m[1] + y * m[3];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\taddScaled(vec: Vector2Base, k: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0] * k;\r\n\t\to[1] = o[1] + v[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n    }\r\n    \r\n    readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = arr[offset    ];\r\n\t\to[1] = arr[offset + 1];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tcopyAndSub(vecA: Vector2Base, vecB: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\to[0] = a[0] - b[0];\r\n\t\to[1] = a[1] - b[1];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nvar Vector2: Vector2Constructor = Vector2Base;\r\nconst Vector2Injector: Injector<Vector2Constructor> = new Injector({\r\n\tdefaultCtor: Vector2Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector2Constructor) => {\r\n\t\t\tVector2 = ctor;\r\n\t\t}\r\n});","export class MathError extends Error {\r\n    name = 'MathError';\r\n}","import { Matrix3 } from \"engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\n\r\nexport { Vector3Constructor };\r\nexport { Vector3 };\r\nexport { Vector3Base };\r\nexport { Vector3Injector };\r\n\r\nexport type Vector3Values = [number, ...number[]] & { length: 3 };\r\n\r\ninterface Vector3Constructor {\r\n\treadonly prototype: Vector3;\r\n\tnew(): Vector3;\r\n\tnew(a: number, y: number, z: number): Vector3;\r\n  \tnew(array: ArrayLike<number>): Vector3;\r\n\tangle(vectorA: Vector3, vectorB: Vector3): number;\r\n}\r\n\r\ninterface Vector3 extends Iterable<number> {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector3Values;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\ttoString(): string;\r\n\tsetValues(\r\n\t\tx: number,\r\n\t\ty: number,\r\n\t\tz: number\r\n\t): this;\r\n\tequals(vec: Vector3): boolean;\r\n\tcopy(vec: Vector3): this;\r\n\tclone(): this;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\ttoCartesian(center: Vector3): this;\r\n\ttoSpherical(center: Vector3): this;\r\n\tadd(vec: Vector3): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector3): this;\r\n\tlerp(from: Vector3, to: Vector3, t: number): this;\r\n\tmax(vecB: Vector3): this;\r\n\tmin(vecB: Vector3): this;\r\n\tclamp(min: Vector3, max: Vector3): this;\r\n\tscale(k: number): this;\r\n\tcross(vec: Vector3): this;\r\n\tdot(vec: Vector3): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdistance(vec: Vector3): number;\r\n\tdistanceSquared(vec: Vector3): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector3): this;\r\n\tmult(mat: Matrix3): this;\r\n\taddScaled(vec: Vector3, k: number): this;\r\n\tcopyAndSub(vecA: Vector3, vecB: Vector3): this;\r\n\tcopyAndCross(vecA: Vector3, vecB: Vector3): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector3Base implements Vector3 {\r\n\treadonly array: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(array: ArrayLike<number>)\r\n\t  constructor(\r\n\t  x: number, y: number, z: number\r\n\t)\r\n\tconstructor(\r\n\t  ...args: any[]\r\n\t) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([args[0], args[2], args[1]]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tconst array = args[0];\r\n\t\t\tif (array.length < 3) {\r\n\t\t\t\tthrow new MathError(`Array must be of length 3 at least.`);\r\n\t\t\t}\r\n\t\t\tif (array instanceof Float32Array) {\r\n\t\t\t\tthis.array = array;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.array = new Float32Array(array);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([0, 0, 0]);\r\n\t\t}\r\n\t}\r\n\r\n\ttoString(): string {\r\n\t\treturn `Vector3([${Array.from(this.array).join(\", \")}])`;\r\n\t}\r\n\r\n\tstatic angle(vectorA: Vector3, vectorB: Vector3): number {\r\n\t\tconst temp = new Vector3();\r\n\t\treturn Math.acos(temp.copy(vectorA).dot(vectorB) / (Math.sqrt(temp.copy(vectorA).dot(vectorA)) * Math.sqrt(temp.copy(vectorB).dot(vectorB))));\r\n\t}\r\n\r\n\tget values(): Vector3Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1],\r\n\t\t\tthis.array[2]\r\n\t\t];\r\n\t}\r\n\r\n\tset values(values: Vector3Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t\tthis.array[2] = values[2];\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tget z() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n\tset z(z: number) {\r\n\t\tthis.array[2] = z;\r\n\t}\r\n\r\n\tsetValues(x: number, y: number, z: number): this {\r\n\t\tthis.array[0] = x;\r\n\t\tthis.array[1] = y;\r\n\t\tthis.array[2] = z;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcopy(vec: Vector3): this {\r\n\t\tconst v = vec.array;\r\n\r\n\t\tthis.array[0] = v[0];\r\n\t\tthis.array[1] = v[1];\r\n\t\tthis.array[2] = v[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new Vector3Base(this.values) as this;\r\n\t}\r\n\r\n\tequals(vector: Vector3): boolean {\r\n\t\treturn vector.array[0] === this.array[0]\r\n\t\t\t&& vector.array[1] === this.array[1]\r\n\t\t\t&& vector.array[2] === this.array[2];\r\n\t}\r\n\r\n\tsetZeros(): this {\r\n\t\tthis.array[0] = 0;\r\n\t\tthis.array[1] = 0;\r\n\t\tthis.array[2] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetUnit(): this {\r\n\t\tthis.array[0] = 1;\r\n\t\tthis.array[1] = 1;\r\n\t\tthis.array[2] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0];\r\n\t\tthis.array[1] = this.array[1] + vector.array[1];\r\n\t\tthis.array[2] = this.array[2] + vector.array[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(k: number): this {\r\n\t\tthis.array[0] = this.array[0] + k;\r\n\t\tthis.array[1] = this.array[1] + k;\r\n\t\tthis.array[2] = this.array[2] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] - vector.array[0];\r\n\t\tthis.array[1] = this.array[1] - vector.array[1];\r\n\t\tthis.array[2] = this.array[2] - vector.array[2];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(from: Vector3, to: Vector3, t: number): this {\r\n\t\t\r\n\t\tthis.array[0] = (1 - t) * from.x + t * (to.x - from.x);\r\n\t\tthis.array[1] = (1 - t) * from.y + t * (to.y - from.y);\r\n\t\tthis.array[2] = (1 - t) * from.z + t * (to.z - from.z);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmax(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.max(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.max(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.max(this.array[2], vectorB.array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmin(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.min(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.min(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.min(this.array[2], vectorB.array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min: Vector3, max: Vector3): this {\r\n\t\tthis.array[0] = Math.min(max.array[0], Math.max(this.array[0], min.array[0]));\r\n\t\tthis.array[1] = Math.min(max.array[1], Math.max(this.array[1], min.array[1]));\r\n\t\tthis.array[2] = Math.min(max.array[2], Math.max(this.array[2], min.array[2]));\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tscale(k: number): this {\r\n\t\tthis.array[0] = this.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcross(vector: Vector3): this {\r\n\t\tconst t0 = this.array[1] * vector.array[2] - this.array[2] * vector.array[1];\r\n\t\tconst t1 = this.array[2] * vector.array[0] - this.array[0] * vector.array[2];\r\n\t\tconst t2 = this.array[0] * vector.array[1] - this.array[1] * vector.array[0];\r\n\t\t\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdot(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst a = this.array;\r\n\r\n\t\treturn Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst a = this.array;\r\n\t\t\r\n\t\treturn a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\r\n\t}\r\n\r\n\tdistance(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn Math.hypot(dx, dy, dz);\r\n\t}\r\n\r\n\tdistanceSquared(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst {array} = this;\r\n\t\tconst length = this.length();\r\n\t\tif (length > Number.EPSILON) {\r\n\t\t\tarray[0] /= length;\r\n\t\t\tarray[1] /= length;\r\n\t\t\tarray[2] /= length;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tarray[0] = 0;\r\n\t\t\tarray[1] = 0;\r\n\t\t\tarray[2] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate(): this {\r\n\t\tthis.array[0] *= -1;\r\n\t\tthis.array[1] *= -1;\r\n\t\tthis.array[2] *= -1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(mat: Matrix3): this\r\n\tmult(vec: Vector3): this\r\n\tmult(arg0: Matrix3 | Vector3): this {\r\n\t\tif (arg0 instanceof Vector3) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tthis.array[0] = this.array[0] * v[0];\r\n\t\t\tthis.array[1] = this.array[1] * v[1];\r\n\t\t\tthis.array[2] = this.array[2] * v[2];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst x = this.x;\r\n\t\t\tconst y = this.y;\r\n\t\t\tconst z = this.z;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[3] + z * m[6];\r\n\t\t\tthis.y = x * m[1] + y * m[4] + z * m[7];\r\n\t\t\tthis.z = x * m[2] + y * m[5] + z * m[8];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\ttoSpherical(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const x = thisArray[0] - centerArray[0];\r\n        const y = thisArray[1] - centerArray[1];\r\n        const z = thisArray[2] - centerArray[2];\r\n\r\n        const roh = Math.hypot(x, y, z);\r\n        const theta = Math.acos(y / roh);\r\n        const phi = Math.atan2(z, x);\r\n        thisArray[0] = roh;\r\n        thisArray[1] = theta;\r\n        thisArray[2] = phi;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n    toCartesian(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const roh = thisArray[0];\r\n        const theta = thisArray[1];\r\n        const phi = thisArray[2];\r\n\r\n        const x = roh * Math.sin(theta) * Math.cos(phi) + centerArray[0];\r\n        const y = roh * Math.cos(theta) + centerArray[1];\r\n        const z = roh * Math.sin(theta) * Math.sin(phi) + centerArray[2];\r\n        thisArray[0] = x;\r\n        thisArray[1] = y;\r\n        thisArray[2] = z;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tstatic mult(mat: Matrix3, vec: Vector3): Vector3 {\r\n\t\tconst m = mat.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\treturn new Vector3Base([\r\n\t\t\tm[0] * v[0] + m[1] * v[1] + m[2] * v[2],\r\n\t\t\tm[3] * v[0] + m[4] * v[1] + m[5] * v[2],\r\n\t\t\tm[6] * v[0] + m[7] * v[1] + m[8] * v[2]\r\n\t\t]);\r\n\t}\r\n\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n\t\tout[offset + 2] = v[2];\r\n    }\r\n    \r\n    readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tthis.array[0] = arr[offset    ];\r\n\t\tthis.array[1] = arr[offset + 1];\r\n\t\tthis.array[2] = arr[offset + 2];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\taddScaled(vector: Vector3, k: number): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] + vector.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] + vector.array[2] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcopyAndSub(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\tthis.array[0] = a[0] - b[0];\r\n\t\tthis.array[1] = a[1] - b[1];\r\n\t\tthis.array[2] = a[2] - b[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcopyAndCross(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\t\r\n\t\tconst t0 = a[1] * b[2] - a[2] * b[1];\r\n\t\tconst t1 = a[2] * b[0] - a[0] * b[2];\r\n\t\tconst t2 = a[0] * b[1] - a[1] * b[0];\r\n\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\t[Symbol.iterator] (): Iterator<number> {\r\n\t\tconst {array} = this;\r\n\t\tconst {length} = array;\r\n\t\tlet i = 0;\r\n\t\treturn {\r\n\t\t\tnext() {\r\n\t\t\t\tif (i < length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: array[i++], done: false\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: undefined, done: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar Vector3: Vector3Constructor = Vector3Base;\r\n\r\nconst Vector3Injector: Injector<Vector3Constructor> = new Injector({\r\n\tdefaultCtor: Vector3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector3Constructor) => {\r\n\t\t\tVector3 = ctor;\r\n\t\t}\r\n});","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\n\r\nexport { Key };\r\nexport { KeyModifier };\r\nexport { HotKey };\r\nexport { MouseButton };\r\nexport { Input };\r\n\r\nenum Key {\r\n    A = \"a\",\r\n    B = \"b\",\r\n    C = \"c\",\r\n    D = \"d\",\r\n    E = \"e\",\r\n    F = \"f\",\r\n    G = \"g\",\r\n    H = \"h\",\r\n    I = \"i\",\r\n    J = \"j\",\r\n    K = \"k\",\r\n    L = \"l\",\r\n    M = \"m\",\r\n    O = \"o\",\r\n    P = \"p\",\r\n    Q = \"q\",\r\n    R = \"r\",\r\n    S = \"s\",\r\n    T = \"t\",\r\n    U = \"u\",\r\n    V = \"v\",\r\n    W = \"w\",\r\n    X = \"x\",\r\n    Y = \"y\",\r\n    Z = \"z\",\r\n    ENTER = \"Enter\",\r\n    BACKSPACE = \"Backspace\",\r\n    ARROW_DOWN = \"ArrowDown\",\r\n    ARROW_LEFT = \"ArrowLeft\",\r\n    ARROW_RIGHT = \"ArrowRight\",\r\n    ARROW_UP = \"ArrowUp\",\r\n    SHIFT = \"Shift\"\r\n}\r\n\r\nconst KEYS_COUNT = Object.keys(Key).length;\r\n\r\nenum KeyModifier {\r\n    Alt = \"Alt\",\r\n    Control = \"Control\",\r\n    Shift = \"Shift\",\r\n}\r\n\r\nfunction displayKeyModifier(mode: KeyModifier): string {\r\n    switch (mode) {\r\n        case KeyModifier.Control:\r\n            return \"Ctrl\";\r\n        default:\r\n            return mode;\r\n    }\r\n}\r\n\r\nenum MouseButton {\r\n    LEFT = 0,\r\n    WHEEL = 1,\r\n    RIGHT = 2,\r\n    FORWARD = 3,\r\n    BACK = 4\r\n}\r\n\r\nconst MOUSE_BUTTONS_COUNT = Object.keys(MouseButton).length;\r\n\r\nconst MOUSE_BUTTONS_INDICES = Object.freeze(\r\n    Object.values(MouseButton).reduce(\r\n        (map, button, index) => Object.assign(map, {[button]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst KEYS_INDICES = Object.freeze(\r\n    Object.values(Key).reduce(\r\n        (map, key, index) => Object.assign(map, {[key]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst INPUT_EVENT_UP = 0;\r\nconst INPUT_EVENT_DOWN = 1;\r\nconst INPUT_EVENT_REPEAT = 2;\r\n\r\nconst testKeyModifier = (mod: KeyModifier, event: KeyboardEvent) => {\r\n    switch (mod) {\r\n        case \"Alt\":\r\n            return event.altKey;\r\n        case \"Control\":\r\n            return event.ctrlKey;\r\n        case \"Shift\":\r\n            return event.shiftKey;\r\n        default:\r\n            return () => true;\r\n    }\r\n}\r\n\r\nclass HotKey {\r\n\r\n    readonly key: Key;\r\n    readonly mod1?: KeyModifier;\r\n    readonly mod2?: KeyModifier;\r\n\r\n    constructor(key: Key, mod1?: KeyModifier, mod2?: KeyModifier) {\r\n        this.key = key;\r\n        this.mod1 = mod1;\r\n        this.mod2 = mod2;\r\n    }\r\n\r\n    toString(): string {\r\n        return `${this.mod1 ? `${displayKeyModifier(this.mod1)}+` : ''}${this.mod2 ? `${displayKeyModifier(this.mod2)}+` : ''}${(this.key.length === 1) ? this.key.toUpperCase() : this.key}`;\r\n    }\r\n\r\n    /*static fromString(str: string): HotKey | null {\r\n        const keys = Object.values(Key);\r\n        const keyModifiers = Object.values(KeyModifier);\r\n\r\n        let key: Key;\r\n        let mod1: KeyModifier | undefined;\r\n        let mod2: KeyModifier | undefined;\r\n\r\n        const keysStr = str.split(' + ');\r\n        if (keysStr.length >= 1) {\r\n            key = keysStr[0] as Key;\r\n            if (!keys.indexOf(key)) {\r\n                return null;\r\n            }\r\n            if (keysStr.length >= 2) {\r\n                mod1 = keysStr[1] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod1)) {\r\n                    return null;\r\n                }\r\n            }\r\n            if (keysStr.length >= 3) {\r\n                mod2 = keysStr[2] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod2)) {\r\n                    return null;\r\n                }\r\n            }\r\n            return new HotKey(key, mod1, mod2);\r\n        }\r\n        return null;\r\n    }*/\r\n\r\n    test(event: KeyboardEvent): boolean {\r\n        return ((!this.mod1 || testKeyModifier(this.mod1, event)) && (!this.mod2 || testKeyModifier(this.mod2, event)) && event.key === this.key);\r\n    }\r\n}\r\n\r\ninterface Input {\r\n    initialize(canvas: HTMLCanvasElement): void;\r\n    clear(): void;\r\n    getKey(key: Key): boolean;\r\n    getKeyUp(key: Key): boolean;\r\n    getKeyDown(key: Key): boolean;\r\n    getMouseButton(button: MouseButton): boolean;\r\n    getPointerPosition(): Vector2;\r\n    getPointerScreenPosition(): Vector2;\r\n    getWheelDelta(): number;\r\n    getMouseButtonDown(button: MouseButton): boolean;\r\n    getMouseButtonUp(button: MouseButton): boolean;\r\n}\r\n\r\nclass InputBase implements Input {\r\n    private readonly keyFlags = new Array<boolean>(3 * KEYS_COUNT).fill(false);\r\n    private readonly mouseFlags = new Array<boolean>(3 * MOUSE_BUTTONS_COUNT).fill(false);\r\n    private readonly pointerPosition = new Vector2();\r\n    private wheelDelta = 0;\r\n    private canvas: HTMLCanvasElement | null = null;\r\n    private canvasRectangle: DOMRect | null = null;\r\n\r\n    initialize(canvas: HTMLCanvasElement): void {\r\n        this.canvas = canvas;\r\n        this.canvasRectangle = canvas.getBoundingClientRect();\r\n        canvas.addEventListener(\"pointerdown\", this);\r\n        canvas.addEventListener(\"pointerup\", this);\r\n        canvas.addEventListener(\"contextmenu\", this);\r\n        canvas.addEventListener(\"pointermove\", this);\r\n        canvas.addEventListener(\"wheel\", this);\r\n        canvas.addEventListener(\"keydown\", this);\r\n        canvas.addEventListener(\"keyup\", this);\r\n        canvas.addEventListener(\"focusout\", this);\r\n    }\r\n\r\n    getCanvasRect(): DOMRect {\r\n        const rect = this.canvasRectangle;\r\n        if (rect === null) {\r\n            throw new Error(`Input manager not initialized.`);\r\n        }\r\n        return rect;\r\n    }\r\n\r\n    clear(): void {\r\n        this.keyFlags.fill(false, 0, INPUT_EVENT_REPEAT * KEYS_COUNT);\r\n        this.mouseFlags.fill(false, 0, INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT);\r\n        this.wheelDelta = 0;\r\n    }\r\n    \r\n    handleEvent(event: Event): void {\r\n        let eventIndex = -1;\r\n        switch (event.type) {\r\n            case \"pointerdown\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"pointerup\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"pointermove\":\r\n                const canvasRect = this.getCanvasRect();\r\n                this.pointerPosition.setValues(\r\n                    ((event as MouseEvent).clientX - canvasRect.left),\r\n                    ((event as MouseEvent).clientY - canvasRect.top),\r\n                );\r\n                break;\r\n            case \"wheel\":\r\n                this.wheelDelta = (event as WheelEvent).deltaY / 100;\r\n                break;\r\n            case \"keydown\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"keyup\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"focusout\":\r\n                this.keyFlags.fill(false);\r\n                this.mouseFlags.fill(false);\r\n                this.wheelDelta = 0;\r\n                this.pointerPosition.setZeros();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    /*static getAxis(axisName: string) {\r\n\r\n    }\r\n\r\n    static getButton(buttonName: string) {\r\n\r\n    }\r\n\r\n    static getButtonUp(buttonName: string) {\r\n\r\n    }\r\n\r\n    static getButtonDown(buttonName: string) {\r\n\r\n    }*/\r\n\r\n    getKey(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getKeyUp(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getKeyDown(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getMouseButton(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    getPointerPosition(): Vector2 {\r\n        return this.pointerPosition.clone();\r\n    }\r\n\r\n    getPointerScreenPosition(): Vector2 {\r\n        const positionAray = this.pointerPosition.array;\r\n        const canvasRect = this.getCanvasRect();\r\n        const x = (positionAray[0] / canvasRect.width) * 2 - 1;\r\n        const y = (positionAray[1] / canvasRect.height) * 2 - 1;\r\n        return new Vector2([x, y]);\r\n    }\r\n\r\n    getWheelDelta(): number {\r\n        return this.wheelDelta;\r\n    }\r\n\r\n    getMouseButtonDown(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    getMouseButtonUp(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n}\r\n\r\nvar Input: Input = new InputBase();","import { Vector3 } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport class Space {\r\n\r\n    private constructor () {};\r\n    \r\n    static readonly origin:      Vector3 = new Vector3([ 0,  0,  0]);\r\n    static readonly right:       Vector3 = new Vector3([ 1,  0,  0]);\r\n    static readonly left:        Vector3 = new Vector3([-1,  0,  0]);\r\n    static readonly up:          Vector3 = new Vector3([ 0,  1,  0]);\r\n    static readonly down:        Vector3 = new Vector3([ 0, -1,  0]);\r\n    static readonly forward:     Vector3 = new Vector3([ 0,  0,  1]);\r\n    static readonly backward:    Vector3 = new Vector3([ 0,  0, -1]);\r\n}","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../libs/maths/geometry/space/Space\";\r\nimport { Input, MouseButton, Key } from \"../input/Input\";\r\nimport { Camera } from \"../rendering/scenes/cameras/Camera\";\r\n\r\nexport { FreeCameraControl };\r\n\r\ninterface FreeCameraControlConstructor {\r\n    readonly prototype: FreeCameraControl;\r\n    new(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}): FreeCameraControl;\r\n}\r\n\r\ninterface FreeCameraControl {\r\n    update(deltaTime: number): void;\r\n}\r\n\r\nclass FreeCameraControlBase {\r\n    camera: Camera;\r\n    rotationSpeed: number;\r\n    translationSpeed: number;\r\n\r\n    #lastPointerPosition: Vector2;\r\n\r\n    constructor(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}) {\r\n        this.camera = camera;\r\n        this.rotationSpeed = params?.rotationSpeed ?? 50;\r\n        this.translationSpeed = params?.translationSpeed ?? 8;\r\n        this.#lastPointerPosition = new Vector2();\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        const cameraTransform = this.camera.transform;\r\n        const cameraPosition = cameraTransform.getTranslation(new Vector3());\r\n        const cameraForward = cameraTransform.getBackward(new Vector3());\r\n        const cameraForwardArray = cameraForward.array;\r\n        const lastPointerPosition = this.#lastPointerPosition;\r\n        const rotationSpeed = this.rotationSpeed;\r\n        const translationSpeed = this.translationSpeed;\r\n        let cameraUpSign = cameraTransform.getUp(new Vector3()).dot(Space.up);\r\n      \r\n        if (Input.getKey(Key.Z) || Input.getKey(Key.ARROW_UP)) {\r\n            const forward = cameraTransform.getBackward(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(forward);\r\n        }\r\n        if (Input.getKey(Key.Q) || Input.getKey(Key.ARROW_LEFT)) {\r\n            const left = cameraTransform.getLeft(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(left);\r\n        }\r\n        if (Input.getKey(Key.S) || Input.getKey(Key.ARROW_DOWN)) {\r\n            const backward = cameraTransform.getForward(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(backward);\r\n        }\r\n        if (Input.getKey(Key.D) || Input.getKey(Key.ARROW_RIGHT)) {\r\n            const right = cameraTransform.getRight(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(right);\r\n        }\r\n\r\n        if (Input.getMouseButtonDown(MouseButton.RIGHT)) {\r\n            lastPointerPosition.copy(Input.getPointerScreenPosition());\r\n        }\r\n        \r\n        if (Input.getMouseButton(MouseButton.RIGHT)) {\r\n            const newPointerPosition = Input.getPointerScreenPosition();\r\n            if (!newPointerPosition.equals(lastPointerPosition)) {\r\n                const dx = (lastPointerPosition.x - newPointerPosition.x) * rotationSpeed * deltaTime;\r\n                const dy = (lastPointerPosition.y - newPointerPosition.y) * rotationSpeed * deltaTime;\r\n                cameraPosition.copy(cameraTransform.getTranslation(new Vector3()));\r\n                if (dx !== 0 || dy !== 0) {\r\n                    cameraUpSign = Math.sign(cameraTransform.getUp(new Vector3()).dot(Space.up));\r\n                    cameraForward.toSpherical(Space.origin);\r\n                    const theta = cameraForwardArray[1];\r\n                    const phi = cameraForwardArray[2];\r\n                    const newTheta = theta + cameraUpSign * -dy;\r\n                    if (newTheta <= 0 || newTheta >= Math.PI) {\r\n                        cameraForwardArray[2] = (phi - dx + Math.PI) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = newTheta < 0 ? -newTheta : Math.PI - (newTheta - Math.PI);\r\n                        cameraUpSign *= -1;\r\n                    }\r\n                    else {\r\n                        cameraForwardArray[2] = (phi - dx) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = theta + cameraUpSign * -dy;\r\n                    }\r\n                    cameraForward.toCartesian(Space.origin);\r\n                    cameraTransform.lookAt(cameraPosition.add(cameraForward), (cameraUpSign > 0) ? Space.up : Space.down);\r\n                }\r\n                lastPointerPosition.copy(newPointerPosition);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar FreeCameraControl: FreeCameraControlConstructor = FreeCameraControlBase;","export { PoolAutoExtendPolicy };\r\nexport { Pool };\r\nexport { PoolBase };\r\n\r\nenum PoolAutoExtendPolicy {\r\n    NO_AUTO_EXTEND = 0,\r\n    AUTO_EXTEND_ONE = 1,\r\n    AUTO_EXTEND_POW2 = 2\r\n}\r\n\r\ninterface Pool<O extends object = object> {\r\n    readonly ctor: Constructor<O>;\r\n    readonly autoExtendPolicy: PoolAutoExtendPolicy;\r\n    acquire(count: number): O[];\r\n    release(count: number): void;\r\n    extend(count: number): void;\r\n    clear(): void;\r\n}\r\n\r\nabstract class PoolBase<O extends object = object> implements Pool<O> {\r\n    protected _ctor: Constructor<O>;\r\n    protected _autoExtendPolicy: PoolAutoExtendPolicy;\r\n    protected _autoExtendTicks: number;\r\n\r\n    protected constructor(constructor: Constructor<O>, policy?: PoolAutoExtendPolicy) {\r\n        this._ctor = constructor;\r\n        this._autoExtendPolicy = policy || PoolAutoExtendPolicy.AUTO_EXTEND_ONE;\r\n        this._autoExtendTicks = 0;\r\n    }\r\n\r\n    get ctor(): Constructor<O> {\r\n        return this._ctor;\r\n    }\r\n\r\n    get autoExtendPolicy(): PoolAutoExtendPolicy {\r\n        return this._autoExtendPolicy;\r\n    }\r\n\r\n    autoExtend(): void {\r\n        switch (this._autoExtendPolicy) {\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_ONE:\r\n                this.extend(1);\r\n                break;\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_POW2:\r\n                this.extend(Math.pow(2, this._autoExtendTicks));\r\n                break;\r\n        }\r\n        this._autoExtendTicks++;\r\n    }\r\n\r\n    abstract acquire(count: number): O[];\r\n    abstract release(count: number): void;\r\n    abstract extend(count: number): void;\r\n    abstract clear(): void;\r\n}","import { PoolAutoExtendPolicy, PoolBase, Pool } from \"./Pool\";\r\n\r\nexport { StackPool };\r\n\r\ninterface StackPool<O extends object = object> extends Pool<O> {\r\n    \r\n}\r\n\r\ninterface StackPoolConstructor {\r\n    readonly prototype: StackPool;\r\n    new<O extends object>(constructor: Constructor<O>, options?: {args?: ConstructorParameters<Constructor<O>>, policy?: PoolAutoExtendPolicy, size?: number}): StackPool<O>;\r\n}\r\n\r\nclass StackPoolBase<O extends object = object> extends PoolBase<O> implements Pool<O> {\r\n    private _objects: Array<O>;\r\n    private _top: number;\r\n\r\n    constructor(constructor: Constructor<O>, options?: {args?: any, policy?: PoolAutoExtendPolicy, size?: number}) {\r\n        super(constructor, options?.policy);\r\n        this._objects = Array(options?.size || 0).fill(0).map(() => {\r\n            return new this.ctor(options?.args);\r\n        });\r\n        this._top = 0;\r\n    }\r\n    \r\n    acquire(count: number): O[] {\r\n        const top = this._top;\r\n        const target = top + count;\r\n\r\n        if (this._autoExtendPolicy) {\r\n            while (this._objects.length < target) {\r\n                this.autoExtend();\r\n            }\r\n        }\r\n        this._top = target;\r\n        \r\n        return this._objects.slice(top, target);\r\n    }\r\n\r\n    release(count: number): void {\r\n        const top = this._top;\r\n        if (count > top) {\r\n            console.warn(\"Releasing under zero.\");\r\n        }\r\n        this._top = Math.max(top - count, 0);\r\n    }\r\n\r\n    extend(count: number): void {\r\n        this._objects.push(...Array(count).fill(0).map(() => {\r\n            return new this.ctor();\r\n        }));\r\n    }\r\n    \r\n    clear(): void {\r\n        this._objects = [];\r\n        this._top = 0;\r\n        this._autoExtendTicks = 0;\r\n    }\r\n}\r\n\r\nvar StackPool: StackPoolConstructor = StackPoolBase;","\r\nexport { deg2Rad };\r\nexport { rad2Deg };\r\nexport { qSqrt };\r\nexport { pow2 };\r\nexport { inRange };\r\nexport { clamp };\r\nexport { lerp };\r\nexport { smoothstep };\r\nexport { smootherstep };\r\nexport { randInt };\r\nexport { randFloat };\r\nexport { randFloatSpread };\r\nexport { degToRad };\r\nexport { radToDeg };\r\nexport { isPowerOfTwo };\r\nexport { ceilPowerOfTwo };\r\nexport { floorPowerOfTwo };\r\n\r\nconst DEG2RAD = Math.PI / 180;\r\nconst RAD2DEG = 180 / Math.PI;\r\n\r\nconst deg2Rad = function(deg: number): number {\r\n\treturn DEG2RAD * deg;\r\n}\r\n\r\nconst rad2Deg = function(rad: number): number {\r\n\treturn RAD2DEG / rad;\r\n}\r\n\r\nconst _bytes = new ArrayBuffer(Float32Array.BYTES_PER_ELEMENT);\r\nconst _floatView = new Float32Array(_bytes);\r\nconst _intView = new Uint32Array(_bytes);\r\n\r\nconst qSqrt = function(x: number) {\r\n\tconst halfx = x * 0.5;\r\n\r\n\t_floatView[0] = x;\r\n\t_intView[0] = 0x5f3759df -(_intView[0] >> 1);\r\n\r\n\tlet y = _floatView[0];\r\n\ty = y * (1.5 - (halfx * y * y));\r\n\r\n\treturn y;\r\n}\r\n\r\nconst pow2 = function(k: number): number {\r\n\treturn 1 << k;\r\n}\r\n\t\r\nconst inRange = function(x: number, min: number, max: number): boolean {\r\n\treturn (min <= x) && (x <= max);\r\n}\r\n\r\nconst clamp = function(value: number, min: number, max: number): number {\r\n\treturn Math.max(min, Math.min(max, value));\r\n}\r\n\r\nconst lerp = function(x: number, y: number, t: number): number {\r\n\treturn (1 - t) * x + t * y;\r\n}\r\n\r\nconst smoothstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * (3 - 2 * x);\r\n}\r\n\r\nconst smootherstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * x * ( x * ( x * 6 - 15) + 10);\r\n}\r\n\r\nconst randInt = function(low: number, high: number): number {\r\n\treturn low + Math.floor(Math.random() * (high - low + 1));\r\n}\r\n\r\nconst randFloat = function(low: number, high: number): number {\r\n\treturn low + Math.random() * (high - low);\r\n}\r\n\r\nconst randFloatSpread = function(range: number): number {\r\n\treturn range * (0.5 - Math.random());\r\n}\r\n\r\nconst degToRad = function(degrees: number): number {\r\n\treturn degrees * DEG2RAD;\r\n}\r\n\r\nconst radToDeg = function(radians: number): number {\r\n\treturn radians * RAD2DEG;\r\n}\r\nconst isPowerOfTwo = function(value: number): boolean {\r\n\treturn (value & (value - 1)) === 0 && value !== 0;\r\n}\r\n\r\nconst ceilPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\r\n}\r\n\r\nconst floorPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3Values, Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { Matrix3Values };\r\nexport { Matrix3 };\r\nexport { Matrix3Injector };\r\nexport { Matrix3Base };\r\n\r\ntype Matrix3Values = [\r\n  number, number, number,\r\n  number, number, number,\r\n  number, number, number\r\n];\r\n\r\ninterface Matrix3Constructor {\r\n\treadonly prototype: Matrix3;\r\n\tnew(): Matrix3;\r\n\tnew(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): Matrix3;\r\n  new(array: ArrayLike<number>): Matrix3;\r\n  rotationX(angle: number): Matrix3;\r\n  rotationY(angle: number): Matrix3;\r\n  rotationZ(angle: number): Matrix3;\r\n}\r\n\r\ninterface Matrix3 {\r\n  readonly array: WritableArrayLike<number>;\r\n  setValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this;\r\n  getValues(): Matrix3Values;\r\n  row1: Vector3Values;\r\n  row2: Vector3Values;\r\n  row3: Vector3Values;\r\n  col1: Vector3Values;\r\n  col2: Vector3Values;\r\n  col3: Vector3Values;\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  setRotationX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n\r\n  equals(mat: Matrix3): boolean;\r\n  copy(mat: Matrix3): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix3): this;\r\n  sub(mat: Matrix3): this;\r\n  mult(mat: Matrix3): this;\r\n  multScalar(k: number): this;\r\n  solve(vecB: Vector3): Vector3Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass Matrix3Base implements Matrix3 {\r\n  readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  )\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[0], args[1], args[2],\r\n        args[3], args[4], args[5],\r\n        args[6], args[7], args[8]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([\r\n        0, 0, 0,\r\n        0, 0, 0,\r\n        0, 0, 0\r\n      ]);\r\n\t\t}\r\n  }\r\n\r\n  get row1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[3],\r\n      this.array[6]\r\n    ];\r\n\t}\r\n\r\n\tset row1(row: Vector3Values) {\r\n    this.array[0] = row[0];\r\n    this.array[3] = row[1];\r\n    this.array[6] = row[2];\r\n  }\r\n\r\n  get row2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[1],\r\n      this.array[4],\r\n      this.array[7]\r\n    ];\r\n\t}\r\n\r\n\tset row2(row: Vector3Values) {\r\n    this.array[1] = row[0];\r\n    this.array[4] = row[1];\r\n    this.array[7] = row[2]\r\n  }\r\n\r\n  get row3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[2],\r\n      this.array[5],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tset row3(row: Vector3Values) {\r\n    this.array[2] = row[0];\r\n    this.array[5] = row[1];\r\n    this.array[8] = row[2]\r\n  }\r\n\r\n  get col1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[1],\r\n      this.array[2]\r\n    ];\r\n\t}\r\n\r\n\tset col1(col: Vector3Values) {\r\n    this.array[0] = col[0];\r\n    this.array[1] = col[1];\r\n    this.array[2] = col[2];\r\n  }\r\n\r\n  get col2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[3],\r\n      this.array[4],\r\n      this.array[5]\r\n    ];\r\n\t}\r\n\r\n\tset col2(col: Vector3Values) {\r\n    this.array[3] = col[0];\r\n    this.array[4] = col[1];\r\n    this.array[5] = col[2]\r\n  }\r\n\r\n  get col3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[6],\r\n      this.array[7],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tset col3(col: Vector3Values) {\r\n    this.array[6] = col[0];\r\n    this.array[7] = col[1];\r\n    this.array[8] = col[2];\r\n  }\r\n\r\n  get m11() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  get m12() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset m12(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  get m13() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tset m13(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  get m22() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tset m22(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  get m23() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tset m23(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  get m32() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tset m32(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  get m33() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n  set m33(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 9) {\r\n\t\t\tthrow new MathError(`Array must be of length 9 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n  getValues(): Matrix3Values {\r\n\t\treturn [\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8],\r\n    ];\r\n\t}\r\n\r\n\tsetValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this {\r\n    this.array[0] = m11;\r\n    this.array[1] = m21;\r\n    this.array[2] = m31;\r\n    this.array[3] = m12;\r\n    this.array[4] = m22;\r\n    this.array[5] = m32;\r\n    this.array[6] = m13;\r\n    this.array[7] = m23;\r\n    this.array[8] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n\tequals(other: Matrix3): boolean {\r\n    const o = other.array;\r\n    return this.array[0] === o[0]\r\n      && this.array[1] === o[1]\r\n      && this.array[2] === o[2]\r\n      && this.array[3] === o[3]\r\n      && this.array[4] === o[4]\r\n      && this.array[5] === o[5]\r\n      && this.array[6] === o[6]\r\n      && this.array[7] === o[7]\r\n      && this.array[8] === o[8];\r\n  }\r\n\r\n  copy(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = m[0];\r\n    o[1] = m[1];\r\n    o[2] = m[2];\r\n    o[3] = m[3];\r\n    o[4] = m[4];\r\n    o[5] = m[5];\r\n    o[6] = m[6];\r\n    o[7] = m[7];\r\n    o[8] = m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  clone(): this {\r\n    return new Matrix3Base(\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8]\r\n    ) as this;\r\n  }\r\n\r\n  setIdentity(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 1;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 1;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  setZeros(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 0;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 0;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  det(): number {\r\n    const o = this.array;\r\n\r\n    const x = o[0] * ((o[4] * o[8]) - (o[5] * o[7]));\r\n    const y = o[1] * ((o[3] * o[8]) - (o[5] * o[6]));\r\n    const z = o[2] * ((o[3] * o[7]) - (o[4] * o[6]));\r\n\r\n    return x - y + z;\r\n  }\r\n\r\n  trace(): number {\r\n    const o = this.array;\r\n    \r\n    return o[0] + o[4] + o[8];\r\n  }\r\n\r\n  negate(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = -o[0];\r\n    o[1] = -o[1];\r\n    o[2] = -o[2];\r\n    o[3] = -o[3];\r\n    o[4] = -o[4];\r\n    o[5] = -o[5];\r\n    o[6] = -o[6];\r\n    o[7] = -o[7];\r\n    o[8] = -o[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  transpose(): this {\r\n    const o = this.array;\r\n\r\n    let t;\r\n\r\n    t = o[1];\r\n    o[1] = o[3];\r\n    o[3] = t;\r\n\r\n    t = o[2];\r\n    o[2] = o[6];\r\n    o[6] = t;\r\n\r\n    t = o[5];\r\n    o[5] = o[7];\r\n    o[7] = t;\r\n    \r\n    return this;\r\n  }\r\n\r\n  invert(): this {\r\n    const o = this.array;\r\n\r\n    const t11 = o[1 * 3 + 1] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 1];\r\n    const t12 = o[0 * 3 + 1] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 1];\r\n    const t13 = o[0 * 3 + 1] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 1];\r\n\r\n    const t21 = o[1 * 3 + 0] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 0];\r\n    const t22 = o[0 * 3 + 0] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 0];\r\n    const t23 = o[0 * 3 + 0] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 0];\r\n\r\n    const t31 = o[1 * 3 + 0] * o[2 * 3 + 1] - o[1 * 3 + 1] * o[2 * 3 + 0];\r\n    const t32 = o[0 * 3 + 0] * o[2 * 3 + 1] - o[0 * 3 + 1] * o[2 * 3 + 0];\r\n    const t33 = o[0 * 3 + 0] * o[1 * 3 + 1] - o[0 * 3 + 1] * o[1 * 3 + 0];\r\n\r\n    const d = 1.0 / (o[0 * 3 + 0] * t11 - o[1 * 3 + 0] * t12 + o[2 * 3 + 0] * t13);\r\n\r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    o[0] = d * t11;\r\n    o[1] = -d * t12;\r\n    o[2] = d * t13;\r\n\r\n    o[3] = -d * t21;\r\n    o[4] = d * t22;\r\n    o[5] = -d * t23;\r\n\r\n    o[6] = d * t31;\r\n    o[7] = -d * t32;\r\n    o[8] = d * t33;\r\n\r\n    return this;\r\n  }\r\n\r\n  add(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] + m[0];\r\n    o[1] = o[1] + m[1];\r\n    o[2] = o[2] + m[2];\r\n    o[3] = o[3] + m[3];\r\n    o[4] = o[4] + m[4];\r\n    o[5] = o[5] + m[5];\r\n    o[6] = o[6] + m[6];\r\n    o[7] = o[7] + m[7];\r\n    o[8] = o[8] + m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  sub(mat: Matrix3Base): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] - m[0];\r\n    o[1] = o[1] - m[1];\r\n    o[2] = o[2] - m[2];\r\n    o[3] = o[3] - m[3];\r\n    o[4] = o[4] - m[4];\r\n    o[5] = o[5] - m[5];\r\n    o[6] = o[6] - m[6];\r\n    o[7] = o[7] - m[7];\r\n    o[8] = o[8] - m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  mult(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    const a11 = o[0 * 3 + 0];\r\n    const a12 = o[0 * 3 + 1];\r\n    const a13 = o[0 * 3 + 2];\r\n    const a21 = o[1 * 3 + 0];\r\n    const a22 = o[1 * 3 + 1];\r\n    const a23 = o[1 * 3 + 2];\r\n    const a31 = o[2 * 3 + 0];\r\n    const a32 = o[2 * 3 + 1];\r\n    const a33 = o[2 * 3 + 2];\r\n    const b11 = m[0 * 3 + 0];\r\n    const b12 = m[0 * 3 + 1];\r\n    const b13 = m[0 * 3 + 2];\r\n    const b21 = m[1 * 3 + 0];\r\n    const b22 = m[1 * 3 + 1];\r\n    const b23 = m[1 * 3 + 2];\r\n    const b31 = m[2 * 3 + 0];\r\n    const b32 = m[2 * 3 + 1];\r\n    const b33 = m[2 * 3 + 2];\r\n\r\n    o[0] = b11 * a11 + b12 * a21 + b13 * a31;\r\n    o[1] = b11 * a12 + b12 * a22 + b13 * a32;\r\n    o[2] = b11 * a13 + b12 * a23 + b13 * a33;\r\n    o[3] = b21 * a11 + b22 * a21 + b23 * a31;\r\n    o[4] = b21 * a12 + b22 * a22 + b23 * a32;\r\n    o[5] = b21 * a13 + b22 * a23 + b23 * a33;\r\n    o[6] = b31 * a11 + b32 * a21 + b33 * a31;\r\n    o[7] = b31 * a12 + b32 * a22 + b33 * a32;\r\n    o[8] = b31 * a13 + b32 * a23 + b33 * a33;\r\n\r\n    return this;\r\n  }\r\n\r\n  multScalar(k: number): this {\r\n    const o = this.array;\r\n\r\n    o[0] = o[0] * k;\r\n    o[1] = o[1] * k;\r\n    o[2] = o[2] * k;\r\n    o[3] = o[3] * k;\r\n    o[4] = o[4] * k;\r\n    o[5] = o[5] * k;\r\n    o[6] = o[6] * k;\r\n    o[7] = o[7] * k;\r\n    o[8] = o[8] * k;\r\n\r\n    return this;\r\n  }\r\n\r\n  writeIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst m = this.array;\r\n\r\n\t\tout[offset     ] = m[ 0];\r\n\t\tout[offset +  1] = m[ 1];\r\n    out[offset +  2] = m[ 2];\r\n    out[offset +  3] = m[ 3];\r\n\t\tout[offset +  4] = m[ 4];\r\n    out[offset +  5] = m[ 5];\r\n    out[offset +  6] = m[ 6];\r\n\t\tout[offset +  7] = m[ 7];\r\n    out[offset +  8] = m[ 8];\r\n  }\r\n    \r\n  readFromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[ 0] = arr[offset     ];\r\n\t\to[ 1] = arr[offset +  1];\r\n    o[ 2] = arr[offset +  2];\r\n    o[ 3] = arr[offset +  3];\r\n    o[ 4] = arr[offset +  4];\r\n    o[ 5] = arr[offset +  5];\r\n    o[ 6] = arr[offset +  6];\r\n\t\to[ 7] = arr[offset +  7];\r\n    o[ 8] = arr[offset +  8];\r\n  }\r\n\r\n  static rotationX(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationX(angle);\r\n  }\r\n\r\n  setRotationX(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = 1;\r\n    this.array[1] = 0;\r\n    this.array[2] = 0;\r\n    this.array[3] = 0;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = sinAngle;\r\n    this.array[6] = 0;\r\n    this.array[7] = -sinAngle;\r\n    this.array[8] = cosAngle;\r\n\r\n    return this;\r\n  }\r\n  \r\n  static rotationY(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationY(angle);\r\n  }\r\n\r\n  setRotationY(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n    \r\n    this.array[0] = cosAngle;\r\n    this.array[1] = 0;\r\n    this.array[2] = -sinAngle;\r\n    this.array[3] = 0;\r\n    this.array[4] = 1;\r\n    this.array[5] = 0;\r\n    this.array[6] = sinAngle;\r\n    this.array[7] = 0;\r\n    this.array[8] = cosAngle;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static rotationZ(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationZ(angle);\r\n  }\r\n\r\n  setRotationZ(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = cosAngle;\r\n    this.array[1] = sinAngle;\r\n    this.array[2] = 0;\r\n    this.array[3] = -sinAngle;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = 0;\r\n    this.array[6] = 0;\r\n    this.array[7] = 0;\r\n    this.array[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  solve(vecB: Vector3): Vector3Values {\r\n    const a = this.array;\r\n    \r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a13 = a[2];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const a23 = a[5];\r\n    const a31 = a[6];\r\n    const a32 = a[7];\r\n    const a33 = a[8];\r\n    const bx = vecB.x - a[12];\r\n    const by = vecB.y - a[13];\r\n    const bz = vecB.z - a[14];\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n  \r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n  \r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n\r\n    return [\r\n      x, y, z\r\n    ];\r\n  }\r\n\r\n  solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const bx = vecB.x - a[4];\r\n    const by = vecB.y - a[7];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by)\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n}\r\n\r\nvar Matrix3: Matrix3Constructor = Matrix3Base;\r\nconst Matrix3Injector: Injector<Matrix3Constructor> = new Injector({\r\n\tdefaultCtor: Matrix3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix3Constructor) => {\r\n\t\t\tMatrix3 = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Space } from \"../../geometry/space/Space\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { qSqrt } from \"../../Snippets\";\r\nimport { Matrix3 } from \"../matrices/Matrix3\";\r\nimport { Matrix4 } from \"../matrices/Matrix4\";\r\nimport { Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { QuaternionValues };\r\nexport { Quaternion };\r\nexport { QuaternionInjector };\r\nexport { QuaternionPool };\r\n\r\ntype QuaternionValues = [number, ...number[]] & { length: 4 };\r\n\r\ninterface QuaternionConstructor {\r\n\treadonly prototype: Quaternion;\r\n\tnew(): Quaternion;\r\n\tnew(x: number, y: number, z: number, w: number): Quaternion;\r\n\tnew(array: WritableArrayLike<number>): Quaternion;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tslerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tfromArray(vector: ArrayLike<number>): Quaternion;\r\n\tfromAxisAngle(axis: Vector3, angle?: number): Quaternion;\r\n\tfromEuler(pitch: number, yaw: number, roll: number): Quaternion;\r\n\tfromVector(vector: Vector3): Quaternion;\r\n\tfromMatrix(matrix: Matrix3): Quaternion;\r\n}\r\n// TODO?:\r\n// roll => pitch\r\n// pitch => yaw\r\n// yaw => roll\r\ninterface Quaternion {\r\n\treadonly array: WritableArrayLike<number>;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\tw: number;\r\n\tpitch: number;\r\n\tyaw: number;\r\n\troll: number;\r\n\tgetValues(): QuaternionValues;\r\n\tsetValues(\r\n\t  x: number, y: number,\r\n\t  z: number, w: number\r\n\t): this;\r\n\t//setArray(array: WritableArrayLike<number>): this;\r\n\tlookAt(source: Vector3, dest: Vector3): Quaternion ;\r\n\tsetEuler(pitch: number, yaw: number, roll: number): this;\r\n\r\n\tsetMatrix(matrix: Matrix3): Quaternion;\r\n\tsetMatrix(matrix: Matrix4): Quaternion;\r\n\r\n\tsetAxisAngle(axis: Vector3, angle: number): this;\r\n\tsetVectors(from: Vector3, to: Vector3): this;\r\n\t\r\n\tcopy(quat: Quaternion): this;\r\n\tclone(): this;\r\n\tgetAxis(out: Vector3): Vector3;\r\n\r\n\tgetMatrix3(matrix: Matrix3): Matrix3;\r\n\tgetMatrix4(matrix: Matrix4): Matrix4;\r\n\r\n\trotate(vec: Vector3): Vector3;\r\n\ttoVector(): Vector3;\r\n\r\n\tangleTo(quat: Quaternion): number;\r\n\trotateTowards(quat: Quaternion): this;\r\n\tinvert(): this;\r\n\tconjugate(): this;\r\n\tdot(quat: Quaternion): number;\r\n\tlengthSquared(): number;\r\n\tlength(): number;\r\n\tnormalize(): this;\r\n\tadd(quat: Quaternion): this;\r\n\tsub(quat: Quaternion): this;\r\n\tmult(quat: Quaternion): this;\r\n\tscale(scalar: number): this;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): this;\r\n\tequals(quat: Quaternion): boolean;\r\n\tcopyIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass QuaternionBase {\r\n\tprivate _array: WritableArrayLike<number>;\r\n\r\n\tget array(): WritableArrayLike<number> {\r\n\t\treturn this._array;\r\n\t}\r\n\r\n\tconstructor()\r\n\tconstructor(array: WritableArrayLike<number>)\r\n\tconstructor(x: number, y: number, z: number, w: number)\r\n\tconstructor(...args: any[]) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis._array = [\r\n\t\t\t\targs[0], args[1], args[2], args[3]\r\n\t\t\t];\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tthis._checkArray(args[0]);\r\n\t\t\tthis._array = args[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._array = [0, 0, 0, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tget x(): number {\r\n        return this._array[0];\r\n    }\r\n\r\n    set x(x: number) {\r\n\t\tthis._array[0] = x;\r\n    }\r\n\r\n    get y(): number {\r\n        return this._array[1];\r\n    }\r\n\r\n    set y(y: number) {\r\n\t\tthis._array[1] = y;\r\n    }\r\n\r\n    set z(z: number) {\r\n\t\tthis._array[2] = z;\r\n\t}\r\n\t\r\n    get z(): number {\r\n\t\treturn this._array[2];\r\n    }\r\n\r\n    set w(w: number) {\r\n\t\tthis._array[3] = w;\r\n\t}\r\n\r\n    get w(): number {\r\n\t\treturn this._array[3];\r\n\t}\r\n\t\r\n\tget pitch(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinPitch = 2 * (w * y - z * x);\r\n\t\tif (Math.abs(sinPitch) >= 1) {\r\n            return Math.sign(sinPitch) * (Math.PI / 2);\r\n        }\r\n\t\telse {\r\n            return Math.asin(sinPitch);\r\n        }\r\n\t}\r\n\r\n\tget yaw(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinYawCosPitch = 2 * (w * z + x * y);\r\n\t\tconst cosYawCosPitch = 1 - 2 * (y * y + z * z);\r\n\t\treturn Math.atan2(sinYawCosPitch, cosYawCosPitch);\r\n\t}\r\n\r\n\tget roll(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinRollCosPitch = 2 * (w * x + y * z);\r\n\t\tconst cosRollCosPitch = 1 - 2 * (x * x + y * y);\r\n\t\treturn Math.atan2(sinRollCosPitch, cosRollCosPitch);\r\n\t}\r\n\r\n\tgetValues(): QuaternionValues {\r\n\t\treturn [\r\n\t\t\tthis._array[0],\r\n\t\t\tthis._array[1],\r\n\t\t\tthis._array[2],\r\n\t\t\tthis._array[3]\r\n\t\t];\r\n\t}\r\n\r\n\tsetValues(x: number, y: number, z: number, w: number): this {\r\n\t\tthis._array[0] = x;\r\n\t\tthis._array[1] = y;\r\n\t\tthis._array[2] = z;\r\n\t\tthis._array[3] = w;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate _checkArray(array: WritableArrayLike<number>): void {\r\n\t\tif (array.length < 4) {\r\n\t\t\tthrow new MathError(`Array must be of length 4 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t/*setArray(array: WritableArrayLike<number>): this {\r\n\t\tthis._checkArray(array);\r\n\t\tthis._array = array;\r\n\t\treturn this;\r\n\t}*/\r\n\r\n\tstatic fromArray(array: WritableArrayLike<number>): QuaternionBase {\r\n\t\treturn new QuaternionBase(array);\r\n\t}\r\n\r\n\tstatic fromAxisAngle(axis: Vector3, angle: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setAxisAngle(axis, angle);\r\n\t}\r\n\r\n\tstatic fromVector(vector: Vector3): QuaternionBase {\r\n\t\treturn new QuaternionBase(vector.x, vector.y, vector.z, 1);\r\n\t}\r\n\t\r\n\tstatic fromEuler(yaw: number, pitch: number, roll: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setEuler(yaw, pitch, roll);\r\n\t}\r\n\r\n\tcopy(quat: Quaternion): this {\r\n\t\tconst o = this._array;\r\n\t\tconst q = quat.array;\r\n\r\n\t\to[0] = q[0];\r\n\t\to[1] = q[1];\r\n\t\to[2] = q[2];\r\n\t\to[3] = q[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new QuaternionBase(this.x, this.y, this.z, this.w) as this;\r\n\t}\r\n\r\n\tequals(quat: Quaternion): boolean {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\treturn (thisArray[0] === quatArray[0])\r\n\t\t\t&& (thisArray[1] === quatArray[1])\r\n\t\t\t&& (thisArray[2] === quatArray[2])\r\n\t\t\t&& (thisArray[3] === quatArray[3]);\r\n\t}\r\n\r\n\tgetAxis(out: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst outArray = out.array;\r\n\r\n\t\tconst den = 1 - (thisArray[3] * thisArray[3]);\r\n\r\n\t\tif (den < Number.EPSILON) {\r\n\t\t  return out.setZeros();\r\n\t\t}\r\n\t  \r\n\t\tconst scale = qSqrt(den);\r\n\t\t\r\n\t\toutArray[0] = thisArray[0] * scale;\r\n\t\toutArray[1] = thisArray[1] * scale;\r\n\t\toutArray[2] = thisArray[2] * scale;\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\tgetMatrix3(matrix: Matrix3): Matrix3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst thisLengthSquared = this.lengthSquared();\r\n\t\tconst s = 2.0 / thisLengthSquared;\r\n\r\n\t\tconst x = thisArray[0];\r\n\t\tconst y = thisArray[1];\r\n\t\tconst z = thisArray[2];\r\n\t\tconst w = thisArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n\t\treturn matrix.setValues(\r\n\t\t\t1 - (yy + zz),\txy + wz,\t\txz - wy,\r\n\t\t\txy - wz,\t\t1 - (xx + zz),\tyz + wx,\r\n\t\t\txz + wy,\t\tyz - wx,\t\t1 - (xx + yy)\r\n\t\t);\r\n\t}\r\n\r\n\tgetMatrix4(matrix: Matrix4): Matrix4 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst thisLengthSquared = this.lengthSquared();\r\n\t\tconst s = 2.0 / thisLengthSquared;\r\n\r\n\t\tconst x = thisArray[0];\r\n\t\tconst y = thisArray[1];\r\n\t\tconst z = thisArray[2];\r\n\t\tconst w = thisArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n\t\treturn matrix.setValues(\r\n\t\t\t1 - (yy + zz),\txy + wz,\t\txz - wy, \t\t0,\r\n\t\t\txy - wz,\t\t1 - (xx + zz),\tyz + wx, \t\t0,\r\n\t\t\txz + wy,\t\tyz - wx,\t\t1 - (xx + yy), \t0,\r\n\t\t\t0, \t\t\t\t0, \t\t\t\t0, \t\t\t\t1\r\n\t\t);\r\n\t}\r\n\r\n\trotate(vector: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst vectorArray = vector.array;\r\n\r\n\t\tconst vx = vectorArray[0];\r\n\t\tconst vy = vectorArray[1];\r\n\t\tconst vz = vectorArray[2];\t\t\r\n\t\t\r\n\t\tconst qx = thisArray[0];\r\n\t\tconst qy = thisArray[1];\r\n\t\tconst qz = thisArray[2];\r\n\t\tconst qw = thisArray[3];\r\n\r\n\t\tconst tx = qw * vx + -qx * 0 + -qy * vz + qz * vy;\r\n\t\tconst ty = qw * vy + -qy * 0 + -qz * vx + qx * vz;\r\n\t\tconst tz = qw * vz + -qz * 0 + -qx * vy + qy * vx;\r\n\t\tconst tw = qx * vx + qw * 0 + qy * vy + qz * vz;\r\n\r\n\t\tvectorArray[0] = tw * qz + tz * qw + tx * qy - ty * qx;\r\n\t\tvectorArray[1] = tw * qy + ty * qw + tz * qx - tx * qz;\r\n\t\tvectorArray[2] = tw * qx + tx * qw + ty * qz - tz * qy;\r\n\r\n\t\treturn vector;\r\n\t}\r\n\r\n\ttoVector(): Vector3 {\r\n\t\treturn new Vector3([\r\n\t\t\tthis.x, this.y, this.z\r\n\t\t]);\r\n\t}\r\n\t\r\n\tsetEuler(pitch: number, yaw: number, roll: number): this {\r\n\t\tconst cosYaw = Math.cos(yaw * 0.5);\r\n\t\tconst sinYaw = Math.sin(yaw * 0.5);\r\n\t\tconst cosPitch = Math.cos(pitch * 0.5);\r\n\t\tconst sinPitch = Math.sin(pitch * 0.5);\r\n\t\tconst cosRoll = Math.cos(roll * 0.5);\r\n\t\tconst sinRoll = Math.sin(roll * 0.5);\r\n\t\tconst thisArray = this.array;\r\n\r\n        thisArray[0] = sinRoll * cosPitch * cosYaw - cosRoll * sinPitch * sinYaw;\r\n        thisArray[1] = cosRoll * sinPitch * cosYaw + sinRoll * cosPitch * sinYaw;\r\n        thisArray[2] = cosRoll * cosPitch * sinYaw - sinRoll * sinPitch * cosYaw;\r\n\t\tthisArray[3] = cosRoll * cosPitch * cosYaw + sinRoll * sinPitch * sinYaw;\r\n        \r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetAxisAngle(axis: Vector3, angle: number = 0): this {\r\n\t\tconst axisLength = axis.length();\r\n\t\tif (axisLength === 0) {\r\n\t\t  return this;\r\n\t\t}\r\n\t\tconst halfSin = Math.sin(angle * 0.5) / axisLength;\r\n\t\tconst axisArray = axis.array;\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] = axisArray[0] * halfSin;\r\n\t\tthisArray[1] = axisArray[1] * halfSin;\r\n\t\tthisArray[2] = axisArray[2] * halfSin;\r\n\t\tthisArray[3] = Math.cos(angle * 0.5);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetMatrix(matrix: Matrix3): this\r\n\tsetMatrix(matrix: Matrix4): this\r\n\tsetMatrix(matrix: Matrix3 | Matrix4): this {\r\n\t\tconst matrixArray = matrix.array;\r\n\t\tlet m11 = 0, m12 = 0, m13 = 0,\r\n\t\t\tm21 = 0, m22 = 0, m23 = 0,\r\n\t\t\tm31 = 0, m32 = 0, m33 = 0;\r\n\r\n\t\tif (matrix instanceof Matrix3) {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[3], m13 = matrixArray[6],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[4], m23 = matrixArray[7],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[5], m33 = matrixArray[8];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[4], m13 = matrixArray[ 8],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[5], m23 = matrixArray[ 9],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[6], m33 = matrixArray[10];\r\n\t\t}\r\n\r\n\t\tconst trace = m11 + m22 + m33;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tif (trace > 0) {\r\n\t\t\tconst s = Math.sqrt(trace + 1) * 2;\r\n\t\t\tthisArray[3] = 0.25 * s;\r\n\t\t\tthisArray[0] = (m32 - m23) / s;\r\n\t\t\tthisArray[1] = (m13 - m31) / s;\r\n\t\t\tthisArray[2] = (m21 - m12) / s;\r\n\t\t}\r\n\t\telse if (m11 > m22 && m11 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n\t\t\tthisArray[3] = (m32 - m23) / s;\r\n\t\t\tthisArray[0] = 0.25 * s;\r\n\t\t\tthisArray[1] = (m12 + m21) / s;\r\n\t\t\tthisArray[2] = (m13 + m31) / s;\r\n\t\t}\r\n\t\telse if (m22 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n\t\t\tthisArray[3] = (m13 - m31) / s;\r\n\t\t\tthisArray[0] = (m12 + m21) / s;\r\n\t\t\tthisArray[1] = 0.25 * s;\r\n\t\t\tthisArray[2] = (m23 + m32) / s;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n\t\t\tthisArray[3] = (m21 - m12) / s;\r\n\t\t\tthisArray[0] = (m13 + m31) / s;\r\n\t\t\tthisArray[1] = (m23 + m32) / s;\r\n\t\t\tthisArray[2] = 0.25 * s;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlookAt(source: Vector3, dest: Vector3): Quaternion {\r\n\t\tconst forward = dest.clone().sub(source).normalize();\r\n\r\n\t\tconst axis = Space.forward.clone().cross(forward);\r\n\t\tconst dot = Space.forward.dot(forward);\r\n\r\n\t\treturn new Quaternion(axis.x, axis.y, axis.z, dot + 1).normalize();\r\n\t}\r\n\r\n\tstatic fromMatrix(matrix: Matrix3): QuaternionBase {\r\n\t\treturn new QuaternionBase().setMatrix(matrix);\r\n\t}\r\n\r\n\tsetVectors(from: Vector3, to: Vector3): this {\r\n\t\tconst dot = from.dot(to);\r\n\t\tconst cross = from.cross(to);\r\n\t\tconst crossArray = cross.array;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = crossArray[0];\r\n\t\tthisArray[1] = crossArray[1];\r\n\t\tthisArray[2] = crossArray[2];\r\n\r\n\t\tconst fromLength = from.length();\r\n\t\tconst toLength = from.length();\r\n\r\n\t\tthisArray[3] = Math.sqrt(fromLength * fromLength * toLength * toLength) + dot;\r\n\r\n\t\treturn this.normalize();\r\n\t}\r\n\r\n\tdot(quat: Quaternion): number {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\treturn thisArray[0] * quatArray[0] + thisArray[1] * quatArray[1] + thisArray[2] * quatArray[2] + thisArray[3] * quatArray[3];\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn thisArray[0] ** 2 + thisArray[1] ** 2 + thisArray[2] ** 2 + thisArray[3] ** 2;\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn Math.hypot(thisArray[0], thisArray[1], thisArray[2], thisArray[3]);\r\n\t}\r\n\r\n\tangleTo(rotation: Quaternion): number {\r\n\t\treturn 2 * Math.acos(Math.abs(Math.max(-1, Math.min(1, this.dot(rotation)))));\r\n\t}\r\n\r\n\trotateTowards(rotation: Quaternion): this {\r\n\t\tconst angle = this.angleTo(rotation);\r\n\r\n\t\tif (angle === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconst t = Math.min(1, angle);\r\n\t\tthis.slerp(this, rotation, t);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tinvert(): this {\r\n\t\treturn this.conjugate();\r\n\t}\r\n\t\r\n\tconjugate(): this {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] *= -1;\r\n\t\tthisArray[1] *= -1;\r\n\t\tthisArray[2] *= -1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tlet length = this.length();\r\n\r\n\t\tif (length === 0) {\r\n\t\t\tthisArray[0] = 0;\r\n\t\t\tthisArray[1] = 0;\r\n\t\t\tthisArray[2] = 0;\r\n\t\t\tthisArray[3] = 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlength = 1 / length;\r\n\t\t\tthisArray[0] *= length;\r\n\t\t\tthisArray[1] *= length;\r\n\t\t\tthisArray[2] *= length;\r\n\t\t\tthisArray[3] *= length;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tadd(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] += quatArray[0];\r\n\t\tthisArray[1] += quatArray[1];\r\n\t\tthisArray[2] += quatArray[2];\r\n\t\tthisArray[3] += quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] -= quatArray[0];\r\n\t\tthisArray[1] -= quatArray[1];\r\n\t\tthisArray[2] -= quatArray[2];\r\n\t\tthisArray[3] -= quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\tconst ax = thisArray[0], ay = thisArray[1], az = thisArray[2], aw = thisArray[3];\r\n\t\tconst bx = quatArray[0], by = quatArray[1], bz = quatArray[2], bw = quatArray[3];\r\n\r\n\t\tthisArray[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n\t\tthisArray[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n\t\tthisArray[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n\t\tthisArray[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tscale(scalar: number): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] *= scalar;\r\n\t\tthisArray[1] *= scalar;\r\n\t\tthisArray[2] *= scalar;\r\n\t\tthisArray[3] *= scalar;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number, out?: Quaternion): Quaternion {\r\n\t\tif (!(out instanceof Quaternion)) {\r\n\t\t\tout = new Quaternion();\r\n\t\t}\r\n\t\tif (t === 0) return out.copy(from);\r\n\t\tif (t === 1) return out.copy(to);\r\n\r\n\t\tconst outArray = out.array;\r\n\t\tconst fromArray = from.array;\r\n\t\tconst toArray = to.array;\r\n\r\n\t\tconst cosHalfTheta = fromArray[3] * toArray[3] + fromArray[0] * toArray[0] + fromArray[1] * toArray[1] + fromArray[2] * toArray[2];\r\n\t\t\r\n\t\tif (Math.abs(cosHalfTheta) >= 1) {\r\n\t\t\toutArray[3] = fromArray[3];\r\n\t\t\toutArray[0] = fromArray[0];\r\n\t\t\toutArray[1] = fromArray[1];\r\n\t\t\toutArray[2] = fromArray[2];\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst halfTheta = Math.acos(cosHalfTheta);\r\n\t\tconst sinHalfTheta = Math.sqrt(1 - cosHalfTheta * cosHalfTheta);\r\n\t\t\r\n\t\tif (Math.abs(sinHalfTheta - Math.trunc(sinHalfTheta)) < Number.EPSILON) {\r\n\t\t\toutArray[3] = (fromArray[3] * 0.5 + toArray[3] * 0.5);\r\n\t\t\toutArray[0] = (fromArray[0] * 0.5 + toArray[0] * 0.5);\r\n\t\t\toutArray[1] = (fromArray[1] * 0.5 + toArray[1] * 0.5);\r\n\t\t\toutArray[2] = (fromArray[2] * 0.5 + toArray[2] * 0.5);\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta;\r\n\t\tconst ratioB = Math.sin(t * halfTheta) / sinHalfTheta; \r\n\t\toutArray[3] = (fromArray[3] * ratioA + toArray[3] * ratioB);\r\n\t\toutArray[0] = (fromArray[0] * ratioA + toArray[0] * ratioB);\r\n\t\toutArray[1] = (fromArray[1] * ratioA + toArray[1] * ratioB);\r\n\t\toutArray[2] = (fromArray[2] * ratioA + toArray[2] * ratioB);\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * https://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t */\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): this {\r\n\t\treturn Quaternion.slerp(from, to, t, this) as this;\r\n\t}\r\n\r\n\tcopyIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tarray[offset    ] = thisArray[0];\r\n\t\tarray[offset + 1] = thisArray[1];\r\n\t\tarray[offset + 2] = thisArray[2];\r\n\t\tarray[offset + 3] = thisArray[3];\r\n    }\r\n    \r\n    readFromArray(array: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = array[offset    ];\r\n\t\tthisArray[1] = array[offset + 1];\r\n\t\tthisArray[2] = array[offset + 2];\r\n\t\tthisArray[3] = array[offset + 3];\r\n    }\r\n}\r\n\r\nvar Quaternion: QuaternionConstructor = QuaternionBase;\r\nconst QuaternionPool: StackPool<Quaternion> = new StackPool(QuaternionBase);\r\nconst QuaternionInjector: Injector<QuaternionConstructor> = new Injector({\r\n\tdefaultCtor: QuaternionBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: QuaternionConstructor) => {\r\n\t\t\tQuaternion = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Quaternion } from \"../quaternions/Quaternion\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"../vectors/Vector3\";\r\nimport { Vector4, Vector4Values } from \"../vectors/Vector4\";\r\nimport { Matrix3, Matrix3Values } from \"./Matrix3\";\r\n\r\nexport { Matrix4Values };\r\nexport { Matrix4 };\r\nexport { Matrix4Injector };\r\nexport { Matrix4Base };\r\n\r\ntype Matrix4Values = [\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number\r\n];\r\n\r\ninterface Matrix4Constructor {\r\n\treadonly prototype: Matrix4;\r\n\tnew(): Matrix4;\r\n\tnew(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  new(array: ArrayLike<number>): Matrix4;\r\n\r\n  fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  fromArray(array: ArrayLike<number>): Matrix4;\r\n\r\n  invert(A: Matrix4, out: Matrix4): Matrix4;\r\n  transpose(A: Matrix4, out: Matrix4): Matrix4;\r\n  add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n\r\n  identity(): Matrix4;\r\n  zeros(): Matrix4;\r\n\r\n  translation(vector: Vector3): Matrix4;\r\n  rotationX(angle: number): Matrix4;\r\n  rotationY(angle: number): Matrix4;\r\n  rotationZ(angle: number): Matrix4;\r\n  rotation(matrix: Matrix3): Matrix4;\r\n  scaling(vector: Vector3): Matrix4;\r\n  \r\n  perspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): Matrix4;\r\n  orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n  frustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n}\r\n\r\n/**\r\n * 4x4 matrix. Values are stored in column major order.\r\n */\r\ninterface Matrix4 {\r\n  readonly array: Float32Array;\r\n  getValues(): Matrix4Values\r\n  setValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this;\r\n  /*row1: Vector4Values;\r\n  row2: Vector4Values;\r\n  row3: Vector4Values;\r\n  row4: Vector4Values;\r\n  col1: Vector4Values;\r\n  col2: Vector4Values;\r\n  col3: Vector4Values;\r\n  col4: Vector4Values;*/\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m14: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m24: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  m34: number;\r\n  m41: number;\r\n  m42: number;\r\n  m43: number;\r\n  m44: number;\r\n  //setArray(array: WritableArrayLike<number>): this;\r\n  getRotation(): Quaternion;\r\n  setRotation(rotation: Quaternion): this;\r\n  setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this;\r\n  equals(mat: Matrix4): boolean;\r\n  copy(mat: Matrix4): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix4): this;\r\n  sub(mat: Matrix4): this;\r\n  mult(mat: Matrix4): this;\r\n\r\n  getMaxScaleOnAxis(): number;\r\n  solve(vecB: Vector4): Vector4Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  solve3(vecB: Vector3): Vector3Values;\r\n\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n\r\n  setTranslation(vector: Vector3): this;\r\n  translate(vector: Vector3): this;\r\n\r\n  setRotationX(angle: number): this;\r\n  rotateX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  rotateY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n  rotateZ(angle: number): this;\r\n\r\n  rotate(vector: Vector3, angle: number): this\r\n  rotation(matrix: Matrix3): this;\r\n\r\n  setScaling(vector: Vector3): this;\r\n  scale(vector: Vector3): this;\r\n\r\n  lookAt(eye: Vector3 | Vector3Values, target: Vector3, up: Vector3): this;\r\n\r\n  transformPoint(point: Vector3): Vector3;\r\n  transformDirection(direction: Vector3): Vector3;\r\n  transformNormal(normal: Vector3): Vector3;\r\n  \r\n  setFrustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n  setPerspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): this;\r\n  setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n}\r\n\r\nclass Matrix4Base implements Matrix4 {\r\n  readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  )\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[ 0], args[ 1], args[ 2], args[ 3],\r\n        args[ 4], args[ 5], args[ 6], args[ 7],\r\n        args[ 8], args[ 9], args[10], args[11],\r\n        args[12], args[13], args[14], args[15]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array(16);\r\n\t\t}\r\n  }\r\n\r\n  static fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4Base {\r\n    return new Matrix4Base(\r\n      m11, m21, m31, m41,\r\n      m12, m22, m32, m42,\r\n      m13, m23, m33, m43,\r\n      m14, m24, m34, m44\r\n    );\r\n  }\r\n\r\n  static fromArray(array: ArrayLike<number>): Matrix4Base {\r\n    if (array.length < 16) {\r\n      throw new Error(`Matrix4 needs an array of size 16 at least.`);\r\n    }\r\n    return new Matrix4Base(array);\r\n  }\r\n\r\n  getValues(): Matrix4Values {\r\n    const thisArray = this.array;\r\n\t\treturn [\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ];\r\n\t}\r\n\r\n\tsetValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 3] = m41;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 7] = m42;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n    thisArray[11] = m43;\r\n    thisArray[12] = m14;\r\n    thisArray[13] = m24;\r\n    thisArray[14] = m34;\r\n    thisArray[15] = m44;\r\n\r\n    return this;\r\n  }\r\n  \r\n  get m11(): number {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  get m12() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tset m12(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  get m13() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n\tset m13(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n  \r\n  get m14() {\r\n\t\treturn this.array[12];\r\n\t}\r\n\r\n\tset m14(val: number) {\r\n\t\tthis.array[12] = val;\r\n  }\r\n  \r\n  get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  get m22() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tset m22(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  get m23() {\r\n\t\treturn this.array[9];\r\n\t}\r\n\r\n\tset m23(val: number) {\r\n\t\tthis.array[9] = val;\r\n  }\r\n  \r\n  get m24() {\r\n\t\treturn this.array[13];\r\n\t}\r\n\r\n\tset m24(val: number) {\r\n\t\tthis.array[13] = val;\r\n  }\r\n  \r\n  get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  get m32() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tset m32(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  get m33() {\r\n\t\treturn this.array[10];\r\n\t}\r\n\r\n  set m33(val: number) {\r\n\t\tthis.array[10] = val;\r\n  }\r\n  \r\n  get m34() {\r\n\t\treturn this.array[14];\r\n\t}\r\n\r\n\tset m34(m34: number) {\r\n\t\tthis.array[14] = m34;\r\n  }\r\n  \r\n  get m41() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset m41(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  get m42() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tset m42(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  get m43() {\r\n\t\treturn this.array[11];\r\n\t}\r\n\r\n\tset m43(val: number) {\r\n\t\tthis.array[11] = val;\r\n  }\r\n  \r\n  get m44() {\r\n\t\treturn this.array[15];\r\n\t}\r\n\r\n\tset m44(m44: number) {\r\n\t\tthis.array[15] = m44;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 16) {\r\n\t\t\tthrow new MathError(`Array must be of length 16 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t// setArray(array: WritableArrayLike<number>): this {\r\n\t// \tthis._checkArray(array);\r\n\t// \tthisArray = array;\r\n\t// \treturn this;\r\n\t// }\r\n\r\n  getRotation(): Quaternion {\r\n    const thisArray = this.array;\r\n    const m11 = thisArray[0], m12 = thisArray[4], m13 = thisArray[ 8],\r\n          m21 = thisArray[1], m22 = thisArray[5], m23 = thisArray[ 9],\r\n          m31 = thisArray[2], m32 = thisArray[6], m33 = thisArray[10];\r\n    const trace = m11 + m22 + m33;\r\n    \r\n    let x = 0;\r\n    let y = 0;\r\n    let z = 0;\r\n    let w = 0;\r\n\r\n    if (trace > 0) {\r\n      const s = Math.sqrt(trace + 1) * 2;\r\n      w = 0.25 * s;\r\n      x = (m32 - m23) / s;\r\n      y = (m13 - m31) / s;\r\n      z = (m21 - m12) / s;\r\n    }\r\n    else if (m11 > m22 && m11 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n      w = (m32 - m23) / s;\r\n      x = 0.25 * s;\r\n      y = (m12 + m21) / s;\r\n      z = (m13 + m31) / s;\r\n    }\r\n    else if (m22 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n      w = (m13 - m31) / s;\r\n      x = (m12 + m21) / s;\r\n      y = 0.25 * s;\r\n      z = (m23 + m32) / s;\r\n    }\r\n    else {\r\n      const s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n      w = (m21 - m12) / s;\r\n      x = (m13 + m31) / s;\r\n      y = (m23 + m32) / s;\r\n      z = 0.25 * s;\r\n    }\r\n    \r\n    return new Quaternion(x, y, z, w);\r\n  }\r\n\r\n  setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this {\r\n    const thisArray = this.array;\r\n    const rotationArray = rotation.array;\r\n    const translationArray = translation.array;\r\n    const scalingArray = scaling.array;\r\n\r\n    const x = rotationArray[0];\r\n    const y = rotationArray[1];\r\n    const z = rotationArray[2];\r\n    const w = rotationArray[3];\r\n\r\n    const x2 = x + x;\r\n    const y2 = y + y;\r\n    const z2 = z + z;\r\n\r\n    const xx = x * x2;\r\n    const xy = x * y2;\r\n    const xz = x * z2;\r\n    const yy = y * y2;\r\n    const yz = y * z2;\r\n    const zz = z * z2;\r\n    const wx = w * x2;\r\n    const wy = w * y2;\r\n    const wz = w * z2;\r\n    const sx = scalingArray[0];\r\n    const sy = scalingArray[1];\r\n    const sz = scalingArray[2];\r\n\r\n    thisArray[0] = (1 - (yy + zz)) * sx;\r\n    thisArray[1] = (xy + wz) * sx;\r\n    thisArray[2] = (xz - wy) * sx;\r\n    thisArray[3] = 0;\r\n    thisArray[4] = (xy - wz) * sy;\r\n    thisArray[5] = (1 - (xx + zz)) * sy;\r\n    thisArray[6] = (yz + wx) * sy;\r\n    thisArray[7] = 0;\r\n    thisArray[8] = (xz + wy) * sz;\r\n    thisArray[9] = (yz - wx) * sz;\r\n    thisArray[10] = (1 - (xx + yy)) * sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = translationArray[0];\r\n    thisArray[13] = translationArray[1];\r\n    thisArray[14] = translationArray[2];\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n  \r\n  setRotation(quaternion: Quaternion): this {\r\n    const thisArray = this.array;\r\n    const quaternionArray = quaternion.array;\r\n\t\tconst quaternionLengthSquared = quaternion.lengthSquared();\r\n\t\tconst s = 2.0 / quaternionLengthSquared;\r\n\r\n\t\tconst x = quaternionArray[0];\r\n\t\tconst y = quaternionArray[1];\r\n\t\tconst z = quaternionArray[2];\r\n\t\tconst w = quaternionArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n    const m11 = 1 - (yy + zz);\r\n    const m21 = xy + wz;\r\n    const m31 = xz - wy;\r\n    const m12 = xy - wz;\r\n    const m22 = 1 - (xx + zz);\r\n    const m32 = yz + wx;\r\n    const m13 = xz + wy;\r\n    const m23 = yz - wx;\r\n    const m33 = 1 - (xx + yy);\r\n\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n  equals(mat: Matrix4): boolean {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n    return thisArray[ 0] === matArray[ 0]\r\n      && thisArray[ 1] === matArray[ 1]\r\n      && thisArray[ 2] === matArray[ 2]\r\n      && thisArray[ 3] === matArray[ 3]\r\n      && thisArray[ 4] === matArray[ 4]\r\n      && thisArray[ 5] === matArray[ 5]\r\n      && thisArray[ 6] === matArray[ 6]\r\n      && thisArray[ 7] === matArray[ 7]\r\n      && thisArray[ 8] === matArray[ 8]\r\n      && thisArray[ 9] === matArray[ 9]\r\n      && thisArray[10] === matArray[10]\r\n      && thisArray[11] === matArray[11]\r\n      && thisArray[12] === matArray[12]\r\n      && thisArray[13] === matArray[13]\r\n      && thisArray[14] === matArray[14]\r\n      && thisArray[15] === matArray[15];\r\n  }\r\n\r\n  copy(mat: Matrix4): this {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n\r\n    thisArray[ 0] = matArray[ 0];\r\n    thisArray[ 1] = matArray[ 1];\r\n    thisArray[ 2] = matArray[ 2];\r\n    thisArray[ 3] = matArray[ 3];\r\n    thisArray[ 4] = matArray[ 4];\r\n    thisArray[ 5] = matArray[ 5];\r\n    thisArray[ 6] = matArray[ 6];\r\n    thisArray[ 7] = matArray[ 7];\r\n    thisArray[ 8] = matArray[ 8];\r\n    thisArray[ 9] = matArray[ 9];\r\n    thisArray[10] = matArray[10];\r\n    thisArray[11] = matArray[11];\r\n    thisArray[12] = matArray[12];\r\n    thisArray[13] = matArray[13];\r\n    thisArray[14] = matArray[14];\r\n    thisArray[15] = matArray[15];\r\n\r\n    return this;\r\n  }\r\n\r\n  clone(): this {\r\n    const thisArray = this.array;\r\n    return new Matrix4Base(\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ) as this;\r\n  }\r\n\r\n  static identity(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      1, 0, 0, 0,\r\n      0, 1, 0, 0,\r\n      0, 0, 1, 0,\r\n      0, 0, 0, 1\r\n    );\r\n  }\r\n\r\n  setIdentity(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  static zeros(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0\r\n    );\r\n  }\r\n\r\n  setZeros(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 0;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 0;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 0;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  det(): number {\r\n    const thisArray = this.array;\r\n    const det2_01_01 = thisArray[0] * thisArray[5] - thisArray[1] * thisArray[4];\r\n    const det2_01_02 = thisArray[0] * thisArray[6] - thisArray[2] * thisArray[4];\r\n    const det2_01_03 = thisArray[0] * thisArray[7] - thisArray[3] * thisArray[4];\r\n    const det2_01_12 = thisArray[1] * thisArray[6] - thisArray[2] * thisArray[5];\r\n    const det2_01_13 = thisArray[1] * thisArray[7] - thisArray[3] * thisArray[5];\r\n    const det2_01_23 = thisArray[2] * thisArray[7] - thisArray[3] * thisArray[6];\r\n    const det3_201_012 = thisArray[8] * det2_01_12 - thisArray[ 9] * det2_01_02 + thisArray[10] * det2_01_01;\r\n    const det3_201_013 = thisArray[8] * det2_01_13 - thisArray[ 9] * det2_01_03 + thisArray[11] * det2_01_01;\r\n    const det3_201_023 = thisArray[8] * det2_01_23 - thisArray[10] * det2_01_03 + thisArray[11] * det2_01_02;\r\n    const det3_201_123 = thisArray[9] * det2_01_23 - thisArray[10] * det2_01_13 + thisArray[11] * det2_01_12;\r\n\r\n    return -det3_201_123 * thisArray[12] + det3_201_023 * thisArray[13]\r\n      - det3_201_013 * thisArray[14] + det3_201_012 * thisArray[15];\r\n  }\r\n\r\n  trace(): number {\r\n    const thisArray = this.array;\r\n    return thisArray[0] + thisArray[5] + thisArray[10] + thisArray[15];\r\n  }\r\n\r\n  static negate(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = -a[ 0];\r\n    o[ 1] = -a[ 1];\r\n    o[ 2] = -a[ 2];\r\n    o[ 3] = -a[ 3];\r\n    o[ 4] = -a[ 4];\r\n    o[ 5] = -a[ 5];\r\n    o[ 6] = -a[ 6];\r\n    o[ 7] = -a[ 7];\r\n    o[ 8] = -a[ 8];\r\n    o[ 9] = -a[ 9];\r\n    o[10] = -a[10];\r\n    o[11] = -a[11];\r\n    o[12] = -a[12];\r\n    o[13] = -a[13];\r\n    o[14] = -a[14];\r\n    o[15] = -a[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  negate(): this {\r\n    return Matrix4Base.negate(this, this) as this;\r\n  }\r\n\r\n  static transpose(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    o[ 0] = a11;\r\n    o[ 1] = a12;\r\n    o[ 2] = a13;\r\n    o[ 3] = a14;\r\n    o[ 4] = a21;\r\n    o[ 5] = a22;\r\n    o[ 6] = a23;\r\n    o[ 7] = a24;\r\n    o[ 8] = a31;\r\n    o[ 9] = a32;\r\n    o[10] = a33;\r\n    o[11] = a34;\r\n    o[12] = a41;\r\n    o[13] = a42;\r\n    o[14] = a43;\r\n    o[15] = a44;\r\n    \r\n    return out;\r\n  }\r\n\r\n  transpose(): this {\r\n    return Matrix4Base.transpose(this, this) as this;\r\n  }\r\n\r\n  static invert(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const o00 = a[ 0];\r\n    const o01 = a[ 1];\r\n    const o02 = a[ 2];\r\n    const o03 = a[ 3];\r\n    const o10 = a[ 4];\r\n    const o11 = a[ 5];\r\n    const o12 = a[ 6];\r\n    const o13 = a[ 7];\r\n    const o20 = a[ 8];\r\n    const o21 = a[ 9];\r\n    const o22 = a[10];\r\n    const o23 = a[11];\r\n    const o30 = a[12];\r\n    const o31 = a[13];\r\n    const o32 = a[14];\r\n    const o33 = a[15];\r\n\r\n    const t00 = o00 * o11 - o01 * o10;\r\n    const t01 = o00 * o12 - o02 * o10;\r\n    const t02 = o00 * o13 - o03 * o10;\r\n    const t03 = o01 * o12 - o02 * o11;\r\n    const t04 = o01 * o13 - o03 * o11;\r\n    const t05 = o02 * o13 - o03 * o12;\r\n    const t06 = o20 * o31 - o21 * o30;\r\n    const t07 = o20 * o32 - o22 * o30;\r\n    const t08 = o20 * o33 - o23 * o30;\r\n    const t09 = o21 * o32 - o22 * o31;\r\n    const t10 = o21 * o33 - o23 * o31;\r\n    const t11 = o22 * o33 - o23 * o32;\r\n\r\n    const d = (t00 * t11 - t01 * t10 + t02 * t09 + t03 * t08 - t04 * t07 + t05 * t06);\r\n    \r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    const invDet = 1 / d;\r\n\r\n    o[ 0] = (o11 * t11 - o12 * t10 + o13 * t09) * invDet;\r\n    o[ 1] = (-o01 * t11 + o02 * t10 - o03 * t09) * invDet;\r\n    o[ 2] = (o31 * t05 - o32 * t04 + o33 * t03) * invDet;\r\n    o[ 3] = (-o21 * t05 + o22 * t04 - o23 * t03) * invDet;\r\n    o[ 4] = (-o10 * t11 + o12 * t08 - o13 * t07) * invDet;\r\n    o[ 5] = (o00 * t11 - o02 * t08 + o03 * t07) * invDet;\r\n    o[ 6] = (-o30 * t05 + o32 * t02 - o33 * t01) * invDet;\r\n    o[ 7] = (o20 * t05 - o22 * t02 + o23 * t01) * invDet;\r\n    o[ 8] = (o10 * t10 - o11 * t08 + o13 * t06) * invDet;\r\n    o[ 9] = (-o00 * t10 + o01 * t08 - o03 * t06) * invDet;\r\n    o[10] = (o30 * t04 - o31 * t02 + o33 * t00) * invDet;\r\n    o[11] = (-o20 * t04 + o21 * t02 - o23 * t00) * invDet;\r\n    o[12] = (-o10 * t09 + o11 * t07 - o12 * t06) * invDet;\r\n    o[13] = (o00 * t09 - o01 * t07 + o02 * t06) * invDet;\r\n    o[14] = (-o30 * t03 + o31 * t01 - o32 * t00) * invDet;\r\n    o[15] = (o20 * t03 - o21 * t01 + o22 * t00) * invDet;\r\n\r\n    return out;\r\n  }\r\n\r\n  invert(): this {\r\n    return Matrix4Base.invert(this, this) as this;\r\n  }\r\n\r\n  static add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] + b[ 0];\r\n    o[ 1] = a[ 1] + b[ 1];\r\n    o[ 2] = a[ 2] + b[ 2];\r\n    o[ 3] = a[ 3] + b[ 3];\r\n    o[ 4] = a[ 4] + b[ 4];\r\n    o[ 5] = a[ 5] + b[ 5];\r\n    o[ 6] = a[ 6] + b[ 6];\r\n    o[ 7] = a[ 7] + b[ 7];\r\n    o[ 8] = a[ 8] + b[ 8];\r\n    o[ 9] = a[ 9] + b[ 9];\r\n    o[10] = a[10] + b[10];\r\n    o[11] = a[11] + b[11];\r\n    o[12] = a[12] + b[12];\r\n    o[13] = a[13] + b[13];\r\n    o[14] = a[14] + b[14];\r\n    o[15] = a[15] + b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  add(matrix: Matrix4): this {\r\n    return Matrix4Base.add(this, matrix, this) as this;\r\n  }\r\n\r\n  static sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] - b[ 0];\r\n    o[ 1] = a[ 1] - b[ 1];\r\n    o[ 2] = a[ 2] - b[ 2];\r\n    o[ 3] = a[ 3] - b[ 3];\r\n    o[ 4] = a[ 4] - b[ 4];\r\n    o[ 5] = a[ 5] - b[ 5];\r\n    o[ 6] = a[ 6] - b[ 6];\r\n    o[ 7] = a[ 7] - b[ 7];\r\n    o[ 8] = a[ 8] - b[ 8];\r\n    o[ 9] = a[ 9] - b[ 9];\r\n    o[10] = a[10] - b[10];\r\n    o[11] = a[11] - b[11];\r\n    o[12] = a[12] - b[12];\r\n    o[13] = a[13] - b[13];\r\n    o[14] = a[14] - b[14];\r\n    o[15] = a[15] - b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  sub(matrix: Matrix4): this {\r\n    return Matrix4Base.sub(this, matrix, this) as this;\r\n  }\r\n\r\n  static mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    const b11 = b[ 0];\r\n    const b21 = b[ 1];\r\n    const b31 = b[ 2];\r\n    const b41 = b[ 3];\r\n    const b12 = b[ 4];\r\n    const b22 = b[ 5];\r\n    const b32 = b[ 6];\r\n    const b42 = b[ 7];\r\n    const b13 = b[ 8];\r\n    const b23 = b[ 9];\r\n    const b33 = b[10];\r\n    const b43 = b[11];\r\n    const b14 = b[12];\r\n    const b24 = b[13];\r\n    const b34 = b[14];\r\n    const b44 = b[15];\r\n\r\n    o[ 0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n    o[ 1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n    o[ 2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n    o[ 3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n    o[ 4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n    o[ 5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n    o[ 6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n    o[ 7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n    o[ 8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n    o[ 9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n    o[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n    o[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n    o[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n    o[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n    o[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n    o[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n    return out;\r\n  }\r\n\r\n  mult(matrix: Matrix4): this {\r\n    return Matrix4Base.mult(this, matrix, this) as this;\r\n  }\r\n\r\n\tgetMaxScaleOnAxis(): number {\r\n    const thisArray = this.array;\r\n    const scaleXSq = thisArray[ 0] * thisArray[ 0] + thisArray[ 1] * thisArray[ 1] + thisArray[ 2] * thisArray[ 2];\r\n    const scaleYSq = thisArray[ 4] * thisArray[ 4] + thisArray[ 5] * thisArray[ 5] + thisArray[ 6] * thisArray[ 6];\r\n    const scaleZSq = thisArray[ 8] * thisArray[ 8] + thisArray[ 9] * thisArray[ 9] + thisArray[10] * thisArray[10];\r\n\r\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\r\n  }\r\n\r\n  writeIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n    const thisArray = this.array;\r\n\t\tarray[offset     ] = thisArray[ 0];\r\n\t\tarray[offset +  1] = thisArray[ 1];\r\n    array[offset +  2] = thisArray[ 2];\r\n    array[offset +  3] = thisArray[ 3];\r\n\t\tarray[offset +  4] = thisArray[ 4];\r\n    array[offset +  5] = thisArray[ 5];\r\n    array[offset +  6] = thisArray[ 6];\r\n\t\tarray[offset +  7] = thisArray[ 7];\r\n    array[offset +  8] = thisArray[ 8];\r\n    array[offset +  9] = thisArray[ 9];\r\n\t\tarray[offset + 10] = thisArray[10];\r\n    array[offset + 11] = thisArray[11];\r\n    array[offset + 12] = thisArray[12];\r\n\t\tarray[offset + 13] = thisArray[13];\r\n    array[offset + 14] = thisArray[14];\r\n    array[offset + 15] = thisArray[15];\r\n  }\r\n    \r\n  readFromArray(array: ArrayLike<number>, offset: number = 0): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = array[offset     ];\r\n    thisArray[ 1] = array[offset +  1];\r\n    thisArray[ 2] = array[offset +  2];\r\n    thisArray[ 3] = array[offset +  3];\r\n    thisArray[ 4] = array[offset +  4];\r\n    thisArray[ 5] = array[offset +  5];\r\n    thisArray[ 6] = array[offset +  6];\r\n    thisArray[ 7] = array[offset +  7];\r\n    thisArray[ 8] = array[offset +  8];\r\n    thisArray[ 9] = array[offset +  9];\r\n    thisArray[10] = array[offset + 10];\r\n    thisArray[11] = array[offset + 11];\r\n    thisArray[12] = array[offset + 12];\r\n    thisArray[13] = array[offset + 13];\r\n    thisArray[14] = array[offset + 14];\r\n    thisArray[15] = array[offset + 15];\r\n\r\n    return this;\r\n  }\r\n\r\n  solve(vecB: Vector4): Vector4Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a14 = a[ 3];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a24 = a[ 7];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const a34 = a[11];\r\n    const a41 = a[12];\r\n    const a42 = a[13];\r\n    const a43 = a[14];\r\n    const a44 = a[15];\r\n    const b00 = a11 * a22 - a12 * a21;\r\n    const b01 = a11 * a23 - a13 * a21;\r\n    const b02 = a11 * a24 - a14 * a21;\r\n    const b03 = a12 * a23 - a13 * a22;\r\n    const b04 = a12 * a24 - a14 * a22;\r\n    const b05 = a13 * a24 - a14 * a23;\r\n    const b06 = a31 * a42 - a32 * a41;\r\n    const b07 = a31 * a43 - a33 * a41;\r\n    const b08 = a31 * a44 - a34 * a41;\r\n    const b09 = a32 * a43 - a33 * a42;\r\n    const b10 = a32 * a44 - a34 * a42;\r\n    const b11 = a33 * a44 - a34 * a43;\r\n\r\n    const bX = vecB.x;\r\n    const bY = vecB.y;\r\n    const bZ = vecB.z;\r\n    const bW = vecB.w;\r\n\r\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (det != 0) {\r\n      det = 1 / det;\r\n    }\r\n\r\n    const x = det *\r\n      ((a22 * b11 - a23 * b10 + a24 * b09) * bX -\r\n      (a21 * b11 - a23 * b08 + a24 * b07) * bY +\r\n      (a21 * b10 - a22 * b08 + a24 * b06) * bZ -\r\n      (a21 * b09 - a22 * b07 + a23 * b06) * bW)\r\n    const y = det *\r\n      -((a12 * b11 - a13 * b10 + a14 * b09) * bX -\r\n      (a11 * b11 - a13 * b08 + a14 * b07) * bY +\r\n      (a11 * b10 - a12 * b08 + a14 * b06) * bZ -\r\n      (a11 * b09 - a12 * b07 + a13 * b06) * bW)\r\n    const z = det *\r\n      ((a42 * b05 - a43 * b04 + a44 * b03) * bX -\r\n      (a41 * b05 - a43 * b02 + a44 * b01) * bY +\r\n      (a41 * b04 - a42 * b02 + a44 * b00) * bZ -\r\n      (a41 * b03 - a42 * b01 + a43 * b00) * bW)\r\n    const w = det *\r\n      -((a32 * b05 - a33 * b04 + a34 * b03) * bX -\r\n      (a31 * b05 - a33 * b02 + a34 * b01) * bY +\r\n      (a31 * b04 - a32 * b02 + a34 * b00) * bZ -\r\n      (a31 * b03 - a32 * b01 + a33 * b00) * bW);\r\n    \r\n    return [\r\n      x, y, z, w\r\n    ];\r\n  }\r\n\r\n  solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[4];\r\n    const a22 = a[5];\r\n    const bx = vecB.x - a[8];\r\n    const by = vecB.y - a[9];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by);\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n\r\n  solve3(vecB: Vector3): Vector3Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const bx = vecB.x - a[12];\r\n    const by = vecB.y - a[13];\r\n    const bz = vecB.z - a[14];\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n\r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n\r\n    return [\r\n      x, y, z\r\n    ];\r\n  }\r\n\r\n  static translation(vector: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setTranslation(vector);\r\n  }\r\n\r\n  setTranslation(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n\r\n    const x = vecArray[0];\r\n    const y = vecArray[1];\r\n    const z = vecArray[2];\r\n\r\n    /*thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;*/\r\n    thisArray[12] = x;\r\n    thisArray[13] = y;\r\n    thisArray[14] = z;\r\n    //thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  translate(vector: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vectorArray = vector.array;\r\n\r\n    const tx = vectorArray[0];\r\n    const ty = vectorArray[1];\r\n    const tz = vectorArray[2];\r\n    const tw = 1;\r\n\r\n    const t1 = thisArray[0] * tx + thisArray[4] * ty + thisArray[ 8] * tz + thisArray[12] * tw;\r\n    const t2 = thisArray[1] * tx + thisArray[5] * ty + thisArray[ 9] * tz + thisArray[13] * tw;\r\n    const t3 = thisArray[2] * tx + thisArray[6] * ty + thisArray[10] * tz + thisArray[14] * tw;\r\n    const t4 = thisArray[3] * tx + thisArray[7] * ty + thisArray[11] * tz + thisArray[15] * tw;\r\n\r\n    thisArray[12] = t1;\r\n    thisArray[13] = t2;\r\n    thisArray[14] = t3;\r\n    thisArray[15] = t4;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationX(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationX(angle);\r\n  }\r\n\r\n  setRotationX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = sinAngle;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = -sinAngle;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  rotateX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[4] *  cosAngle + thisArray[ 8] * sinAngle;\r\n    const t2 = thisArray[5] *  cosAngle + thisArray[ 9] * sinAngle;\r\n    const t3 = thisArray[6] *  cosAngle + thisArray[10] * sinAngle;\r\n    const t4 = thisArray[7] *  cosAngle + thisArray[11] * sinAngle;\r\n    const t5 = thisArray[4] * -sinAngle + thisArray[ 8] * cosAngle;\r\n    const t6 = thisArray[5] * -sinAngle + thisArray[ 9] * cosAngle;\r\n    const t7 = thisArray[6] * -sinAngle + thisArray[10] * cosAngle;\r\n    const t8 = thisArray[7] * -sinAngle + thisArray[11] * cosAngle;\r\n\r\n    thisArray[ 4] = t1;\r\n    thisArray[ 5] = t2;\r\n    thisArray[ 6] = t3;\r\n    thisArray[ 7] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationY(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationY(angle);\r\n  }\r\n\r\n  setRotationY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = -sinAngle;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = sinAngle;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  rotateY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[ 0] * cosAngle + thisArray[ 8] * -sinAngle;\r\n    const t2 = thisArray[ 1] * cosAngle + thisArray[ 9] * -sinAngle;\r\n    const t3 = thisArray[ 2] * cosAngle + thisArray[10] * -sinAngle;\r\n    const t4 = thisArray[ 3] * cosAngle + thisArray[11] * -sinAngle;\r\n    const t5 = thisArray[ 0] * sinAngle + thisArray[ 8] *  cosAngle;\r\n    const t6 = thisArray[ 1] * sinAngle + thisArray[ 9] *  cosAngle;\r\n    const t7 = thisArray[ 2] * sinAngle + thisArray[10] *  cosAngle;\r\n    const t8 = thisArray[ 3] * sinAngle + thisArray[11] *  cosAngle;\r\n\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationZ(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationZ(angle);\r\n  }\r\n\r\n  setRotationZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngles = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = sinAngles;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = -sinAngles;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  rotateZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[0] *  cosAngle + thisArray[4] * sinAngle;\r\n    const t2 = thisArray[1] *  cosAngle + thisArray[5] * sinAngle;\r\n    const t3 = thisArray[2] *  cosAngle + thisArray[6] * sinAngle;\r\n    const t4 = thisArray[3] *  cosAngle + thisArray[7] * sinAngle;\r\n    const t5 = thisArray[0] * -sinAngle + thisArray[4] * cosAngle;\r\n    const t6 = thisArray[1] * -sinAngle + thisArray[5] * cosAngle;\r\n    const t7 = thisArray[2] * -sinAngle + thisArray[6] * cosAngle;\r\n    const t8 = thisArray[3] * -sinAngle + thisArray[7] * cosAngle;\r\n    \r\n    thisArray[0] = t1;\r\n    thisArray[1] = t2;\r\n    thisArray[2] = t3;\r\n    thisArray[3] = t4;\r\n    thisArray[4] = t5;\r\n    thisArray[5] = t6;\r\n    thisArray[6] = t7;\r\n    thisArray[7] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotation(matrix: Matrix3): Matrix4Base {\r\n    return new Matrix4Base().rotation(matrix);\r\n  }\r\n\r\n  rotation(matrix: Matrix3): this {\r\n    const thisArray = this.array;\r\n    const matArray = matrix.array;\r\n\r\n    thisArray[ 0] = matArray[0];\r\n    thisArray[ 1] = matArray[1];\r\n    thisArray[ 2] = matArray[2];\r\n    thisArray[ 4] = matArray[3];\r\n    thisArray[ 5] = matArray[4];\r\n    thisArray[ 6] = matArray[5];\r\n    thisArray[ 8] = matArray[6];\r\n    thisArray[ 9] = matArray[7];\r\n    thisArray[10] = matArray[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  rotate(axis: Vector3, angle: number): this {\r\n    const thisArray = this.array;\r\n    const axisArray = axis.array;\r\n    const axisLength = axis.length();\r\n    const x = axisArray[0] / axisLength;\r\n    const y = axisArray[1] / axisLength;\r\n    const z = axisArray[2] / axisLength;\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n    const C = 1.0 - c;\r\n    const m11 = x * x * C + c;\r\n    const m12 = x * y * C - z * s;\r\n    const m13 = x * z * C + y * s;\r\n    const m21 = y * x * C + z * s;\r\n    const m22 = y * y * C + c;\r\n    const m23 = y * z * C - x * s;\r\n    const m31 = z * x * C - y * s;\r\n    const m32 = z * y * C + x * s;\r\n    const m33 = z * z * C + c;\r\n    const t1  = thisArray[0] * m11 + thisArray[4] * m21 + thisArray[8] * m31;\r\n    const t2  = thisArray[1] * m11 + thisArray[5] * m21 + thisArray[9] * m31;\r\n    const t3  = thisArray[2] * m11 + thisArray[6] * m21 + thisArray[10] * m31;\r\n    const t4  = thisArray[3] * m11 + thisArray[7] * m21 + thisArray[11] * m31;\r\n    const t5  = thisArray[0] * m12 + thisArray[4] * m22 + thisArray[8] * m32;\r\n    const t6  = thisArray[1] * m12 + thisArray[5] * m22 + thisArray[9] * m32;\r\n    const t7  = thisArray[2] * m12 + thisArray[6] * m22 + thisArray[10] * m32;\r\n    const t8  = thisArray[3] * m12 + thisArray[7] * m22 + thisArray[11] * m32;\r\n    const t9  = thisArray[0] * m13 + thisArray[4] * m23 + thisArray[8] * m33;\r\n    const t10 = thisArray[1] * m13 + thisArray[5] * m23 + thisArray[9] * m33;\r\n    const t11 = thisArray[2] * m13 + thisArray[6] * m23 + thisArray[10] * m33;\r\n    const t12 = thisArray[3] * m13 + thisArray[7] * m23 + thisArray[11] * m33;\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 4] = t5;\r\n    thisArray[ 5] = t6;\r\n    thisArray[ 6] = t7;\r\n    thisArray[ 7] = t8;\r\n    thisArray[ 8] = t9;\r\n    thisArray[ 9] = t10;\r\n    thisArray[10] = t11;\r\n    thisArray[11] = t12;\r\n\r\n    return this;\r\n  }\r\n\r\n  static scaling(vec: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setScaling(vec);\r\n  }\r\n\r\n  setScaling(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] = sx;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = sy;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  scale(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] *= sx;\r\n    thisArray[ 1] *= sx;\r\n    thisArray[ 2] *= sx;\r\n    thisArray[ 3] *= sx;\r\n    thisArray[ 4] *= sy;\r\n    thisArray[ 5] *= sy;\r\n    thisArray[ 6] *= sy;\r\n    thisArray[ 7] *= sy;\r\n    thisArray[ 8] *= sz;\r\n    thisArray[ 9] *= sz;\r\n    thisArray[10] *= sz;\r\n    thisArray[11] *= sz;\r\n    thisArray[12] *= sw;\r\n    thisArray[13] *= sw;\r\n    thisArray[14] *= sw;\r\n    thisArray[15] *= sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4): Matrix4 {\r\n    const eyeArray = eye.array;\r\n    const upArray = up.array;\r\n    const targetArray = target.array;\r\n    const outArray = out.array;\r\n    const e0 = eyeArray[0];\r\n    const e1 = eyeArray[1];\r\n    const e2 = eyeArray[2];\r\n    const u0 = upArray[0];\r\n    const u1 = upArray[1];\r\n    const u2 = upArray[2];\r\n    const t0 = targetArray[0];\r\n    const t1 = targetArray[1];\r\n    const t2 = targetArray[2];\r\n    let x0, x1, x2, y0, y1, y2, z0, z1, z2, length;\r\n\r\n    z0 = e0 - t0;\r\n    z1 = e1 - t1;\r\n    z2 = e2 - t2;\r\n    length = Math.hypot(z0, z1, z2);\r\n    if (length > 0) {\r\n      length = 1 / Math.hypot(z0, z1, z2);\r\n      z0 *= length;\r\n      z1 *= length;\r\n      z2 *= length;\r\n    }\r\n  \r\n    x0 = u1 * z2 - u2 * z1;\r\n    x1 = u2 * z0 - u0 * z2;\r\n    x2 = u0 * z1 - u1 * z0;\r\n    length = Math.hypot(x0, x1, x2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      x0 *= length;\r\n      x1 *= length;\r\n      x2 *= length;\r\n    }\r\n\r\n    y0 = z1 * x2 - z2 * x1;\r\n    y1 = z2 * x0 - z0 * x2;\r\n    y2 = z0 * x1 - z1 * x0;\r\n    length = Math.hypot(y0, y1, y2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      y0 *= length;\r\n      y1 *= length;\r\n      y2 *= length;\r\n    }\r\n  \r\n    outArray[ 0] = x0;\r\n    outArray[ 1] = x1;\r\n    outArray[ 2] = x2;\r\n    outArray[ 3] = 0;\r\n    outArray[ 4] = y0;\r\n    outArray[ 5] = y1;\r\n    outArray[ 6] = y2;\r\n    outArray[ 7] = 0;\r\n    outArray[ 8] = z0;\r\n    outArray[ 9] = z1;\r\n    outArray[10] = z2;\r\n    outArray[11] = 0;\r\n    outArray[12] = e0;\r\n    outArray[13] = e1;\r\n    outArray[14] = e2;\r\n    outArray[15] = 1;\r\n  \r\n    return out;\r\n  }\r\n\r\n  lookAt(eye: Vector3, target: Vector3, up: Vector3): this {\r\n    return Matrix4Base.lookAt(eye, target, up, this) as this;\r\n  }\r\n\r\n  transformPoint(point: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const pointArray = point.array;\r\n\r\n    const x = pointArray[0];\r\n    const y = pointArray[1];\r\n    const z = pointArray[2];\r\n\r\n    const d = x * thisArray[3] + y * thisArray[7] + z * thisArray[11] + thisArray[15];\r\n\r\n    point.setValues(\r\n      (x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8] + thisArray[12]) / d,\r\n      (x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9] + thisArray[13]) / d,\r\n      (x * thisArray[2] + y * thisArray[6] + z * thisArray[10] + thisArray[14]) / d\r\n    );\r\n\r\n    return point;\r\n  }\r\n\r\n  transformDirection(direction: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const directionArray = direction.array;\r\n\r\n    const x = directionArray[0];\r\n    const y = directionArray[1];\r\n    const z = directionArray[2];\r\n\r\n    direction.setValues(\r\n      x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8],\r\n      x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9],\r\n      x * thisArray[2] + y * thisArray[6] + z * thisArray[10]\r\n    );\r\n\r\n    return direction;\r\n  }\r\n\r\n  transformNormal(normal: Vector3): Vector3 {\r\n    const normalArray = normal.array;\r\n\r\n    const thisInvArray = this.invert().array;\r\n\r\n    const x = normalArray[0];\r\n    const y = normalArray[1];\r\n    const z = normalArray[2];\r\n\r\n    normal.setValues(\r\n      x * thisInvArray[0] + y * thisInvArray[4] + z * thisInvArray[ 8],\r\n      x * thisInvArray[1] + y * thisInvArray[5] + z * thisInvArray[ 9],\r\n      x * thisInvArray[2] + y * thisInvArray[6] + z * thisInvArray[10]\r\n    );\r\n\r\n    this.invert();\r\n\r\n    return normal;\r\n  }\r\n\r\n  static perspective(fov: number, aspect: number, zNear: number, zFar: number): Matrix4Base {\r\n    return new Matrix4Base().setPerspective(fov, aspect, zNear, zFar);\r\n  }\r\n\r\n  setPerspective(fov: number, aspect: number, zNear: number, zFar: number): this {\r\n    const thisArray = this.array;\r\n    const width = Math.tan(Math.PI * 0.5 - 0.5 * fov);\r\n    const height = width / aspect;\r\n    const rangeInv = 1 / (zNear - zFar);\r\n\r\n    thisArray[ 0] = height;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = width;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = (zNear + zFar) * rangeInv;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = (2 * zNear * zFar) * rangeInv;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setOrthographic(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 2 / (right - left);\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 2 / (top - bottom);\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 2 / (near - far);\r\n    thisArray[11] = 0;\r\n    thisArray[12] = (right + left) / (left - right);\r\n    thisArray[13] = (top + bottom) / (bottom - top);\r\n    thisArray[14] = (far + near) / (near - far);\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static frustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setFrustrum(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  setFrustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    const invWidth = 1 / (right - left);\r\n    const invHeight = 1 / (top - bottom);\r\n    const invDepth = 1 / (near - far);\r\n\r\n    thisArray[ 0] = near * 2 * invWidth;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = near * 2 * invHeight;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = (right + left) * invWidth;\r\n    thisArray [9] = (top + bottom) * invHeight;\r\n    thisArray[10] = (far + near) * invDepth;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = far * near * 2 * invDepth;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n}\r\n\r\nvar Matrix4: Matrix4Constructor = Matrix4Base;\r\n\r\nconst Matrix4Injector: Injector<Matrix4Constructor> = new Injector({\r\n\tdefaultCtor: Matrix4Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix4Constructor) => {\r\n\t\t\tMatrix4 = ctor;\r\n\t\t}\r\n});","import { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Matrix4 } from \"../../algebra/matrices/Matrix4\";\r\nimport { Vector3, Vector3Constructor } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport { Vector3Pool };\r\n\r\nclass Vector3PoolBase extends StackPool<Vector3> implements StackPool<Vector3> {\r\n    private _buffer: Float32Array;\r\n    private _bufferViews: Array<WritableArrayLike<number>>;\r\n    private _extensions: Array<WritableArrayLike<number>>;\r\n\r\n    constructor(ctor: Vector3Constructor, options?: any) {\r\n        super(ctor, options);\r\n        this._buffer = new Float32Array(0);\r\n        this._bufferViews = Array(options?.size || 0).fill(0).map(() => {\r\n            return this._buffer.subarray();\r\n        });\r\n        this._extensions = [];\r\n    }\r\n}\r\n\r\nconst Vector3Pool: StackPool<Vector3> = new Vector3PoolBase(Vector3);","export { UUID };\r\nexport { Identifiable };\r\nexport { UUIDGeneratorBase };\r\nexport { UUIDGenerator };\r\n\r\ntype UUID = string;\r\n\r\ninterface Identifiable {\r\n    readonly uuid: UUID;\r\n}\r\n\r\ninterface UUIDGenerator {\r\n    newUUID(): UUID;\r\n}\r\n\r\nclass UUIDGeneratorBase {\r\n\r\n    private _count: number;\r\n\r\n    constructor() {\r\n        this._count = 0\r\n    }\r\n\r\n    newUUID(): UUID {\r\n        return (++this._count).toString(16);\r\n    }\r\n}\r\n\r\nconst UUIDGenerator: UUIDGenerator = new UUIDGeneratorBase();","import { EulerAngles } from \"../../libs/maths/algebra/angles/EulerAngles\";\r\nimport { Matrix3 } from \"../../libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Quaternion, QuaternionPool } from \"../../libs/maths/algebra/quaternions/Quaternion\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../libs/maths/extensions/pools/Vector3Pools\";\r\nimport { UUID, UUIDGenerator } from \"../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Object3D } from \"../rendering/scenes/objects/Object3D\";\r\n\r\nexport { Transform };\r\nexport { TransformBase };\r\n\r\ninterface TransformConstructor {\r\n    readonly prototype: Transform;\r\n    new(): Transform;\r\n    new(owner: Object3D): Transform;\r\n}\r\n\r\nconst tempMatrix = new Matrix4();\r\n\r\ninterface Transform {\r\n    readonly localArray: Float32Array;\r\n    readonly array: Float32Array;\r\n    readonly uuid: UUID;\r\n    readonly owner: Object3D | null;\r\n\r\n    localMatrix: Matrix4;\r\n    matrix: Matrix4;\r\n\r\n    getMatrix(matrix: Matrix4): Matrix4;\r\n    setMatrix(matrix: Matrix4): this;\r\n    getLocalMatrix(matrix: Matrix4): Matrix4;\r\n    setLocalMatrix(matrix: Matrix4): this;\r\n\r\n    getRight(vector: Vector3): Vector3;\r\n    getLeft(vector: Vector3): Vector3;\r\n    getUp(vector: Vector3): Vector3;\r\n    getDown(vector: Vector3): Vector3;\r\n    getForward(vector: Vector3): Vector3;\r\n    getBackward(vector: Vector3): Vector3;\r\n\r\n    getTranslation(vector: Vector3): Vector3;\r\n    setTranslation(vector: Vector3): this;\r\n    translate(vector: Vector3): this;\r\n\r\n    getRotation(rotation: Quaternion): Quaternion;\r\n    setRotation(rotation: Quaternion): this;\r\n    rotate(rotation: Quaternion): this;\r\n\r\n    getScaling(scaling: Vector3): Vector3;\r\n    setScaling(scaling: Vector3): this;\r\n    scale(scaling: Vector3): this;\r\n    \r\n    lookAt(target: Vector3, up?: Vector3): this;\r\n}\r\n\r\nclass TransformBase implements Transform {\r\n    readonly localArray: Float32Array;\r\n    readonly array: Float32Array;\r\n    readonly uuid: UUID;\r\n    readonly owner: Object3D | null;\r\n\r\n    readonly matrix: Matrix4;\r\n    readonly localMatrix: Matrix4;\r\n\r\n    private _hasChanged: boolean;\r\n\r\n    constructor(owner?: Object3D) {\r\n        this.uuid = UUIDGenerator.newUUID();\r\n        this.owner = owner || null;\r\n        \r\n        this.array = new Float32Array(16);\r\n        this.localArray = new Float32Array(16);\r\n\r\n        this.matrix = new Matrix4(this.array).setIdentity();\r\n        this.localMatrix = new Matrix4(this.localArray).setIdentity();\r\n\r\n        this._hasChanged = false;\r\n    }\r\n\r\n    getMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisArray[ 0];\r\n        matrixArray[ 1] = thisArray[ 1];\r\n        matrixArray[ 2] = thisArray[ 2];\r\n        matrixArray[ 3] = thisArray[ 3];\r\n        matrixArray[ 4] = thisArray[ 4];\r\n        matrixArray[ 5] = thisArray[ 5];\r\n        matrixArray[ 6] = thisArray[ 6];\r\n        matrixArray[ 7] = thisArray[ 7];\r\n        matrixArray[ 8] = thisArray[ 8];\r\n        matrixArray[ 9] = thisArray[ 9];\r\n        matrixArray[10] = thisArray[10];\r\n        matrixArray[11] = thisArray[11];\r\n        matrixArray[12] = thisArray[12];\r\n        matrixArray[13] = thisArray[13];\r\n        matrixArray[14] = thisArray[14];\r\n        matrixArray[15] = thisArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    setMatrix(matrix: Matrix4): this {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        thisArray[ 0] = matrixArray[ 0];\r\n        thisArray[ 1] = matrixArray[ 1];\r\n        thisArray[ 2] = matrixArray[ 2];\r\n        thisArray[ 3] = matrixArray[ 3];\r\n        thisArray[ 4] = matrixArray[ 4];\r\n        thisArray[ 5] = matrixArray[ 5];\r\n        thisArray[ 6] = matrixArray[ 6];\r\n        thisArray[ 7] = matrixArray[ 7];\r\n        thisArray[ 8] = matrixArray[ 8];\r\n        thisArray[ 9] = matrixArray[ 9];\r\n        thisArray[10] = matrixArray[10];\r\n        thisArray[11] = matrixArray[11];\r\n        thisArray[12] = matrixArray[12];\r\n        thisArray[13] = matrixArray[13];\r\n        thisArray[14] = matrixArray[14];\r\n        thisArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    getLocalMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisLocalArray[ 0];\r\n        matrixArray[ 1] = thisLocalArray[ 1];\r\n        matrixArray[ 2] = thisLocalArray[ 2];\r\n        matrixArray[ 3] = thisLocalArray[ 3];\r\n        matrixArray[ 4] = thisLocalArray[ 4];\r\n        matrixArray[ 5] = thisLocalArray[ 5];\r\n        matrixArray[ 6] = thisLocalArray[ 6];\r\n        matrixArray[ 7] = thisLocalArray[ 7];\r\n        matrixArray[ 8] = thisLocalArray[ 8];\r\n        matrixArray[ 9] = thisLocalArray[ 9];\r\n        matrixArray[10] = thisLocalArray[10];\r\n        matrixArray[11] = thisLocalArray[11];\r\n        matrixArray[12] = thisLocalArray[12];\r\n        matrixArray[13] = thisLocalArray[13];\r\n        matrixArray[14] = thisLocalArray[14];\r\n        matrixArray[15] = thisLocalArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    setLocalMatrix(matrix: Matrix4): this {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        thisLocalArray[ 0] = matrixArray[ 0];\r\n        thisLocalArray[ 1] = matrixArray[ 1];\r\n        thisLocalArray[ 2] = matrixArray[ 2];\r\n        thisLocalArray[ 3] = matrixArray[ 3];\r\n        thisLocalArray[ 4] = matrixArray[ 4];\r\n        thisLocalArray[ 5] = matrixArray[ 5];\r\n        thisLocalArray[ 6] = matrixArray[ 6];\r\n        thisLocalArray[ 7] = matrixArray[ 7];\r\n        thisLocalArray[ 8] = matrixArray[ 8];\r\n        thisLocalArray[ 9] = matrixArray[ 9];\r\n        thisLocalArray[10] = matrixArray[10];\r\n        thisLocalArray[11] = matrixArray[11];\r\n        thisLocalArray[12] = matrixArray[12];\r\n        thisLocalArray[13] = matrixArray[13];\r\n        thisLocalArray[14] = matrixArray[14];\r\n        thisLocalArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    getRight(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[0];\r\n        vectorArray[1] = thisArray[1];\r\n        vectorArray[2] = thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    getLeft(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[0];\r\n        vectorArray[1] = -thisArray[1];\r\n        vectorArray[2] = -thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    getUp(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[4];\r\n        vectorArray[1] = thisArray[5];\r\n        vectorArray[2] = thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    getDown(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[4];\r\n        vectorArray[1] = -thisArray[5];\r\n        vectorArray[2] = -thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    getForward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 8];\r\n        vectorArray[1] = thisArray[ 9];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    getBackward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[ 8];\r\n        vectorArray[1] = -thisArray[ 9];\r\n        vectorArray[2] = -thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    get hasChanged() {\r\n        return this._hasChanged;\r\n    }\r\n\r\n    getTranslation(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[12];\r\n        vectorArray[1] = thisArray[13];\r\n        vectorArray[2] = thisArray[14];\r\n        return vector;\r\n    }\r\n\r\n    setTranslation(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] = vectorArray[0];\r\n        thisArray[13] = vectorArray[1];\r\n        thisArray[14] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    translate(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] += vectorArray[0];\r\n        thisArray[13] += vectorArray[1];\r\n        thisArray[14] += vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    getScaling(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 0];\r\n        vectorArray[1] = thisArray[ 5];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    setScaling(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] = vectorArray[0];\r\n        thisArray[ 5] = vectorArray[1];\r\n        thisArray[10] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    scale(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] *= vectorArray[0];\r\n        thisArray[ 5] *= vectorArray[1];\r\n        thisArray[10] *= vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    getRotation(rotation: Quaternion): Quaternion {\r\n        rotation.setMatrix(this.matrix);\r\n        return rotation;\r\n    }\r\n    \r\n    setRotation(rotation: Quaternion): this {\r\n        this.matrix.setRotation(rotation);\r\n        return this;\r\n    }\r\n\r\n    rotate(rotation: Quaternion): this {\r\n        this.matrix.mult(\r\n            rotation.getMatrix4(tempMatrix)\r\n        );\r\n        return this;\r\n    }\r\n\r\n    transformPoint(point: Vector3): Vector3 {\r\n        return point;\r\n    }\r\n\r\n    transformDirection(direction: Vector3): Vector3 {\r\n        return direction;\r\n    }\r\n\r\n    transformVector(vector: Vector3): Vector3 {\r\n        return vector;\r\n    }\r\n\r\n    lookAt(target: Vector3, up: Vector3): this {\r\n        const thisPosition = this.getTranslation(Vector3Pool.acquire(1)[0]);\r\n        this.matrix.lookAt(thisPosition, target, up);\r\n        Vector3Pool.release(1);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Transform: TransformConstructor = TransformBase;","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3 } from \"../../algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\n\r\nexport { Plane };\r\nexport { PlaneInjector };\r\nexport { PlaneBase };\r\n\r\ninterface Plane {\r\n    normal: Vector3;\r\n    constant: number;\r\n\r\n    copy(plane: Plane): Plane;\r\n    set(x: number, y: number, z: number, constant: number): Plane;\r\n    setFromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n\tsetFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n\tsetFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): Plane;\r\n\tdistanceToPoint(point: Vector3): number;\r\n    normalized(): Plane;\r\n}\r\n\r\ninterface PlaneConstructor {\r\n    readonly prototype: Plane;\r\n    new(): Plane;\r\n    new(normal: Vector3, constant: number): Plane;\r\n    new(normal?: Vector3, constant?: number): Plane;\r\n    fromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n    fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n    fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane;\r\n}\r\n\r\nclass PlaneBase implements Plane {\r\n\r\n    private _normal: Vector3;\r\n    private _constant: number;\r\n\r\n    constructor()\r\n    constructor(normal: Vector3, constant: number)\r\n    constructor(normal?: Vector3, constant?: number) {\r\n        this._normal = normal || new Vector3([0, 0, 0]);\r\n        this._constant = constant || 0;\r\n    }\r\n\r\n    static fromNormalAndConstant(normal: Vector3, constant: number): Plane {\r\n        return new PlaneBase().setFromNormalAndConstant(normal, constant);\r\n    }\r\n\r\n\tstatic fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane {\r\n\t\treturn new PlaneBase().setFromNormalAndCoplanarPoint(normal, point);\r\n\t}\r\n\r\n\tstatic fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane {\r\n        return new PlaneBase().setFromCoplanarPoints(a, b, c);\r\n    }\r\n\r\n    get normal(): Vector3 {\r\n\t\treturn this._normal;\r\n\t}\r\n\r\n\tset normal(normal: Vector3) {\r\n\t\tthis._normal = normal;\r\n\t}\r\n\r\n\tget constant(): number {\r\n\t\treturn this._constant;\r\n\t}\r\n\r\n\tset constant(constant: number) {\r\n\t\tthis._constant = constant;\r\n\t}\r\n\r\n    copy(plane: PlaneBase): PlaneBase {\r\n        this._normal = plane._normal.clone();\r\n        this._constant = plane._constant;\r\n\r\n        return this;\r\n    }\r\n\r\n    set(x: number, y: number, z: number, constant: number): PlaneBase {\r\n        this._normal.setValues(x, y, z);\r\n        this._constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n    setFromNormalAndConstant(normal: Vector3, constant: number): PlaneBase {\r\n        this._normal.copy(normal);\r\n        this._constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n\tsetFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): PlaneBase {\r\n\t\tthis._normal.copy(normal);\r\n        this._constant = -point.dot(this._normal);\r\n        \r\n        return this;\r\n\t}\r\n\r\n\tsetFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): PlaneBase {\r\n        const normal = point3.clone();\r\n        const [temp] = Vector3Pool.acquire(1);\r\n        temp.copy(point1);\r\n        normal.sub(point2).cross(temp.sub(point2)).normalize();\r\n        this.setFromNormalAndCoplanarPoint(normal, point1);\r\n        Vector3Pool.release(1);\r\n\t\treturn this;\r\n    }\r\n\r\n\tdistanceToPoint(point: Vector3): number {\r\n\t\treturn this._normal.dot(point) + this._constant;\r\n\t}\r\n    \r\n    normalized(): PlaneBase {\r\n        const inverseNormalLength = 1.0 / this._normal.length();\r\n        \r\n        this._normal.scale(inverseNormalLength);\r\n\t\tthis._constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nvar Plane: PlaneConstructor = PlaneBase;\r\nconst PlaneInjector: Injector<PlaneConstructor> = new Injector({\r\n\tdefaultCtor: PlaneBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: PlaneConstructor) => {\r\n\t\t\tPlane = ctor;\r\n\t\t}\r\n});","import { Matrix4 } from \"../../maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../maths/algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../maths/extensions/pools/Vector3Pools\";\r\nimport { Plane } from \"../../maths/geometry/primitives/Plane\";\r\nimport { Injector } from \"../../patterns/injectors/Injector\";\r\nimport { BoundingBox } from \"./AxisAlignedBoundingBox\";\r\nimport { BoundingSphere } from \"./BoundingSphere\";\r\n\r\nexport { Frustrum };\r\nexport { FrustrumInjector };\r\nexport { FrustrumBase };\r\n\r\ninterface Frustrum {\r\n    readonly nearPlane: Plane;\r\n    readonly farPlane: Plane;\r\n    readonly topPlane: Plane;\r\n    readonly bottomPlane: Plane;\r\n    readonly leftPlane: Plane;\r\n    readonly rightPlane: Plane;\r\n    copy(frustrum: Frustrum): Frustrum;\r\n\tclone(): Frustrum;\r\n\tsetFromPerspectiveMatrix(matrix: Matrix4): Frustrum;\r\n\tset(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane\r\n    ): Frustrum;\r\n\tintersectsSphere(sphere: BoundingSphere): boolean;\r\n\tintersectsBox(box: BoundingBox): boolean;\r\n\tcontainsPoint(point: Vector3): boolean;\r\n}\r\n\r\ninterface FrustrumConstructor {\r\n    readonly prototype: Frustrum;\r\n    new(): Frustrum;\r\n}\r\n\r\nclass FrustrumBase implements Frustrum {\r\n    readonly nearPlane: Plane;\r\n    readonly farPlane: Plane;\r\n    readonly topPlane: Plane;\r\n    readonly bottomPlane: Plane;\r\n    readonly leftPlane: Plane;\r\n    readonly rightPlane: Plane;\r\n\r\n    constructor() {\r\n\t\tthis.nearPlane = new Plane();\r\n        this.farPlane = new Plane();\r\n        this.topPlane = new Plane();\r\n        this.bottomPlane = new Plane();\r\n        this.leftPlane = new Plane();\r\n        this.rightPlane = new Plane();\r\n    }\r\n\r\n    set(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane): Frustrum {\r\n\r\n\t\tthis.nearPlane.copy(nearPlane);\r\n\t\tthis.farPlane.copy(farPlane);\r\n        this.topPlane.copy(topPlane);\r\n        this.bottomPlane.copy(bottomPlane);\r\n        this.leftPlane.copy(leftPlane);\r\n        this.rightPlane.copy(rightPlane);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n    copy(frustrum: FrustrumBase): FrustrumBase {\r\n        this.set(\r\n            frustrum.nearPlane,\r\n            frustrum.farPlane,\r\n            frustrum.topPlane,\r\n            frustrum.bottomPlane,\r\n            frustrum.leftPlane,\r\n            frustrum.rightPlane\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n\tclone(): FrustrumBase {\r\n\t\treturn new FrustrumBase().copy(this);\r\n    }\r\n    \r\n\tsetFromPerspectiveMatrix(matrix: Matrix4): FrustrumBase {\r\n        const m11 = matrix.m11;\r\n        const m12 = matrix.m12;\r\n        const m13 = matrix.m13;\r\n        const m14 = matrix.m14;\r\n        const m21 = matrix.m21;\r\n        const m22 = matrix.m22;\r\n        const m23 = matrix.m23;\r\n        const m24 = matrix.m24;\r\n        const m31 = matrix.m31;\r\n        const m32 = matrix.m32;\r\n        const m33 = matrix.m33;\r\n        const m34 = matrix.m34;\r\n        const m41 = matrix.m41;\r\n        const m42 = matrix.m42;\r\n        const m43 = matrix.m43;\r\n        const m44 = matrix.m44;\r\n\r\n        this.nearPlane.set(m31 + m41, m32 + m42, m33 + m43, m34 + m44).normalized();\r\n        this.farPlane.set(-m31 + m41, -m32 + m42, -m33 + m43, -m34 + m44).normalized();\r\n        this.bottomPlane.set(m21 + m41, m22 + m42, m23 + m43, m24 + m44).normalized();\r\n        this.topPlane.set(-m21 + m41, -m22 + m42, -m23 + m43, -m24 + m44).normalized();\r\n        this.leftPlane.set(m11 + m41, m12 + m42, m13 + m43, m14 + m44).normalized();\r\n        this.rightPlane.set(-m11 + m41, -m12 + m42, -m13 + m43, -m14 + m44).normalized();\r\n        \r\n\t\treturn this;\r\n    }\r\n    \r\n\tintersectsSphere(sphere: BoundingSphere): boolean {\r\n        const center = sphere.center;\r\n        const radius = sphere.radius;\r\n        return center.dot(this.nearPlane.normal) + this.nearPlane.constant + radius <= 0 ||\r\n            center.dot(this.farPlane.normal) + this.farPlane.constant + radius <= 0 ||\r\n            center.dot(this.bottomPlane.normal) + this.bottomPlane.constant + radius <= 0 ||\r\n            center.dot(this.topPlane.normal) + this.topPlane.constant + radius <= 0 ||\r\n            center.dot(this.leftPlane.normal) + this.leftPlane.constant + radius <= 0 ||\r\n            center.dot(this.rightPlane.normal) + this.rightPlane.constant + radius <= 0;\r\n\t}\r\n\r\n\tintersectsBox(box: BoundingBox): boolean {\r\n        let intersects = true;\r\n\r\n        const boxMax = box.max;\r\n        const boxMin = box.min;\r\n\r\n        const [temp] = Vector3Pool.acquire(1);\r\n        intersects = \r\n            this.nearPlane.distanceToPoint(temp.setValues(\r\n                this.nearPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.nearPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.nearPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.farPlane.distanceToPoint(temp.setValues(\r\n                this.farPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.farPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.farPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.bottomPlane.distanceToPoint(temp.setValues(\r\n                this.bottomPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.bottomPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.bottomPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.topPlane.distanceToPoint(temp.setValues(\r\n                this.topPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.topPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.topPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.leftPlane.distanceToPoint(temp.setValues(\r\n                this.leftPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.leftPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.leftPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.rightPlane.distanceToPoint(temp.setValues(\r\n                this.rightPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.rightPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.rightPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0;\r\n        Vector3Pool.release(1);\r\n\r\n\t\treturn intersects;\r\n\t}\r\n\r\n\tcontainsPoint(point: Vector3): boolean {\r\n        return this.nearPlane.distanceToPoint(point) >= 0 &&\r\n            this.farPlane.distanceToPoint(point) >= 0 &&\r\n            this.bottomPlane.distanceToPoint(point) >= 0 &&\r\n            this.topPlane.distanceToPoint(point) >= 0 &&\r\n            this.leftPlane.distanceToPoint(point) >= 0 &&\r\n            this.rightPlane.distanceToPoint(point) >= 0;\r\n    }\r\n}\r\n\r\nvar Frustrum: FrustrumConstructor = FrustrumBase;\r\nconst FrustrumInjector: Injector<FrustrumConstructor> = new Injector({\r\n\tdefaultCtor: FrustrumBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: FrustrumConstructor) => {\r\n\t\t\tFrustrum = ctor;\r\n\t\t}\r\n});","export { Buffer };\r\n\r\nexport enum BufferDataUsage {\r\n    STATIC_DRAW = 0x88E4,\r\n    DYNAMIC_DRAW = 0x88E8,\r\n    STREAM_DRAW = 0x88E0,\r\n    STATIC_READ = 0x88E5,\r\n    DYNAMIC_READ = 0x88E9,\r\n    STREAM_READ = 0x88E1,\r\n    STATIC_COPY = 0x88E6,\r\n    DYNAMIC_COPY = 0x88EA,\r\n    STREAM_COPY = 0x88E2\r\n}\r\n\r\nexport enum BufferTarget {\r\n    ARRAY_BUFFER = 0x8892,\r\n    ELEMENT_ARRAY_BUFFER = 0x8893,\r\n    TRANSFORM_FEEDBACK_BUFFER = 0x8C8E,\r\n    UNIFORM_BUFFER = 0x8A11,\r\n}\r\n\r\ntype Buffer = {\r\n    internalBuffer: WebGLBuffer;\r\n    target: BufferTarget;\r\n    usage: BufferDataUsage;\r\n}","export enum ShaderType {\r\n    FRAGMENT_SHADER = 0x8B30,\r\n    VERTEX_SHADER = 0x8B31,\r\n}\r\n\r\nexport type Program = {\r\n    internalProgram: WebGLProgram;\r\n    vertexShader: Shader;\r\n    fragmentShader: Shader;\r\n}\r\n\r\nexport type Shader = {\r\n    internalShader: WebGLShader;\r\n}\r\n\r\nexport type ProgramProperties = {\r\n    vertexSource: string;\r\n    vertexFlags?: string[];\r\n    fragmentSource: string;\r\n    fragmentFlags?: string[];\r\n}\r\n\r\nexport class WebGLProgramUtilities {\r\n\r\n    static createShader(gl: WebGL2RenderingContext, type: ShaderType, source: string): Shader | null {\r\n        const internalShader = gl.createShader(type);\r\n        if (internalShader === null) {\r\n            return null;\r\n        }\r\n        gl.shaderSource(internalShader, source);\r\n        gl.compileShader(internalShader);\r\n        \r\n        const success = gl.getShaderParameter(internalShader, gl.COMPILE_STATUS);\r\n        if (success) {\r\n            return {\r\n                internalShader\r\n            };\r\n        }\r\n\r\n        const shaderInfoLog = gl.getShaderInfoLog(internalShader);\r\n        if (shaderInfoLog !== null) {\r\n            console.warn(shaderInfoLog);\r\n        }\r\n\r\n        gl.deleteShader(internalShader);\r\n        return null;\r\n    }\r\n\r\n    static deleteShader(gl: WebGL2RenderingContext, shader: Shader): void {\r\n        const {internalShader} = shader;\r\n        if (gl.isShader(internalShader)) {\r\n            gl.deleteShader(internalShader);\r\n        }\r\n    }\r\n    \r\n    static createProgram(gl: WebGL2RenderingContext, properties: ProgramProperties): Program | null {\r\n        const {vertexSource, fragmentSource} = properties;\r\n\r\n        //@TODO: bindAttribLocation ?\r\n        //@TODO: definitions ?\r\n\r\n        const vertexShader = this.createShader(gl, ShaderType.VERTEX_SHADER, vertexSource);\r\n        if (vertexShader === null) {\r\n            return null;\r\n        }\r\n\r\n        const fragmentShader = this.createShader(gl, ShaderType.FRAGMENT_SHADER, fragmentSource);\r\n        if (fragmentShader === null) {\r\n            return null;\r\n        }\r\n        \r\n        const internalProgram = gl.createProgram();\r\n\r\n        if (internalProgram === null) {\r\n            return null;\r\n        }\r\n        \r\n        gl.attachShader(internalProgram, vertexShader.internalShader);\r\n        gl.attachShader(internalProgram, fragmentShader.internalShader);\r\n        gl.linkProgram(internalProgram);\r\n\r\n        const success = gl.getProgramParameter(internalProgram, gl.LINK_STATUS);\r\n        if (success) {\r\n            return {\r\n                internalProgram,\r\n                vertexShader,\r\n                fragmentShader\r\n            };\r\n        }\r\n\r\n        const programInfoLog = gl.getProgramInfoLog(internalProgram);\r\n        const vsInfoLog = gl.getProgramInfoLog(internalProgram);\r\n        const fsInfoLog = gl.getProgramInfoLog(internalProgram);\r\n        if (programInfoLog !== null) {\r\n            console.warn(`Program info: ${programInfoLog}`);\r\n            console.warn(`VS info: ${vsInfoLog}`);\r\n            console.warn(`FS info: ${fsInfoLog}`);\r\n        }\r\n        \r\n        gl.deleteProgram(internalProgram);\r\n\r\n        return null;\r\n    }\r\n    \r\n    static deleteProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        const {vertexShader, fragmentShader, internalProgram} = program;\r\n        if (gl.isShader(vertexShader)) {\r\n            gl.deleteShader(vertexShader);\r\n        }\r\n        if (gl.isShader(fragmentShader)) {\r\n            gl.deleteShader(fragmentShader);\r\n        }\r\n        if (gl.isProgram(internalProgram)) {\r\n            gl.deleteProgram(internalProgram);\r\n        }\r\n    }\r\n\r\n    static useProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        const {internalProgram} = program;\r\n        const currentProgram = gl.getParameter(gl.CURRENT_PROGRAM);\r\n        if (currentProgram !== internalProgram) {\r\n            gl.useProgram(internalProgram);\r\n        }\r\n    }\r\n}","import { BufferDataUsage, Buffer } from \"./WebGLBufferUtilities\";\r\nimport { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\n\r\nexport { VertexAttributeValue };\r\nexport { VertexAttributeProperties };\r\nexport { VertexArrayProperties };\r\nexport { VertexArrayValues };\r\nexport { VertexArray };\r\nexport { WebGLVertexArrayUtilities };\r\n\r\nexport enum DrawMode {\r\n    POINTS = 0x0000,\r\n    LINES = 0x0001,\r\n    LINE_LOOP = 0x0002,\r\n    LINE_STRIP = 0x0003,\r\n    TRIANGLES = 0x0004,\r\n    TRIANGLE_STRIP = 0x0005,\r\n    TRIANGLE_FAN = 0x0006\r\n}\r\n\r\nexport enum DataComponentType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406\r\n}\r\n\r\nexport enum AttributeDataType {\r\n    VEC2 = \"VEC2\",\r\n    VEC3 = \"VEC3\",\r\n    VEC4 = \"VEC4\"\r\n}\r\n\r\nexport enum ElementArrayDataType {\r\n    UNSIGNED_BYTE = 0x1401,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    UNSIGNED_INT = 0x1405\r\n}\r\n\r\nexport type AttributeArray =\r\n    Float32Array | Int32Array | Uint32Array |\r\n    Int16Array | Uint16Array |\r\n    Int8Array | Uint8Array;\r\n\r\ntype VertexAttributeProperties = {\r\n    type: AttributeDataType;\r\n    array?: AttributeArray;\r\n    componentType?: DataComponentType;\r\n    byteLength?: number;\r\n    buffer?: number;\r\n    divisor?: number;\r\n    normalize?: boolean;\r\n    constant?: boolean;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n}\r\n\r\ntype VertexAttributeValue = {\r\n    array: AttributeArray;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n    constant?: boolean;\r\n}\r\n\r\ntype VertexAttribute = {\r\n    divisor: number;\r\n    componentType: DataComponentType;\r\n    numComponents: number;\r\n    constant: boolean;\r\n    constantValue?: AttributeArray;\r\n    byteOffset: number;\r\n    bytesPerElement: number;\r\n    type: AttributeDataType;\r\n    normalize: boolean;\r\n}\r\n\r\ntype VertexArrayProperties = {\r\n    vertexBuffers?: (VertexArrayBuffer | VertexArrayBufferProperties)[];\r\n    vertexAttributes?: Record<string, VertexAttributeProperties>;\r\n    elementBuffer?: VertexElementArrayBuffer | VertexElementArrayBufferProperties;\r\n    elementIndices?: Uint8Array | Uint16Array | Uint32Array;\r\n    drawMode?: DrawMode;\r\n    elementsCount?: number;\r\n    instanceCount?: number;\r\n}\r\n\r\ntype VertexArrayValues = {\r\n    attributes: Record<string, VertexAttributeValue>;\r\n    drawMode?: DrawMode;\r\n    elementsCount?: number;\r\n    instanceCount?: number;\r\n}\r\n\r\ntype VertexArray = {\r\n    internalVertexArray: WebGLVertexArrayObject;\r\n    program: Program;\r\n    verticesBuffers: VertexArrayBuffer[];\r\n    elementsCount: number;\r\n    elementBuffer?: VertexElementArrayBuffer;\r\n    drawMode: DrawMode;\r\n    instanceCount: number;\r\n}\r\n\r\nexport type VertexArrayBuffer = Buffer & {\r\n    vertexAttributes: Record<string, VertexAttribute>;\r\n    byteLength: number;\r\n    byteStride: number;\r\n    interleaved: boolean;\r\n}\r\n\r\nexport type VertexArrayBufferProperties = {\r\n    usage?: BufferDataUsage;\r\n    interleaved?: boolean;\r\n}\r\n\r\nexport type VertexElementArrayBuffer = Buffer & {\r\n    indexType: ElementArrayDataType;\r\n};\r\n\r\nexport type VertexElementArrayBufferProperties = {\r\n    usage?: BufferDataUsage;\r\n}\r\n\r\nexport type VertexArrayBufferLayout = Record<string, {\r\n    byteOffset: number;\r\n    bytesPerElement: number;\r\n}>;\r\n\r\nclass WebGLVertexArrayUtilities {\r\n\r\n    static getDataTypeNumComponents(type: AttributeDataType): number {\r\n        switch (type) {\r\n            case AttributeDataType.VEC2:\r\n                return 2;\r\n            case AttributeDataType.VEC3:\r\n                return 3;\r\n            case AttributeDataType.VEC4:\r\n                return 4;\r\n        }\r\n    }\r\n\r\n    static getComponentTypeArrayConstructor(type: DataComponentType):\r\n        Float32ArrayConstructor | Int32ArrayConstructor | Uint32ArrayConstructor |\r\n        Int16ArrayConstructor | Uint16ArrayConstructor |\r\n        Int8ArrayConstructor | Uint8ArrayConstructor {\r\n        switch (type) {\r\n            case DataComponentType.FLOAT:\r\n                return Float32Array;\r\n            case DataComponentType.BYTE:\r\n                return Uint8Array;\r\n            case DataComponentType.UNSIGNED_BYTE:\r\n                return Uint8Array;\r\n            case DataComponentType.SHORT:\r\n                return Int16Array;\r\n            case DataComponentType.UNSIGNED_SHORT:\r\n                return Uint16Array;\r\n            case DataComponentType.INT:\r\n                return Int32Array;\r\n            case DataComponentType.UNSIGNED_INT:\r\n                return Uint32Array;\r\n        }\r\n    }\r\n\r\n    static getArrayComponentType(array: AttributeArray): DataComponentType {\r\n        if (array instanceof Float32Array) {\r\n            return DataComponentType.FLOAT;\r\n        }\r\n        else if (array instanceof Int32Array) {\r\n            return DataComponentType.INT;\r\n        }\r\n        else if (array instanceof Uint32Array) {\r\n            return DataComponentType.UNSIGNED_INT;\r\n        }\r\n        else if (array instanceof Int16Array) {\r\n            return DataComponentType.SHORT;\r\n        }\r\n        else if (array instanceof Uint16Array) {\r\n            return DataComponentType.UNSIGNED_SHORT;\r\n        }\r\n        else if (array instanceof Int8Array) {\r\n            return DataComponentType.BYTE;\r\n        }\r\n        else {\r\n            return DataComponentType.UNSIGNED_BYTE;\r\n        }\r\n    }\r\n\r\n    static createVertexElementArrayBuffer(gl: WebGL2RenderingContext, indices: Uint8Array | Uint16Array | Uint32Array): VertexElementArrayBuffer | null {\r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n        const usage = BufferDataUsage.STATIC_READ;\r\n        const target = gl.ELEMENT_ARRAY_BUFFER;\r\n        const indexType = this.getElementArrayBufferType(indices);\r\n\r\n        gl.bindBuffer(target, internalBuffer);\r\n        gl.bufferData(target, indices, usage);\r\n\r\n        return {\r\n            internalBuffer,\r\n            target,\r\n            usage,\r\n            indexType\r\n        };\r\n    }\r\n\r\n    static createVertexArrayBuffer(gl: WebGL2RenderingContext, program: Program, attributes: Record<string, VertexAttributeProperties>, usage?: BufferDataUsage, interleaved?: boolean): VertexArrayBuffer | null {\r\n        const {internalProgram} = program;\r\n\r\n        const DEFAULT_USAGE = BufferDataUsage.STATIC_READ;\r\n        const DEFAULT_INTERLEAVED = false;\r\n        interleaved = interleaved ?? DEFAULT_INTERLEAVED;\r\n        usage = usage ?? DEFAULT_USAGE;\r\n\r\n        const attributesEntries = attributes ? Object.entries(attributes) : null;\r\n        const byteLength = (attributesEntries !== null) ? attributesEntries.reduce(\r\n            (byteLength, [_, attribute]) => byteLength + (attribute.array?.byteLength ?? attribute.byteLength ?? 0), 0\r\n        ) : 0;\r\n        \r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n\r\n        const target = gl.ARRAY_BUFFER;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        const dataBuffer = new ArrayBuffer(byteLength);\r\n        let byteStride = 0;\r\n\r\n        const vertexAttributes: Record<string, VertexAttribute> = {};\r\n        if (attributesEntries !== null) {\r\n\r\n            attributesEntries.forEach(([_, attribute]) => {\r\n                const {array, componentType, byteLength} = attribute;\r\n                if (!array && !(componentType && byteLength)) {\r\n                    throw new Error(\"Every attribute requires either an array or a componentType and a byteLength\");\r\n                }\r\n            });\r\n\r\n            byteStride = interleaved ? attributesEntries.reduce(\r\n                (stride, [_, attribute]) => {\r\n                    const {constant} = attribute;\r\n                    if (!constant) {\r\n                        const {array, type, componentType} = attribute;\r\n                        const {BYTES_PER_ELEMENT} = array ?? this.getComponentTypeArrayConstructor(componentType!);\r\n                        const numComponents = this.getDataTypeNumComponents(type);\r\n                        return stride + BYTES_PER_ELEMENT * numComponents;\r\n                    }\r\n                    return stride;\r\n                }, 0\r\n            ) : 0;\r\n            const bufferSlices = interleaved ? Math.trunc(byteLength / byteStride) : 0;\r\n            let byteOffset = 0;\r\n            let constantValue: AttributeArray | undefined;\r\n    \r\n            attributesEntries.forEach(([attributeName, attribute]) => {\r\n                const {array, type} = attribute;\r\n                let {constant, divisor, normalize, componentType} = attribute;\r\n                constant = constant ?? false;\r\n                componentType = array?this.getArrayComponentType(array) : componentType!;\r\n\r\n                const location = gl.getAttribLocation(internalProgram, attributeName);\r\n                if (location === -1) {\r\n                    console.warn(`Attribute ${attributeName} could not be located.`);\r\n                    return;\r\n                }\r\n\r\n                const numComponents = this.getDataTypeNumComponents(type);\r\n                divisor = divisor ?? 0;\r\n                normalize = normalize ?? false;\r\n                \r\n                gl.vertexAttribPointer(location, numComponents, componentType, normalize, byteStride, byteOffset);\r\n                if (divisor > 0) {\r\n                    gl.vertexAttribDivisor(location, divisor);\r\n                }\r\n                if (constant) {\r\n                    if (!array) {\r\n                        throw new Error(\"constant flag requires an array parameter\");\r\n                    }\r\n                    constantValue = array;\r\n                    switch (numComponents) {\r\n                        case 1:\r\n                            gl.vertexAttrib1fv(location, constantValue);\r\n                            break;\r\n                        case 2:\r\n                            gl.vertexAttrib2fv(location, constantValue);\r\n                            break;\r\n                        case 3:\r\n                            gl.vertexAttrib3fv(location, constantValue);\r\n                            break;\r\n                        case 4:\r\n                            gl.vertexAttrib4fv(location, constantValue);\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    if (!constant) {\r\n                        const {array, type} = attribute;\r\n                        const numComponents = this.getDataTypeNumComponents(type);\r\n                        let byteLength = 0;\r\n                        let bytesPerElement = 0;\r\n                        if (interleaved) {\r\n                            if (array) {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement, byteLength} = array);\r\n                                const bufferArrayConstructor = this.getComponentTypeArrayConstructor(\r\n                                    this.getArrayComponentType(array)\r\n                                );\r\n                                const bufferArray = new bufferArrayConstructor(dataBuffer, byteOffset);\r\n                                const arrayStrideOffset = byteStride / bytesPerElement;\r\n                                for (let i = 0; i < bufferSlices; i++) {\r\n                                    let arraySliceIndex = i * numComponents;\r\n                                    bufferArray.set(\r\n                                        array.slice(\r\n                                            arraySliceIndex,\r\n                                            arraySliceIndex + numComponents\r\n                                        ),\r\n                                        i * arrayStrideOffset\r\n                                    );\r\n                                }\r\n                            }\r\n                            else {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement} = this.getComponentTypeArrayConstructor(componentType!));\r\n                                byteLength = attribute.byteLength!;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (array) {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement, byteLength} = array);\r\n                                const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                                    WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                                );\r\n                                const bufferArray = new bufferArrayConstructor(dataBuffer, byteOffset);\r\n                                bufferArray.set(array);\r\n                            }\r\n                            else {\r\n                                ({BYTES_PER_ELEMENT: bytesPerElement} = this.getComponentTypeArrayConstructor(componentType!));\r\n                                byteLength = attribute.byteLength!;\r\n                            }\r\n                        }\r\n                        vertexAttributes[attributeName] = {\r\n                            constantValue,\r\n                            numComponents,\r\n                            divisor,\r\n                            componentType,\r\n                            constant,\r\n                            byteOffset,\r\n                            bytesPerElement,\r\n                            type,\r\n                            normalize\r\n                        };\r\n                        byteOffset += interleaved ? bytesPerElement * numComponents : byteLength;\r\n                    }\r\n                    gl.enableVertexAttribArray(location);\r\n                }\r\n            });\r\n        }\r\n        gl.bufferData(target, dataBuffer, usage);\r\n        return {\r\n            internalBuffer,\r\n            target,\r\n            usage,\r\n            interleaved,\r\n            byteStride,\r\n            byteLength,\r\n            vertexAttributes\r\n        };\r\n    }\r\n\r\n    static setVertexArrayValues(gl: WebGL2RenderingContext, vertexArray: VertexArray, values: VertexArrayValues): void {\r\n        const {attributes, elementsCount} = values;\r\n        \r\n        const attributesRecords = Object.keys(attributes);\r\n        attributesRecords.forEach((attributeRecord) => {\r\n            const {verticesBuffers} = vertexArray;\r\n            const verticesBuffer = verticesBuffers.find(\r\n                (verticesBuffer) => attributeRecord in verticesBuffer.vertexAttributes\r\n            );\r\n            if (verticesBuffer) {\r\n                const {internalBuffer, target, byteStride, interleaved, vertexAttributes} = verticesBuffer;\r\n                const currentArrayBufferBinding = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\r\n                if (currentArrayBufferBinding !== internalBuffer) {\r\n                    gl.bindBuffer(target, internalBuffer);\r\n                }\r\n                const attribute = attributes[attributeRecord];\r\n                const {byteOffset, numComponents} = vertexAttributes[attributeRecord];\r\n                let {array, srcOffset, srcLength} = attribute;\r\n                const {length} = array;\r\n                let dstOffset = byteOffset;\r\n                if (interleaved) {\r\n                    if (srcOffset || srcLength) {\r\n                        array = array.slice(srcOffset ?? 0, srcLength);\r\n                    }\r\n                    const slices = interleaved ? Math.trunc(length / numComponents) : 0;\r\n                    let sliceOffset = 0;\r\n                    for (let i = 0; i < slices; i++) {\r\n                        gl.bufferSubData(target, dstOffset, array, sliceOffset, numComponents);\r\n                        sliceOffset += numComponents;\r\n                        dstOffset += byteStride;\r\n                    }\r\n                }\r\n                else {\r\n                    srcOffset = srcOffset ?? 0;\r\n                    srcLength = srcLength ?? length;\r\n                    gl.bufferSubData(target, 0, array, srcOffset, srcLength);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (elementsCount !== undefined) {\r\n            vertexArray.elementsCount = elementsCount;\r\n        }\r\n    }\r\n\r\n    static setVertexArrayBufferData(gl: WebGL2RenderingContext, buffer: VertexArrayBuffer | VertexElementArrayBuffer, data: ArrayBufferView, dstByteOffset?: number, srcOffset?: number, length?: number): void {\r\n        const {internalBuffer, target} = buffer;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        dstByteOffset = dstByteOffset ?? 0;\r\n        srcOffset = srcOffset ?? 0;\r\n        gl.bufferSubData(target, dstByteOffset, data, srcOffset, length);\r\n    }\r\n\r\n    static createVertexArray(gl: WebGL2RenderingContext, program: Program, vertexArray: VertexArrayProperties): VertexArray | null {\r\n        const {vertexAttributes, vertexBuffers, elementIndices, elementBuffer: elementBufferOrBufferProperties} = vertexArray;\r\n        let {elementsCount, instanceCount, drawMode} = vertexArray;\r\n\r\n        elementsCount = elementsCount ?? 0;\r\n        instanceCount = instanceCount ?? 0;\r\n        drawMode = drawMode ?? DrawMode.TRIANGLES;\r\n\r\n        const internalVertexArray = gl.createVertexArray();\r\n        if (internalVertexArray === null) {\r\n            return null;\r\n        }\r\n        gl.bindVertexArray(internalVertexArray);\r\n\r\n        const attributesEntries = vertexAttributes ? Object.entries(vertexAttributes) : [];\r\n        \r\n        const {internalProgram} = program;\r\n        const verticesBuffers: VertexArray[\"verticesBuffers\"] = [];\r\n        if (vertexBuffers) {\r\n            vertexBuffers.forEach((buffer_i, i) => {\r\n                const attributes = Object.fromEntries(attributesEntries.filter(\r\n                    ([_, attribute_i]) => attribute_i.buffer == i \r\n                ));\r\n                let buffer: VertexArrayBuffer | null = null;\r\n                if (buffer_i !== undefined) {\r\n                    if (\"internalBuffer\" in buffer_i) {\r\n                        const {target, internalBuffer} = buffer_i;\r\n                        buffer = buffer_i;\r\n                        gl.bindBuffer(target, internalBuffer);\r\n                        const {byteStride, vertexAttributes} = buffer;\r\n                        Object.entries(vertexAttributes).forEach(([attributeName, setter]) => {\r\n                            const {numComponents, componentType, normalize, byteOffset, divisor, constant, constantValue} = setter;\r\n                            const location = gl.getAttribLocation(internalProgram, attributeName);\r\n                            if (location > -1) {\r\n                                gl.vertexAttribPointer(location, numComponents, componentType, normalize, byteStride, byteOffset);\r\n                                if (divisor > 0) {\r\n                                    gl.vertexAttribDivisor(location, divisor);\r\n                                }\r\n                                if (constant && constantValue) {\r\n                                    switch (numComponents) {\r\n                                        case 1:\r\n                                            gl.vertexAttrib1fv(location, constantValue);\r\n                                            break;\r\n                                        case 2:\r\n                                            gl.vertexAttrib2fv(location, constantValue);\r\n                                            break;\r\n                                        case 3:\r\n                                            gl.vertexAttrib3fv(location, constantValue);\r\n                                            break;\r\n                                        case 4:\r\n                                            gl.vertexAttrib4fv(location, constantValue);\r\n                                            break;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    gl.enableVertexAttribArray(location);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (attributes) {\r\n                        const {usage, interleaved} = buffer_i;\r\n                        buffer = this.createVertexArrayBuffer(gl, program, attributes, usage, interleaved);\r\n                    }\r\n                }\r\n                else if (attributes) {\r\n                    buffer = this.createVertexArrayBuffer(gl, program, attributes);\r\n                }\r\n                if (buffer === null) {\r\n                    return null;\r\n                }\r\n                verticesBuffers.push(buffer);\r\n            });\r\n        }\r\n        else if (vertexAttributes) {\r\n            let buffer: VertexArrayBuffer | null = null;\r\n            buffer = this.createVertexArrayBuffer(gl, program, vertexAttributes);\r\n            if (buffer === null) {\r\n                return null;\r\n            }\r\n            verticesBuffers.push(buffer);\r\n        }\r\n        \r\n        let elementBuffer: VertexElementArrayBuffer | null | undefined = undefined;\r\n        if (elementBufferOrBufferProperties !== undefined) {\r\n            if (\"internalBuffer\" in elementBufferOrBufferProperties) {\r\n                const {target, internalBuffer} = elementBufferOrBufferProperties;\r\n                elementBuffer = elementBufferOrBufferProperties;\r\n                gl.bindBuffer(target, internalBuffer);\r\n            }\r\n            else if (elementIndices) {\r\n                elementBuffer = this.createVertexElementArrayBuffer(gl, elementIndices);\r\n            }\r\n        }\r\n        else if (elementIndices) {\r\n            elementBuffer = this.createVertexElementArrayBuffer(gl, elementIndices);\r\n        }\r\n        if (elementBuffer === null) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            verticesBuffers,\r\n            elementBuffer,\r\n            program,\r\n            internalVertexArray,\r\n            elementsCount,\r\n            instanceCount,\r\n            drawMode\r\n        };\r\n    }\r\n\r\n    static deleteVertexArray(gl: WebGL2RenderingContext, vertexArray: VertexArray): void {\r\n        const {internalVertexArray} = vertexArray;\r\n        if (gl.isVertexArray(internalVertexArray)) {\r\n            gl.deleteVertexArray(internalVertexArray);\r\n        }\r\n    }\r\n\r\n    static drawVertexArray(gl: WebGL2RenderingContext, vertexArray: VertexArray): void {\r\n        const {program, internalVertexArray, elementBuffer, elementsCount, instanceCount, drawMode} = vertexArray;\r\n\r\n        WebGLProgramUtilities.useProgram(gl, program);\r\n        \r\n        const currentVertexArray = gl.getParameter(gl.VERTEX_ARRAY_BINDING);\r\n        if (currentVertexArray !== internalVertexArray) {\r\n            gl.bindVertexArray(internalVertexArray);\r\n        }\r\n        \r\n        if (elementBuffer) {\r\n            const {indexType} = elementBuffer;\r\n            if (instanceCount > 0) {\r\n                gl.drawElementsInstanced(drawMode, elementsCount, indexType, 0, instanceCount);\r\n            }\r\n            else {\r\n                gl.drawElements(drawMode, elementsCount, indexType, 0);\r\n            }\r\n        }\r\n        else {\r\n            if (instanceCount > 0) {\r\n                gl.drawArraysInstanced(drawMode, 0, elementsCount, instanceCount);\r\n            }\r\n            else {\r\n                gl.drawArrays(drawMode, 0, elementsCount);\r\n            }\r\n        }\r\n    }\r\n\r\n    static unbindVertexArray(gl: WebGL2RenderingContext): void {\r\n        gl.bindVertexArray(null);\r\n    }\r\n\r\n    static getElementArrayBufferType(indices: Uint8Array | Uint16Array | Uint32Array): ElementArrayDataType {\r\n        if (indices instanceof Uint8Array) {\r\n            return ElementArrayDataType.UNSIGNED_BYTE;\r\n        }\r\n        else if (indices instanceof Uint16Array) {\r\n            return ElementArrayDataType.UNSIGNED_SHORT;\r\n        }\r\n        else {\r\n            return ElementArrayDataType.UNSIGNED_INT;\r\n        }\r\n    }\r\n}","import { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { CameraBase } from \"./Camera\";\r\n\r\nexport class PerspectiveCamera extends CameraBase {\r\n    \r\n    constructor(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number) {\r\n        \r\n        super(Matrix4.perspective(fov, aspect, zNear, zFar));\r\n    }\r\n\r\n    setValues(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number): PerspectiveCamera\r\n    {\r\n        this._projection.setPerspective(fov, aspect, zNear, zFar);\r\n        this.updateFrustrum();\r\n        return this;\r\n    }\r\n}","import { Vector3 } from \"engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Space } from \"../../../../libs/maths/geometry/space/Space\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Frustrum } from \"../../../../libs/physics/collisions/Frustrum\";\r\nimport { Mesh } from \"../objects/meshes/Mesh\";\r\nimport { Object3D, Object3DBase } from \"../objects/Object3D\";\r\n\r\nexport { Camera };\r\nexport { CameraBase };\r\n\r\ninterface Camera extends Object3D {\r\n  readonly uuid: UUID;\r\n  readonly viewProjection: Matrix4;\r\n  readonly projection: Matrix4;\r\n  readonly view: Matrix4\r\n  isViewing(mesh: Mesh): boolean;\r\n}\r\n\r\nclass CameraBase extends Object3DBase {\r\n    readonly uuid: UUID;\r\n    protected _projection: Matrix4;\r\n    private _frustrum: Frustrum;\r\n  \r\n    constructor()\r\n    constructor(projection: Matrix4)\r\n    constructor(projection?: Matrix4) {\r\n      super();\r\n      this.uuid = UUIDGenerator.newUUID();\r\n      this._projection = projection || new Matrix4();\r\n      this._frustrum = new Frustrum().setFromPerspectiveMatrix(this._projection);\r\n    }\r\n\r\n    getFront(vector: Vector3): Vector3 {\r\n      return this.transform.getBackward(vector);\r\n    }\r\n\r\n    get projection(): Matrix4 {\r\n      return this._projection.clone();\r\n    }\r\n\r\n    get view(): Matrix4 {\r\n      return this.transform.matrix.clone().invert();\r\n    }\r\n\r\n    get viewProjection(): Matrix4 {\r\n      return this.projection.clone().mult(this.view);\r\n    }\r\n\r\n    isViewing(mesh: Mesh): boolean {\r\n      /*if (typeof mesh.geometry.boundingBox === 'undefined') {\r\n        const boundingBox = mesh.geometry.computeBoundingBox();\r\n        return this._frustrum.intersectsBox(boundingBox);\r\n      }\r\n      return this._frustrum.intersectsBox(mesh.geometry.boundingBox);*/\r\n      return true;\r\n    }\r\n\r\n    protected updateFrustrum(): void {\r\n      this._frustrum.setFromPerspectiveMatrix(this._projection);\r\n    }\r\n}","import { Transform, TransformBase } from \"../../../general/Transform\";\r\n\r\nexport { Object3D };\r\nexport { Object3DBase };\r\n\r\ninterface Object3D {\r\n    transform: Transform;\r\n}\r\n\r\nclass Object3DBase implements Object3D {\r\n    readonly transform: Transform;\r\n\r\n    constructor() {\r\n        this.transform = new TransformBase(this);\r\n    }\r\n}","import { BufferDataUsage } from \"../../webgl/WebGLBufferUtilities\";\r\nimport { AttributeArray, AttributeDataType, DataComponentType, WebGLVertexArrayUtilities } from \"../../webgl/WebGLVertexArrayUtilities\";\r\n\r\nexport { GeometryBuffer };\r\n\r\ninterface GeometryBufferConstructor {\r\n    readonly prototype: GeometryBuffer;\r\n    new(): GeometryBuffer;\r\n    new(\r\n        attributes: Record<string, GeometryBufferAttribute>,\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    ): GeometryBuffer;\r\n    fromBlob(blob: Blob): Promise<GeometryBuffer>;\r\n}\r\n\r\ninterface GeometryBuffer {\r\n    interleaved: boolean;\r\n    buffer: ArrayBuffer;\r\n    stride: number;\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    attributes: Record<string, {\r\n        type: AttributeDataType;\r\n        componentType: DataComponentType;\r\n        byteOffset: number;\r\n        byteLength: number;\r\n        constant?: boolean;\r\n        normalize?: boolean;\r\n    }>;\r\n    getAttribute(name: string): GeometryBufferAttribute | null;\r\n    toBlob(): Blob;\r\n}\r\n\r\ninterface GeometryBufferAttribute {\r\n    array: AttributeArray,\r\n    type: AttributeDataType;\r\n    constant?: boolean;\r\n    normalize?: boolean;\r\n}\r\n\r\nclass GeometryBufferBase implements GeometryBuffer {\r\n    buffer: ArrayBuffer;\r\n    attributes: Record<string, {\r\n        type: AttributeDataType;\r\n        componentType: DataComponentType;\r\n        byteOffset: number;\r\n        byteLength: number;\r\n        constant?: boolean;\r\n        normalize?: boolean;\r\n    }>;\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    interleaved: boolean;\r\n    stride: number;\r\n\r\n    constructor()\r\n    constructor(\r\n        attributes: Record<string, GeometryBufferAttribute>,\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    )\r\n    constructor(\r\n        attributes: Record<string, GeometryBufferAttribute> = {},\r\n        indices?: Uint8Array | Uint16Array | Uint32Array,\r\n        interleaved?: boolean\r\n    ) {\r\n        if (attributes) {\r\n            const attributesBuffers = Object.values(attributes);\r\n            const bufferByteLength = attributesBuffers.reduce(\r\n                (byteLength, attribute) => byteLength + attribute.array.byteLength, 0\r\n            );\r\n            const buffer = new ArrayBuffer(bufferByteLength);\r\n            const stride = (interleaved) ? attributesBuffers.reduce(\r\n                (stride, attribute) => {\r\n                    const {array, type} = attribute;\r\n                    return stride + array.BYTES_PER_ELEMENT * WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n                }, 0\r\n            ) : 0;\r\n            const bufferSlices = Math.trunc(bufferByteLength / stride);\r\n            \r\n            this.attributes = {};\r\n            this.indices = indices;\r\n            this.interleaved = interleaved ?? false;\r\n            this.stride = stride;\r\n            this.buffer = buffer;\r\n            \r\n            let byteOffset = 0;\r\n            if (interleaved) {\r\n                Object.entries(attributes).forEach(([name, attribute]) => {\r\n                    const {array, type, constant, normalize} = attribute;\r\n                    const componentType = WebGLVertexArrayUtilities.getArrayComponentType(array);\r\n                    const numComponents = WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n                    const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                        WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                    );\r\n                    const {byteLength, BYTES_PER_ELEMENT} = array;\r\n                    const bufferArray = new bufferArrayConstructor(buffer, byteOffset);\r\n                    const arrayStrideOffset = stride / BYTES_PER_ELEMENT;\r\n                    for (let i = 0; i < bufferSlices; i++) {\r\n                        let arraySliceIndex = i * numComponents;\r\n                        bufferArray.set(\r\n                            array.slice(\r\n                                arraySliceIndex,\r\n                                arraySliceIndex + numComponents\r\n                            ),\r\n                            i * arrayStrideOffset\r\n                        );\r\n                    }\r\n                    this.attributes[name] = {\r\n                        type,\r\n                        byteOffset,\r\n                        byteLength,\r\n                        componentType,\r\n                        constant,\r\n                        normalize\r\n                    };\r\n                    byteOffset += numComponents * BYTES_PER_ELEMENT;\r\n                });\r\n            }\r\n            else {\r\n                Object.entries(attributes).forEach(([name, attribute]) => {\r\n                    const {array, type} = attribute;\r\n                    const {byteLength} = array;\r\n                    const componentType = WebGLVertexArrayUtilities.getArrayComponentType(array);\r\n                    const bufferArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(\r\n                        WebGLVertexArrayUtilities.getArrayComponentType(array)\r\n                    );\r\n                    const bufferArray = new bufferArrayConstructor(buffer, byteOffset);\r\n                    bufferArray.set(array);\r\n                    this.attributes[name] = {\r\n                        byteOffset,\r\n                        byteLength,\r\n                        type,\r\n                        componentType\r\n                    };\r\n                    byteOffset += byteLength;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.attributes = {};\r\n            this.indices = undefined;\r\n            this.interleaved = false;\r\n            this.stride = 0;\r\n            this.buffer = new ArrayBuffer(0);\r\n        }\r\n    }\r\n\r\n    toBlob(): Blob {\r\n        const {attributes, buffer, stride, interleaved, indices} = this;\r\n        const bufferData = new Uint8Array(buffer);\r\n        const {length: bufferLength} = bufferData;\r\n        const indicesData = Uint8Array.from(indices ?? []);\r\n        const indicesLength = indices?.length ?? 0;\r\n        const headerData = new TextEncoder().encode(JSON.stringify({attributes, stride, interleaved}));\r\n        const {length: headerLength} = headerData;\r\n\r\n        const blobDataView = new Uint8Array(4 + headerLength + indicesLength + bufferLength);\r\n        const {buffer: blobDataViewBuffer} = blobDataView;\r\n        const blobDataHeaderView = new Uint16Array(blobDataViewBuffer, 0, 2);\r\n        const blobDataHeaderLength = blobDataHeaderView.length * (Uint16Array.BYTES_PER_ELEMENT / Uint8Array.BYTES_PER_ELEMENT);\r\n        blobDataHeaderView[0] = headerLength;\r\n        blobDataHeaderView[1] = indicesLength;\r\n        blobDataView.set(headerData, blobDataHeaderLength);\r\n        blobDataView.set(indicesData, blobDataHeaderLength + headerLength);\r\n        blobDataView.set(bufferData, blobDataHeaderLength + headerLength + indicesLength);\r\n\r\n        return new Blob([blobDataView], {type: \"application/octet-stream\"});\r\n    }\r\n\r\n    static async fromBlob(blob: Blob): Promise<GeometryBuffer> {\r\n        const arrayBuffer = await blob.arrayBuffer();\r\n        const blobDataHeaderView = new Uint16Array(arrayBuffer, 0, 2);\r\n        const {byteLength: blobDataHeaderByteLength} = blobDataHeaderView;\r\n        const headerLength = blobDataHeaderView[0];\r\n        const indicesLength = blobDataHeaderView[1];\r\n        const headerData = new Uint8Array(arrayBuffer, blobDataHeaderByteLength, headerLength);\r\n        const arrayConstructor = (indicesLength < Math.pow(2, 8)) ? Uint8Array : (indicesLength < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        const indices = new arrayConstructor(arrayBuffer.slice(blobDataHeaderByteLength + headerLength * Uint8Array.BYTES_PER_ELEMENT, indicesLength * arrayConstructor.BYTES_PER_ELEMENT));\r\n        const buffer = arrayBuffer.slice(blobDataHeaderByteLength + (indicesLength + headerLength) * Uint8Array.BYTES_PER_ELEMENT);\r\n        const header = <Pick<GeometryBuffer, \"attributes\" | \"stride\" | \"interleaved\">>JSON.parse(new TextDecoder().decode(headerData));\r\n        const {attributes, interleaved, stride} = header;\r\n        const geometryBuffer = new GeometryBuffer();\r\n        geometryBuffer.buffer = buffer;\r\n        geometryBuffer.attributes = attributes;\r\n        geometryBuffer.interleaved = interleaved;\r\n        geometryBuffer.stride = stride;\r\n        geometryBuffer.indices = indices;\r\n        return geometryBuffer;\r\n    }\r\n\r\n    getAttribute(name: string): GeometryBufferAttribute | null {\r\n        const {attributes} = this;\r\n        const attribute = attributes[name];\r\n        if (attribute) {\r\n            const {buffer, interleaved, stride} = this;\r\n            const {type, byteOffset, byteLength, componentType} = attribute;\r\n            const attributeArrayConstructor = WebGLVertexArrayUtilities.getComponentTypeArrayConstructor(componentType);\r\n            const bytesPerElement = attributeArrayConstructor.BYTES_PER_ELEMENT;\r\n            const length = byteLength / bytesPerElement;\r\n            const numComponents = WebGLVertexArrayUtilities.getDataTypeNumComponents(type);\r\n            const {byteLength: bufferByteLength} = buffer;\r\n            const {BYTES_PER_ELEMENT} = attributeArrayConstructor;\r\n            const attributeArray = new attributeArrayConstructor(length);\r\n            if (interleaved) {\r\n                const bufferArray = new attributeArrayConstructor(buffer, byteOffset);\r\n                const bufferStride = stride;\r\n                const bufferSlices = Math.trunc(bufferByteLength / bufferStride);\r\n                const arrayStrideOffset = bufferStride / BYTES_PER_ELEMENT;\r\n                for (let i = 0; i < bufferSlices; i++) {\r\n                    let bufferArraySliceIndex = arrayStrideOffset * i;\r\n                    attributeArray.set(\r\n                        bufferArray.slice(\r\n                            bufferArraySliceIndex,\r\n                            bufferArraySliceIndex + numComponents\r\n                        ),\r\n                        numComponents * i\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                const bufferArray = new attributeArrayConstructor(buffer, byteOffset, length);\r\n                attributeArray.set(bufferArray);\r\n            }\r\n            return {\r\n                array: attributeArray,\r\n                type: type\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nvar GeometryBuffer: GeometryBufferConstructor = GeometryBufferBase;","\r\n\r\n// Vertices : counter clock-wise ordered\r\n\r\nimport { TriangleList } from \"../../../../libs/maths/extensions/lists/TriangleList\";\r\nimport { Vector2List } from \"../../../../libs/maths/extensions/lists/Vector2List\";\r\nimport { Vector3List } from \"../../../../libs/maths/extensions/lists/Vector3List\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { BoundingBox } from \"../../../../libs/physics/collisions/AxisAlignedBoundingBox\";\r\nimport { BoundingSphere } from \"../../../../libs/physics/collisions/BoundingSphere\";\r\nimport { GeometryBuffer } from \"./GeometryBuffer\";\r\nimport { GeometryBuilder } from \"./GeometryBuilder\";\r\nimport { GeometryUtils } from \"./GeometryUtils\";\r\n\r\n// FaceIndices : 3 vertices indices\r\n// FaceArea : triangle.getArea()\r\n// FaceNormal : triangle.getNormal()\r\n// FaceUV / FaceColor ?\r\n\r\n// VertexNormal => Weighted (by area) average of the normals of the faces containing the vertex (=> Varying)\r\n// - Clone the vertex array, read the face indices array\r\n\r\n// VertexIndices\r\n\r\n// PerVertex Animation / MorphTargets\r\n\r\n// SkeletalAnimation\r\n\r\n// Bones are a hierarchical tree\r\n\r\n// bonesWeights\r\n// bonesIndices\r\n\r\n// MorphTarget Animation\r\n\r\n// MorphTargets are a copy of each face, being transformed over time\r\n\r\n// morphIndices\r\n// morphTargets = []; MorphTargets are a transformed copy of faces\r\n// morphNormals = [];\r\n\r\nexport { Geometry };\r\nexport { GeometryBase };\r\n\r\nenum GeometryAttributes {\r\n    VERTICES,\r\n    UVS,\r\n    NORMALS,\r\n    TANGENTS\r\n}\r\n\r\ninterface GeometryConstructor {\r\n    \r\n}\r\n\r\ninterface Geometry {\r\n\r\n}\r\n\r\nclass GeometryBase implements Geometry {\r\n\r\n    toBuilder(): GeometryBuilder {\r\n        throw new Error(\"No builder defined.\");\r\n    }\r\n}\r\n\r\nvar Geometry: GeometryConstructor = GeometryBase;","import { Matrix4 } from \"../../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../../../../libs/maths/algebra/vectors/Vector3\";\r\n\r\nexport { BoundingBox };\r\n\r\nconst corners = new Array(8).fill(0).map(_ => new Vector3());\r\n\r\ninterface BoundingBoxConstructor {\r\n    prototype: BoundingBox;\r\n    new(\r\n        min: Vector3,\r\n        max: Vector3\r\n    ): BoundingBox;\r\n}\r\n\r\ninterface BoundingBox {\r\n    readonly min: Vector3;\r\n    readonly max: Vector3;\r\n    hits(other: BoundingBox): boolean;\r\n    transform(matrix: Matrix4): void;\r\n}\r\n\r\nclass BoundingBoxBase {\r\n    readonly min: Vector3;\r\n    readonly max: Vector3;\r\n\r\n    constructor(\r\n        min: Vector3,\r\n        max: Vector3\r\n    ) {\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n\r\n    static fromBoxes(...boxes: BoundingBox[]) {\r\n        const positiveInfinity = Number.POSITIVE_INFINITY;\r\n        const negativeInfinity = Number.NEGATIVE_INFINITY;\r\n        let minX = positiveInfinity;\r\n        let minY = positiveInfinity;\r\n        let minZ = positiveInfinity;\r\n        let maxX = negativeInfinity;\r\n        let maxY = negativeInfinity;\r\n        let maxZ = negativeInfinity;\r\n        boxes.forEach((box_i) => {\r\n            const {min: boxMin, max: boxMax} = box_i;\r\n            const {x: boxMinX, y: boxMinY, z: boxMinZ} = boxMin;\r\n            const {x: boxMaxX, y: boxMaxY, z: boxMaxZ} = boxMax;\r\n            if (boxMinX < minX) minX = boxMinX;\r\n            else if (boxMaxX > maxX) maxX = boxMaxX;\r\n            if (boxMinY < minY) minY = boxMinY;\r\n            else if (boxMaxY > maxY) maxY = boxMaxY;\r\n            if (boxMinZ < minZ) minZ = boxMinZ;\r\n            else if (boxMaxZ > maxZ) maxZ = boxMaxZ;\r\n        });\r\n        return new BoundingBox(\r\n            new Vector3(minX, minY, minZ),\r\n            new Vector3(maxX, maxY, maxZ)\r\n        );\r\n    }\r\n\r\n    hits(other: BoundingBox): boolean {\r\n        const {min, max} = this;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        const {min: otherMin, max: otherMax} = other;\r\n        const {x: otherMinX, y: otherMinY, z: otherMinZ} = otherMin;\r\n        const {x: otherMaxX, y: otherMaxY, z: otherMaxZ} = otherMax;\r\n        return (minX <= otherMaxX && maxX >= otherMinX) &&\r\n            (minY <= otherMaxY && maxY >= otherMinY) &&\r\n            (minZ <= otherMaxZ && maxZ >= otherMinZ);\r\n    }\r\n\r\n    transform(matrix: Matrix4): void {\r\n        const {min, max} = this;\r\n        let {x: minX, y: minY, z: minZ} = min;\r\n        let {x: maxX, y: maxY, z: maxZ} = max;\r\n        corners[0].copy(min);\r\n        corners[1].setValues(minX, minY, maxZ);\r\n        corners[2].setValues(minX, maxY, minZ);\r\n        corners[3].setValues(maxX, minY, minZ);\r\n        corners[4].setValues(minX, maxY, maxZ);\r\n        corners[5].setValues(maxX, minY, maxZ);\r\n        corners[6].setValues(maxX, maxY, minZ);\r\n        corners[7].copy(max);\r\n        const {POSITIVE_INFINITY, NEGATIVE_INFINITY} = Number;\r\n        minX = minY = minZ = POSITIVE_INFINITY;\r\n        maxX = maxY = maxZ = NEGATIVE_INFINITY;\r\n        corners.forEach((corner_i) => {\r\n            matrix.transformPoint(corner_i);\r\n            const [x, y, z] = corner_i;\r\n            if (x < minX) minX = x;\r\n            else if (x > maxX) maxX = x;\r\n            if (y < minY) minY = y;\r\n            else if (y > maxY) maxY = y;\r\n            if (z < minZ) minZ = z;\r\n            else if (z > maxZ) maxZ = z;\r\n        });\r\n        min.setValues(minX, minY, minZ);\r\n        max.setValues(maxX, maxY, maxZ);\r\n    }\r\n}\r\n\r\nvar BoundingBox: BoundingBoxConstructor = BoundingBoxBase;","\r\n\r\n// Vertices : counter clock-wise ordered\r\n\r\nimport { TriangleList } from \"../../../../libs/maths/extensions/lists/TriangleList\";\r\nimport { Vector2List } from \"../../../../libs/maths/extensions/lists/Vector2List\";\r\nimport { Vector3List } from \"../../../../libs/maths/extensions/lists/Vector3List\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { BoundingBox } from \"../../../../libs/physics/collisions/AxisAlignedBoundingBox\";\r\nimport { BoundingSphere } from \"../../../../libs/physics/collisions/BoundingSphere\";\r\nimport { GeometryBuffer } from \"./GeometryBuffer\";\r\nimport { GeometryBuilder } from \"./GeometryBuilder\";\r\nimport { GeometryUtils } from \"./GeometryUtils\";\r\n\r\n// FaceIndices : 3 vertices indices\r\n// FaceArea : triangle.getArea()\r\n// FaceNormal : triangle.getNormal()\r\n// FaceUV / FaceColor ?\r\n\r\n// VertexNormal => Weighted (by area) average of the normals of the faces containing the vertex (=> Varying)\r\n// - Clone the vertex array, read the face indices array\r\n\r\n// VertexIndices\r\n\r\n// PerVertex Animation / MorphTargets\r\n\r\n// SkeletalAnimation\r\n\r\n// Bones are a hierarchical tree\r\n\r\n// bonesWeights\r\n// bonesIndices\r\n\r\n// MorphTarget Animation\r\n\r\n// MorphTargets are a copy of each face, being transformed over time\r\n\r\n// morphIndices\r\n// morphTargets = []; MorphTargets are a transformed copy of faces\r\n// morphNormals = [];\r\n\r\nexport { Geometry };\r\nexport { GeometryBase };\r\n\r\nenum GeometryAttributes {\r\n    VERTICES,\r\n    UVS,\r\n    NORMALS,\r\n    TANGENTS\r\n}\r\n\r\ninterface GeometryConstructor {\r\n    \r\n}\r\n\r\ninterface Geometry {\r\n\r\n}\r\n\r\nclass GeometryBase implements Geometry {\r\n\r\n    toBuilder(): GeometryBuilder {\r\n        throw new Error(\"No builder defined.\");\r\n    }\r\n}\r\n\r\nvar Geometry: GeometryConstructor = GeometryBase;","import { BufferMask } from \"./WebGLRendererUtilities\";\r\nimport { Texture, TextureMagFilter, TexturePixelFormat, TexturePixelType } from \"./WebGLTextureUtilities\";\r\n\r\nexport enum FramebufferStatus {\r\n    FRAMEBUFFER_COMPLETE = 0x8CD5,\r\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6,\r\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7,\r\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9,\r\n    FRAMEBUFFER_UNSUPPORTED = 0x8CDD\r\n}\r\n\r\nexport enum FramebufferTextureTarget {\r\n    TEXTURE_2D = 0x0DE1,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A\r\n}\r\n\r\nexport enum FramebufferAttachment {\r\n    COLOR_ATTACHMENT0 = 0x8CE0,\r\n    COLOR_ATTACHMENT1 = 0x8CE1,\r\n    COLOR_ATTACHMENT2 = 0x8CE2,\r\n    COLOR_ATTACHMENT3 = 0x8CE3,\r\n    COLOR_ATTACHMENT4 = 0x8CE4,\r\n    COLOR_ATTACHMENT5 = 0x8CE5,\r\n    COLOR_ATTACHMENT6 = 0x8CE6,\r\n    COLOR_ATTACHMENT7 = 0x8CE7,\r\n    COLOR_ATTACHMENT8 = 0x8CE8,\r\n    COLOR_ATTACHMENT9 = 0x8CE9,\r\n    COLOR_ATTACHMENT10 = 0x8CEA,\r\n    COLOR_ATTACHMENT11 = 0x8CEB,\r\n    COLOR_ATTACHMENT12 = 0x8CEC,\r\n    COLOR_ATTACHMENT13 = 0x8CED,\r\n    COLOR_ATTACHMENT14 = 0x8CEE,\r\n    COLOR_ATTACHMENT15 = 0x8CEF,\r\n    DEPTH_ATTACHMENT = 0x8D00,\r\n    STENCIL_ATTACHMENT = 0x8D20,\r\n    DEPTH_STENCIL_ATTACHMENT = 0x821A\r\n}\r\n\r\nexport enum RenderbufferPixelFormat {\r\n    R8 = 0x8229,\r\n    R8UI = 0x8232,\r\n    R8I = 0x8231,\r\n    R16UI = 0x8234,\r\n    R16I = 0x8233,\r\n    R32UI = 0x8236,\r\n    R32I = 0x8235,\r\n    RG8 = 0x822B,\r\n    RG8UI = 0x8238,\r\n    RG8I = 0x8237,\r\n    RG16UI = 0x823A,\r\n    RG16I = 0x8239,\r\n    RG32UI = 0x823C,\r\n    RG32I = 0x823B,\r\n    RGB8 = 0x8051,\r\n    RGBA8 = 0x8058,\r\n    SRGB8_ALPHA8 = 0x8C43,\r\n    RGBA4 = 0x8056,\r\n    RGB565 = 0x8D62,\r\n    RGB5_A1 = 0x8057,\r\n    RGB10_A2 = 0x8059,\r\n    RGBA8UI = 0x8D7C,\r\n    RGBA8I = 0x8D8E,\r\n    RGB10_A2UI = 0x906F,\r\n    RGBA16UI = 0x8D76,\r\n    RGBA16I = 0x8D88,\r\n    RGBA32I = 0x8D82,\r\n    RGBA32UI = 0x8D70,\r\n    DEPTH_COMPONENT16 = 0x81A5,\r\n    DEPTH_COMPONENT24 = 0x81A6,\r\n    DEPTH_COMPONENT32F = 0x8CAC,\r\n    DEPTH24_STENCIL8 = 0x88F0,\r\n    DEPTH32F_STENCIL8 = 0x8CAD,\r\n    STENCIL_INDEX8 = 0x8D48\r\n}\r\n\r\nexport type Renderbuffer = {\r\n    internalRenderbuffer: WebGLRenderbuffer;\r\n}\r\n\r\nexport type RenderbufferProperties = {\r\n    internalFormat: RenderbufferPixelFormat;\r\n    width: number;\r\n    height: number;\r\n    samples?: number;\r\n}\r\n\r\ntype Framebuffer = {\r\n    internalFramebuffer: WebGLFramebuffer;\r\n};\r\n\r\ntype FramebufferTextureAttachmentProperties = {\r\n    attachment: FramebufferAttachment;\r\n    textureTarget: FramebufferTextureTarget;\r\n    texture: Texture;\r\n}\r\n\r\ntype FramebufferTextureAttachment = FramebufferTextureAttachmentProperties & Framebuffer;\r\n\r\ntype FramebufferRenderbufferAttachmentProperties = {\r\n    attachment: FramebufferAttachment;\r\n    renderbuffer: Renderbuffer;\r\n}\r\n\r\ntype FramebufferRenderbufferAttachment = FramebufferRenderbufferAttachmentProperties & Framebuffer;\r\n\r\nexport class WebGLFramebufferUtilities {\r\n\r\n    static createFramebuffer(gl: WebGL2RenderingContext): Framebuffer | null {\r\n        const internalFramebuffer = gl.createFramebuffer();\r\n    \r\n        if (internalFramebuffer === null) {\r\n            return null;\r\n        }\r\n        \r\n        return {\r\n            internalFramebuffer\r\n        };\r\n    }\r\n\r\n    static createRenderbuffer(gl: WebGL2RenderingContext, props: RenderbufferProperties): Renderbuffer | null {\r\n        const internalRenderbuffer = gl.createRenderbuffer();\r\n        if (internalRenderbuffer === null) {\r\n            return null;\r\n        }\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, internalRenderbuffer);\r\n        \r\n        if (typeof props.samples !== \"undefined\") {\r\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, props.samples, props.internalFormat, props.width, props.height);\r\n        }\r\n        else {\r\n            gl.renderbufferStorage(gl.RENDERBUFFER, props.internalFormat, props.width, props.height);\r\n        }\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n        return {\r\n            ...props,\r\n            internalRenderbuffer\r\n        };\r\n    }\r\n\r\n    static attachTexture(gl: WebGL2RenderingContext, framebuffer: Framebuffer, ...props: FramebufferTextureAttachmentProperties[]): FramebufferTextureAttachment[] {\r\n        const {internalFramebuffer} = framebuffer;\r\n        const currentFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\r\n        if (currentFramebuffer !== internalFramebuffer) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, internalFramebuffer);\r\n        }\r\n        \r\n        const attachments = props.map((props) => {\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, props.attachment, props.textureTarget, props.texture.internalTexture, 0);\r\n            return {\r\n                ...props,\r\n                ...framebuffer\r\n            };\r\n        });\r\n\r\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        if (status !== FramebufferStatus.FRAMEBUFFER_COMPLETE) {\r\n            console.warn(`Incomplete framebuffer status: ${FramebufferStatus[status]}`);\r\n        }\r\n\r\n        return attachments;\r\n    }\r\n\r\n    static attachRenderbuffer(gl: WebGL2RenderingContext, framebuffer: Framebuffer, ...props: FramebufferRenderbufferAttachmentProperties[]): FramebufferRenderbufferAttachment[] {\r\n        const {internalFramebuffer} = framebuffer;\r\n        const currentFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\r\n        if (currentFramebuffer !== internalFramebuffer) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, internalFramebuffer);\r\n        }\r\n\r\n        const attachments = props.map((props) => {\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, props.attachment, gl.RENDERBUFFER, props.renderbuffer.internalRenderbuffer);\r\n            return {\r\n                ...props,\r\n                ...framebuffer\r\n            };\r\n        });\r\n\r\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        if (status !== FramebufferStatus.FRAMEBUFFER_COMPLETE) {\r\n            console.warn(`Incomplete framebuffer status: ${FramebufferStatus[status]}`);\r\n        }\r\n\r\n        return attachments;\r\n    }\r\n\r\n    static blit(gl: WebGL2RenderingContext, readFramebuffer: Framebuffer | null, drawFramebuffer: Framebuffer | null, readRectangle: number[], drawRectangle: number[], mask: BufferMask, filter: TextureMagFilter): void {\r\n        const currentReadFramebuffer = gl.getParameter(gl.READ_FRAMEBUFFER_BINDING);\r\n        if (currentReadFramebuffer !== readFramebuffer) {\r\n            const internalReadFramebuffer = readFramebuffer?.internalFramebuffer ?? null;\r\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, internalReadFramebuffer);\r\n        }\r\n        \r\n        const currentDrawFramebuffer = gl.getParameter(gl.DRAW_FRAMEBUFFER_BINDING);\r\n        if (currentDrawFramebuffer !== drawFramebuffer) {\r\n            const internalDrawFramebuffer = drawFramebuffer?.internalFramebuffer ?? null;\r\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, internalDrawFramebuffer);\r\n        }\r\n        \r\n        gl.blitFramebuffer(readRectangle[0], readRectangle[1], readRectangle[2], readRectangle[3], drawRectangle[0], drawRectangle[1], drawRectangle[2], drawRectangle[3], mask, filter);\r\n    }\r\n\r\n    static readPixels(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number, format: TexturePixelFormat, type: TexturePixelType, pixels: ArrayBufferView): void {\r\n        gl.readPixels(x, y, width, height, format, type, pixels);\r\n    }\r\n\r\n    static bindFramebuffer(gl: WebGL2RenderingContext, framebuffer: Framebuffer): void {\r\n        const {internalFramebuffer} = framebuffer;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, internalFramebuffer);\r\n    }\r\n\r\n    static unbindFramebuffer(gl: WebGL2RenderingContext): void {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    static deleteFramebuffer(gl: WebGL2RenderingContext, framebuffer: Framebuffer): void {\r\n        const {internalFramebuffer} = framebuffer;\r\n        if (gl.isFramebuffer(internalFramebuffer)) {\r\n            gl.deleteFramebuffer(internalFramebuffer);\r\n        }\r\n    }\r\n\r\n    static deleteRenderbuffer(gl: WebGL2RenderingContext, renderbuffer: Renderbuffer): void {\r\n        const {internalRenderbuffer} = renderbuffer;\r\n        if (gl.isRenderbuffer(internalRenderbuffer)) {\r\n            gl.deleteRenderbuffer(internalRenderbuffer);\r\n        }\r\n    }\r\n}","import { Vector3 } from \"../../../../libs/maths/algebra/vectors/Vector3\"\r\nimport { BoundingBox } from \"./bounding/BoundingBox\";\r\n\r\nexport { GeometryBuilder };\r\n\r\ninterface GeometryBuilder {\r\n    readonly halfEdges: Array<HalfEdge>;\r\n    readonly vertices: Array<Vertex>;\r\n    readonly faces: Array<Face>;\r\n    clone(): GeometryBuilder;\r\n    addTriangleFace(v0: VertexID, v1: VertexID, v2: VertexID, properties?: {[key: string]: any;}): void;\r\n    addQuadFace(v0: VertexID, v1: VertexID, v2: VertexID, v3: VertexID, properties?: {[key: string]: any;}): void;\r\n    addVertex(vertex: number[] | Float32Array | Float64Array): VertexID;\r\n    addFace(vertices: VertexID[], properties?: {[key: string]: any;}[]): void;\r\n    verticesArray(): Float32Array;\r\n    uvsArray(): Float32Array;\r\n    indicesArray(): Uint8Array | Uint16Array | Uint32Array;\r\n    linesArray(): Float32Array;\r\n    normalsArray(): Float32Array;\r\n    tangentsArray(): Float32Array;\r\n    boundingBox(): BoundingBox;\r\n    faceHalfEdgesIterator(face: FaceID): FaceHalfEdgesIterator;\r\n    faceVerticesIterator(face: FaceID): FaceHalfEdgesIterator;\r\n    vertexFacesIterator(vertex: VertexID): VertexFacesIterator;\r\n}\r\n\r\ninterface GeometryBuilderConstructor {\r\n    readonly prototype: GeometryBuilder;\r\n    new(): GeometryBuilder;\r\n}\r\n\r\nclass GeometryBuilderBase implements GeometryBuilder {\r\n    readonly halfEdges: Array<HalfEdge>;\r\n    readonly vertices: Array<Vertex>;\r\n    readonly faces: Array<Face>;\r\n\r\n    constructor() {\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n    }\r\n\r\n    clone(): GeometryBuilder {\r\n        return Object.assign(Object.create(this.constructor.prototype), structuredClone(this));\r\n    }\r\n\r\n    addTriangleFace(v0: VertexID, v1: VertexID, v2: VertexID, properties?: {[key: string]: any;}): void {\r\n        this.addFace([v0, v1, v2], properties);\r\n    }\r\n\r\n    addQuadFace(v0: VertexID, v1: VertexID, v2: VertexID, v3: VertexID, properties?: {[key: string]: any;}): void {\r\n        this.addFace([v0, v1, v2, v3], properties);\r\n    }\r\n    \r\n    addVertex(position: number[] | Float32Array | Float64Array): VertexID {\r\n        const {vertices} = this;\r\n        const vertex: Vertex = {\r\n            position: position,\r\n            halfEdgeID: null\r\n        };\r\n        return vertices.push(vertex) - 1;\r\n    }\r\n\r\n    addFace(vertices: VertexID[], properties?: {[key: string]: any;}): void {\r\n        const {halfEdges: _halfEdges, vertices: _vertices, faces: _faces} = this;\r\n        const {length: faceVerticesCount} = vertices;\r\n        if (faceVerticesCount < 2) {\r\n            console.error(`At least 2 vertices are required to create a face.`);\r\n            return;\r\n        }\r\n        const face: Face = {\r\n            halfEdgeID: null,\r\n            ...properties\r\n        };\r\n        const faceID = _faces.length;\r\n        let sourceID: VertexID | null = null;\r\n        let targetID: VertexID | null = null;\r\n        let firstHalfEdgeID: HalfEdgeID | null = null;\r\n        let halfEdge: HalfEdge | null = null;\r\n        let halfEdgeID: HalfEdgeID | null = null;\r\n        let previousHalfEdgeID: HalfEdgeID | null = null;\r\n        for (let i = 0; i < faceVerticesCount; i++) {\r\n            sourceID = vertices[i];\r\n            targetID = (i < faceVerticesCount - 1) ? vertices[i + 1] : vertices[0];\r\n            const existingHalfEdge = Array.from(this.vertexFacesIterator(sourceID)).find(\r\n                (face_i) => {\r\n                    if (face_i === null) return false;\r\n                    return Array.from(this.faceHalfEdgesIterator(face_i)).find(\r\n                        (halfEdge_i) => {\r\n                            const {targetID: targetID_i, prevID: prevID_i} = _halfEdges[halfEdge_i];\r\n                            return targetID_i === targetID && _halfEdges[prevID_i ?? -1]?.targetID === sourceID;\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n            if (existingHalfEdge) {\r\n                continue;\r\n            }\r\n            halfEdge = {\r\n                targetID: targetID,\r\n                twinID: null,\r\n                nextID: null,\r\n                prevID: null,\r\n                faceID: faceID\r\n            };\r\n            halfEdgeID = _halfEdges.length;\r\n            if (previousHalfEdgeID === null) {\r\n                face.halfEdge = halfEdgeID;\r\n                firstHalfEdgeID = halfEdgeID;\r\n            }\r\n            else {\r\n                halfEdge.prevID = previousHalfEdgeID;\r\n                _halfEdges[previousHalfEdgeID].nextID = halfEdgeID;\r\n            }\r\n            const source = _vertices[sourceID]!;\r\n            if (source.halfEdgeID === null) {\r\n                source.halfEdgeID = halfEdgeID;\r\n            }\r\n            const twinHalfEdge = _halfEdges.find(\r\n                (halfEdge_i) => {\r\n                    const {targetID: targetID_i, prevID: prevID_i} = halfEdge_i;\r\n                    return targetID_i === sourceID && _halfEdges[prevID_i ?? -1]?.targetID === targetID;\r\n                }\r\n            ) ?? null;\r\n            if (twinHalfEdge !== null) {\r\n                halfEdge.twinID = _halfEdges.indexOf(twinHalfEdge);\r\n                twinHalfEdge.twinID = halfEdgeID;\r\n            }\r\n            previousHalfEdgeID = halfEdgeID;\r\n            _halfEdges.push(halfEdge);\r\n        }\r\n        if (halfEdge !== null && firstHalfEdgeID !== null) {\r\n            _halfEdges[firstHalfEdgeID].prevID = halfEdgeID;\r\n            halfEdge.nextID = firstHalfEdgeID;\r\n        }\r\n        _faces.push(face);\r\n    }\r\n\r\n    linesArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((_, i) => {\r\n            const faceVertices = Array.from(this.faceVerticesIterator(i));\r\n            if (faceVertices.length === 4) {\r\n                const [v0, v1, v2, v3] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n                return [\r\n                    ...v0, ...v1,\r\n                    ...v1, ...v2,\r\n                    ...v2, ...v3,\r\n                    ...v3, ...v0\r\n                ];\r\n            }\r\n            else {\r\n                const [v0, v1, v2] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n                return [\r\n                    ...v0, ...v1,\r\n                    ...v1, ...v2,\r\n                    ...v2, ...v0\r\n                ];\r\n            }\r\n        }));\r\n    }\r\n\r\n    verticesArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((_, i) => {\r\n            return Array.from(this.faceVerticesIterator(i)).flatMap((vertex) => {\r\n                return Array.from(vertices[vertex].position);\r\n            });\r\n        }));\r\n    }\r\n\r\n    tangentsArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((face_i, i) => {\r\n            const faceVertices = Array.from(this.faceVerticesIterator(i));\r\n            const faceUvs = face_i.uv as Array<Array<number>>;\r\n            const [v0, v1, v2] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n            const [uv0, uv1, uv2] = faceUvs;\r\n            const edge1 = v1.map((v1_i, i) => v0[i] - v1_i);\r\n            const edge2 = v1.map((v1_i, i) => v2[i] - v1_i);\r\n            const deltaUV1 = uv1.map((uv1_i, i) => uv0[i] - uv1_i);\r\n            const deltaUV2 = uv1.map((uv1_i, i) => uv2[i] - uv1_i);\r\n            const f = 1.0 / (deltaUV1[0] * deltaUV2[1] - deltaUV1[1] * deltaUV2[0]);\r\n            const tangent = edge1.map((edge1_i, i) => -(edge1_i * deltaUV2[1] - edge2[i] * deltaUV1[1]) * f);\r\n            const length = Math.hypot(...tangent);\r\n            face_i.tangent = tangent.map(tangent_i => tangent_i / length);\r\n\r\n            return faceVertices.flatMap(() => {\r\n                return Array.from(face_i.tangent);\r\n            });\r\n        }));\r\n    }\r\n\r\n    normalsArray(): Float32Array {\r\n        const {faces, vertices} = this;\r\n        return new Float32Array(faces.flatMap((face_i, i) => {\r\n            const faceVertices = Array.from(this.faceVerticesIterator(i));\r\n            const [v0, v1, v2] = faceVertices.map(vertex_i => vertices[vertex_i].position);\r\n            const edge1 = v1.map((v1_i, i) => v0[i] - v1_i);\r\n            const edge2 = v1.map((v1_i, i) => v2[i] - v1_i);\r\n            const normal = edge1.map((_, i) => {\r\n                const ni = (i + 1) % 3;\r\n                const pi = ((i - 1) + 3) % 3;\r\n                return -(edge1[ni] * edge2[pi] - edge1[pi] * edge2[ni]);\r\n            });\r\n            const length = Math.hypot(...normal);\r\n            face_i.normal = normal.map(normal_i => normal_i / length);\r\n            \r\n            return faceVertices.flatMap(() => {\r\n                return Array.from(face_i.normal);\r\n            });\r\n        }));\r\n    }\r\n\r\n    uvsArray(): Float32Array {\r\n        const {faces} = this;\r\n        return new Float32Array(faces.flatMap((face) => {\r\n            return face.uv.flat(1);\r\n        }));\r\n    }\r\n\r\n    indicesArray(): Uint8Array | Uint16Array | Uint32Array {\r\n        const {faces} = this;\r\n        const count = faces.reduce((verticesCount, _, i) => {\r\n            return verticesCount + Array.from(this.faceVerticesIterator(i)).length;\r\n        }, 0);\r\n        const arrayConstructor = (count < Math.pow(2, 8)) ? Uint8Array : (count < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        return new arrayConstructor(faces.reduce(([indices, index], face_i, i) => {\r\n            const vertices = Array.from(this.faceVerticesIterator(i));\r\n            if (vertices.length === 4) {\r\n                return [indices.concat([index, index + 1, index + 2, index + 2, index + 3, index]), index + 4] as [number[], number];\r\n            }\r\n            return [indices.concat([index, index + 1, index + 2]), index + 3] as [number[], number];\r\n        }, [[], 0] as [number[], number])[0]);\r\n    }\r\n\r\n    boundingBox(): BoundingBox {\r\n        const positiveInfinity = Number.POSITIVE_INFINITY;\r\n        const negativeInfinity = Number.NEGATIVE_INFINITY;\r\n        let minX = positiveInfinity;\r\n        let minY = positiveInfinity;\r\n        let minZ = positiveInfinity;\r\n        let maxX = negativeInfinity;\r\n        let maxY = negativeInfinity;\r\n        let maxZ = negativeInfinity;\r\n        const {vertices} = this;\r\n        if (vertices.length > 0) {\r\n            vertices.forEach((vertex_i) => {\r\n                const [x, y, z] = vertex_i.position;\r\n                if (x < minX) minX = x;\r\n                else if (x > maxX) maxX = x;\r\n                if (y < minY) minY = y;\r\n                else if (y > maxY) maxY = y;\r\n                if (z < minZ) minZ = z;\r\n                else if (z > maxZ) maxZ = z;\r\n            });\r\n        }\r\n        const min = new Vector3([minX, minY, minZ]);\r\n        const max = new Vector3([maxX, maxY, maxZ]);\r\n        return new BoundingBox(min, max);\r\n    }\r\n    \r\n    faceHalfEdgesIterator(face: FaceID): FaceHalfEdgesIterator {\r\n        return new FaceHalfEdgesIterator(this, face);\r\n    }\r\n\r\n    faceVerticesIterator(face: FaceID): FaceHalfEdgesIterator {\r\n        return new FaceVerticesIterator(this, face);\r\n    }\r\n\r\n    vertexFacesIterator(vertex: VertexID): VertexFacesIterator {\r\n        return new VertexFacesIterator(this, vertex);\r\n    }\r\n}\r\n\r\nvar GeometryBuilder: GeometryBuilderConstructor = GeometryBuilderBase;\r\n\r\nexport type HalfEdgeID = number;\r\nexport type FaceID = number;\r\nexport type VertexID = number;\r\n\r\nexport type HalfEdge = {\r\n    targetID: VertexID | null;\r\n    twinID: HalfEdgeID | null;\r\n    prevID: HalfEdgeID | null;\r\n    nextID: HalfEdgeID | null;\r\n    faceID: FaceID | null;\r\n}\r\n\r\nexport type Face = {\r\n    halfEdgeID: HalfEdgeID | null;\r\n    [key: string]: any;\r\n}\r\n\r\nexport type Vertex = {\r\n    position: number[] | Float32Array | Float64Array;\r\n    halfEdgeID: HalfEdgeID | null;\r\n    properties?: {\r\n        [key: string]: any;\r\n    }\r\n}\r\n\r\nexport class FaceHalfEdgesIterator {\r\n    geometry: GeometryBuilder;\r\n    faceID: FaceID;\r\n    halfEdgeID: HalfEdgeID | null;\r\n\r\n    constructor(geometry: GeometryBuilder, face: FaceID) {\r\n        this.geometry = geometry;\r\n        this.faceID = face;\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    reset(): void {\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    current(): HalfEdgeID | null {\r\n        return this.halfEdgeID;\r\n    }\r\n\r\n    next(): IteratorResult<HalfEdgeID> {\r\n        const {halfEdgeID, faceID, geometry} = this;\r\n        const {faces, halfEdges} = geometry;\r\n        const face = faces[faceID];\r\n        if (face !== null) {\r\n            if (halfEdgeID === null) {\r\n                const firstHalfEdgeID = face.halfEdgeID ?? null;\r\n                const nextHalfEdgeID = faces[firstHalfEdgeID ?? -1]?.nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (firstHalfEdgeID !== null) {\r\n                    return {\r\n                        value: firstHalfEdgeID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n            else if (halfEdgeID !== face.halfEdge) {\r\n                const nextHalfEdgeID = halfEdges[halfEdgeID].nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (halfEdgeID !== null) {\r\n                    return {\r\n                        value: halfEdgeID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: undefined, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<HalfEdgeID> {\r\n        this.halfEdgeID = null;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class FaceVerticesIterator {\r\n    geometry: GeometryBuilder;\r\n    faceID: FaceID;\r\n    halfEdgeID: HalfEdgeID | null;\r\n\r\n    constructor(geometry: GeometryBuilder, face: FaceID) {\r\n        this.geometry = geometry;\r\n        this.faceID = face;\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    reset(): void {\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    current(): VertexID | null {\r\n        const {halfEdgeID, geometry} = this;\r\n        const {halfEdges} = geometry;\r\n        return halfEdges[halfEdges[halfEdgeID ?? -1]?.prevID ?? -1]?.targetID ?? null;\r\n    }\r\n\r\n    next(): IteratorResult<VertexID> {\r\n        const {halfEdgeID, geometry, faceID} = this;\r\n        const {faces, halfEdges} = geometry;\r\n        const face = faces[faceID ?? -1];\r\n        if (face !== null) {\r\n            const {halfEdge: faceHalfEdgeID} = face;\r\n            if (halfEdgeID === null) {\r\n                const firstVertexID = halfEdges[halfEdges[faceHalfEdgeID ?? -1].prevID ?? -1].targetID ?? null;\r\n                const nextHalfEdgeID = halfEdges[faceHalfEdgeID ?? -1].nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (firstVertexID !== null) {\r\n                    return {\r\n                        value: firstVertexID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n            else if (halfEdgeID !== face.halfEdge) {\r\n                const vertex = halfEdges[halfEdges[halfEdgeID].prevID ?? -1].targetID ?? null;\r\n                const nextHalfEdgeID = halfEdges[halfEdgeID].nextID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (vertex !== null) {\r\n                    return {\r\n                        value: vertex, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: undefined, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<VertexID> {\r\n        this.halfEdgeID = null;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class VertexFacesIterator {\r\n    geometry: GeometryBuilder;\r\n    halfEdgeID: HalfEdgeID | null;\r\n    vertexID: VertexID;\r\n    \r\n    constructor(geometry: GeometryBuilder, vertex: VertexID) {\r\n        this.geometry = geometry;\r\n        this.vertexID = vertex;\r\n        this.halfEdgeID = null;\r\n    }\r\n    \r\n    reset(): void {\r\n        this.halfEdgeID = null;\r\n    }\r\n\r\n    current(): FaceID | null {\r\n        const {geometry, halfEdgeID} = this;\r\n        const {halfEdges} = geometry;\r\n        return halfEdges[halfEdgeID ?? -1].faceID ?? null;\r\n    }\r\n\r\n    next(): IteratorResult<FaceID>  {\r\n        const {halfEdgeID, vertexID, geometry} = this;\r\n        const {halfEdges, vertices} = geometry;\r\n        const vertex = vertices[vertexID ?? -1];\r\n        if (vertex) {\r\n            const {halfEdgeID: vertexHalfEdgeID} = vertex;\r\n            if (halfEdgeID === null) {\r\n                const faceID = halfEdges[vertexHalfEdgeID ?? -1]?.faceID ?? null;\r\n                const nextHalfEdgeID = halfEdges[halfEdges[vertexHalfEdgeID ?? -1]?.prevID ?? -1]?.twinID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (faceID !== null) {\r\n                    return {\r\n                        value: faceID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n            else if (halfEdgeID !== vertex.halfEdgeID) {\r\n                const faceID = halfEdges[halfEdgeID]?.faceID ?? null;\r\n                const nextHalfEdgeID = halfEdges[halfEdges[halfEdgeID].prevID ?? -1].twinID ?? null;\r\n                this.halfEdgeID = nextHalfEdgeID;\r\n                if (faceID !== null) {\r\n                    return {\r\n                        value: faceID, done: nextHalfEdgeID === null\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: undefined, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<FaceID> {\r\n        this.halfEdgeID = null;\r\n        return this;\r\n    }\r\n}","import { GeometryBase } from \"../../Geometry\";\r\nimport { GeometryBuilder } from \"../../GeometryBuilder\";\r\n\r\nexport class CubeGeometry extends GeometryBase {\r\n\twidth: number;\r\n\theight: number;\r\n\tdepth: number;\r\n\twidthSegments: number;\r\n\theightSegments: number;\r\n\tdepthSegments: number;\r\n\r\n\tconstructor(properties?: {width?: number, height?: number, depth?: number, widthSegments?: number, heightSegments?: number, depthSegments?: number}) {\r\n\t\tsuper();\r\n\t\tconst {width, height, depth, widthSegments, heightSegments, depthSegments} = properties ?? {};\r\n\t\tthis.width = width ?? 1;\r\n\t\tthis.height = height ?? 1;\r\n\t\tthis.depth = depth ?? 1;\r\n\t\tthis.widthSegments = widthSegments ?? 1;\r\n\t\tthis.heightSegments = heightSegments ?? 1;\r\n\t\tthis.depthSegments = depthSegments ?? 1;\r\n\t}\r\n\t\r\n\ttoBuilder(): GeometryBuilder {\r\n\t\tconst builder = new GeometryBuilder();\r\n\t\tconst {width, height, depth} = this;\r\n\t\tlet {widthSegments, heightSegments, depthSegments} = this;\r\n\t\twidthSegments = Math.floor(widthSegments);\r\n\t\theightSegments = Math.floor(heightSegments);\r\n\t\tdepthSegments = Math.floor(depthSegments);\r\n\r\n\t\tconst indices: number[] = [];\r\n\t\tconst vertices: number[] = [];\r\n\t\tconst uvs: number[] = [];\r\n\t\tlet verticesCount = 0;\r\n\r\n\t\t[\r\n\t\t\t[2, 1, 0, -1, -1, depth, height, width, depthSegments, heightSegments],\r\n\t\t\t[2, 1, 0, +1, -1, depth, height, -width, depthSegments, heightSegments],\r\n\t\t\t[0, 2, 1, +1, +1, width, depth, height, widthSegments, depthSegments],\r\n\t\t\t[0, 2, 1, +1, -1, width, depth, -height, widthSegments, depthSegments],\r\n\t\t\t[0, 1, 2, +1, -1, width, height, depth, widthSegments, heightSegments],\r\n\t\t\t[0, 1, 2, -1, -1, width, height, -depth, widthSegments, heightSegments]\r\n\t\t].forEach(([u, v, w, udir, vdir, width, height, depth, gridX, gridY]) => {\r\n\t\t\tconst segmentWidth = width / gridX;\r\n\t\t\tconst segmentHeight = height / gridY;\r\n\t\t\tconst widthHalf = width / 2;\r\n\t\t\tconst heightHalf = height / 2;\r\n\t\t\tconst depthHalf = depth / 2;\r\n\t\t\tconst gridX1 = gridX + 1;\r\n\t\t\tconst gridY1 = gridY + 1;\r\n\t\t\tlet index = 0;\r\n\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\r\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\r\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\r\n\t\t\t\t\tconst vertex = new Array(3);\r\n\t\t\t\t\tvertex[u] = x * udir;\r\n\t\t\t\t\tvertex[v] = y * vdir;\r\n\t\t\t\t\tvertex[w] = depthHalf;\r\n\t\t\t\t\tvertices.push(\r\n\t\t\t\t\t\t...vertex\r\n\t\t\t\t\t);\r\n\t\t\t\t\tuvs.push(ix / gridX, 1 - (iy / gridY));\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let iy = 0; iy < gridY; iy++) {\r\n\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\r\n\t\t\t\t\tconst a = verticesCount + ix + gridX1 * iy;\r\n\t\t\t\t\tconst b = verticesCount + ix + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst c = verticesCount + (ix + 1) + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst d = verticesCount + (ix + 1) + gridX1 * iy;\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tverticesCount += index;\r\n\t\t});\r\n\t\t\r\n\t\tconst {length: indicesCount} = indices;\r\n\t\tconst verticesArray: number[] = [];\r\n\t\tconst uvsArray: number[][] = [];\r\n\t\tfor (let i = 0; i < indicesCount; i += 3) {\r\n\t\t\tconst vi1 = 3 * indices[i], vi2 = 3 * indices[i + 1], vi3 = 3 * indices[i + 2];\r\n\t\t\tconst ui1 = 2 * indices[i], ui2 = 2 * indices[i + 1], ui3 = 2 * indices[i + 2];\r\n\t\t\tlet v1 = verticesArray[vi1], v2 = verticesArray[vi2], v3 = verticesArray[vi3];\r\n\t\t\tif (v1 === undefined) {\r\n\t\t\t\tv1 = builder.addVertex([vertices[vi1], vertices[vi1 + 1], vertices[vi1 + 2]]), verticesArray[vi1] = v1;\r\n\t\t\t}\r\n\t\t\tif (v2 === undefined) {\r\n\t\t\t\tv2 = builder.addVertex([vertices[vi2], vertices[vi2 + 1], vertices[vi2 + 2]]), verticesArray[vi2] = v2;\r\n\t\t\t}\r\n\t\t\tif (v3 === undefined) {\r\n\t\t\t\tv3 = builder.addVertex([vertices[vi3], vertices[vi3 + 1], vertices[vi3 + 2]]), verticesArray[vi3] = v3;\r\n\t\t\t}\r\n\t\t\tlet uv1 = uvsArray[ui1], uv2 = uvsArray[ui2], uv3 = uvsArray[ui3];\r\n\t\t\tif (uv1 === undefined) {\r\n\t\t\t\tuv1 = [uvs[ui1], uvs[ui1 + 1]], uvsArray[ui1] = uv1;\r\n\t\t\t}\r\n\t\t\tif (uv2 === undefined) {\r\n\t\t\t\tuv2 = [uvs[ui2], uvs[ui2 + 1]], uvsArray[ui2] = uv2;\r\n\t\t\t}\r\n\t\t\tif (uv3 === undefined) {\r\n\t\t\t\tuv3 = [uvs[ui3], uvs[ui3 + 1]], uvsArray[ui3] = uv3;\r\n\t\t\t}\r\n\t\t\tbuilder.addTriangleFace(v1, v2, v3, {\r\n\t\t\t\tuv: [uv1, uv2, uv3]\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn builder;\r\n\t}\r\n}","import { GeometryBase } from \"../geometry\";\r\nimport { GeometryBuilder } from \"../GeometryBuilder\";\r\n\r\nexport { QuadGeometry };\r\n\r\nclass QuadGeometry extends GeometryBase {\r\n\twidth: number;\r\n\theight: number;\r\n\twidthSegments: number;\r\n\theightSegments: number;\r\n\r\n\tconstructor(properties?: {width?: number, height?: number, widthSegments?: number, heightSegments?: number}) {\r\n\t\tsuper();\r\n\t\tthis.width = properties?.width ?? 1;\r\n\t\tthis.height = properties?.height ?? 1;\r\n\t\tthis.widthSegments = properties?.widthSegments ?? 1;\r\n\t\tthis.heightSegments = properties?.heightSegments ?? 1;\r\n\t}\r\n\t\r\n\ttoBuilder(): GeometryBuilder {\r\n\t\tconst builder = new GeometryBuilder();\r\n\t\tconst {heightSegments, widthSegments, width, height} = this;\r\n\t\tconst widthHalf = width / 2;\r\n\t\tconst heightHalf = height / 2;\r\n\r\n\t\tconst gridX = Math.floor(widthSegments);\r\n\t\tconst gridY = Math.floor(heightSegments);\r\n\r\n\t\tconst gridX1 = gridX + 1;\r\n\t\tconst gridY1 = gridY + 1;\r\n\r\n\t\tconst segmentWidth = width / gridX;\r\n\t\tconst segmentHeight = height / gridY;\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\tfor (let iy = 0; iy < gridY1; iy++) {\r\n\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\r\n\t\t\t\tconst x = ix * segmentWidth - widthHalf;\r\n\t\t\t\tvertices.push(x, - y, 0);\r\n\t\t\t\tuvs.push(ix / gridX);\r\n\t\t\t\tuvs.push(1 - (iy / gridY));\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let iy = 0; iy < gridY; iy++) {\r\n\t\t\tfor (let ix = 0; ix < gridX; ix++) {\r\n\t\t\t\tconst a = ix + gridX1 * iy;\r\n\t\t\t\tconst b = ix + gridX1 * (iy + 1);\r\n\t\t\t\tconst c = (ix + 1) + gridX1 * (iy + 1);\r\n\t\t\t\tconst d = (ix + 1) + gridX1 * iy;\r\n\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\tindices.push(b, c, d);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst {length: indicesCount} = indices;\r\n\t\tconst verticesArray: number[] = [];\r\n\t\tconst uvsArray: number[][] = [];\r\n\t\tfor (let i = 0; i < indicesCount; i += 3) {\r\n\t\t\tconst vi1 = 3 * indices[i], vi2 = 3 * indices[i + 1], vi3 = 3 * indices[i + 2];\r\n\t\t\tconst ui1 = 2 * indices[i], ui2 = 2 * indices[i + 1], ui3 = 2 * indices[i + 2];\r\n\t\t\tlet v1 = verticesArray[vi1], v2 = verticesArray[vi2], v3 = verticesArray[vi3];\r\n\t\t\tif (v1 == undefined) {\r\n\t\t\t\tv1 = builder.addVertex([vertices[vi1], vertices[vi1 + 1], vertices[vi1 + 2]]), verticesArray[vi1] = v1;\r\n\t\t\t}\r\n\t\t\tif (v2 == undefined) {\r\n\t\t\t\tv2 = builder.addVertex([vertices[vi2], vertices[vi2 + 1], vertices[vi2 + 2]]), verticesArray[vi2] = v2;\r\n\t\t\t}\r\n\t\t\tif (v3 == undefined) {\r\n\t\t\t\tv3 = builder.addVertex([vertices[vi3], vertices[vi3 + 1], vertices[vi3 + 2]]), verticesArray[vi3] = v3;\r\n\t\t\t}\r\n\t\t\tlet uv1 = uvsArray[ui1], uv2 = uvsArray[ui2], uv3 = uvsArray[ui3];\r\n\t\t\tif (uv1 == undefined) {\r\n\t\t\t\tuv1 = [uvs[ui1], uvs[ui1 + 1]], uvsArray[ui1] = uv1;\r\n\t\t\t}\r\n\t\t\tif (uv2 == undefined) {\r\n\t\t\t\tuv2 = [uvs[ui2], uvs[ui2 + 1]], uvsArray[ui2] = uv2;\r\n\t\t\t}\r\n\t\t\tif (uv3 == undefined) {\r\n\t\t\t\tuv3 = [uvs[ui3], uvs[ui3 + 1]], uvsArray[ui3] = uv3;\r\n\t\t\t}\r\n\t\t\tbuilder.addTriangleFace(v1, v2, v3, {\r\n\t\t\t\tuv: [uv1, uv2, uv3]\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn builder;\r\n\t}\r\n}","export enum TexturePixelFormat {\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    DEPTH_COMPONENT = 0x1902,\r\n    DEPTH_STENCIL = 0x84F9,\r\n    RED = 0x1903,\r\n    RG = 0x8227,\r\n    RED_INTEGER = 0x8D94,\r\n    RG_INTEGER = 0x8228,\r\n    RGB_INTEGER = 0x8D98,\r\n    RGBA_INTEGER = 0x8D99\r\n}\r\n\r\nexport enum TextureInternalPixelFormat {\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    DEPTH_COMPONENT16 = 0x81A5,\r\n    DEPTH_COMPONENT24 = 0x81A6,\r\n    DEPTH_COMPONENT32F = 0x8CAC,\r\n    DEPTH24_STENCIL8 = 0x88F0,\r\n    DEPTH32F_STENCIL8 = 0x8CAD,\r\n    R8 = 0x8229,\r\n    R8_SNORM = 0x8F94,\r\n    RG8 = 0x822B,\r\n    RG8_SNORM = 0x8F95,\r\n    RGB8 = 0x8051,\r\n    RGB8_SNORM = 0x8F96,\r\n    RGB565 = 0x8D62,\r\n    RGBA8 = 0x8058,\r\n    RGBA4 = 0x8056,\r\n    RGB5_A1 = 0x8057,\r\n    RGBA8_SNORM = 0x8F97,\r\n    RGB10_A2UI = 0x906F,\r\n    SRGB = 0x8C40,\r\n    SRGB8 = 0x8C41,\r\n    SRGB8_ALPHA8 = 0x8C43,\r\n    R16F = 0x822D,\r\n    RGB16F = 0x881B,\r\n    RGBA16F = 0x881A,\r\n    R32F = 0x822E,\r\n    RG32F = 0x8230,\r\n    RGB32F = 0x8815,\r\n    RGBA32F\t= 0x8814,\r\n    R11F_G11F_B10F = 0x8C3A,\r\n    RGB9_E5 = 0x8C3D,\r\n    R8UI = 0x8232,\r\n    R16I = 0x8233,\r\n    R16UI = 0x8234,\r\n    R32I = 0x8235,\r\n    R32UI = 0x8236,\r\n    RG8I = 0x8237,\r\n    RG8UI = 0x8238,\r\n    RG16I = 0x8239,\r\n    RG16UI = 0x823A,\r\n    RG32I = 0x823B,\r\n    RG32UI = 0x823C,\r\n    RGB8I = 0x8D8F,\r\n    RGB8UI = 0x8D7D,\r\n    RGB16I = 0x8D89,\r\n    RGB16UI = 0x8D77,\r\n    RGB32I = 0x8D83,\r\n    RGB32UI = 0x8D71,\r\n    RGBA8I = 0x8D8E,\r\n    RGBA8UI = 0x8D7C,\r\n    RGBA16I = 0x8D88,\r\n    RGBA16UI = 0x8D76,\r\n    RGBA32I = 0x8D82,\r\n    RGBA32UI = 0x8D70,\r\n}\r\n\r\nexport enum TexturePixelType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406,\r\n    HALF_FLOAT = 0x140B,\r\n    UNSIGNED_SHORT_4_4_4_4 = 0x8033,\r\n    UNSIGNED_SHORT_5_5_5_1 = 0x8034,\r\n    UNSIGNED_SHORT_5_6_5 = 0x8363,\r\n    UNSIGNED_INT_2_10_10_10_REV = 0x8368,\r\n    UNSIGNED_INT_24_8 = 0x84FA,\r\n    UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B,\r\n    UNSIGNED_INT_5_9_9_9_REV = 0x8C3E,\r\n    FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD,\r\n    INT_2_10_10_10_REV = 0x8D9F\r\n}\r\n\r\nexport enum TextureParameter {\r\n    TEXTURE_MAG_FILTER = 0x2800,\r\n    TEXTURE_MIN_FILTER = 0x2801,\r\n    TEXTURE_WRAP_S = 0x2802,\r\n    TEXTURE_WRAP_T = 0x2803,\r\n    TEXTURE_BASE_LEVEL = 0x813C,\r\n    TEXTURE_MAX_LEVEL = 0x813D,\r\n    TEXTURE_MAX_LOD = 0x813B,\r\n    TEXTURE_MIN_LOD = 0x813A,\r\n    TEXTURE_WRAP_R = 0x8072,\r\n    TEXTURE_COMPARE_FUNC = 0x884D,\r\n    TEXTURE_COMPARE_MODE = 0x884C\r\n}\r\n\r\nexport enum TextureTarget {\r\n    TEXTURE_2D = 0x0DE1,\r\n    TEXTURE_CUBE_MAP = 0x8513,\r\n    TEXTURE_3D = 0x806F,\r\n    TEXTURE_2D_ARRAY = 0x8C1A,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A\r\n}\r\n\r\nexport enum TextureMagFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600\r\n}\r\n\r\nexport enum TextureMinFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600,\r\n    NEAREST_MIPMAP_NEAREST = 0x2700, \r\n    LINEAR_MIPMAP_NEAREST = 0x2701, \r\n    NEAREST_MIPMAP_LINEAR = 0x2702,\r\n    LINEAR_MIPMAP_LINEAR = 0x2703\r\n}\r\n\r\nexport enum TextureCompareMode {\r\n    COMPARE_REF_TO_TEXTURE = 0x884E,\r\n    NONE = 0\r\n}\r\n\r\nexport enum TextureWrapMode {\r\n    REPEAT = 0x2901,\r\n    CLAMP_TO_EDGE = 0x812F, \r\n    MIRRORED_REPEAT = 0x8370\r\n}\r\n\r\nexport enum TextureCompareFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207\r\n}\r\n\r\nexport type Texture2DPixels = Uint32Array |  Uint16Array | Uint8Array | TexImageSource;\r\n\r\nexport type TextureCubeMapPixels = {\r\n    xPos: TexImageSource;\r\n    xNeg: TexImageSource;\r\n    yPos: TexImageSource;\r\n    yNeg: TexImageSource;\r\n    zPos: TexImageSource;\r\n    zNeg: TexImageSource;\r\n}\r\n\r\nexport type TextureProperties = {\r\n    target: TextureTarget;\r\n    pixels: Texture2DPixels | TextureCubeMapPixels | null;\r\n    width: number;\r\n    height: number;\r\n    format: TexturePixelFormat;\r\n    internalFormat: TextureInternalPixelFormat;\r\n    type: TexturePixelType;\r\n\r\n    depth?: number;\r\n    lod?: number;\r\n    border?: number;\r\n\r\n    subimages?: {\r\n        pixels: Texture2DPixels;\r\n        xoffset: number;\r\n        yoffset: number;\r\n        zoffset?: number;\r\n        width: number;\r\n        height: number;\r\n        depth?: number;\r\n    }[];\r\n\r\n    min?: TextureMinFilter;\r\n    mag?: TextureMagFilter;\r\n\r\n    wrapS?: TextureWrapMode;\r\n    wrapT?: TextureWrapMode;\r\n    wrapR?: TextureWrapMode;\r\n\r\n    baseMipmapLevel?: number;\r\n    maxMipmapLevel?: number;\r\n\r\n    minLod?: number;\r\n    maxLod?: number;\r\n\r\n    compareFunction?: TextureCompareFunction;\r\n    compareMode?: TextureCompareMode;\r\n}\r\n\r\nexport type Texture = {\r\n    name: string;\r\n    unit: number;\r\n    internalTexture: WebGLTexture;\r\n    properties?: TextureProperties;\r\n}\r\n\r\nexport class WebGLTextureUtilities {\r\n\r\n    static #textureUnits: Map<string, number> = new Map();\r\n\r\n\r\n    static getTexturesUnitsEntries(): IterableIterator<[string, number]> {\r\n        return this.#textureUnits.entries();\r\n    }\r\n\r\n    static createTexture(gl: WebGL2RenderingContext, name: string, properties: TextureProperties): Texture | null {\r\n        const internalTexture = gl.createTexture();\r\n        if (internalTexture === null) {\r\n            return null;\r\n        }\r\n\r\n        let unit = this.#textureUnits.get(name);\r\n        if (unit == undefined) {\r\n            unit = Math.max(-1, ...this.#textureUnits.values()) + 1;\r\n            this.#textureUnits.set(name, unit);\r\n        }\r\n\r\n        const {pixels, target, subimages, width, height, format, internalFormat, type} = properties;\r\n        let {lod, border, depth} = properties;\r\n\r\n        lod = lod ?? 0;\r\n        border = border ?? 0;\r\n        depth = depth ?? 0;\r\n\r\n        const activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE);\r\n        if (activeTexture !== unit) {\r\n            gl.activeTexture(gl.TEXTURE0 + unit);\r\n            gl.bindTexture(target, internalTexture);\r\n        }\r\n        \r\n        switch (target) {\r\n            case TextureTarget.TEXTURE_2D: {\r\n                gl.texImage2D(target, lod, internalFormat, width, height, border, format, type, <ArrayBufferView | null>pixels);\r\n                if (subimages) {\r\n                    subimages.forEach((subimage_i) => {\r\n                        const {xoffset, yoffset, width, height, pixels} = subimage_i;\r\n                        gl.texSubImage2D(target, lod!, xoffset, yoffset, width, height, format, type, pixels as ArrayBufferView);\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case TextureTarget.TEXTURE_CUBE_MAP: {\r\n                if (pixels === null) {\r\n                    gl.texImage2D(target, lod, internalFormat, width, height, border, format, type, null);  \r\n                }\r\n                else {\r\n                    if (\"xPos\" in pixels) {\r\n                        const {xPos, xNeg, yPos, yNeg, zPos, zNeg} = pixels;\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_X, lod, internalFormat, width, height, border, format, type, xPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_X, lod, internalFormat, width, height, border, format, type, xNeg);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Y, lod, internalFormat, width, height, border, format, type, yPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Y, lod, internalFormat, width, height, border, format, type, yNeg);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Z, lod, internalFormat, width, height, border, format, type, zPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Z, lod, internalFormat, width, height, border, format, type, zNeg);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case TextureTarget.TEXTURE_2D_ARRAY: {\r\n                gl.texImage3D(target, lod, internalFormat, width, height,  depth, border, format, type, <ArrayBufferView | null>pixels);\r\n                if (subimages) {\r\n                    subimages.forEach((subimage_i, i) => {\r\n                        const {xoffset, yoffset, zoffset, width, height, depth, pixels} = subimage_i;\r\n                        gl.texSubImage3D(target, lod!, xoffset, yoffset, zoffset!, width, height, depth!, format, type, pixels as ArrayBufferView);\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        gl.generateMipmap(target);\r\n\r\n        const {min, mag, wrapS, wrapT, wrapR, baseMipmapLevel, maxMipmapLevel, compareFunction, compareMode, minLod, maxLod} = properties;\r\n\r\n        if (min !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MIN_FILTER, min);\r\n        if (mag !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MAG_FILTER, mag);\r\n        if (wrapS  !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_S, wrapS);\r\n        if (wrapT !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_T, wrapT);\r\n        if (wrapR !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_R, wrapR);\r\n        if (baseMipmapLevel !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_BASE_LEVEL, baseMipmapLevel);\r\n        if (maxMipmapLevel !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MAX_LEVEL, maxMipmapLevel);\r\n        if (compareFunction !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_COMPARE_FUNC, compareFunction);\r\n        if (compareMode !== undefined)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_COMPARE_MODE, compareMode);\r\n        if (minLod !== undefined)\r\n            gl.texParameterf(target, TextureParameter.TEXTURE_MIN_LOD, minLod);\r\n        if (maxLod !== undefined)\r\n            gl.texParameterf(target, TextureParameter.TEXTURE_MAX_LOD, maxLod);\r\n        \r\n        return {\r\n            unit,\r\n            internalTexture,\r\n            name,\r\n            properties: {\r\n                pixels,\r\n                target,\r\n                subimages,\r\n                lod,\r\n                width,\r\n                height,\r\n                format,\r\n                internalFormat,\r\n                type,\r\n                min,\r\n                mag,\r\n                wrapS,\r\n                wrapT,\r\n                wrapR,\r\n                baseMipmapLevel,\r\n                maxMipmapLevel,\r\n                compareFunction,\r\n                compareMode,\r\n                minLod,\r\n                maxLod\r\n            }\r\n        };\r\n    }\r\n\r\n    static setUnpackAlignment(gl: WebGL2RenderingContext, alignment: number): void {\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, alignment);\r\n    }\r\n\r\n    static deleteTexture(gl: WebGL2RenderingContext, texture: Texture): void {\r\n        const {internalTexture, name} = texture;\r\n        if (gl.isTexture(internalTexture)) {\r\n            gl.deleteTexture(internalTexture);\r\n            this.#textureUnits.delete(name);\r\n        }\r\n    }\r\n}","import { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\nimport { Texture } from \"./WebGLTextureUtilities\";\r\n\r\nexport { UniformValue };\r\nexport { Uniform };\r\nexport { UniformSetter };\r\nexport { UniformsListSetter };\r\nexport { WebGLUniformUtilities };\r\n\r\nexport enum UniformType {\r\n    BOOL = 0x8B56,\r\n    BOOL_VEC2 = 0x8B57,\t \r\n    BOOL_VEC3 = 0x8B58,\t \r\n    BOOL_VEC4 = 0x8B59,\r\n    INT = 0x1404,\r\n    INT_VEC2 = 0x8B53,\t \r\n    INT_VEC3 = 0x8B54,\t \r\n    INT_VEC4 = 0x8B55,\t \r\n    INT_SAMPLER_2D = 0x8DCA,\r\n    INT_SAMPLER_3D = 0x8DCB,\r\n    INT_SAMPLER_CUBE = 0x8DCC,\r\n    INT_SAMPLER_2D_ARRAY = 0x8DCF,\r\n    UNSIGNED_INT_SAMPLER_2D = 0x8DD2,\r\n    UNSIGNED_INT_SAMPLER_3D = 0x8DD3,\r\n    UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4,\r\n    UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7,\r\n    UNSIGNED_INT = 0x1405,\r\n    UNSIGNED_INT_VEC2 = 0x8DC6,\r\n    UNSIGNED_INT_VEC3 = 0x8DC7,\r\n    UNSIGNED_INT_VEC4 = 0x8DC8,\r\n    FLOAT = 0x1406,\r\n    FLOAT_VEC2 = 0x8B50,\t \r\n    FLOAT_VEC3 = 0x8B51,\t \r\n    FLOAT_VEC4 = 0x8B52,\r\n    FLOAT_MAT2 = 0x8B5A,\t \r\n    FLOAT_MAT3 = 0x8B5B,\t \r\n    FLOAT_MAT4 = 0x8B5C,\t \r\n    FLOAT_MAT2x3 = 0x8B65,\r\n    FLOAT_MAT2x4 = 0x8B66,\r\n    FLOAT_MAT3x2 = 0x8B67,\r\n    FLOAT_MAT3x4 = 0x8B68,\r\n    FLOAT_MAT4x2 = 0x8B69,\r\n    FLOAT_MAT4x3 = 0x8B6A,\r\n    SAMPLER_2D = 0x8B5E,\t \r\n    SAMPLER_3D = 0x8B5F,\r\n    SAMPLER_CUBE = 0x8B60,\r\n    SAMPLER_2D_SHADOW = 0x8B62,\r\n    SAMPLER_2D_ARRAY = 0x8DC1,\r\n    SAMPLER_2D_ARRAY_SHADOW = 0x8DC4,\r\n    SAMPLER_CUBE_SHADOW = 0x8DC5\r\n}\r\n\r\ntype UniformValue = number | Float32List | Uint32List | Int32List | Texture;\r\n\r\ntype Uniform = {\r\n    value: UniformValue;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n    transpose?: boolean;\r\n}\r\n\r\ntype UniformSetter = {\r\n    type: UniformType;\r\n    set: (value: any) => void;\r\n}\r\n\r\ntype UniformsListSetter = {\r\n    setters: Record<string, UniformSetter>;\r\n    program: Program;\r\n}\r\n\r\nexport enum UniformDataType {\r\n    SCALAR = \"SCALAR\",\r\n    VEC2 = \"VEC2\",\r\n    VEC3 = \"VEC3\",\r\n    VEC4 = \"VEC4\",\r\n    MAT2 = \"MAT2\",\r\n    MAT3 = \"MAT3\",\r\n    MAT4 = \"MAT4\"\r\n}\r\n\r\nclass WebGLUniformUtilities {\r\n\r\n    static asArrayBufferView(uniformValue: UniformValue): ArrayBufferView {\r\n        if (typeof uniformValue === \"object\") {\r\n            if (\"buffer\" in uniformValue) {\r\n                return uniformValue;\r\n            }\r\n            else if (\"unit\" in uniformValue) {\r\n                return Float32Array.of(uniformValue.unit);\r\n            }\r\n            else {\r\n                return Float32Array.from(uniformValue);\r\n            }\r\n        }\r\n        else {\r\n            return Float32Array.of(uniformValue);\r\n        }\r\n    }\r\n\r\n    static getUniformSetter(gl: WebGL2RenderingContext, uniform: Uniform, location: WebGLUniformLocation , uniformType: UniformType): UniformSetter | null { \r\n        const {value, srcOffset, srcLength} = uniform;\r\n        let {transpose} = uniform;\r\n        transpose = transpose ?? false;\r\n\r\n        switch (uniformType) {\r\n            case UniformType.FLOAT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1f(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1ui(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL:\r\n            case UniformType.INT:\r\n                if (typeof value === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1i(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.INT_SAMPLER_2D:\r\n            case UniformType.INT_SAMPLER_2D_ARRAY:\r\n            case UniformType.INT_SAMPLER_3D:\r\n            case UniformType.INT_SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D:\r\n            case UniformType.SAMPLER_3D:\r\n            case UniformType.SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D_SHADOW:\r\n            case UniformType.SAMPLER_2D_ARRAY:\r\n            case UniformType.SAMPLER_2D_ARRAY_SHADOW:\r\n            case UniformType.SAMPLER_CUBE_SHADOW:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_3D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_CUBE:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D_ARRAY:\r\n                if (typeof value == \"object\" && \"unit\" in value) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (tex: Texture) => {\r\n                            const {unit} = tex;\r\n                            gl.uniform1i(location, unit);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform2fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC2:\r\n            case UniformType.INT_VEC2:\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform2iv(location, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC2:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform2uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform3fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC3:\r\n            case UniformType.INT_VEC3:\t\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform3iv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC3:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform3uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform4fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC4:\r\n            case UniformType.INT_VEC4:\r\n                if (value instanceof Int32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform4iv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC4:\r\n                if (value instanceof Uint32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform4uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4:\t\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4fv(location, transpose!, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x4fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x4:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x4fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x2:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x3:\r\n                if (value instanceof Float32Array || Array.isArray(value)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static getUniformsListSetter(gl: WebGL2RenderingContext, program: Program, list: Record<string, Uniform>): UniformsListSetter | null {\r\n        const {internalProgram} = program;\r\n        \r\n        const uniformsNames = Object.keys(list);\r\n        let uniformIndices = gl.getUniformIndices(internalProgram, uniformsNames);\r\n        if (uniformIndices === null) {\r\n            console.error(`No uniform indices found.`);\r\n            return null;\r\n        }\r\n\r\n        const activeUniforms = gl.getProgramParameter(internalProgram, gl.ACTIVE_UNIFORMS);\r\n        const validUniformIndices = Array.from(uniformIndices).filter((index_i, i) => {\r\n            const isValid = index_i >= 0 && index_i < activeUniforms;\r\n            if (!isValid) {\r\n                console.warn(`Uniform ${uniformsNames[i]} could not be located.`);\r\n            }\r\n            return isValid;\r\n        });\r\n        \r\n        const setters: Record<string, UniformSetter> = {};\r\n\r\n        const activeUniformsInfo: WebGLActiveInfo[] = validUniformIndices.map(index => gl.getActiveUniform(internalProgram, index)!);\r\n        activeUniformsInfo.forEach(({name, type}) => {\r\n            const uniform = list[name];\r\n            const location = gl.getUniformLocation(internalProgram, name);\r\n            if (location === null) {\r\n                console.warn(`Uniform ${name} could not be located.`);\r\n                return null;\r\n            }\r\n            const setter = this.getUniformSetter(gl, uniform, location, type);\r\n            if (setter) {\r\n                setters[name] = setter;\r\n            }\r\n        });\r\n        \r\n        return {\r\n            setters,\r\n            program\r\n        };\r\n    }\r\n\r\n    static setUniformsListValues(gl: WebGL2RenderingContext, setter: UniformsListSetter, list: Record<string, Uniform>): void {\r\n        const {program, setters} = setter;\r\n        WebGLProgramUtilities.useProgram(gl, program);\r\n        \r\n        Object.keys(list).forEach((name) => {\r\n            if (!(name in setters)) {\r\n                console.warn(`Uniform ${name} does not match any of the given setters.`);\r\n            }\r\n            const setter = setters[name];\r\n            const uniform = list[name];\r\n            const {value} = uniform;\r\n            setter.set(value);\r\n        });\r\n    }\r\n}","export enum StencilAction {\r\n    KEEP = 0x1E00,\r\n    REPLACE\t= 0x1E01,\r\n    INCR = 0x1E02,\r\n    DECR = 0x1E03,\r\n    INVERT = 0x150A,\r\n    INCR_WRAP = 0x8507,\r\n    DECR_WRAP = 0x8508\r\n}\r\n\r\nexport enum BufferMask {\r\n    DEPTH_BUFFER_BIT = 0x00000100,\r\n    STENCIL_BUFFER_BIT = 0x00000400,\r\n    COLOR_BUFFER_BIT = 0x00004000\r\n}\r\n\r\nexport enum TestFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207,\r\n}\r\n\r\nexport enum BlendingMode {\r\n    ZERO = 0,\r\n    ONE = 1,\r\n    SRC_COLOR = 0x0300,\r\n    ONE_MINUS_SRC_COLOR = 0x0301,\r\n    SRC_ALPHA = 0x0302,\r\n    ONE_MINUS_SRC_ALPHA\t= 0x0303,\r\n    DST_ALPHA = 0x0304,\r\n    ONE_MINUS_DST_ALPHA = 0x0305,\r\n    DST_COLOR = 0x0306,\r\n    ONE_MINUS_DST_COLOR = 0x0307,\r\n    SRC_ALPHA_SATURATE = 0x0308,\r\n    CONSTANT_COLOR = 0x8001,\r\n    ONE_MINUS_CONSTANT_COLOR = 0x8002,\r\n    CONSTANT_ALPHA = 0x8003,\r\n    ONE_MINUS_CONSTANT_ALPHA = 0x8004\r\n}\r\n\r\nexport enum BlendingEquation {\r\n    FUNC_ADD = 0x8006,\r\n    FUNC_SUBTRACT = 0x800A,\r\n    FUNC_REVERSE_SUBTRACT = 0x800B,\r\n    MIN = 0x8007,\r\n    MAX = 0x8008,\r\n}\r\n\r\nexport enum Capabilities {\r\n    BLEND = 0x0BE2,\r\n    CULL_FACE = 0x0B44,\r\n    DEPTH_TEST = 0x0B71,\r\n    DITHER = 0x0BD0,\r\n    POLYGON_OFFSET_FILL = 0x8037,\r\n    SAMPLE_ALPHA_TO_COVERAGE = 0x809E,\r\n    SAMPLE_COVERAGE = 0x80A0,\r\n    SCISSOR_TEST = 0x0C11,\r\n    STENCIL_TEST= 0x0B90,\r\n    RASTERIZER_DISCARD = 0x8C89\r\n}\r\n\r\nexport enum Face {\r\n    FRONT = 0x0404,\r\n    BACK = 0x0405,\r\n    FRONT_AND_BACK = 0x0408\r\n}\r\n\r\nexport enum WindingOrder {\r\n    CW = 0x0900,\r\n    CCW = 0x0901\r\n}\r\n\r\nexport enum HintTarget {\r\n    GENERATE_MIPMAP_HINT = 0x8192,\r\n    FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B\r\n}\r\n\r\nexport enum HintMode {\r\n    DONT_CARE = 0x1100,\r\n    FASTEST\t= 0x1101,\r\n    NICEST = 0x1102\r\n}\r\n\r\nexport class WebGLRendererUtilities {\r\n\r\n    static hint(gl: WebGL2RenderingContext, target: HintTarget, mode: HintMode) {\r\n        gl.hint(target, mode);\r\n    }\r\n\r\n    static frontFace(gl: WebGL2RenderingContext, winding: WindingOrder): void {\r\n        gl.frontFace(winding);\r\n    }\r\n\r\n    static scissor(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.scissor(x, y, width, height);\r\n    }\r\n\r\n    static viewport(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.viewport(x, y, width, height);\r\n    }\r\n\r\n    static clearColor(gl: WebGL2RenderingContext, color: ArrayLike<number>): void {\r\n        gl.clearColor(color[0], color[1], color[2], color[3]);\r\n    }\r\n\r\n    static depthFunction(gl: WebGL2RenderingContext, func: TestFunction): void {\r\n        gl.depthFunc(func);\r\n    }\r\n\r\n    static blendEquation(gl: WebGL2RenderingContext, equ: BlendingEquation): void {\r\n        gl.blendEquation(equ);\r\n    }\r\n\r\n    static blendFunction(gl: WebGL2RenderingContext, srcFunc: BlendingMode, dstFunc: BlendingMode): void {\r\n        gl.blendFunc(srcFunc, dstFunc);\r\n    }\r\n\r\n    static blendFunctionSeparate(gl: WebGL2RenderingContext, srcFunc: BlendingMode, dstFunc: BlendingMode, srcAlpha: number, dstAlpha: number): void {\r\n        gl.blendFuncSeparate(srcFunc, dstFunc, srcAlpha, dstAlpha);\r\n    }\r\n\r\n    static stencilFunction(gl: WebGL2RenderingContext, func: TestFunction, ref: number, mask: number, face: Face): void {\r\n        gl.stencilFuncSeparate(face, func, ref, mask);\r\n    }\r\n\r\n    static stencilOperations(gl: WebGL2RenderingContext, fail: StencilAction, zFail: StencilAction, zPass: StencilAction, face: Face) {\r\n        gl.stencilOpSeparate(face, fail, zFail, zPass);\r\n    }\r\n\r\n    static stencilMask(gl: WebGL2RenderingContext, mask: number, face: Face) {\r\n        gl.stencilMaskSeparate(face, mask);\r\n    }\r\n\r\n    static colorMask(gl: WebGL2RenderingContext, red: boolean, green: boolean, blue: boolean, alpha: boolean) {\r\n        gl.colorMask(red, green, blue, alpha);\r\n    }\r\n\r\n    static enable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.enable(capability);\r\n    }\r\n\r\n    static disable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.disable(capability);\r\n    }\r\n\r\n    static clear(gl: WebGL2RenderingContext, buffer: BufferMask): void {\r\n        gl.clear(buffer);\r\n    }\r\n\r\n    static getViewport(gl: WebGL2RenderingContext): Int32Array {\r\n        return gl.getParameter(gl.VIEWPORT) as Int32Array;\r\n    }\r\n\r\n    static getMaxSamples(gl: WebGL2RenderingContext): number {\r\n        return gl.getParameter(gl.MAX_SAMPLES) as number;\r\n    }\r\n}","import { Uniform, WebGLUniformUtilities } from \"./WebGLUniformUtilities\";\r\nimport { Buffer, BufferDataUsage } from \"./WebGLBufferUtilities\";\r\nimport { Program } from \"./WebGLProgramUtilities\";\r\n\r\nexport type UniformBlock = {\r\n    name: string;\r\n    blockIndex: number;\r\n    program: Program;\r\n    layout: Record<string, {\r\n        byteOffset: number;\r\n    }>;\r\n    blockSize: number;\r\n    bindingPoint?: number;\r\n    buffer?: UniformBuffer;\r\n}\r\n\r\nexport type UniformBlockProperties = {\r\n    buffer?: number;\r\n    uniforms?: Record<string, Uniform>;\r\n}\r\n\r\nexport type UniformBuffer = Buffer & {\r\n    byteLength: number;\r\n    bindingPoint?: number;\r\n    rangeOffset?: number;\r\n    rangeSize?: number;\r\n}\r\n\r\nexport type UniformBufferProperties = {\r\n    usage: BufferDataUsage;\r\n}\r\n\r\nexport type UniformBlocksProperties = {\r\n    buffers: (UniformBuffer | UniformBufferProperties)[];\r\n    blocks: Record<string, {\r\n        buffer: number;\r\n        uniforms: Record<string, Uniform>;\r\n    }>;\r\n}\r\n\r\nexport class WebGLUniformBlockUtilities {\r\n\r\n    static #bindingPoints: Map<string, number> = new Map();\r\n\r\n    static getBindingPointsEntries(): IterableIterator<[string, number]> {\r\n        const bindingPoints = this.#bindingPoints;\r\n        return bindingPoints.entries();\r\n    }\r\n\r\n    static createUniformBlock(gl: WebGL2RenderingContext, program: Program, name: string): UniformBlock | null {\r\n        const {internalProgram} = program;\r\n\r\n        const blockIndex = gl.getUniformBlockIndex(internalProgram, name);\r\n        if (blockIndex === gl.INVALID_INDEX) {\r\n            console.error(`Block '${name}' does not identify a valid uniform block.`);\r\n            return null;\r\n        }\r\n\r\n        const blockSize = gl.getActiveUniformBlockParameter(internalProgram, blockIndex, gl.UNIFORM_BLOCK_DATA_SIZE);\r\n        const layout: UniformBlock[\"layout\"] = {};\r\n        const blockUniformsIndices = gl.getActiveUniformBlockParameter(internalProgram, blockIndex, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES);\r\n        const activeUniformsOffsets = gl.getActiveUniforms(internalProgram, blockUniformsIndices, gl.UNIFORM_OFFSET);\r\n        activeUniformsOffsets.forEach((uniformOffset_i: number, i: number) => {\r\n            const uniformIndex = blockUniformsIndices[i];\r\n            const uniformInfo = gl.getActiveUniform(internalProgram, uniformIndex);\r\n            if (uniformInfo !== null) {\r\n                const {name} = uniformInfo;\r\n                layout[name] = {\r\n                    byteOffset: uniformOffset_i\r\n                };\r\n            }\r\n        });\r\n\r\n        return {\r\n            name,\r\n            blockIndex,\r\n            blockSize,\r\n            layout,\r\n            program\r\n        };\r\n    }\r\n\r\n    static createUniformBuffer(gl: WebGL2RenderingContext, byteLength: number, bind?: boolean, usage?: BufferDataUsage): UniformBuffer | null {\r\n        const internalBuffer = gl.createBuffer();\r\n        if (internalBuffer === null) {\r\n            return null;\r\n        }\r\n        \r\n        const target = gl.UNIFORM_BUFFER;\r\n        gl.bindBuffer(target, internalBuffer);\r\n\r\n        usage = usage ?? BufferDataUsage.STATIC_READ;\r\n        bind = bind ?? false;\r\n\r\n        const bindingPoint = bind ? this.lastBindingPoint++ : undefined;\r\n        \r\n        gl.bufferData(target, byteLength, usage);\r\n        \r\n        return {\r\n            internalBuffer,\r\n            byteLength,\r\n            bindingPoint,\r\n            target,\r\n            usage\r\n        };\r\n    }\r\n\r\n    static createRangedUniformBuffers(gl: WebGL2RenderingContext, blocks: UniformBlock[], bind?: boolean, usage?: BufferDataUsage): UniformBuffer[] | null {\r\n\r\n        const offsetAlignment = gl.getParameter(gl.UNIFORM_BUFFER_OFFSET_ALIGNMENT);\r\n        const bufferByteLength = blocks.reduce(\r\n            (size, block) => size + Math.max(Math.ceil(block.blockSize / offsetAlignment), 1) * offsetAlignment, 0\r\n        );\r\n        \r\n        const buffer = this.createUniformBuffer(gl, bufferByteLength, false, usage);\r\n        if (buffer === null) {\r\n            return null;\r\n        }\r\n        \r\n        bind = bind ?? false;\r\n\r\n        let rangeOffset = 0;\r\n        const rangedUniformBuffers = blocks.map((block) => {\r\n            const {blockSize: rangeSize} = block;\r\n            const bindingPoint = bind ? this.lastBindingPoint++ : undefined;\r\n            const rangedUniformBuffer = {\r\n                ...buffer,\r\n                bindingPoint,\r\n                rangeOffset,\r\n                rangeSize\r\n            };\r\n            rangeOffset += Math.max(Math.ceil(rangeSize / offsetAlignment), 1) * offsetAlignment;\r\n            return rangedUniformBuffer;\r\n        });\r\n\r\n        return rangedUniformBuffers;\r\n    }\r\n\r\n    static setUniformBufferValues(gl: WebGL2RenderingContext, block: UniformBlock, buffer: UniformBuffer, uniforms: Record<string, Uniform>): void {\r\n        const {internalBuffer, target} = buffer;\r\n        const currentUniformBuffer = gl.getParameter(gl.UNIFORM_BUFFER_BINDING);\r\n        if (currentUniformBuffer !== internalBuffer) {\r\n            gl.bindBuffer(target, internalBuffer);\r\n        }\r\n        \r\n        const {layout, name} = block;\r\n        const {rangeOffset} = buffer;\r\n        Object.entries(uniforms).forEach(([uniformName, uniform]) => {\r\n            const {value} = uniform;\r\n            if (!(uniformName in layout)) {\r\n                console.warn(`${uniformName} does not exist in block ${name}.`);\r\n            }\r\n            const {byteOffset} = layout[uniformName];\r\n            gl.bufferSubData(target, byteOffset + (rangeOffset ?? 0), WebGLUniformUtilities.asArrayBufferView(value));\r\n        });\r\n    }\r\n\r\n    static setUniformBufferData(gl: WebGL2RenderingContext, buffer: UniformBuffer, data: ArrayBufferView, dstByteOffset?: number, srcOffset?: number, length?: number): void {\r\n        const {internalBuffer, target} = buffer;\r\n        let {rangeOffset} = buffer;\r\n        gl.bindBuffer(target, internalBuffer);\r\n        const byteOffset = (rangeOffset ?? 0) + (dstByteOffset ?? 0);\r\n        srcOffset = srcOffset ?? 0;\r\n        gl.bufferSubData(target, byteOffset, data, srcOffset, length);\r\n    }\r\n\r\n    static lastBindingPoint = 0;\r\n\r\n    static bindUniformBuffer(gl: WebGL2RenderingContext, block: UniformBlock, buffer: UniformBuffer): void {\r\n        const {internalBuffer, target} = buffer;\r\n        let {rangeOffset, rangeSize} = buffer;\r\n        const {bindingPoint} = buffer;\r\n        const {program, blockIndex} = block;\r\n        const {internalProgram} = program;\r\n\r\n        if (bindingPoint !== undefined) {\r\n            block.buffer = buffer;\r\n            gl.uniformBlockBinding(internalProgram, blockIndex, bindingPoint);\r\n            \r\n            if (bindingPoint !== undefined) {\r\n                if (rangeOffset !== undefined && rangeSize !== undefined) {\r\n                    gl.bindBufferRange(target, bindingPoint, internalBuffer, rangeOffset, rangeSize);\r\n                }\r\n                else {\r\n                    gl.bindBufferBase(target, bindingPoint, internalBuffer);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { VertexArray, VertexArrayValues, VertexArrayProperties, WebGLVertexArrayUtilities } from \"./WebGLVertexArrayUtilities\"\r\nimport { Texture, TextureProperties, WebGLTextureUtilities } from \"./WebGLTextureUtilities\"\r\nimport { UniformBlock, UniformBlockProperties, UniformBuffer, UniformBufferProperties, WebGLUniformBlockUtilities } from \"./WebGLUniformBlockUtilities\"\r\nimport { Uniform, UniformsListSetter, WebGLUniformUtilities } from \"./WebGLUniformUtilities\"\r\nimport { Program } from \"./WebGLProgramUtilities\"\r\n\r\nexport type PacketProperties = {\r\n    program: Program;\r\n    vertexArray: VertexArrayProperties;\r\n    uniformBuffers?: (UniformBufferProperties | UniformBuffer)[];\r\n    uniformBlocks?: Record<string, UniformBlockProperties>;\r\n    uniforms?: Record<string, Uniform>;\r\n}\r\n\r\nexport type PacketValues = {\r\n    vertexArray?: VertexArrayValues;\r\n    uniforms?: Record<string, Uniform>;\r\n    uniformBlocks?: Record<string, {\r\n        uniforms: Record<string, Uniform>;\r\n    }>;\r\n}\r\n\r\nexport type Packet = {\r\n    program: Program;\r\n    vertexArray: VertexArray;\r\n    uniforms?: UniformsListSetter;\r\n    uniformBlocks?: Record<string, UniformBlock>;\r\n}\r\n\r\nexport class WebGLPacketUtilities {\r\n\r\n    static createTextures(gl: WebGL2RenderingContext, textures: Record<string, TextureProperties>): Record<string, Texture> {\r\n        const _textures: {\r\n            [key: string]: Texture\r\n        } = {};\r\n        Object.entries(textures).forEach(([name, properties]) => {\r\n            const texture = WebGLTextureUtilities.createTexture(gl, name, properties);\r\n            if (texture !== null) {\r\n                _textures[name] = texture;\r\n            }\r\n        });\r\n        return _textures;\r\n    }\r\n    \r\n    static createPacket(gl: WebGL2RenderingContext, packet: PacketProperties): Packet | null {\r\n        const {program, vertexArray: vertexArrayProperties, uniforms: uniformsProperties, uniformBlocks: uniformBlocksProperties, uniformBuffers: uniformBuffersProperties} = packet;\r\n\r\n        let vertexArray: VertexArray | null = null;\r\n        vertexArray = WebGLVertexArrayUtilities.createVertexArray(gl, program, vertexArrayProperties);\r\n        if (vertexArray === null) {\r\n            return null;\r\n        }\r\n      \r\n        let uniforms: UniformsListSetter | null | undefined = undefined;\r\n        if (uniformsProperties !== undefined) {\r\n            uniforms = WebGLUniformUtilities.getUniformsListSetter(gl, program, uniformsProperties);\r\n            if (uniforms === null) {\r\n                return null;\r\n            }\r\n            WebGLUniformUtilities.setUniformsListValues(gl, uniforms, uniformsProperties);\r\n        }\r\n\r\n        let uniformBlocks: Record<string, UniformBlock> = {};\r\n        const uniformBlocksPropertiesEntries = uniformBlocksProperties ? Object.entries(uniformBlocksProperties) : [];\r\n        const uniformBuffersMaxIndex = (uniformBuffersProperties?.length ?? 0) - 1;\r\n        uniformBlocksPropertiesEntries.forEach(([_, uniformBlockProperty]) => {\r\n            const {buffer} = uniformBlockProperty;\r\n            if (buffer !== undefined && buffer > uniformBuffersMaxIndex) {\r\n                console.error(`Uniform buffer with index ${buffer} does not exist.`);\r\n            }\r\n        });\r\n        if (uniformBuffersProperties) {\r\n            uniformBuffersProperties.forEach(\r\n                (uniformBuffersProperty_i, i) => {\r\n                    const relatedBlockProperties = uniformBlocksPropertiesEntries.filter(\r\n                        ([_, uniformBlockProperty]) => uniformBlockProperty.buffer === i\r\n                    );\r\n                    const relatedBlocks = <UniformBlock[]>relatedBlockProperties.map(\r\n                        ([blockName, _]) => WebGLUniformBlockUtilities.createUniformBlock(gl, program, blockName)\r\n                    );\r\n                    const {length: relatedBlocksCount} = relatedBlocks;\r\n                    \r\n                    if (\"internalBuffer\" in uniformBuffersProperty_i) {\r\n                        relatedBlocks.forEach((block_i) => {\r\n                            const {name} = block_i!;\r\n                            WebGLUniformBlockUtilities.bindUniformBuffer(gl, block_i!, uniformBuffersProperty_i);\r\n                            uniformBlocks[name] = block_i!;\r\n                        });\r\n                    }\r\n                    else {\r\n                        if (relatedBlocksCount > 0) {\r\n                            const {usage} = uniformBuffersProperty_i;\r\n                            if (relatedBlocksCount > 1) {\r\n                                const rangedBuffers = WebGLUniformBlockUtilities.createRangedUniformBuffers(gl, <UniformBlock[]>relatedBlocks, true, usage)!;\r\n                                relatedBlocks.forEach((block_i, i) => {\r\n                                    const {name} = block_i!;\r\n                                    const rangedBuffer = rangedBuffers[i];\r\n                                    WebGLUniformBlockUtilities.bindUniformBuffer(gl, block_i!, rangedBuffer);\r\n                                    const {uniforms} = relatedBlockProperties[i][1];\r\n                                    if (uniforms) {\r\n                                        WebGLUniformBlockUtilities.setUniformBufferValues(gl, block_i, rangedBuffer, uniforms);\r\n                                    }\r\n                                    uniformBlocks[name] = block_i!;\r\n                                });\r\n                            }\r\n                            else {\r\n                                const relatedBlock = relatedBlocks[0];\r\n                                const {blockSize, name} = relatedBlock;\r\n                                const buffer = WebGLUniformBlockUtilities.createUniformBuffer(gl, blockSize, true, usage);\r\n                                if (buffer === null) {\r\n                                    return null;\r\n                                }\r\n                                WebGLUniformBlockUtilities.bindUniformBuffer(gl, relatedBlock!, buffer!);\r\n                                const {uniforms} = relatedBlockProperties[0][1];\r\n                                if (uniforms) {\r\n                                    WebGLUniformBlockUtilities.setUniformBufferValues(gl, relatedBlock, buffer, uniforms);\r\n                                }\r\n                                uniformBlocks[name] = relatedBlock!;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        const remainingBlockProperties = uniformBlocksPropertiesEntries.filter(\r\n            ([_, uniformBlockProperty]) => uniformBlockProperty.buffer === undefined\r\n        );\r\n        remainingBlockProperties.forEach(([blockName, uniformBlockProperties]) => {\r\n            const {uniforms} = uniformBlockProperties;\r\n            const block = WebGLUniformBlockUtilities.createUniformBlock(gl, program, blockName);\r\n            if (block === null) {\r\n                return null;\r\n            }\r\n            const {blockSize} = block;\r\n            const buffer = WebGLUniformBlockUtilities.createUniformBuffer(gl, blockSize, true);\r\n            if (buffer === null) {\r\n                return null;\r\n            }\r\n            WebGLUniformBlockUtilities.bindUniformBuffer(gl, block, buffer);\r\n            if (uniforms !== undefined) {\r\n                WebGLUniformBlockUtilities.setUniformBufferValues(gl, block, buffer, uniforms);\r\n            }\r\n            uniformBlocks[blockName] = block;\r\n        });\r\n\r\n        return {\r\n            program,\r\n            vertexArray,\r\n            uniforms,\r\n            uniformBlocks\r\n        };\r\n    }\r\n\r\n    static setPacketValues(gl: WebGL2RenderingContext, packet: Packet, values: PacketValues): void {\r\n        const {vertexArray: vertexArrayValues, uniforms: uniformsValues, uniformBlocks: uniformsBlocksValues} = values;\r\n        const {vertexArray, uniforms, uniformBlocks} = packet;\r\n\r\n        if (vertexArrayValues && vertexArray) {\r\n            WebGLVertexArrayUtilities.setVertexArrayValues(gl, vertexArray, vertexArrayValues);\r\n        }\r\n        if (uniforms && uniformsValues) {\r\n            WebGLUniformUtilities.setUniformsListValues(gl, uniforms, uniformsValues);\r\n        }\r\n        if (uniformBlocks && uniformsBlocksValues) {\r\n            const uniformBlocksValuesEntries = uniformsBlocksValues ? Object.entries(uniformsBlocksValues) : [];\r\n            uniformBlocksValuesEntries.forEach(([blockName, uniformBlock]) => {\r\n                const {uniforms} = uniformBlock;\r\n                const block = uniformBlocks[blockName];\r\n                const {buffer} = block;\r\n                if (buffer) {\r\n                    WebGLUniformBlockUtilities.setUniformBufferValues(gl, block, buffer, uniforms);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    static drawPacket(gl: WebGL2RenderingContext, packet: Packet): void {\r\n        const {vertexArray} = packet;\r\n        if (vertexArray) {\r\n            WebGLVertexArrayUtilities.drawVertexArray(gl, vertexArray);\r\n        }\r\n        //@TODO: getError ?\r\n    }\r\n}","export { ColorValues };\r\nexport { Color };\r\n\r\ntype ColorValues = [number, number, number];\r\n\r\ninterface ColorConstructor {\r\n    readonly prototype: Color;\r\n    new(): Color;\r\n    new(values: ColorValues): Color;\r\n    new(values?: ColorValues): Color;\r\n    readonly BLACK: Color;\r\n    readonly RED: Color;\r\n    readonly GREEN: Color;\r\n    readonly BLUE: Color;\r\n    readonly WHITE: Color;\r\n    array(...colors: Color[]): number[];\r\n    lerp(a: Color, b: Color, t: number): Color;\r\n}\r\n\r\ninterface Color extends ArrayLike<number> {\r\n    readonly array: Float32Array;\r\n    readonly length: number;\r\n    0: number;\r\n    1: number;\r\n    2: number;\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n    copy(color: Color): Color;\r\n    clone(): Color;\r\n    getValues(): ColorValues;\r\n    setValues(\r\n        r: number,\r\n        g: number,\r\n        b: number\r\n    ): Color;\r\n    lerp(color: Color, t: number): Color;\r\n    normalize(): Color;\r\n}\r\n\r\nclass ColorBase implements Color {\r\n    [index: number]: number;\r\n    readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n    constructor(r: number, g: number, b: number)\r\n    constructor(r?: number, g?: number, b?: number) {\r\n\t\tthis.array = new Float32Array([\r\n            r ?? 0, g ?? 0, b ?? 0\r\n        ]);\r\n    }\r\n    \r\n    static readonly BLACK = new ColorBase(0, 0, 0);\r\n    static readonly RED = new ColorBase(255, 0, 0);\r\n    static readonly GREEN = new ColorBase(0, 255, 0);\r\n    static readonly BLUE = new ColorBase(0, 0, 255);\r\n    static readonly WHITE = new ColorBase(255, 255, 255);\r\n\r\n    static array(...colors: Color[]): number[] {\r\n        const a = new Array<number>(colors.length * 4);\r\n        let c;\r\n        let i = 0;\r\n        for (const color of colors) {\r\n            c = color.array;\r\n            a[i + 0] = c[0];\r\n            a[i + 1] = c[1];\r\n            a[i + 2] = c[2];\r\n            i += 3;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    get length(): number {\r\n        return 3;\r\n    }\r\n\r\n    get r(): number {\r\n        return this.array[0];\r\n    }\r\n\r\n    set r(r: number) {\r\n        this.array[0] = r;\r\n    }\r\n\r\n    get g(): number {\r\n        return this.array[1];\r\n    }\r\n\r\n    set g(g: number) {\r\n        this.array[1] = g;\r\n    }\r\n\r\n    get b(): number {\r\n        return this.array[2];\r\n    }\r\n\r\n    set b(b: number) {\r\n        this.array[2] = b;\r\n    }\r\n\r\n    get a(): number {\r\n        return this.array[3];\r\n    }\r\n\r\n    set a(a: number) {\r\n        this.array[3] = a;\r\n    }\r\n\r\n    get 0(): number {\r\n        return this.array[0];\r\n    }\r\n\r\n    set 0(r: number) {\r\n        this.array[0] = r;\r\n    }\r\n\r\n    get 1(): number {\r\n        return this.array[1];\r\n    }\r\n\r\n    set 1(g: number) {\r\n        this.array[1] = g;\r\n    }\r\n\r\n    get 2(): number {\r\n        return this.array[2];\r\n    }\r\n\r\n    set 2(b: number) {\r\n        this.array[2] = b;\r\n    }\r\n\r\n    get 3(): number {\r\n        return this.array[3];\r\n    }\r\n\r\n    set 3(a: number) {\r\n        this.array[3] = a;\r\n    }\r\n\r\n    setValues(r: number, g: number, b: number): this {\r\n\t\tconst {array} = this;\r\n\r\n\t\tarray[0] = r;\r\n\t\tarray[1] = g;\r\n\t\tarray[2] = b;\r\n\r\n\t\treturn this;\r\n    }\r\n    \r\n    getValues(): ColorValues {\r\n\t\tconst {array} = this;\r\n\t\t\r\n\t\treturn [\r\n\t\t\tarray[0], array[1], array[2]\r\n\t\t];\r\n\t}\r\n    \r\n    copy(color: Color): this {\r\n        const {array} = this;\r\n        const {r, g, b} = color;\r\n\r\n        array[0] = r;\r\n        array[1] = g;\r\n        array[2] = b;\r\n\r\n        return this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn <this>(new ColorBase()).copy(this);\r\n    }\r\n\r\n    static lerp(a: Color, b: Color, t: number): Color {\r\n\t\treturn a.lerp(b, t);\r\n\t}\r\n    \r\n    lerp(color: Color, t: number): this {\r\n        const {array} = this;\r\n        const {r, g, b} = color;\r\n\r\n\t\tarray[0] = t * (r - array[0]);\r\n\t\tarray[1] = t * (g - array[1]);\r\n\t\tarray[2] = t * (b - array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n    \r\n\tnormalize(): this {\r\n\t\tconst {array} = this;\r\n\t\tconst length = 255;\r\n        array[0] /= length;\r\n        array[1] /= length;\r\n        array[2] /= length;\r\n\t\treturn this;\r\n\t}\r\n\r\n    [Symbol.iterator] (): Iterator<number> {\r\n\t\tconst {array} = this;\r\n\t\tconst {length} = array;\r\n\t\tlet i = 0;\r\n\t\treturn {\r\n\t\t\tnext() {\r\n\t\t\t\tif (i < length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: array[i++], done: false\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: undefined, done: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst Color: ColorConstructor = ColorBase;","import { IcosahedronGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/IcosahedronGeometry\";\r\nimport { ArcballCameraControl } from \"../../engine/core/controls/ArcballCameraControl\";\r\nimport { FreeCameraControl } from \"../../engine/core/controls/FreeCameraControl\";\r\nimport { Transform } from \"../../engine/core/general/Transform\";\r\nimport { Input } from \"../../engine/core/input/Input\";\r\nimport { PerspectiveCamera } from \"../../engine/core/rendering/scenes/cameras/PerspectiveCamera\";\r\nimport { GeometryBuffer } from \"../../engine/core/rendering/scenes/geometries/GeometryBuffer\";\r\nimport { CubeGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/CubeGeometry\";\r\nimport { QuadGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/QuadGeometry\";\r\nimport { BufferDataUsage } from \"../../engine/core/rendering/webgl/WebGLBufferUtilities\";\r\nimport { FramebufferAttachment, FramebufferTextureTarget, RenderbufferPixelFormat, WebGLFramebufferUtilities } from \"../../engine/core/rendering/webgl/WebGLFramebufferUtilities\";\r\nimport { WebGLPacketUtilities, PacketProperties } from \"../../engine/core/rendering/webgl/WebGLPacketUtilities\";\r\nimport { WebGLProgramUtilities } from \"../../engine/core/rendering/webgl/WebGLProgramUtilities\";\r\nimport { BlendingEquation, BlendingMode, BufferMask, Capabilities, TestFunction, WebGLRendererUtilities, WindingOrder } from \"../../engine/core/rendering/webgl/WebGLRendererUtilities\";\r\nimport { TexturePixelFormat, TexturePixelType, TextureMagFilter, TextureMinFilter, TextureTarget, TextureWrapMode, WebGLTextureUtilities, TextureInternalPixelFormat } from \"../../engine/core/rendering/webgl/WebGLTextureUtilities\";\r\nimport { WebGLUniformBlockUtilities } from \"../../engine/core/rendering/webgl/WebGLUniformBlockUtilities\";\r\nimport { AttributeDataType, DataComponentType, DrawMode, WebGLVertexArrayUtilities } from \"../../engine/core/rendering/webgl/WebGLVertexArrayUtilities\";\r\nimport { Color } from \"../../engine/libs/graphics/colors/Color\";\r\nimport { Matrix4 } from \"../../engine/libs/maths/algebra/matrices/Matrix4\";\r\nimport { Quaternion } from \"../../engine/libs/maths/algebra/quaternions/Quaternion\";\r\nimport { Vector3, Vector3Values } from \"../../engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../engine/libs/maths/geometry/space/Space\";\r\nimport { addWidgets, createPositionWidgets, createRelativePositionWidgets, createRotationWidgets } from \"./Common\";\r\nimport { SphereGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/SphereGeometry\";\r\nimport { CylinderGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/CylinderGeometry\";\r\nimport { DodecahedronGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/DodecahedronGeometry\";\r\n\r\nconst simpleSceneDOM = /*template*/`\r\n<!--<link rel=\"stylesheet\" href=\"./css/main.css\"/>-->\r\n  <div class=\"flex-auto flex-cols\">\r\n    <main class=\"flex-rows flex-auto\">\r\n        <section class=\"centered padded\">\r\n          <div id=\"ui\" class=\"flex-cols\">\r\n            <div class=\"flex-none\">FPS: <span id=\"canvas-fps\">-.-</span><button id=\"playpause\">Pause</button></div>\r\n          </div>\r\n          <div id=\"widgets\"></div>\r\n          <canvas id=\"canvas\" tabindex=\"0\" tooltip=\"mon-canvas\" oncontextmenu=\"return false;\"></canvas>\r\n          <style>\r\n            circle:hover {\r\n              fill: rgb(255, 0, 0);\r\n            }\r\n          </style>\r\n          <!--<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" width=\"100\" height=\"100\">\r\n            <circle cx=\"10\" cy=\"10\" r=\"4\"/>\r\n          </svg>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\" width=\"200\" height=\"200\" id=\"save\" fill=\"none\">\r\n            <g>\r\n              <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"red\"></rect>\r\n              <text text-anchor=\"middle\" alignment-baseline=\"middle\" x=\"50\" y=\"50\" font-family=\"Verdana\" fill=\"blue\">Hello,World!</text>\r\n            </g>\r\n          </svg>-->\r\n        </section>\r\n    </main>\r\n  </div>`;\r\n\r\nexport async function start() {\r\n  const template = document.createElement(\"template\");\r\n  template.innerHTML = simpleSceneDOM;\r\n  document.body.insertBefore(template.content, document.body.firstChild);\r\n\r\n  /*let onCapture = false;\r\n  const handlePointerUpEvent = (event: PointerEvent) => {\r\n    const {target, pointerId} = event;\r\n    if (target instanceof Element && target.tagName == \"circle\") {\r\n      (<Element>target).releasePointerCapture(pointerId);\r\n      onCapture = false;\r\n    }\r\n  }\r\n  const handlePointerDownEvent = (event: PointerEvent) => {\r\n    const {target, pointerId} = event;\r\n    if (target instanceof Element && target.tagName == \"circle\") {\r\n      (<Element>target).setPointerCapture(pointerId);\r\n      onCapture = true;\r\n    }\r\n  }\r\n  const handlePointerOutEvent = (event: PointerEvent) => {\r\n    const {target, pointerId} = event;\r\n    if (target instanceof Element && target.tagName == \"circle\") {\r\n      (<Element>target).releasePointerCapture(pointerId);\r\n      onCapture = false;\r\n    }\r\n  }\r\n  const handlePointerMoveEvent = (event: PointerEvent) => {\r\n    if (onCapture) {\r\n      const {currentTarget, clientX, clientY} = event;\r\n      const svg = <Element>currentTarget;\r\n      const {\r\n        right: svgRight, left: svgLeft, width: svgWidth,\r\n        bottom: svgBottom, top: svgTop, height: svgHeight\r\n      } = svg.getBoundingClientRect();\r\n      const {target} = event;\r\n      const targetElement = <Element>target;\r\n      const [viewMinX, viewMinY, viewMaxX, viewMaxY] = svg.getAttribute(\"viewBox\")!.split(\" \").map(value => parseFloat(value));\r\n      const offsetX = (Math.min(svgRight, Math.max(clientX, svgLeft)) - svgLeft) / svgWidth;\r\n      const offsetY = (Math.min(svgBottom, Math.max(clientY, svgTop)) - svgTop) / svgHeight;\r\n      const newTargetX = Math.round(offsetX * (viewMaxX - viewMinX));\r\n      const newTargetY = Math.round(offsetY * (viewMaxY - viewMinY));\r\n      targetElement.setAttribute(\"cx\", `${newTargetX}`);\r\n      targetElement.setAttribute(\"cy\", `${newTargetY}`);\r\n    }\r\n  }\r\n  const svg = document.querySelector(\"svg\");\r\n  svg!.addEventListener(\"pointerdown\", handlePointerDownEvent);\r\n  svg!.addEventListener(\"pointermove\", handlePointerMoveEvent);\r\n  svg!.addEventListener(\"pointerup\", handlePointerUpEvent);\r\n  svg!.addEventListener(\"pointerout\", handlePointerOutEvent);*/\r\n\r\n  try {\r\n    launchScene();\r\n  }\r\n  catch (e) {\r\n    console.trace(e);\r\n  }\r\n}\r\n/*\r\nlet file: File | undefined;\r\nconst input = document.createElement(\"input\");\r\ninput.type = \"file\";\r\ndocument.body.append(input);\r\ninput.addEventListener(\"input\", () => {\r\n  file = input.files![0];\r\n  launchScene();\r\n});\r\n*/\r\nexport async function launchScene() {\r\n  let frameRequest: number;\r\n  let render: (time: number) => void;\r\n  let fps: number = 0;\r\n  let paused = false;\r\n\r\n  const playPause = document.getElementById('playpause') as HTMLButtonElement;\r\n  if (playPause !== null) {\r\n    playPause.onclick = () => {\r\n      paused = !paused;\r\n      playPause.textContent = paused ? \"Play\" : \"Pause\";\r\n      if (!paused) {\r\n        render(0);\r\n      }\r\n    };\r\n  }\r\n\r\n  const fpsElement = document.getElementById('canvas-fps') as HTMLSpanElement;\r\n  if (!fpsElement) {\r\n    return;\r\n  }\r\n\r\n  const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n  if (!canvas) {\r\n    return;\r\n  }\r\n  \r\n  const canvasWidth = 800;\r\n  const canvasHeight = 600;\r\n  const supersamplingRatio = 1;\r\n  canvas.width = canvasWidth * supersamplingRatio;\r\n  canvas.height = canvasHeight * supersamplingRatio;\r\n  canvas.style.width = `${canvasWidth}px`;\r\n  canvas.style.height = `${canvasHeight}px`;\r\n  \r\n  const gl = canvas.getContext(\"webgl2\");\r\n  if (!gl) {\r\n    return;\r\n  }\r\n\r\n  WebGLTextureUtilities.setUnpackAlignment(gl, 1);\r\n\r\n  // Shaders\r\n  const phongVert = await fetch(\"assets/engine/shaders/common/phong.vert.glsl\").then(resp => resp.text());\r\n  const phongFrag = await fetch(\"assets/engine/shaders/common/phong.frag.glsl\").then(resp => resp.text());\r\n  const phongProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: phongVert, fragmentSource: phongFrag});\r\n  if (phongProgram === null) return;\r\n\r\n  const skyboxVert = await fetch(\"assets/engine/shaders/common/skybox.vert\").then(resp => resp.text());\r\n  const skyboxFrag = await fetch(\"assets/engine/shaders/common/skybox.frag\").then(resp => resp.text());\r\n  const skyboxProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: skyboxVert, fragmentSource: skyboxFrag});\r\n  if (skyboxProgram === null) return;\r\n  \r\n  const textureVert = await fetch(\"assets/engine/shaders/common/texture.vert\").then(resp => resp.text());\r\n  const textureFrag = await fetch(\"assets/engine/shaders/common/texture.frag\").then(resp => resp.text());\r\n  const texProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: textureVert, fragmentSource: textureFrag});\r\n  if (texProgram === null) return;\r\n\r\n  const basicVert = await fetch(\"assets/engine/shaders/common/basic.vert.glsl\").then(resp => resp.text());\r\n  const basicFrag = await fetch(\"assets/engine/shaders/common/basic.frag.glsl\").then(resp => resp.text());\r\n  const basicProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: basicVert, fragmentSource: basicFrag});\r\n  if (basicProgram === null) return;\r\n  \r\n  const depthVert = await fetch(\"assets/engine/shaders/common/depth.vert.glsl\").then(resp => resp.text());\r\n  const depthFrag = await fetch(\"assets/engine/shaders/common/depth.frag.glsl\").then(resp => resp.text());\r\n  const depthProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: depthVert, fragmentSource: depthFrag});\r\n  if (depthProgram === null) return;\r\n\r\n  const linesVertex = await fetch(\"assets/engine/shaders/common/lines.vert.glsl\").then(resp => resp.text());\r\n  const linesFragment = await fetch(\"assets/engine/shaders/common/lines.frag.glsl\").then(resp => resp.text());\r\n  const linesProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: linesVertex, fragmentSource: linesFragment});\r\n  if (linesProgram === null) return;\r\n\r\n  async function fetchImage(url: string) {\r\n    return fetch(url).then((resp) => {\r\n      if (resp.ok) {\r\n        return new Promise<HTMLImageElement>((resolve) => {\r\n          const img = new Image();\r\n          img.onload = () => {\r\n            resolve(img);\r\n          };\r\n          img.src = url;\r\n        })\r\n      }\r\n      else {\r\n        throw new Error(`Image '${url}' not found.`);\r\n      }\r\n    });\r\n  }\r\n  // Images\r\n  const albedoMapImg = await fetchImage(\"assets/engine/img/NormalMap.png\");\r\n  const normalMapImg = await fetchImage(\"assets/engine/img/NormalMap_0.png\");\r\n  const displacementMapImg = await fetchImage(\"assets/engine/img/DisplacementMap.png\");\r\n  const skyboxXPosImg = await fetchImage(\"assets/engine/img/skybox_x_pos.png\");\r\n  const skyboxXNegImg = await fetchImage(\"assets/engine/img/skybox_x_neg.png\");\r\n  const skyboxYPosImg = await fetchImage(\"assets/engine/img/skybox_y_pos.png\");\r\n  const skyboxYNegImg = await fetchImage(\"assets/engine/img/skybox_y_neg.png\");\r\n  const skyboxZPosImg = await fetchImage(\"assets/engine/img/skybox_z_pos.png\");\r\n  const skyboxZNegImg = await fetchImage(\"assets/engine/img/skybox_z_neg.png\");\r\n\r\n  /*const norm16Extension = gl.getExtension(\"EXT_texture_norm16\");\r\n  if (norm16Extension) {\r\n    console.log(`Extension EXT_texture_norm16 activated.`);\r\n  }*/\r\n\r\n  const textures = WebGLPacketUtilities.createTextures(gl, {\r\n    albedoMap: {\r\n      pixels: albedoMapImg,\r\n      width: albedoMapImg.width, height: albedoMapImg.height,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGB,\r\n      internalFormat: TextureInternalPixelFormat.RGB,\r\n\r\n      min: TextureMinFilter.NEAREST,\r\n      mag: TextureMagFilter.NEAREST,\r\n    },\r\n    // albedoMap: {\r\n    //   pixels: null,\r\n    //   width: 8, height: 8, depth: 2,\r\n    //   // pixels: albedoMapImg,\r\n    //   // width: albedoMapImg.width, height: albedoMapImg.height,\r\n    //   target: TextureTarget.TEXTURE_2D_ARRAY,\r\n    //   type: TexturePixelType.UNSIGNED_BYTE,\r\n\r\n    //   /*wrapS: TextureWrapMode.CLAMP_TO_EDGE,\r\n    //   wrapT: TextureWrapMode.CLAMP_TO_EDGE,\r\n    //   wrapR: TextureWrapMode.CLAMP_TO_EDGE,*/\r\n\r\n    //   format: TexturePixelFormat.LUMINANCE,\r\n    //   internalFormat: TextureInternalPixelFormat.LUMINANCE,\r\n\r\n    //   // format: TexturePixelFormat.RGB,\r\n    //   // internalFormat: TextureInternalPixelFormat.RGB\r\n\r\n    //   min: TextureMinFilter.NEAREST,\r\n    //   mag: TextureMagFilter.NEAREST,\r\n\r\n    //   subimages: [\r\n    //     {\r\n    //       pixels: new Uint8Array([\r\n    //         0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC,\r\n    //         0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF,\r\n    //         0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC,\r\n    //         0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF,\r\n    //         0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC,\r\n    //         0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF,\r\n    //         0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC,\r\n    //         0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF,\r\n    //       ]),\r\n    //       xoffset: 0,\r\n    //       yoffset: 0,\r\n    //       zoffset: 0,\r\n    //       width: 8,\r\n    //       height: 8,\r\n    //       depth: 1\r\n    //     },\r\n    //     {\r\n    //       pixels: new Uint8Array([\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //       ]),\r\n    //       xoffset: 0,\r\n    //       yoffset: 0,\r\n    //       zoffset: 1,\r\n    //       width: 8,\r\n    //       height: 8,\r\n    //       depth: 1\r\n    //     }\r\n    //   ]\r\n    // },\r\n    normalMap: {\r\n      pixels: normalMapImg,\r\n      width: normalMapImg.width, height: normalMapImg.height,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGB,\r\n      internalFormat: TextureInternalPixelFormat.RGB8,\r\n      min: TextureMinFilter.LINEAR_MIPMAP_LINEAR,\r\n      mag: TextureMagFilter.LINEAR\r\n    },\r\n    displacementMap: {\r\n      pixels: displacementMapImg,\r\n      width: displacementMapImg.width, height: displacementMapImg.height,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGBA,\r\n      internalFormat: TextureInternalPixelFormat.RGBA8\r\n    },\r\n    skybox: {\r\n      pixels: {\r\n        xPos: skyboxXPosImg, xNeg: skyboxXNegImg,\r\n        yPos: skyboxYPosImg, yNeg: skyboxYNegImg,\r\n        zPos: skyboxZPosImg, zNeg: skyboxZNegImg\r\n      },\r\n      width: skyboxXPosImg.width, height: skyboxXPosImg.height,\r\n      target: TextureTarget.TEXTURE_CUBE_MAP,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGBA,\r\n      internalFormat: TextureInternalPixelFormat.RGBA8\r\n    },\r\n    fbColorTex: {\r\n      width: canvas.width, height: canvas.height,\r\n      pixels: null,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGBA,\r\n      internalFormat: TextureInternalPixelFormat.RGBA8,\r\n      mag: TextureMagFilter.LINEAR,\r\n      min: TextureMinFilter.LINEAR,\r\n      wrapS: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapT: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapR: TextureWrapMode.CLAMP_TO_EDGE,\r\n    },\r\n    depthTex: {\r\n      width: canvas.width, height: canvas.height,\r\n      pixels: null,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_INT,\r\n      format: TexturePixelFormat.DEPTH_COMPONENT,\r\n      internalFormat: TextureInternalPixelFormat.DEPTH_COMPONENT24,\r\n      wrapS: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapT: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapR: TextureWrapMode.CLAMP_TO_EDGE,\r\n      mag: TextureMagFilter.NEAREST,\r\n      min: TextureMinFilter.NEAREST,\r\n    }\r\n  })!;\r\n\r\n  const {albedoMap, normalMap, displacementMap, skybox, fbColorTex, depthTex} = textures;\r\n\r\n  /*const anisotropicExtension = gl.getExtension(\"EXT_texture_filter_anisotropic\");\r\n  if (anisotropicExtension) {\r\n    console.log(`Extension EXT_texture_filter_anisotropic activated.`);\r\n    const maxFiltering = gl.getParameter(anisotropicExtension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n    const textures = [albedoMap, normalMap];\r\n    textures.forEach((texture) => {\r\n      gl.activeTexture(gl.TEXTURE0 + texture.unit);\r\n      gl.bindTexture(gl.TEXTURE_2D, texture.internal);\r\n      gl.texParameterf(gl.TEXTURE_2D, anisotropicExtension.TEXTURE_MAX_ANISOTROPY_EXT, maxFiltering);\r\n    });\r\n  }*/\r\n\r\n  const cubeGeometry =\r\n    // new QuadGeometry({heightSegments: 64, widthSegments: 64});\r\n    new CubeGeometry({height: 4, width: 4, depth: 4, heightSegments: 32, widthSegments: 32, depthSegments: 32});\r\n    // new SphereGeometry({widthSegments: 64, heightSegments: 64});\r\n    // new CylinderGeometry();\r\n    // new DodecahedronGeometry();\r\n  \r\n  const quad = new QuadGeometry({height: 2, width: 2});\r\n  const quadGeometryBuilder = quad.toBuilder();\r\n  const cube = new Transform();\r\n  cube.setScaling(new Vector3([1, 1, 1]));\r\n  \r\n  const fov = (1 / 3) * Math.PI;\r\n  const aspect = gl.canvas.width / gl.canvas.height;\r\n  const zNear = 0.1;\r\n  const zFar = 100;\r\n\r\n  const camera = new PerspectiveCamera(fov, aspect, zNear, zFar);\r\n  camera.transform.setTranslation(new Vector3([0, 8, 8]));\r\n  camera.transform.lookAt(new Vector3([0, 0, 0]), Space.up);\r\n\r\n  const lightTransform = new Transform();\r\n  lightTransform.setTranslation(new Vector3([0, 2, 2]));\r\n  lightTransform.setScaling(new Vector3([0.2, 0.2, 0.2]));\r\n\r\n  camera.transform.setTranslation(lightTransform.getTranslation(new Vector3()).scale(2));\r\n  camera.transform.lookAt(new Vector3([0, 0, 0]), Space.up);\r\n\r\n  const viewDirectionProjectionInverse = camera.projection.clone().mult(Matrix4.identity().setRotation(camera.view.getRotation())).invert();\r\n/*\r\n  addWidgets([\r\n    ...createRotationWidgets(cube, \"Cube\"),\r\n    ...createPositionWidgets(cube, \"Cube\"),\r\n    ...createRelativePositionWidgets(cube, \"Cube\"),\r\n    ...createRelativePositionWidgets(camera.transform, \"Camera\"),\r\n  ]);*/\r\n\r\n  const cubeGeometryBuilder = cubeGeometry.toBuilder();\r\n  const cubeVerticesArray = cubeGeometryBuilder.verticesArray();\r\n  const cubeIndicesArray = cubeGeometryBuilder.indicesArray();\r\n  const cubeNormalsArray = cubeGeometryBuilder.normalsArray();\r\n  const cubeUVsArray= cubeGeometryBuilder.uvsArray();\r\n  const cubeTangentsArray = cubeGeometryBuilder.tangentsArray();\r\n  const cubeLinesArray = cubeGeometryBuilder.linesArray();\r\n\r\n  const cubeGeometryBuffer = new GeometryBuffer({\r\n    a_position: { array: cubeVerticesArray, type: AttributeDataType.VEC3 },\r\n    a_tangent: { array: cubeTangentsArray, type: AttributeDataType.VEC3 },\r\n    a_normal: { array: cubeNormalsArray, type: AttributeDataType.VEC3 },\r\n    a_uv: { array: cubeUVsArray, type: AttributeDataType.VEC2 },\r\n  }, cubeIndicesArray, false);\r\n\r\n  const cubeVertices = cubeGeometryBuffer.getAttribute(\"a_position\")!;\r\n  const cubeIndices = cubeGeometryBuffer.indices!;\r\n  const cubeNormals = cubeGeometryBuffer.getAttribute(\"a_normal\")!;\r\n  const cubeUVs = cubeGeometryBuffer.getAttribute(\"a_uv\")!;\r\n  const cubeTangents = cubeGeometryBuffer.getAttribute(\"a_tangent\")!;\r\n  const cubeColors = cubeGeometryBuffer.getAttribute(\"a_normal\")!;\r\n  cubeColors.array.fill(1);\r\n  \r\n  //const cubeLines = cubeGeometryBuffer.getAttribute(\"a_lines\")!;\r\n\r\n  // const blob = cubeGeometryBuffer.toBlob();\r\n  // const anchor = document.createElement(\"a\");\r\n  // anchor.download = \"dat.bin\";\r\n  // anchor.href = URL.createObjectURL(blob);\r\n  // anchor.click();\r\n\r\n  // console.log(cubeGeometryBuffer);\r\n\r\n  // const cubeGeometryBuffer = await GeometryBuffer.fromBlob(file!);\r\n\r\n  // const cubeVertices = cubeGeometryBuffer.getAttribute(\"a_position\")!;\r\n  // const cubeIndices = cubeGeometryBuffer.indices!;\r\n  // const cubeNormals = cubeGeometryBuffer.getAttribute(\"a_normal\")!;\r\n  // const cubeUVs = cubeGeometryBuffer.getAttribute(\"a_uv\")!;\r\n  // const cubeTangents = cubeGeometryBuffer.getAttribute(\"a_tangent\")!;\r\n\r\n  const phongCubePacketProperties: PacketProperties = {\r\n    program: phongProgram,\r\n    vertexArray: {\r\n      vertexBuffers: [\r\n        {\r\n          interleaved: false\r\n        },\r\n        {\r\n          usage: BufferDataUsage.DYNAMIC_READ\r\n        },\r\n      ],\r\n      vertexAttributes: {\r\n        a_position: { buffer: 0, type: AttributeDataType.VEC3, componentType: DataComponentType.FLOAT, byteLength: cubeNormals.array.byteLength },\r\n        a_tangent: { buffer: 0, type: AttributeDataType.VEC3, componentType: DataComponentType.FLOAT, byteLength: cubeTangents.array.byteLength },\r\n        a_normal: { ...cubeNormals, buffer: 0 },\r\n        a_uv: { ...cubeUVs, buffer: 0 },\r\n        a_color: { buffer: 1, type: AttributeDataType.VEC3, componentType: DataComponentType.FLOAT, byteLength: cubeColors.array.byteLength },\r\n      },\r\n      elementIndices: cubeGeometryBuffer.indices,\r\n      elementsCount: cubeGeometryBuffer.indices!.length,\r\n    },\r\n    uniformBuffers: [\r\n      {\r\n        usage: BufferDataUsage.DYNAMIC_READ\r\n      },\r\n      {\r\n        usage: BufferDataUsage.DYNAMIC_READ\r\n      }\r\n    ],\r\n    uniformBlocks: {\r\n      viewBlock: {\r\n        buffer: 0,\r\n        uniforms: {\r\n          u_view: { value: camera.view.array },\r\n          u_projection: { value: camera.projection.array },\r\n        }\r\n      },\r\n      modelBlock: {\r\n        buffer: 0,\r\n        uniforms: {\r\n          \"models[0].u_model\": { value: cube.matrix.array },\r\n          \"models[0].u_modelView\": { value: camera.view.mult(cube.matrix).array },\r\n          \"models[0].u_normal\": { value: camera.view.mult(cube.matrix).invert().transpose().array }\r\n        }\r\n      },\r\n      lightsBlock: {\r\n        buffer: 0,\r\n        uniforms: {\r\n          \"lights[0].u_lightWorldPos\": { value: Array.from(lightTransform.getTranslation(new Vector3())) },\r\n          \"lights[0].u_lightDirection\": { value: Array.from(lightTransform.getBackward(new Vector3())) },\r\n          \"lights[0].u_cutOff\": { value: (2 / 360) * Math.PI },\r\n          \"lights[0].u_lightColor\": { value: /*[1, 0.8, 0.8]*/Array.from(Color.RED) }\r\n        }\r\n      },\r\n      phongBlock: {\r\n        buffer: 1,\r\n        uniforms: {\r\n          \"phong.u_ambientColor\": { value: [0.1, 0.1, 0.1] },\r\n          \"phong.u_diffuseColor\": { value: [0.8, 0, 0] },\r\n          \"phong.u_specularColor\": { value: [1, 1, 1] },\r\n          \"phong.u_ambientFactor\": { value: 0.0008 },\r\n          \"phong.u_diffuseFactor\": { value: 1 },\r\n          \"phong.u_specularFactor\": { value: 1 },\r\n          \"phong.u_shininess\": { value: 36 },\r\n          \"phong.u_constant\": { value: 1 }, \r\n          \"phong.u_linear\": { value: 0.09 },\r\n          \"phong.u_quadratic\": { value: 0.032 }\r\n        }\r\n      }\r\n    },\r\n    uniforms: {\r\n      u_albedoMap: { value: albedoMap },\r\n      u_normalMap: { value: normalMap },\r\n      u_displacementMap: { value: displacementMap }\r\n    }\r\n  };\r\n\r\n  const phongCubePacket = WebGLPacketUtilities.createPacket(gl, phongCubePacketProperties)!;\r\n  \r\n  WebGLVertexArrayUtilities.setVertexArrayBufferData(gl, phongCubePacket.vertexArray.verticesBuffers[1]!, cubeColors.array);\r\n  WebGLVertexArrayUtilities.setVertexArrayBufferData(gl, phongCubePacket.vertexArray.verticesBuffers[0]!, new Uint8Array(cubeGeometryBuffer.buffer));\r\n  WebGLVertexArrayUtilities.setVertexArrayValues(gl, phongCubePacket.vertexArray, {\r\n    attributes: {\r\n      a_position: {\r\n        array: cubeVertices.array\r\n      }\r\n    }\r\n  });\r\n\r\n  WebGLUniformBlockUtilities.setUniformBufferData(gl,\r\n    phongCubePacket.uniformBlocks!.phongBlock!.buffer!,\r\n    Color.lerp(Color.WHITE, Color.GREEN, 0.5).array,\r\n    phongCubePacket.uniformBlocks!.phongBlock!.layout[\"phong.u_ambientColor\"]!.byteOffset!,\r\n  );\r\n\r\n  const linesProperties: PacketProperties = {\r\n    program: linesProgram,\r\n    vertexArray: {\r\n      vertexAttributes: {\r\n        a_position: {\r\n          array: cubeLinesArray,\r\n          type: AttributeDataType.VEC3\r\n        }\r\n      },\r\n      drawMode: DrawMode.LINES,\r\n      elementsCount: cubeLinesArray.length / 2\r\n    },\r\n    uniformBuffers: [\r\n      phongCubePacket.uniformBlocks!.modelBlock.buffer!,\r\n      phongCubePacket.uniformBlocks!.viewBlock.buffer!\r\n    ],\r\n    uniformBlocks: {\r\n      modelBlock: { buffer: 0 },\r\n      viewBlock: { buffer: 1 }\r\n    },\r\n    uniforms: {\r\n      u_color: {\r\n        value: new Float32Array([1, 0, 0])\r\n      }\r\n    }\r\n  };\r\n\r\n  const basicPacketProperties: PacketProperties = {\r\n    program: basicProgram,\r\n    vertexArray: {\r\n      vertexBuffers: [\r\n        phongCubePacket.vertexArray.verticesBuffers[0]\r\n      ],\r\n      elementBuffer: phongCubePacket.vertexArray.elementBuffer,\r\n      elementsCount: cubeIndices.length\r\n    },\r\n    uniformBuffers: [\r\n      phongCubePacket.uniformBlocks!.viewBlock.buffer!\r\n    ],\r\n    uniformBlocks: {\r\n      basicModelBlock: {\r\n        uniforms: {\r\n          u_model: { value: lightTransform.matrix.array },\r\n          u_color: { value: [1, 1, 0] }\r\n        }\r\n      },\r\n      viewBlock: {\r\n        buffer: 0\r\n      }\r\n    }\r\n  };\r\n\r\n  const quadIndices = quadGeometryBuilder.indicesArray();\r\n  const quadVertices = quadGeometryBuilder.verticesArray();\r\n  const quadUVs = quadGeometryBuilder.uvsArray();\r\n  const quadWorld = new Matrix4().setIdentity();\r\n\r\n  const skyboxPacketProperties: PacketProperties = {\r\n    program: skyboxProgram,\r\n    vertexArray: {\r\n      vertexAttributes: {\r\n        a_position: { array: quadVertices, type: AttributeDataType.VEC3 },\r\n      },\r\n      elementIndices: quadIndices,\r\n      elementsCount: quadIndices.length\r\n    },\r\n    uniforms: {\r\n      u_world: { value: quadWorld.array },\r\n      u_viewDirectionProjectionInverse: { value: viewDirectionProjectionInverse.array }, \r\n      u_skybox: { value: skybox },\r\n    }\r\n  };\r\n\r\n  const depthPacketProperties: PacketProperties = {\r\n    program: depthProgram,\r\n    vertexArray: {\r\n      vertexAttributes: {\r\n        a_position: { array: quadVertices, type: AttributeDataType.VEC3 },\r\n        a_uv: { array: quadUVs, type: AttributeDataType.VEC2 },\r\n      },\r\n      elementIndices: quadIndices,\r\n      elementsCount: quadIndices.length\r\n    },\r\n    uniforms: {\r\n      u_world: { value: quadWorld.array },\r\n      u_tex: { value: depthTex }\r\n    }\r\n  };\r\n\r\n  const texPacketProperties: PacketProperties = {\r\n    program: texProgram,\r\n    vertexArray: {\r\n      vertexAttributes: {\r\n        a_position: { array: quadVertices, type: AttributeDataType.VEC3 },\r\n        a_uv: { array: quadUVs, type: AttributeDataType.VEC2 },\r\n      },\r\n      elementIndices: quadIndices,\r\n      elementsCount: quadIndices.length\r\n    },\r\n    uniforms: {\r\n      u_world: { value: quadWorld.array },\r\n      u_tex: { value: fbColorTex }\r\n    }\r\n  };\r\n\r\n  const linesPacket = WebGLPacketUtilities.createPacket(gl, linesProperties)!;\r\n  const basicPacket = WebGLPacketUtilities.createPacket(gl, basicPacketProperties)!;\r\n  const skyboxPacket = WebGLPacketUtilities.createPacket(gl, skyboxPacketProperties)!;\r\n  const depthPacket = WebGLPacketUtilities.createPacket(gl, depthPacketProperties)!;\r\n  const texPacket = WebGLPacketUtilities.createPacket(gl, texPacketProperties)!;\r\n\r\n  const framebuffer = WebGLFramebufferUtilities.createFramebuffer(gl)!;\r\n  const maxSamples = WebGLRendererUtilities.getMaxSamples(gl);\r\n  \r\n  WebGLFramebufferUtilities.attachRenderbuffer(\r\n    gl, framebuffer,\r\n    {\r\n      renderbuffer: WebGLFramebufferUtilities.createRenderbuffer(gl, {\r\n        internalFormat: RenderbufferPixelFormat.DEPTH_COMPONENT24,\r\n        width: canvas.width,\r\n        height: canvas.height,\r\n        samples: maxSamples\r\n      })!,\r\n      attachment: FramebufferAttachment.DEPTH_ATTACHMENT\r\n    },\r\n    {\r\n      renderbuffer: WebGLFramebufferUtilities.createRenderbuffer(gl, {\r\n        internalFormat: RenderbufferPixelFormat.RGBA8,\r\n        width: canvas.width,\r\n        height: canvas.height,\r\n        samples: maxSamples\r\n      })!,\r\n      attachment: FramebufferAttachment.COLOR_ATTACHMENT0,\r\n    }\r\n  );\r\n\r\n  const postFramebuffer = WebGLFramebufferUtilities.createFramebuffer(gl)!;\r\n\r\n  WebGLFramebufferUtilities.attachTexture(\r\n    gl, postFramebuffer, \r\n    {\r\n      textureTarget: FramebufferTextureTarget.TEXTURE_2D,\r\n      texture: fbColorTex,\r\n      attachment: FramebufferAttachment.COLOR_ATTACHMENT0\r\n    },\r\n    {\r\n      textureTarget: FramebufferTextureTarget.TEXTURE_2D,\r\n      texture: depthTex,\r\n      attachment: FramebufferAttachment.DEPTH_ATTACHMENT\r\n    }\r\n  );\r\n\r\n  WebGLRendererUtilities.viewport(gl, 0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n  //WebGLRendererUtilities.frontFace(gl, WindingOrder.CW);\r\n  WebGLRendererUtilities.enable(gl, Capabilities.DEPTH_TEST);\r\n  WebGLRendererUtilities.enable(gl, Capabilities.CULL_FACE);\r\n  WebGLRendererUtilities.enable(gl, Capabilities.BLEND);\r\n  WebGLRendererUtilities.blendFunction(gl, BlendingMode.SRC_ALPHA, BlendingMode.ONE_MINUS_SRC_ALPHA);\r\n  \r\n  let lastFrameTime = 0;\r\n  let deltaTime = 0;\r\n\r\n  let t = 0;\r\n  let direction = 1;\r\n  \r\n  let initRotation = cube.getRotation(new Quaternion());\r\n  let initPosition = cube.getTranslation(new Vector3());\r\n\r\n  const targetPosition = new Vector3([2, -2, -2]);\r\n  const targetRotation = Quaternion.fromAxisAngle(Space.down, Math.PI / 3);\r\n  \r\n  function animate(transform: Transform, initPosition: Vector3, initRotation: Quaternion, targetPosition: Vector3, targetRotation: Quaternion, t: number) {\r\n    /*transform.setTranslation(\r\n      new Vector3().lerp(initPosition, targetPosition, t)\r\n    );*/\r\n    //transform.setRotation(transform.getRotation(new Quaternion()).slerp(initRotation, targetRotation, t));\r\n    \r\n    //transform.rotate(new Quaternion().slerp(initRotation, targetRotation, t));\r\n    transform.rotate(Quaternion.fromAxisAngle(Space.down, Math.PI / 128));\r\n  }\r\n\r\n  Input.initialize(gl.canvas);\r\n  \r\n  WebGLFramebufferUtilities.unbindFramebuffer(gl);\r\n\r\n  const cameraControl = new FreeCameraControl(camera);\r\n\r\n  let frame = 0;\r\n\r\n  function shuffleArray<T extends {[index: number]: number; length: number;}>(array: T): T {\r\n    for (var i = array.length - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  render = function(frameTime: number) {\r\n    ++frame;\r\n    if (paused) {\r\n      return;\r\n    }\r\n    \r\n    frameTime *= 0.001;\r\n\r\n    deltaTime = frameTime - lastFrameTime;\r\n    lastFrameTime = frameTime;\r\n    fps = 1 / deltaTime;\r\n\r\n    fpsElement.textContent = fps.toFixed(1);\r\n\r\n    cameraControl.update(deltaTime);\r\n    lightTransform.setMatrix(camera.transform.matrix);\r\n\r\n    animate(\r\n      cube,\r\n      initPosition, initRotation,\r\n      targetPosition, targetRotation,\r\n      t\r\n    );\r\n    \r\n    t += deltaTime * direction * 0.5;\r\n    if (t > 1 || t < 0) {\r\n      direction *= -1;\r\n    }\r\n    \r\n    WebGLRendererUtilities.clearColor(gl, Color.BLACK.normalize());\r\n    WebGLRendererUtilities.clear(gl, BufferMask.COLOR_BUFFER_BIT | BufferMask.DEPTH_BUFFER_BIT);\r\n    \r\n    viewDirectionProjectionInverse.copy(camera.projection).mult(new Matrix4().setIdentity().setRotation(camera.view.getRotation())).invert();\r\n\r\n    // Framebuffer\r\n    // WebGLFramebufferUtilities.bindFramebuffer(gl, depthFramebuffer);\r\n    WebGLFramebufferUtilities.bindFramebuffer(gl, framebuffer);\r\n\r\n    WebGLRendererUtilities.clear(gl, BufferMask.COLOR_BUFFER_BIT | BufferMask.DEPTH_BUFFER_BIT);\r\n    \r\n    WebGLRendererUtilities.depthFunction(gl, TestFunction.LEQUAL);\r\n\r\n    WebGLPacketUtilities.drawPacket(gl, skyboxPacket);\r\n\r\n    WebGLRendererUtilities.depthFunction(gl, TestFunction.LESS);\r\n\r\n    WebGLPacketUtilities.setPacketValues(gl, phongCubePacket, {\r\n      uniformBlocks: {\r\n        modelBlock: {\r\n          uniforms: {\r\n            \"models[0].u_model\": { value: cube.matrix.array },\r\n            \"models[0].u_modelView\": { value: camera.view.mult(cube.matrix).array },\r\n            \"models[0].u_normal\": { value: camera.view.mult(cube.matrix).invert().transpose().array },\r\n          }\r\n        },\r\n        viewBlock: {\r\n          uniforms: {\r\n            u_view: { value: camera.view.array },\r\n            u_projection: { value: camera.projection.array },\r\n          }\r\n        },\r\n        lightsBlock: {\r\n          uniforms: {\r\n            \"lights[0].u_lightWorldPos\": { value: Array.from(lightTransform.getTranslation(new Vector3())) },\r\n            \"lights[0].u_lightDirection\": { value: Array.from(lightTransform.getBackward(new Vector3())) },\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // WebGLPacketUtilities.drawPacket(gl, basicPacket);\r\n    // WebGLPacketUtilities.drawPacket(gl, linesPacket);\r\n    WebGLPacketUtilities.drawPacket(gl, phongCubePacket);\r\n    \r\n    WebGLPacketUtilities.setPacketValues(gl, skyboxPacket, {\r\n      uniforms: {\r\n        u_viewDirectionProjectionInverse: { value: viewDirectionProjectionInverse.array }\r\n      }\r\n    });\r\n    \r\n    // WebGLRendererUtilities.depthFunction(gl, TestFunction.LEQUAL);\r\n    // WebGLPacketUtilities.drawPacket(gl, skyboxPacket);\r\n    \r\n    // Framebuffer\r\n    WebGLFramebufferUtilities.blit(gl, framebuffer, postFramebuffer,\r\n      [0, 0, canvas.width, canvas.height],\r\n      [0, 0, canvas.width, canvas.height],\r\n      BufferMask.COLOR_BUFFER_BIT,\r\n      TextureMagFilter.LINEAR\r\n    );\r\n    // WebGLFramebufferUtilities.blit(gl, framebuffer, postFramebuffer,\r\n    //   [0, 0, canvas.width, canvas.height],\r\n    //   [0, 0, canvas.width, canvas.height],\r\n    //   BufferMask.DEPTH_BUFFER_BIT,\r\n    //   TextureMagFilter.NEAREST\r\n    // );\r\n\r\n    // WebGLFramebufferUtilities.unbindFramebuffer(gl);\r\n    // WebGLPacketUtilities.drawPacket(gl, depthPacket);\r\n\r\n    WebGLFramebufferUtilities.unbindFramebuffer(gl);\r\n    WebGLPacketUtilities.drawPacket(gl, texPacket);\r\n\r\n    Input.clear();\r\n\r\n    frameRequest = requestAnimationFrame(render);\r\n  }\r\n\r\n  /*const stream = gl.canvas.captureStream(60);\r\n  const rec = new MediaRecorder(stream, {\r\n    mimeType: \"video/webm; codecs=vp9\",\r\n    audioBitsPerSecond: 0,\r\n    videoBitsPerSecond: canvas.width * canvas.height * 24 * 60\r\n  });\r\n\r\n  const chunks: BlobPart[] = [];\r\n  rec.addEventListener(\"dataavailable\", (event) => {\r\n    chunks.push(event.data);\r\n  });\r\n  rec.addEventListener(\"stop\", () => {\r\n    const blob = new Blob(chunks, {type: \"video/webm; codecs=vp9\"});\r\n    const anchor = document.createElement(\"a\");\r\n    anchor.download = \"recorded.webm\";\r\n    anchor.href = URL.createObjectURL(blob);\r\n    anchor.click();\r\n  });\r\n  rec.start();*/\r\n  \r\n  render(0);\r\n  \r\n  // const saveSVG = document.querySelector<SVGSVGElement>(\"svg#save\")!;\r\n  // const getSVGImageData = (svg: SVGSVGElement) => new Promise((resolve: (value: string) => void) => {\r\n  //   const url = URL.createObjectURL(new Blob([svg.outerHTML], {\r\n  //     type: \"image/svg+xml\"\r\n  //   }));\r\n  //   const svgImage = document.createElement(\"img\");\r\n  //   document.body.appendChild(svgImage);\r\n  //   svgImage.onload = () => {\r\n  //     const canvas = document.createElement(\"canvas\");\r\n  //     const ctx = canvas.getContext(\"2d\", {alpha: true})!;\r\n  //     canvas.width = svgImage.clientWidth;\r\n  //     canvas.height = svgImage.clientHeight;\r\n  //     ctx.drawImage(svgImage, 0, 0);\r\n  //     const imgData = canvas.toDataURL(\"image/png\");\r\n  //     resolve(imgData);\r\n  //     URL.revokeObjectURL(url);\r\n  //     svgImage.remove();\r\n  //   };\r\n  //   svgImage.src = url;\r\n  // });\r\n\r\n  // getSVGImageData(saveSVG).then(\r\n  //   (data: string) => {\r\n  //     const img = new Image();\r\n  //     img.src = data;\r\n  //     document.body.append(img);\r\n  //   }\r\n  // )\r\n}","import { Entity } from \"./src/engine/core/general/Entity\";\r\nimport { Scene } from \"./src/engine/core/general/Scene\";\r\nimport { FaceHalfEdgesIterator, FaceVerticesIterator, Vertex, VertexFacesIterator } from \"./src/engine/core/rendering/scenes/geometries/GeometryBuilder\";\r\nimport { QuadGeometry } from \"./src/engine/core/rendering/scenes/geometries/lib/QuadGeometry\";\r\nimport { Matrix3 } from \"./src/engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"./src/engine/libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector2 } from \"./src/engine/libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"./src/engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector4 } from \"./src/engine/libs/maths/algebra/vectors/Vector4\";\r\nimport { GOLDEN_RATIO } from \"./src/engine/libs/maths/geometry/GeometryConstants\";\r\nimport { Triangle } from \"./src/engine/libs/maths/geometry/primitives/Triangle\";\r\nimport { Space } from \"./src/engine/libs/maths/geometry/space/Space\";\r\nimport { buildArrayFromIndexedArrays } from \"./src/engine/utils/Snippets\";\r\nimport { start } from \"./src/samples/scenes/SimpleScene\";\r\n/*\r\nfunction windingOrder(v0: Vector3, v1: Vector3, v2: Vector3) {\r\n    const triangle = new Triangle(v0, v1, v2);\r\n    const centroid = triangle.getMidpoint(new Vector3());\r\n    const normal = triangle.getNormal(new Vector3());\r\n    \r\n    const e1 = v1.clone().sub(v0);\r\n    const e2 = e1.clone().cross(normal);\r\n\r\n    e1.normalize();\r\n    e2.normalize();\r\n\r\n    const v0_centered = v0.clone().sub(centroid);\r\n    const v1_centered = v1.clone().sub(centroid);\r\n    const v2_centered = v2.clone().sub(centroid);\r\n\r\n    const v0_t1 = e1.dot(v0_centered);\r\n    const v0_t2 = e2.dot(v0_centered);\r\n\r\n    const v1_t1 = e1.dot(v1_centered);\r\n    const v1_t2 = e2.dot(v1_centered);\r\n\r\n    const v2_t1 = e1.dot(v2_centered);\r\n    const v2_t2 = e2.dot(v2_centered);\r\n\r\n    const det = (v1_t1 - v0_t1) * (v2_t2 - v0_t2) - (v1_t2 - v0_t2) * (v2_t1 - v0_t1);\r\n    console.log(det < 0 ? \"CW\" : \"CCW\");\r\n\r\n    // const v0_out = new Vector2([v0_t1, v0_t2]);\r\n    // const v1_out = new Vector2([v1_t1, v1_t2]);\r\n    // const v2_out = new Vector2([v2_t1, v2_t2]);\r\n    // const v0_angle = Math.atan2(v0_out.y, v0_out.x);\r\n    // const v1_angle = Math.atan2(v1_out.y, v1_out.x);\r\n    // const v2_angle = Math.atan2(v2_out.y, v2_out.x);\r\n    \r\n    // const angles = [v0_angle, v1_angle, v2_angle];\r\n}*/\r\n\r\nexport async function main() {\r\n    //instanced();\r\n    //wireframe();\r\n\r\n    /*const myWorker = new Worker(\"./worker.js\");\r\n    const sab = new SharedArrayBuffer(1024);\r\n    const array = new Uint32Array(sab);\r\n    myWorker.addEventListener(\"message\", (event) => {\r\n        console.log(`Received back: ${array[10]}`);\r\n    });\r\n\r\n    myWorker.postMessage(sab);*/\r\n\r\n    start();\r\n\r\n    //startMaps();\r\n\r\n    // const button = document.createElement(\"button\");\r\n    // button.textContent = \"Get bin\";\r\n    // document.body.insertAdjacentElement(\"beforebegin\", button);\r\n    // button.onclick = () => {\r\n    //     const anchor = document.createElement(\"a\");\r\n    //     const myData = new Float32Array([32.20, 1]);\r\n    //     const myBlob = new Blob([myData]);\r\n    //     anchor.download = \"dat.bin\";\r\n    //     anchor.href = URL.createObjectURL(myBlob);\r\n    //     anchor.click();\r\n    // };\r\n    \r\n    // const input = document.createElement(\"input\");\r\n    // input.type = \"file\";\r\n    // input.oninput = () => {\r\n    //     if (input.files) {\r\n    //         Array.from(input.files).forEach((file) => {\r\n    //             file.arrayBuffer().then((arr) => {\r\n    //                 console.log(Array.from(new Float32Array(arr)).map(val => val.toFixed(3)));\r\n    //             });\r\n    //         });\r\n    //     }\r\n    // };\r\n    // document.body.insertAdjacentElement(\"beforebegin\", input);\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Injector","constructor","args","this","_defaultCtor","defaultCtor","_onDefaultOverride","onDefaultOverride","_constructors","Map","overrideDefaultCtor","forceQualifier","qualifier","_forcedQualifier","unforceQualifier","getConstructor","qualifierValue","Error","inject","Array","from","register","has","set","Vector2Base","values","array","Float32Array","x","y","setValues","equals","vec","v","copy","clone","setUnit","setZeros","add","addScalar","k","sub","lerp","t","clamp","min","max","l","g","Math","multScalar","cross","a","b","dot","length","sqrt","lengthSquared","dist","dx","dy","distSquared","normalize","lenSq","len","Number","EPSILON","negate","mult","arg0","Vector2","m","addScaled","writeIntoArray","out","offset","readFromArray","arr","copyAndSub","vecA","vecB","ctor","MathError","name","Vector3Base","toString","join","static","vectorA","vectorB","temp","Vector3","acos","z","vector","to","scale","t0","t1","t2","distance","dz","hypot","distanceSquared","toSpherical","center","thisArray","centerArray","roh","theta","phi","atan2","toCartesian","sin","cos","mat","copyAndCross","iterator","i","next","done","undefined","Key","Space","origin","right","left","up","down","forward","backward","KEYS_COUNT","keys","KeyModifier","MouseButton","MOUSE_BUTTONS_COUNT","MOUSE_BUTTONS_INDICES","freeze","reduce","map","button","index","assign","KEYS_INDICES","Input","keyFlags","fill","mouseFlags","pointerPosition","wheelDelta","canvas","canvasRectangle","initialize","getBoundingClientRect","addEventListener","getCanvasRect","rect","clear","handleEvent","event","eventIndex","type","canvasRect","clientX","clientY","top","deltaY","getKey","getKeyUp","getKeyDown","getMouseButton","getPointerPosition","getPointerScreenPosition","positionAray","width","height","getWheelDelta","getMouseButtonDown","getMouseButtonUp","PoolAutoExtendPolicy","StackPool","policy","_ctor","_autoExtendPolicy","AUTO_EXTEND_ONE","_autoExtendTicks","autoExtendPolicy","autoExtend","extend","AUTO_EXTEND_POW2","pow","options","super","_objects","size","_top","acquire","count","target","slice","release","console","warn","push","PI","_bytes","ArrayBuffer","BYTES_PER_ELEMENT","_floatView","_intView","Uint32Array","Matrix3Base","checkArray","row1","row","row2","row3","col1","col","col2","col3","m11","val","m12","m13","m21","m22","m23","m31","m32","m33","getValues","other","setIdentity","det","trace","transpose","invert","t11","t12","t13","t21","t22","t23","t31","t32","t33","d","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","angle","setRotationX","cosAngle","sinAngle","setRotationY","setRotationZ","solve","bx","by","bz","rx","ry","rz","solve2","Matrix3","QuaternionBase","_array","_checkArray","w","pitch","sinPitch","abs","sign","asin","yaw","sinYawCosPitch","cosYawCosPitch","roll","sinRollCosPitch","cosRollCosPitch","axis","setAxisAngle","setEuler","quat","q","quatArray","getAxis","outArray","den","halfx","qSqrt","getMatrix3","matrix","s","xs","ys","zs","wx","wy","wz","xx","xy","xz","yy","yz","zz","getMatrix4","rotate","vectorArray","vx","vy","vz","qx","qy","qz","qw","tx","ty","tz","tw","toVector","cosYaw","sinYaw","cosPitch","cosRoll","sinRoll","axisLength","halfSin","axisArray","setMatrix","matrixArray","lookAt","source","dest","Quaternion","setVectors","crossArray","fromLength","toLength","angleTo","rotation","rotateTowards","slerp","conjugate","ax","ay","az","aw","bw","scalar","fromArray","toArray","cosHalfTheta","halfTheta","sinHalfTheta","trunc","ratioA","ratioB","copyIntoArray","Matrix4Base","m41","m42","m43","m14","m24","m34","m44","getRotation","setTRS","translation","scaling","rotationArray","translationArray","scalingArray","x2","y2","z2","sx","sy","sz","setRotation","quaternion","quaternionArray","matArray","det2_01_01","det2_01_02","det2_01_03","det2_01_12","det2_01_13","det2_01_23","det3_201_012","det3_201_013","det3_201_023","A","a41","a42","a43","a14","a24","a34","a44","o00","o01","o02","o03","o10","o11","o12","o13","o20","o21","o22","o23","o30","o31","o32","o33","t00","t01","t02","t03","t04","t05","t06","t07","t08","t09","t10","invDet","B","b41","b42","b43","b14","b24","b34","b44","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","bX","bY","bZ","bW","solve3","setTranslation","vecArray","translate","t3","t4","rotateX","t5","t6","t7","t8","rotateY","sinAngles","rotateZ","c","C","t9","setScaling","eye","eyeArray","upArray","targetArray","e0","e1","e2","u0","u1","u2","x0","x1","y0","y1","z0","z1","transformPoint","point","pointArray","transformDirection","direction","directionArray","transformNormal","normal","normalArray","thisInvArray","fov","aspect","zNear","zFar","setPerspective","tan","rangeInv","bottom","near","far","setOrthographic","setFrustrum","invWidth","invHeight","invDepth","Matrix4","Vector3Pool","_buffer","_bufferViews","subarray","_extensions","UUIDGenerator","_count","newUUID","tempMatrix","TransformBase","owner","uuid","localArray","localMatrix","_hasChanged","getMatrix","getLocalMatrix","thisLocalArray","setLocalMatrix","getRight","getLeft","getUp","getDown","getForward","getBackward","hasChanged","getTranslation","getScaling","transformVector","thisPosition","Transform","PlaneBase","constant","_normal","_constant","setFromNormalAndConstant","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","plane","point1","point2","point3","distanceToPoint","normalized","inverseNormalLength","Plane","FrustrumBase","nearPlane","farPlane","topPlane","bottomPlane","leftPlane","rightPlane","frustrum","setFromPerspectiveMatrix","intersectsSphere","sphere","radius","intersectsBox","box","intersects","boxMax","boxMin","containsPoint","BufferDataUsage","BufferTarget","ShaderType","DrawMode","DataComponentType","AttributeDataType","ElementArrayDataType","Frustrum","PerspectiveCamera","transform","projection","_projection","_frustrum","getFront","view","viewProjection","isViewing","mesh","updateFrustrum","perspective","WebGLProgramUtilities","gl","internalShader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","shaderInfoLog","getShaderInfoLog","deleteShader","shader","isShader","properties","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","internalProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","programInfoLog","getProgramInfoLog","vsInfoLog","fsInfoLog","deleteProgram","program","isProgram","getParameter","CURRENT_PROGRAM","useProgram","WebGLVertexArrayUtilities","VEC2","VEC3","VEC4","FLOAT","BYTE","UNSIGNED_BYTE","Uint8Array","SHORT","Int16Array","UNSIGNED_SHORT","Uint16Array","INT","Int32Array","UNSIGNED_INT","Int8Array","indices","internalBuffer","createBuffer","usage","STATIC_READ","ELEMENT_ARRAY_BUFFER","indexType","getElementArrayBufferType","bindBuffer","bufferData","attributes","interleaved","DEFAULT_USAGE","attributesEntries","entries","byteLength","_","attribute","ARRAY_BUFFER","dataBuffer","byteStride","vertexAttributes","forEach","componentType","stride","getComponentTypeArrayConstructor","getDataTypeNumComponents","bufferSlices","constantValue","byteOffset","attributeName","divisor","getArrayComponentType","location","getAttribLocation","numComponents","vertexAttribPointer","vertexAttribDivisor","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","bytesPerElement","bufferArray","arrayStrideOffset","arraySliceIndex","enableVertexAttribArray","vertexArray","elementsCount","attributeRecord","verticesBuffers","verticesBuffer","find","ARRAY_BUFFER_BINDING","srcOffset","srcLength","dstOffset","slices","sliceOffset","bufferSubData","buffer","data","dstByteOffset","vertexBuffers","elementIndices","elementBuffer","elementBufferOrBufferProperties","instanceCount","drawMode","TRIANGLES","internalVertexArray","createVertexArray","bindVertexArray","buffer_i","fromEntries","filter","attribute_i","setter","createVertexArrayBuffer","createVertexElementArrayBuffer","isVertexArray","deleteVertexArray","VERTEX_ARRAY_BINDING","drawElementsInstanced","drawElements","drawArraysInstanced","drawArrays","GeometryAttributes","GeometryBuffer","attributesBuffers","bufferByteLength","bufferArrayConstructor","toBlob","bufferLength","indicesData","indicesLength","headerData","TextEncoder","encode","JSON","stringify","headerLength","blobDataView","blobDataViewBuffer","blobDataHeaderView","blobDataHeaderLength","Blob","blob","arrayBuffer","blobDataHeaderByteLength","arrayConstructor","header","parse","TextDecoder","decode","geometryBuffer","getAttribute","attributeArrayConstructor","attributeArray","bufferStride","bufferArraySliceIndex","corners","FramebufferStatus","FramebufferTextureTarget","FramebufferAttachment","RenderbufferPixelFormat","BoundingBox","boxes","positiveInfinity","POSITIVE_INFINITY","negativeInfinity","NEGATIVE_INFINITY","minX","minY","minZ","maxX","maxY","maxZ","box_i","boxMinX","boxMinY","boxMinZ","boxMaxX","boxMaxZ","boxMaxY","hits","otherMin","otherMax","otherMinX","otherMinY","otherMinZ","otherMaxX","otherMaxY","otherMaxZ","corner_i","GeometryBuilder","halfEdges","vertices","faces","create","structuredClone","addTriangleFace","v0","v1","v2","addFace","addQuadFace","v3","addVertex","position","vertex","halfEdgeID","_halfEdges","_vertices","_faces","faceVerticesCount","error","face","faceID","sourceID","targetID","firstHalfEdgeID","halfEdge","previousHalfEdgeID","existingHalfEdge","vertexFacesIterator","face_i","faceHalfEdgesIterator","halfEdge_i","targetID_i","prevID","prevID_i","twinID","nextID","twinHalfEdge","indexOf","linesArray","flatMap","faceVertices","faceVerticesIterator","vertex_i","verticesArray","tangentsArray","faceUvs","uv","uv0","uv1","uv2","edge1","v1_i","edge2","deltaUV1","uv1_i","deltaUV2","f","tangent","edge1_i","tangent_i","normalsArray","ni","pi","normal_i","uvsArray","flat","indicesArray","verticesCount","concat","boundingBox","FaceHalfEdgesIterator","FaceVerticesIterator","VertexFacesIterator","geometry","reset","current","nextHalfEdgeID","faceHalfEdgeID","firstVertexID","vertexID","vertexHalfEdgeID","CubeGeometry","toBuilder","depth","widthSegments","heightSegments","depthSegments","builder","floor","uvs","u","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","iy","ix","indicesCount","vi1","vi2","vi3","ui1","ui2","ui3","uv3","QuadGeometry","WebGLFramebufferUtilities","internalFramebuffer","createFramebuffer","props","internalRenderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","samples","renderbufferStorageMultisample","internalFormat","renderbufferStorage","framebuffer","FRAMEBUFFER_BINDING","bindFramebuffer","FRAMEBUFFER","attachments","framebufferTexture2D","attachment","textureTarget","texture","internalTexture","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","framebufferRenderbuffer","renderbuffer","readFramebuffer","drawFramebuffer","readRectangle","drawRectangle","mask","READ_FRAMEBUFFER_BINDING","internalReadFramebuffer","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER_BINDING","internalDrawFramebuffer","DRAW_FRAMEBUFFER","blitFramebuffer","format","pixels","readPixels","isFramebuffer","deleteFramebuffer","isRenderbuffer","deleteRenderbuffer","TexturePixelFormat","TextureInternalPixelFormat","TexturePixelType","TextureParameter","TextureTarget","TextureMagFilter","TextureMinFilter","TextureCompareMode","TextureWrapMode","TextureCompareFunction","UniformType","UniformDataType","WebGLTextureUtilities","createTexture","unit","subimages","lod","border","ACTIVE_TEXTURE","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texImage2D","subimage_i","xoffset","yoffset","texSubImage2D","TEXTURE_CUBE_MAP","xPos","xNeg","yPos","yNeg","zPos","zNeg","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_2D_ARRAY","texImage3D","zoffset","texSubImage3D","generateMipmap","mag","wrapS","wrapT","wrapR","baseMipmapLevel","maxMipmapLevel","compareFunction","compareMode","minLod","maxLod","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","texParameterf","TEXTURE_MIN_LOD","TEXTURE_MAX_LOD","alignment","pixelStorei","UNPACK_ALIGNMENT","isTexture","deleteTexture","delete","WebGLUniformUtilities","uniformValue","of","uniform","uniformType","num","uniform1f","uniform1ui","BOOL","uniform1i","INT_SAMPLER_2D","INT_SAMPLER_2D_ARRAY","INT_SAMPLER_3D","INT_SAMPLER_CUBE","SAMPLER_2D","SAMPLER_3D","SAMPLER_CUBE","SAMPLER_2D_SHADOW","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","tex","FLOAT_VEC2","isArray","list","uniform2fv","BOOL_VEC2","INT_VEC2","uniform2iv","UNSIGNED_INT_VEC2","uniform2uiv","FLOAT_VEC3","uniform3fv","BOOL_VEC3","INT_VEC3","uniform3iv","UNSIGNED_INT_VEC3","uniform3uiv","FLOAT_VEC4","uniform4fv","BOOL_VEC4","INT_VEC4","uniform4iv","UNSIGNED_INT_VEC4","uniform4uiv","FLOAT_MAT2","uniformMatrix2fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","FLOAT_MAT2x3","uniformMatrix2x3fv","FLOAT_MAT2x4","uniformMatrix2x4fv","FLOAT_MAT3x2","uniformMatrix3x2fv","FLOAT_MAT3x4","uniformMatrix3x4fv","FLOAT_MAT4x2","uniformMatrix4x2fv","FLOAT_MAT4x3","uniformMatrix4x3fv","uniformsNames","uniformIndices","getUniformIndices","activeUniforms","ACTIVE_UNIFORMS","validUniformIndices","index_i","isValid","setters","getActiveUniform","getUniformLocation","getUniformSetter","StencilAction","BufferMask","TestFunction","BlendingMode","BlendingEquation","Capabilities","Face","WindingOrder","HintTarget","HintMode","WebGLUniformBlockUtilities","blockIndex","getUniformBlockIndex","INVALID_INDEX","blockSize","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","layout","blockUniformsIndices","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","getActiveUniforms","UNIFORM_OFFSET","uniformOffset_i","uniformIndex","uniformInfo","bind","UNIFORM_BUFFER","bindingPoint","lastBindingPoint","blocks","offsetAlignment","UNIFORM_BUFFER_OFFSET_ALIGNMENT","block","ceil","createUniformBuffer","rangeOffset","rangeSize","rangedUniformBuffer","uniforms","UNIFORM_BUFFER_BINDING","uniformName","asArrayBufferView","uniformBlockBinding","bindBufferRange","bindBufferBase","WebGLPacketUtilities","textures","_textures","packet","vertexArrayProperties","uniformsProperties","uniformBlocks","uniformBlocksProperties","uniformBuffers","uniformBuffersProperties","getUniformsListSetter","setUniformsListValues","uniformBlocksPropertiesEntries","uniformBuffersMaxIndex","uniformBlockProperty","uniformBuffersProperty_i","relatedBlockProperties","relatedBlocks","blockName","createUniformBlock","relatedBlocksCount","block_i","bindUniformBuffer","rangedBuffers","createRangedUniformBuffers","rangedBuffer","setUniformBufferValues","relatedBlock","uniformBlockProperties","vertexArrayValues","uniformsValues","uniformsBlocksValues","setVertexArrayValues","uniformBlock","drawVertexArray","WebGLRendererUtilities","mode","hint","winding","frontFace","scissor","viewport","color","clearColor","func","depthFunc","equ","blendEquation","srcFunc","dstFunc","blendFunc","srcAlpha","dstAlpha","blendFuncSeparate","ref","stencilFuncSeparate","fail","zFail","zPass","stencilOpSeparate","stencilMaskSeparate","red","green","blue","alpha","colorMask","capability","enable","disable","VIEWPORT","MAX_SAMPLES","ColorBase","r","colors","BLACK","RED","GREEN","BLUE","WHITE","Color","async","start","template","document","createElement","innerHTML","body","insertBefore","content","firstChild","frameRequest","render","fps","paused","playPause","getElementById","onclick","textContent","fpsElement","canvasWidth","canvasHeight","style","getContext","setUnpackAlignment","phongVert","fetch","then","resp","text","phongFrag","phongProgram","skyboxVert","skyboxFrag","skyboxProgram","textureVert","textureFrag","texProgram","basicVert","basicFrag","basicProgram","depthVert","depthFrag","depthProgram","linesVertex","linesFragment","linesProgram","fetchImage","url","ok","Promise","resolve","img","Image","onload","src","albedoMapImg","normalMapImg","displacementMapImg","skyboxXPosImg","skyboxXNegImg","skyboxYPosImg","skyboxYNegImg","skyboxZPosImg","skyboxZNegImg","createTextures","albedoMap","RGB","NEAREST","normalMap","RGB8","LINEAR_MIPMAP_LINEAR","LINEAR","displacementMap","RGBA","RGBA8","skybox","fbColorTex","CLAMP_TO_EDGE","depthTex","DEPTH_COMPONENT","DEPTH_COMPONENT24","cubeGeometry","quadGeometryBuilder","cube","camera","lightTransform","viewDirectionProjectionInverse","identity","cubeGeometryBuilder","cubeVerticesArray","cubeIndicesArray","cubeNormalsArray","cubeUVsArray","cubeTangentsArray","cubeLinesArray","cubeGeometryBuffer","a_position","a_tangent","a_normal","a_uv","cubeVertices","cubeIndices","cubeNormals","cubeUVs","cubeTangents","cubeColors","phongCubePacketProperties","DYNAMIC_READ","a_color","viewBlock","u_view","u_projection","modelBlock","lightsBlock","phongBlock","u_albedoMap","u_normalMap","u_displacementMap","phongCubePacket","createPacket","setVertexArrayBufferData","setUniformBufferData","linesProperties","LINES","u_color","basicPacketProperties","basicModelBlock","u_model","quadIndices","quadVertices","quadUVs","quadWorld","skyboxPacketProperties","u_world","u_viewDirectionProjectionInverse","u_skybox","depthPacketProperties","u_tex","texPacketProperties","skyboxPacket","texPacket","maxSamples","getMaxSamples","attachRenderbuffer","DEPTH_ATTACHMENT","COLOR_ATTACHMENT0","postFramebuffer","attachTexture","DEPTH_TEST","CULL_FACE","BLEND","blendFunction","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","lastFrameTime","deltaTime","fromAxisAngle","unbindFramebuffer","cameraControl","params","rotationSpeed","translationSpeed","update","cameraTransform","cameraPosition","cameraForward","cameraForwardArray","lastPointerPosition","cameraUpSign","Z","ARROW_UP","Q","ARROW_LEFT","S","ARROW_DOWN","D","ARROW_RIGHT","RIGHT","newPointerPosition","newTheta","frameTime","toFixed","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","depthFunction","LEQUAL","drawPacket","LESS","setPacketValues","blit","requestAnimationFrame","launchScene","e","main"],"sourceRoot":""}