{"version":3,"file":"main.js","mappings":"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","sources":["webpack://main/webpack/bootstrap","webpack://main/webpack/runtime/define property getters","webpack://main/webpack/runtime/hasOwnProperty shorthand","webpack://main/webpack/runtime/make namespace object","webpack://main/./src/engine/libs/patterns/injectors/Injector.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector2.ts","webpack://main/./src/engine/libs/maths/MathError.ts","webpack://main/./src/engine/libs/maths/algebra/vectors/Vector3.ts","webpack://main/./src/engine/core/input/Input.ts","webpack://main/./src/engine/libs/maths/geometry/space/Space.ts","webpack://main/./src/engine/core/controls/FreeCameraControl.ts","webpack://main/./src/engine/libs/patterns/pools/Pool.ts","webpack://main/./src/engine/libs/patterns/pools/StackPool.ts","webpack://main/./src/engine/libs/maths/Snippets.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix3.ts","webpack://main/./src/engine/libs/maths/algebra/quaternions/Quaternion.ts","webpack://main/./src/engine/libs/maths/algebra/matrices/Matrix4.ts","webpack://main/./src/engine/libs/maths/extensions/pools/Vector3Pools.ts","webpack://main/./src/engine/libs/maths/statistics/random/UUIDGenerator.ts","webpack://main/./src/engine/core/general/Transform.ts","webpack://main/./src/engine/libs/maths/geometry/primitives/Plane.ts","webpack://main/./src/engine/libs/physics/collisions/Frustrum.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLBufferUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLProgramUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLVertexArrayUtilities.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/PerspectiveCamera.ts","webpack://main/./src/engine/core/rendering/scenes/cameras/Camera.ts","webpack://main/./src/engine/core/rendering/scenes/objects/Object3D.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/GeometryBuffer.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/Geometry.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/bounding/BoundingBox.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/geometry.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLFramebufferUtilities.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/GeometryBuilder.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/lib/polyhedron/CubeGeometry.ts","webpack://main/./src/engine/core/rendering/scenes/geometries/lib/QuadGeometry.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLTextureUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLRendererUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLUniformBlockUtilities.ts","webpack://main/./src/engine/core/rendering/webgl/WebGLPacketUtilities.ts","webpack://main/./src/engine/libs/graphics/colors/Color.ts","webpack://main/./src/samples/scenes/SimpleScene.ts","webpack://main/./main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { Injector };\r\nexport { InjectorBase };\r\nexport { Inject };\r\nexport { Register };\r\n\r\ninterface InjectorConstructor {\r\n    readonly prototype: Injector;\r\n    new<C extends Constructor<any>>(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}): Injector<C>;\r\n}\r\n\r\ninterface Injector<C extends Constructor<any> = Constructor<any>> {\r\n    readonly defaultCtor: C;\r\n    overrideDefaultCtor(constructor: C): void;\r\n    forceQualifier(qualifier: string): void;\r\n    unforceQualifier(): void;\r\n    getConstructor(qualifier?: string): C;\r\n    inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C>;\r\n    register(constructor: C, qualifier: string): void; \r\n}\r\n\r\nclass InjectorBase<C extends Constructor<any> = Constructor<any>> implements Injector<C> {\r\n    private _forcedQualifier?: string;\r\n    private _constructors: Map<string, C>;\r\n    private _defaultCtor: C;\r\n    private _onDefaultOverride: (constructor: C) => void;\r\n\r\n    get defaultCtor(): C {\r\n        return this._defaultCtor;\r\n    }\r\n\r\n    overrideDefaultCtor(constructor: C): void {\r\n        this._defaultCtor = constructor;\r\n        this._onDefaultOverride(constructor);\r\n    }\r\n\r\n    constructor(args: {defaultCtor: C, onDefaultOverride: (constructor: C) => void}) {\r\n        this._defaultCtor = args.defaultCtor;\r\n        this._onDefaultOverride = args.onDefaultOverride;\r\n        this._constructors = new Map();\r\n    }\r\n\r\n    forceQualifier(qualifier: string): void {\r\n        this._forcedQualifier = qualifier;\r\n    }\r\n\r\n    unforceQualifier(): void {\r\n        delete this._forcedQualifier;\r\n    }\r\n\r\n    getConstructor(qualifier?: string): C {\r\n        const qualifierValue = this._forcedQualifier || qualifier;\r\n        if (typeof qualifierValue === 'undefined') {\r\n            return this._defaultCtor;\r\n        }\r\n        const constructor = this._constructors.get(qualifierValue);\r\n        if (typeof constructor === 'undefined') {\r\n            throw new Error(`No constructor for qualifier ${qualifierValue}`);\r\n        }\r\n        return constructor;\r\n    }\r\n\r\n    inject(args?: { qualifier?: string, args?: ConstructorParameters<C> }): InstanceType<C> {\r\n        const constructor = this.getConstructor(args?.qualifier);\r\n        if (args?.args) {\r\n            const parameters = Array.from(args.args);\r\n            return new constructor(...parameters);\r\n        }\r\n        return new constructor();\r\n    }\r\n\r\n    register(constructor: C, qualifier: string): void {\r\n        if (!this._constructors.has(qualifier)) {\r\n            this._constructors.set(qualifier, constructor);\r\n        }\r\n    }\r\n}\r\n\r\nconst Injector: InjectorConstructor = InjectorBase;\r\n\r\ntype UnwrappedInjectorConstructor<I> = I extends Injector<infer C> ? C : never;\r\n\r\ninterface RegisterDecorator {\r\n    <I extends Injector>(injector: I, qualifier?: string): <C extends UnwrappedInjectorConstructor<I>>(ctor: C) => C;\r\n}\r\n\r\nconst Register: RegisterDecorator = function<\r\n    I extends Injector\r\n>(injector: I, qualifier?: string): any {\r\n    return <C extends UnwrappedInjectorConstructor<I>>(\r\n        ctor: C\r\n    ) => {\r\n        if (typeof qualifier !== 'undefined') {\r\n            injector.register(ctor, qualifier);\r\n        }\r\n        injector.register(ctor, ctor.name);\r\n        return ctor;\r\n    }\r\n}\r\n\r\nfunction Inject<\r\n    I extends Injector,\r\n    P extends ConstructorParameters<UnwrappedInjectorConstructor<I>>,\r\n>(injector: I, options?: {qualifier?: string, args?: P}): any {\r\n    return (\r\n        target: any,\r\n        propertyKey: string\r\n    ) => {\r\n        const instance = injector.inject(options);\r\n\r\n        Object.defineProperty(target, propertyKey, {\r\n            value: instance\r\n        });\r\n    }\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Matrix2 } from \"../matrices/Matrix2\";\r\n\r\nexport { Vector2Injector };\r\nexport { Vector2 };\r\nexport { Vector2Base };\r\n\r\nexport type Vector2Values = [number, ...number[]] & { length: 2 };\r\n\r\ninterface Vector2Constructor {\r\n\treadonly prototype: Vector2;\r\n\tnew(): Vector2;\r\n\tnew(values: Vector2Values): Vector2;\r\n\tnew(values?: Vector2Values): Vector2;\r\n}\r\n\r\ninterface Vector2 {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector2Values;\r\n\tx: number;\r\n\ty: number;\r\n\tsetValues(x: number, y: number): this;\r\n\tcopy(vec: Vector2): this;\r\n\tclone(): this;\r\n\tequals(vec: Vector2): boolean;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\tadd(vec: Vector2): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector2): this;\r\n\tlerp(vec: Vector2, t: number): this;\r\n\tclamp(min: Vector2, max: Vector2): this;\r\n\tmultScalar(k: number): this;\r\n\tcross(vec: Vector2): number;\r\n\tdot(vec: Vector2): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdist(vec: Vector2): number;\r\n\tdistSquared(vec: Vector2): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector2): this;\r\n\tmult(mat: Matrix2): this\r\n\taddScaled(vec: Vector2, k: number): this;\r\n\tcopyAndSub(vecA: Vector2, vecB: Vector2): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector2Base {\r\n\tarray: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(values: Vector2Values)\r\n\tconstructor(values?: Vector2Values) {\r\n\t\tthis.array = (values) ? new Float32Array([\r\n\t\t\tvalues[0], values[1]\r\n\t\t]) : new Float32Array([0, 0]);\r\n\t}\r\n\r\n\tget values(): Vector2Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1]\r\n\t\t];\r\n\t}\r\n\r\n\tset values(values: Vector2Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tsetValues(x: number, y: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = x;\r\n\t\to[1] = y;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tequals(vec: Vector2Base): boolean {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\t\t\r\n\t\treturn v[0] === o[0]\r\n\t\t\t&& v[1] === o[1];\r\n\t}\r\n\r\n\tcopy(vec: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\to[0] = v[0];\r\n\t\to[1] = v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new Vector2Base(this.values) as this;\r\n\t}\r\n\r\n\tsetUnit(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 1;\r\n\t\to[1] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetZeros(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = 0;\r\n\t\to[1] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0];\r\n\t\to[1] = o[1] + v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + k;\r\n\t\to[1] = o[1] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(vec: Vector2Base): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] - v[0];\r\n\t\to[1] = o[1] - v[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(vec: Vector2Base, t: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = t * (v[0] - o[0]);\r\n\t\to[1] = t * (v[1] - o[1]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min: Vector2Base, max: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst l = min.array;\r\n\t\tconst g = max.array;\r\n\r\n\t\to[0] = Math.min(g[0], Math.min(o[0], l[0])),\r\n\t\to[1] = Math.min(g[1], Math.min(o[1], l[1]))\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmultScalar(k: number): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] * k;\r\n\t\to[1] = o[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcross(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn a[0] * b[1] - a[1] * b[0];\r\n\t}\r\n\r\n\tdot(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]);\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst v = this.array;\r\n\r\n\t\treturn v[0] * v[0] + v[1] * v[1];\r\n\t}\r\n\r\n\tdist(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn Math.sqrt(dx * dx + dy * dy);\r\n\t}\r\n\r\n\tdistSquared(vec: Vector2Base): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\r\n\t\treturn dx * dx + dy * dy;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\tconst lenSq = o[0] * o[0] + o[1] * o[1];\r\n\t\tconst len = Math.sqrt(lenSq);\r\n\t\tif (len > Number.EPSILON) {\r\n\t\t\to[0] = o[0] / len;\r\n\t\t\to[1] = o[1] / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\to[0] = 0;\r\n\t\t\to[1] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate(): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = -o[0];\r\n\t\to[1] = -o[1];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(mat: Matrix2): this\r\n\tmult(vec: Vector2): this\r\n\tmult(arg0: Matrix2 | Vector2): this {\r\n\t\tif (arg0 instanceof Vector2) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tthis.array[0] = this.array[0] * v[0];\r\n\t\t\tthis.array[1] = this.array[1] * v[1];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst x = this.x;\r\n\t\t\tconst y = this.y;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[2];\r\n\t\t\tthis.y = x * m[1] + y * m[3];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\taddScaled(vec: Vector2Base, k: number): this {\r\n\t\tconst v = vec.array;\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = o[0] + v[0] * k;\r\n\t\to[1] = o[1] + v[1] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n    }\r\n    \r\n    readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[0] = arr[offset    ];\r\n\t\to[1] = arr[offset + 1];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tcopyAndSub(vecA: Vector2Base, vecB: Vector2Base): this {\r\n\t\tconst o = this.array;\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\to[0] = a[0] - b[0];\r\n\t\to[1] = a[1] - b[1];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nvar Vector2: Vector2Constructor = Vector2Base;\r\nconst Vector2Injector: Injector<Vector2Constructor> = new Injector({\r\n\tdefaultCtor: Vector2Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector2Constructor) => {\r\n\t\t\tVector2 = ctor;\r\n\t\t}\r\n});","export class MathError extends Error {\r\n    name = 'MathError';\r\n}","import { Matrix3 } from \"engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\n\r\nexport { Vector3Constructor };\r\nexport { Vector3 };\r\nexport { Vector3Base };\r\nexport { Vector3Injector };\r\n\r\nexport type Vector3Values = [number, ...number[]] & { length: 3 };\r\n\r\ninterface Vector3Constructor {\r\n\treadonly prototype: Vector3;\r\n\tnew(): Vector3;\r\n\tnew(a: number, y: number, z: number): Vector3;\r\n  \tnew(array: ArrayLike<number>): Vector3;\r\n\tangle(vectorA: Vector3, vectorB: Vector3): number;\r\n}\r\n\r\ninterface Vector3 extends Iterable<number> {\r\n\treadonly array: Float32Array;\r\n\tvalues: Vector3Values;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\ttoString(): string;\r\n\tsetValues(\r\n\t\tx: number,\r\n\t\ty: number,\r\n\t\tz: number\r\n\t): this;\r\n\tequals(vec: Vector3): boolean;\r\n\tcopy(vec: Vector3): this;\r\n\tclone(): this;\r\n\tsetUnit(): this;\r\n\tsetZeros(): this;\r\n\ttoCartesian(center: Vector3): this;\r\n\ttoSpherical(center: Vector3): this;\r\n\tadd(vec: Vector3): this;\r\n\taddScalar(k: number): this;\r\n\tsub(vec: Vector3): this;\r\n\tlerp(from: Vector3, to: Vector3, t: number): this;\r\n\tmax(vecB: Vector3): this;\r\n\tmin(vecB: Vector3): this;\r\n\tclamp(min: Vector3, max: Vector3): this;\r\n\tscale(k: number): this;\r\n\tcross(vec: Vector3): this;\r\n\tdot(vec: Vector3): number;\r\n\tlength(): number;\r\n\tlengthSquared(): number;\r\n\tdistance(vec: Vector3): number;\r\n\tdistanceSquared(vec: Vector3): number;\r\n\tnormalize(): this;\r\n\tnegate(): this;\r\n\tmult(vec: Vector3): this;\r\n\tmult(mat: Matrix3): this;\r\n\taddScaled(vec: Vector3, k: number): this;\r\n\tcopyAndSub(vecA: Vector3, vecB: Vector3): this;\r\n\tcopyAndCross(vecA: Vector3, vecB: Vector3): this;\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n}\r\n\r\nclass Vector3Base {\r\n\treadonly array: Float32Array;\r\n\r\n\tconstructor()\r\n\tconstructor(array: ArrayLike<number>)\r\n\t  constructor(\r\n\t  x: number, y: number, z: number\r\n\t)\r\n\tconstructor(\r\n\t  ...args: any[]\r\n\t) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([args[0], args[2], args[1]]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tconst array = args[0];\r\n\t\t\tif (array.length < 3) {\r\n\t\t\t\tthrow new MathError(`Array must be of length 3 at least.`);\r\n\t\t\t}\r\n\t\t\tif (array instanceof Float32Array) {\r\n\t\t\t\tthis.array = array;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.array = new Float32Array(array);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([0, 0, 0]);\r\n\t\t}\r\n\t}\r\n\r\n\ttoString(): string {\r\n\t\treturn `Vector3([${Array.from(this.array).join(\", \")}])`;\r\n\t}\r\n\r\n\tstatic angle(vectorA: Vector3, vectorB: Vector3): number {\r\n\t\tconst temp = new Vector3();\r\n\t\treturn Math.acos(temp.copy(vectorA).dot(vectorB) / (Math.sqrt(temp.copy(vectorA).dot(vectorA)) * Math.sqrt(temp.copy(vectorB).dot(vectorB))));\r\n\t}\r\n\r\n\tget values(): Vector3Values {\r\n\t\treturn [\r\n\t\t\tthis.array[0],\r\n\t\t\tthis.array[1],\r\n\t\t\tthis.array[2]\r\n\t\t];\r\n\t}\r\n\r\n\tset values(values: Vector3Values) {\r\n\t\tthis.array[0] = values[0];\r\n\t\tthis.array[1] = values[1];\r\n\t\tthis.array[2] = values[2];\r\n\t}\r\n\r\n\tget x() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset x(x: number) {\r\n\t\tthis.array[0] = x;\r\n\t}\r\n\r\n\tget y() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset y(y: number) {\r\n\t\tthis.array[1] = y;\r\n\t}\r\n\r\n\tget z() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n\tset z(z: number) {\r\n\t\tthis.array[2] = z;\r\n\t}\r\n\r\n\tsetValues(x: number, y: number, z: number): this {\r\n\t\tthis.array[0] = x;\r\n\t\tthis.array[1] = y;\r\n\t\tthis.array[2] = z;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcopy(vec: Vector3): this {\r\n\t\tconst v = vec.array;\r\n\r\n\t\tthis.array[0] = v[0];\r\n\t\tthis.array[1] = v[1];\r\n\t\tthis.array[2] = v[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new Vector3Base(this.values) as this;\r\n\t}\r\n\r\n\tequals(vector: Vector3): boolean {\r\n\t\treturn vector.array[0] === this.array[0]\r\n\t\t\t&& vector.array[1] === this.array[1]\r\n\t\t\t&& vector.array[2] === this.array[2];\r\n\t}\r\n\r\n\tsetZeros(): this {\r\n\t\tthis.array[0] = 0;\r\n\t\tthis.array[1] = 0;\r\n\t\tthis.array[2] = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetUnit(): this {\r\n\t\tthis.array[0] = 1;\r\n\t\tthis.array[1] = 1;\r\n\t\tthis.array[2] = 1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0];\r\n\t\tthis.array[1] = this.array[1] + vector.array[1];\r\n\t\tthis.array[2] = this.array[2] + vector.array[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\taddScalar(k: number): this {\r\n\t\tthis.array[0] = this.array[0] + k;\r\n\t\tthis.array[1] = this.array[1] + k;\r\n\t\tthis.array[2] = this.array[2] + k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(vector: Vector3): this {\r\n\t\tthis.array[0] = this.array[0] - vector.array[0];\r\n\t\tthis.array[1] = this.array[1] - vector.array[1];\r\n\t\tthis.array[2] = this.array[2] - vector.array[2];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(from: Vector3, to: Vector3, t: number): this {\r\n\t\t\r\n\t\tthis.array[0] = (1 - t) * from.x + t * (to.x - from.x);\r\n\t\tthis.array[1] = (1 - t) * from.y + t * (to.y - from.y);\r\n\t\tthis.array[2] = (1 - t) * from.z + t * (to.z - from.z);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmax(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.max(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.max(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.max(this.array[2], vectorB.array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmin(vectorB: Vector3): this {\r\n\t\tthis.array[0] = Math.min(this.array[0], vectorB.array[0]);\r\n\t\tthis.array[1] = Math.min(this.array[1], vectorB.array[1]);\r\n\t\tthis.array[2] = Math.min(this.array[2], vectorB.array[2]);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclamp(min: Vector3, max: Vector3): this {\r\n\t\tthis.array[0] = Math.min(max.array[0], Math.max(this.array[0], min.array[0]));\r\n\t\tthis.array[1] = Math.min(max.array[1], Math.max(this.array[1], min.array[1]));\r\n\t\tthis.array[2] = Math.min(max.array[2], Math.max(this.array[2], min.array[2]));\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tscale(k: number): this {\r\n\t\tthis.array[0] = this.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcross(vector: Vector3): this {\r\n\t\tconst t0 = this.array[1] * vector.array[2] - this.array[2] * vector.array[1];\r\n\t\tconst t1 = this.array[2] * vector.array[0] - this.array[0] * vector.array[2];\r\n\t\tconst t2 = this.array[0] * vector.array[1] - this.array[1] * vector.array[0];\r\n\t\t\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdot(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\treturn (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst a = this.array;\r\n\r\n\t\treturn Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst a = this.array;\r\n\t\t\r\n\t\treturn a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\r\n\t}\r\n\r\n\tdistance(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn Math.hypot(dx, dy, dz);\r\n\t}\r\n\r\n\tdistanceSquared(vec: Vector3): number {\r\n\t\tconst a = this.array;\r\n\t\tconst b = vec.array;\r\n\r\n\t\tconst dx = a[0] - b[0];\r\n\t\tconst dy = a[1] - b[1];\r\n\t\tconst dz = a[2] - b[2];\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst length = this.length();\r\n\t\tif (length > Number.EPSILON) {\r\n\t\t\tthis.array[0] /= length;\r\n\t\t\tthis.array[1] /= length;\r\n\t\t\tthis.array[2] /= length;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array[0] = 0;\r\n\t\t\tthis.array[1] = 0;\r\n\t\t\tthis.array[2] = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnegate(): this {\r\n\t\tthis.array[0] *= -1;\r\n\t\tthis.array[1] *= -1;\r\n\t\tthis.array[2] *= -1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(mat: Matrix3): this\r\n\tmult(vec: Vector3): this\r\n\tmult(arg0: Matrix3 | Vector3): this {\r\n\t\tif (arg0 instanceof Vector3) {\r\n\t\t\tconst v = arg0.array;\r\n\r\n\t\t\tthis.array[0] = this.array[0] * v[0];\r\n\t\t\tthis.array[1] = this.array[1] * v[1];\r\n\t\t\tthis.array[2] = this.array[2] * v[2];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst x = this.x;\r\n\t\t\tconst y = this.y;\r\n\t\t\tconst z = this.z;\r\n\r\n\t\t\tconst m = arg0.array;\r\n\r\n\t\t\tthis.x = x * m[0] + y * m[3] + z * m[6];\r\n\t\t\tthis.y = x * m[1] + y * m[4] + z * m[7];\r\n\t\t\tthis.z = x * m[2] + y * m[5] + z * m[8];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\ttoSpherical(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const x = thisArray[0] - centerArray[0];\r\n        const y = thisArray[1] - centerArray[1];\r\n        const z = thisArray[2] - centerArray[2];\r\n\r\n        const roh = Math.hypot(x, y, z);\r\n        const theta = Math.acos(y / roh);\r\n        const phi = Math.atan2(z, x);\r\n        thisArray[0] = roh;\r\n        thisArray[1] = theta;\r\n        thisArray[2] = phi;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n    toCartesian(center: Vector3): this {\r\n        const thisArray = this.array;\r\n        const centerArray = center.array;\r\n\r\n        const roh = thisArray[0];\r\n        const theta = thisArray[1];\r\n        const phi = thisArray[2];\r\n\r\n        const x = roh * Math.sin(theta) * Math.cos(phi) + centerArray[0];\r\n        const y = roh * Math.cos(theta) + centerArray[1];\r\n        const z = roh * Math.sin(theta) * Math.sin(phi) + centerArray[2];\r\n        thisArray[0] = x;\r\n        thisArray[1] = y;\r\n        thisArray[2] = z;\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\tstatic mult(mat: Matrix3, vec: Vector3): Vector3 {\r\n\t\tconst m = mat.array;\r\n\t\tconst v = vec.array;\r\n\r\n\t\treturn new Vector3Base([\r\n\t\t\tm[0] * v[0] + m[1] * v[1] + m[2] * v[2],\r\n\t\t\tm[3] * v[0] + m[4] * v[1] + m[5] * v[2],\r\n\t\t\tm[6] * v[0] + m[7] * v[1] + m[8] * v[2]\r\n\t\t]);\r\n\t}\r\n\r\n\twriteIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst v = this.array;\r\n\r\n\t\tout[offset    ] = v[0];\r\n\t\tout[offset + 1] = v[1];\r\n\t\tout[offset + 2] = v[2];\r\n    }\r\n    \r\n    readFromArray(arr: ArrayLike<number>, offset: number = 0): this {\r\n\t\tthis.array[0] = arr[offset    ];\r\n\t\tthis.array[1] = arr[offset + 1];\r\n\t\tthis.array[2] = arr[offset + 2];\r\n\r\n\t\treturn this;\r\n    }\r\n\r\n\taddScaled(vector: Vector3, k: number): this {\r\n\t\tthis.array[0] = this.array[0] + vector.array[0] * k;\r\n\t\tthis.array[1] = this.array[1] + vector.array[1] * k;\r\n\t\tthis.array[2] = this.array[2] + vector.array[2] * k;\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tcopyAndSub(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\r\n\t\tthis.array[0] = a[0] - b[0];\r\n\t\tthis.array[1] = a[1] - b[1];\r\n\t\tthis.array[2] = a[2] - b[2];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcopyAndCross(vecA: Vector3, vecB: Vector3): this {\r\n\t\tconst a = vecA.array;\r\n\t\tconst b = vecB.array;\r\n\t\t\r\n\t\tconst t0 = a[1] * b[2] - a[2] * b[1];\r\n\t\tconst t1 = a[2] * b[0] - a[0] * b[2];\r\n\t\tconst t2 = a[0] * b[1] - a[1] * b[0];\r\n\r\n\t\tthis.array[0] = t0;\r\n\t\tthis.array[1] = t1;\r\n\t\tthis.array[2] = t2;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\t[Symbol.iterator] (): Iterator<number> {\r\n\t\tconst array = this.array;\r\n\t\tlet i = 0;\r\n\t\treturn {\r\n\t\t\tnext() {\r\n\t\t\t\tif (i < array.length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: array[i++], done: false\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: void 0, done: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar Vector3: Vector3Constructor = Vector3Base;\r\n\r\nconst Vector3Injector: Injector<Vector3Constructor> = new Injector({\r\n\tdefaultCtor: Vector3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Vector3Constructor) => {\r\n\t\t\tVector3 = ctor;\r\n\t\t}\r\n});","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\n\r\nexport { Key };\r\nexport { KeyModifier };\r\nexport { HotKey };\r\nexport { MouseButton };\r\nexport { Input };\r\n\r\nenum Key {\r\n    A = \"a\",\r\n    B = \"b\",\r\n    C = \"c\",\r\n    D = \"d\",\r\n    E = \"e\",\r\n    F = \"f\",\r\n    G = \"g\",\r\n    H = \"h\",\r\n    I = \"i\",\r\n    J = \"j\",\r\n    K = \"k\",\r\n    L = \"l\",\r\n    M = \"m\",\r\n    O = \"o\",\r\n    P = \"p\",\r\n    Q = \"q\",\r\n    R = \"r\",\r\n    S = \"s\",\r\n    T = \"t\",\r\n    U = \"u\",\r\n    V = \"v\",\r\n    W = \"w\",\r\n    X = \"x\",\r\n    Y = \"y\",\r\n    Z = \"z\",\r\n    ENTER = \"Enter\",\r\n    BACKSPACE = \"Backspace\",\r\n    ARROW_DOWN = \"ArrowDown\",\r\n    ARROW_LEFT = \"ArrowLeft\",\r\n    ARROW_RIGHT = \"ArrowRight\",\r\n    ARROW_UP = \"ArrowUp\",\r\n    SHIFT = \"Shift\"\r\n}\r\n\r\nconst KEYS_COUNT = Object.keys(Key).length;\r\n\r\nenum KeyModifier {\r\n    Alt = \"Alt\",\r\n    Control = \"Control\",\r\n    Shift = \"Shift\",\r\n}\r\n\r\nfunction displayKeyModifier(mode: KeyModifier): string {\r\n    switch (mode) {\r\n        case KeyModifier.Control:\r\n            return \"Ctrl\";\r\n        default:\r\n            return mode;\r\n    }\r\n}\r\n\r\nenum MouseButton {\r\n    LEFT = 0,\r\n    WHEEL = 1,\r\n    RIGHT = 2,\r\n    FORWARD = 3,\r\n    BACK = 4\r\n}\r\n\r\nconst MOUSE_BUTTONS_COUNT = Object.keys(MouseButton).length;\r\n\r\nconst MOUSE_BUTTONS_INDICES = Object.freeze(\r\n    Object.values(MouseButton).reduce(\r\n        (map, button, index) => Object.assign(map, {[button]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst KEYS_INDICES = Object.freeze(\r\n    Object.values(Key).reduce(\r\n        (map, key, index) => Object.assign(map, {[key]: index}), {} as any\r\n    )\r\n);\r\n\r\nconst INPUT_EVENT_UP = 0;\r\nconst INPUT_EVENT_DOWN = 1;\r\nconst INPUT_EVENT_REPEAT = 2;\r\n\r\nconst testKeyModifier = (mod: KeyModifier, event: KeyboardEvent) => {\r\n    switch (mod) {\r\n        case \"Alt\":\r\n            return event.altKey;\r\n        case \"Control\":\r\n            return event.ctrlKey;\r\n        case \"Shift\":\r\n            return event.shiftKey;\r\n        default:\r\n            return () => true;\r\n    }\r\n}\r\n\r\nclass HotKey {\r\n\r\n    readonly key: Key;\r\n    readonly mod1?: KeyModifier;\r\n    readonly mod2?: KeyModifier;\r\n\r\n    constructor(key: Key, mod1?: KeyModifier, mod2?: KeyModifier) {\r\n        this.key = key;\r\n        this.mod1 = mod1;\r\n        this.mod2 = mod2;\r\n    }\r\n\r\n    toString(): string {\r\n        return `${this.mod1 ? `${displayKeyModifier(this.mod1)}+` : ''}${this.mod2 ? `${displayKeyModifier(this.mod2)}+` : ''}${(this.key.length === 1) ? this.key.toUpperCase() : this.key}`;\r\n    }\r\n\r\n    /*static fromString(str: string): HotKey | null {\r\n        const keys = Object.values(Key);\r\n        const keyModifiers = Object.values(KeyModifier);\r\n\r\n        let key: Key;\r\n        let mod1: KeyModifier | undefined;\r\n        let mod2: KeyModifier | undefined;\r\n\r\n        const keysStr = str.split(' + ');\r\n        if (keysStr.length >= 1) {\r\n            key = keysStr[0] as Key;\r\n            if (!keys.indexOf(key)) {\r\n                return null;\r\n            }\r\n            if (keysStr.length >= 2) {\r\n                mod1 = keysStr[1] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod1)) {\r\n                    return null;\r\n                }\r\n            }\r\n            if (keysStr.length >= 3) {\r\n                mod2 = keysStr[2] as KeyModifier;\r\n                if (!keyModifiers.indexOf(mod2)) {\r\n                    return null;\r\n                }\r\n            }\r\n            return new HotKey(key, mod1, mod2);\r\n        }\r\n        return null;\r\n    }*/\r\n\r\n    test(event: KeyboardEvent): boolean {\r\n        return ((!this.mod1 || testKeyModifier(this.mod1, event)) && (!this.mod2 || testKeyModifier(this.mod2, event)) && event.key === this.key);\r\n    }\r\n}\r\n\r\ninterface Input {\r\n    initialize(canvas: HTMLCanvasElement): void;\r\n    clear(): void;\r\n    getKey(key: Key): boolean;\r\n    getKeyUp(key: Key): boolean;\r\n    getKeyDown(key: Key): boolean;\r\n    getMouseButton(button: MouseButton): boolean;\r\n    getPointerPosition(): Vector2;\r\n    getPointerScreenPosition(): Vector2;\r\n    getWheelDelta(): number;\r\n    getMouseButtonDown(button: MouseButton): boolean;\r\n    getMouseButtonUp(button: MouseButton): boolean;\r\n}\r\n\r\nclass InputBase implements Input {\r\n    private readonly keyFlags = new Array<boolean>(3 * KEYS_COUNT).fill(false);\r\n    private readonly mouseFlags = new Array<boolean>(3 * MOUSE_BUTTONS_COUNT).fill(false);\r\n    private readonly pointerPosition = new Vector2();\r\n    private wheelDelta = 0;\r\n    private canvas: HTMLCanvasElement | null = null;\r\n    private canvasRectangle: DOMRect | null = null;\r\n\r\n    initialize(canvas: HTMLCanvasElement): void {\r\n        this.canvas = canvas;\r\n        this.canvasRectangle = canvas.getBoundingClientRect();\r\n        canvas.addEventListener(\"pointerdown\", this);\r\n        canvas.addEventListener(\"pointerup\", this);\r\n        canvas.addEventListener(\"contextmenu\", this);\r\n        canvas.addEventListener(\"pointermove\", this);\r\n        canvas.addEventListener(\"wheel\", this);\r\n        canvas.addEventListener(\"keydown\", this);\r\n        canvas.addEventListener(\"keyup\", this);\r\n        canvas.addEventListener(\"focusout\", this);\r\n    }\r\n\r\n    getCanvasRect(): DOMRect {\r\n        const rect = this.canvasRectangle;\r\n        if (rect === null) {\r\n            throw new Error(`Input manager not initialized.`);\r\n        }\r\n        return rect;\r\n    }\r\n\r\n    clear(): void {\r\n        this.keyFlags.fill(false, 0, INPUT_EVENT_REPEAT * KEYS_COUNT);\r\n        this.mouseFlags.fill(false, 0, INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT);\r\n        this.wheelDelta = 0;\r\n    }\r\n    \r\n    handleEvent(event: Event): void {\r\n        let eventIndex = -1;\r\n        switch (event.type) {\r\n            case \"pointerdown\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"pointerup\":\r\n                eventIndex = MOUSE_BUTTONS_INDICES[(event as MouseEvent).button as MouseButton];\r\n                this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + eventIndex] = true;\r\n                this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"pointermove\":\r\n                const canvasRect = this.getCanvasRect();\r\n                this.pointerPosition.setValues(\r\n                    ((event as MouseEvent).clientX - canvasRect.left),\r\n                    ((event as MouseEvent).clientY - canvasRect.top),\r\n                );\r\n                break;\r\n            case \"wheel\":\r\n                this.wheelDelta = (event as WheelEvent).deltaY / 100;\r\n                break;\r\n            case \"keydown\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = true;\r\n                break;\r\n            case \"keyup\":\r\n                eventIndex = KEYS_INDICES[(event as KeyboardEvent).key as Key];\r\n                this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + eventIndex] = true;\r\n                this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + eventIndex] = false;\r\n                break;\r\n            case \"focusout\":\r\n                this.keyFlags.fill(false);\r\n                this.mouseFlags.fill(false);\r\n                this.wheelDelta = 0;\r\n                this.pointerPosition.setZeros();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    /*static getAxis(axisName: string) {\r\n\r\n    }\r\n\r\n    static getButton(buttonName: string) {\r\n\r\n    }\r\n\r\n    static getButtonUp(buttonName: string) {\r\n\r\n    }\r\n\r\n    static getButtonDown(buttonName: string) {\r\n\r\n    }*/\r\n\r\n    getKey(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_REPEAT * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getKeyUp(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_UP * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getKeyDown(key: Key): boolean {\r\n        return this.keyFlags[INPUT_EVENT_DOWN * KEYS_COUNT + KEYS_INDICES[key]];\r\n    }\r\n\r\n    getMouseButton(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_REPEAT * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    getPointerPosition(): Vector2 {\r\n        return this.pointerPosition.clone();\r\n    }\r\n\r\n    getPointerScreenPosition(): Vector2 {\r\n        const positionAray = this.pointerPosition.array;\r\n        const canvasRect = this.getCanvasRect();\r\n        const x = (positionAray[0] / canvasRect.width) * 2 - 1;\r\n        const y = (positionAray[1] / canvasRect.height) * 2 - 1;\r\n        return new Vector2([x, y]);\r\n    }\r\n\r\n    getWheelDelta(): number {\r\n        return this.wheelDelta;\r\n    }\r\n\r\n    getMouseButtonDown(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_DOWN * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n\r\n    getMouseButtonUp(button: MouseButton): boolean {\r\n        return this.mouseFlags[INPUT_EVENT_UP * MOUSE_BUTTONS_COUNT + MOUSE_BUTTONS_INDICES[button]];\r\n    }\r\n}\r\n\r\nvar Input: Input = new InputBase();","import { Vector3 } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport class Space {\r\n\r\n    private constructor () {};\r\n    \r\n    static readonly origin:      Vector3 = new Vector3([ 0,  0,  0]);\r\n    static readonly right:       Vector3 = new Vector3([ 1,  0,  0]);\r\n    static readonly left:        Vector3 = new Vector3([-1,  0,  0]);\r\n    static readonly up:          Vector3 = new Vector3([ 0,  1,  0]);\r\n    static readonly down:        Vector3 = new Vector3([ 0, -1,  0]);\r\n    static readonly forward:     Vector3 = new Vector3([ 0,  0,  1]);\r\n    static readonly backward:    Vector3 = new Vector3([ 0,  0, -1]);\r\n}","import { Vector2 } from \"../../libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../libs/maths/geometry/space/Space\";\r\nimport { Input, MouseButton, Key } from \"../input/Input\";\r\nimport { Camera } from \"../rendering/scenes/cameras/Camera\";\r\n\r\nexport { FreeCameraControl };\r\n\r\ninterface FreeCameraControlConstructor {\r\n    readonly prototype: FreeCameraControl;\r\n    new(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}): FreeCameraControl;\r\n}\r\n\r\ninterface FreeCameraControl {\r\n    update(deltaTime: number): void;\r\n}\r\n\r\nclass FreeCameraControlBase {\r\n    camera: Camera;\r\n    rotationSpeed: number;\r\n    translationSpeed: number;\r\n\r\n    #lastPointerPosition: Vector2;\r\n\r\n    constructor(camera: Camera, params?: {rotationSpeed?: number, translationSpeed?: number}) {\r\n        this.camera = camera;\r\n        this.rotationSpeed = params?.rotationSpeed ?? 50;\r\n        this.translationSpeed = params?.translationSpeed ?? 8;\r\n        this.#lastPointerPosition = new Vector2();\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        const cameraTransform = this.camera.transform;\r\n        const cameraPosition = cameraTransform.getTranslation(new Vector3());\r\n        const cameraForward = cameraTransform.getBackward(new Vector3());\r\n        const cameraForwardArray = cameraForward.array;\r\n        const lastPointerPosition = this.#lastPointerPosition;\r\n        const rotationSpeed = this.rotationSpeed;\r\n        const translationSpeed = this.translationSpeed;\r\n        let cameraUpSign = cameraTransform.getUp(new Vector3()).dot(Space.up);\r\n      \r\n        if (Input.getKey(Key.Z) || Input.getKey(Key.ARROW_UP)) {\r\n            const forward = cameraTransform.getBackward(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(forward);\r\n        }\r\n        if (Input.getKey(Key.Q) || Input.getKey(Key.ARROW_LEFT)) {\r\n            const left = cameraTransform.getLeft(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(left);\r\n        }\r\n        if (Input.getKey(Key.S) || Input.getKey(Key.ARROW_DOWN)) {\r\n            const backward = cameraTransform.getForward(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(backward);\r\n        }\r\n        if (Input.getKey(Key.D) || Input.getKey(Key.ARROW_RIGHT)) {\r\n            const right = cameraTransform.getRight(new Vector3()).scale(translationSpeed * deltaTime);\r\n            cameraTransform.translate(right);\r\n        }\r\n\r\n        if (Input.getMouseButtonDown(MouseButton.RIGHT)) {\r\n            lastPointerPosition.copy(Input.getPointerScreenPosition());\r\n        }\r\n        \r\n        if (Input.getMouseButton(MouseButton.RIGHT)) {\r\n            const newPointerPosition = Input.getPointerScreenPosition();\r\n            if (!newPointerPosition.equals(lastPointerPosition)) {\r\n                const dx = (lastPointerPosition.x - newPointerPosition.x) * rotationSpeed * deltaTime;\r\n                const dy = (lastPointerPosition.y - newPointerPosition.y) * rotationSpeed * deltaTime;\r\n                cameraPosition.copy(cameraTransform.getTranslation(new Vector3()));\r\n                if (dx !== 0 || dy !== 0) {\r\n                    cameraUpSign = Math.sign(cameraTransform.getUp(new Vector3()).dot(Space.up));\r\n                    cameraForward.toSpherical(Space.origin);\r\n                    const theta = cameraForwardArray[1];\r\n                    const phi = cameraForwardArray[2];\r\n                    const newTheta = theta + cameraUpSign * -dy;\r\n                    if (newTheta <= 0 || newTheta >= Math.PI) {\r\n                        cameraForwardArray[2] = (phi - dx + Math.PI) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = newTheta < 0 ? -newTheta : Math.PI - (newTheta - Math.PI);\r\n                        cameraUpSign *= -1;\r\n                    }\r\n                    else {\r\n                        cameraForwardArray[2] = (phi - dx) % (2 * Math.PI);\r\n                        cameraForwardArray[1] = theta + cameraUpSign * -dy;\r\n                    }\r\n                    cameraForward.toCartesian(Space.origin);\r\n                    cameraTransform.lookAt(cameraPosition.add(cameraForward), (cameraUpSign > 0) ? Space.up : Space.down);\r\n                }\r\n                lastPointerPosition.copy(newPointerPosition);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar FreeCameraControl: FreeCameraControlConstructor = FreeCameraControlBase;","export { PoolAutoExtendPolicy };\r\nexport { Pool };\r\nexport { PoolBase };\r\n\r\nenum PoolAutoExtendPolicy {\r\n    NO_AUTO_EXTEND = 0,\r\n    AUTO_EXTEND_ONE = 1,\r\n    AUTO_EXTEND_POW2 = 2\r\n}\r\n\r\ninterface Pool<O extends object = object> {\r\n    readonly ctor: Constructor<O>;\r\n    readonly autoExtendPolicy: PoolAutoExtendPolicy;\r\n    acquire(count: number): O[];\r\n    release(count: number): void;\r\n    extend(count: number): void;\r\n    clear(): void;\r\n}\r\n\r\nabstract class PoolBase<O extends object = object> implements Pool<O> {\r\n    protected _ctor: Constructor<O>;\r\n    protected _autoExtendPolicy: PoolAutoExtendPolicy;\r\n    protected _autoExtendTicks: number;\r\n\r\n    protected constructor(constructor: Constructor<O>, policy?: PoolAutoExtendPolicy) {\r\n        this._ctor = constructor;\r\n        this._autoExtendPolicy = policy || PoolAutoExtendPolicy.AUTO_EXTEND_ONE;\r\n        this._autoExtendTicks = 0;\r\n    }\r\n\r\n    get ctor(): Constructor<O> {\r\n        return this._ctor;\r\n    }\r\n\r\n    get autoExtendPolicy(): PoolAutoExtendPolicy {\r\n        return this._autoExtendPolicy;\r\n    }\r\n\r\n    autoExtend(): void {\r\n        switch (this._autoExtendPolicy) {\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_ONE:\r\n                this.extend(1);\r\n                break;\r\n            case PoolAutoExtendPolicy.AUTO_EXTEND_POW2:\r\n                this.extend(Math.pow(2, this._autoExtendTicks));\r\n                break;\r\n        }\r\n        this._autoExtendTicks++;\r\n    }\r\n\r\n    abstract acquire(count: number): O[];\r\n    abstract release(count: number): void;\r\n    abstract extend(count: number): void;\r\n    abstract clear(): void;\r\n}","import { PoolAutoExtendPolicy, PoolBase, Pool } from \"./Pool\";\r\n\r\nexport { StackPool };\r\n\r\ninterface StackPool<O extends object = object> extends Pool<O> {\r\n    \r\n}\r\n\r\ninterface StackPoolConstructor {\r\n    readonly prototype: StackPool;\r\n    new<O extends object>(constructor: Constructor<O>, options?: {args?: ConstructorParameters<Constructor<O>>, policy?: PoolAutoExtendPolicy, size?: number}): StackPool<O>;\r\n}\r\n\r\nclass StackPoolBase<O extends object = object> extends PoolBase<O> implements Pool<O> {\r\n    private _objects: Array<O>;\r\n    private _top: number;\r\n\r\n    constructor(constructor: Constructor<O>, options?: {args?: any, policy?: PoolAutoExtendPolicy, size?: number}) {\r\n        super(constructor, options?.policy);\r\n        this._objects = Array(options?.size || 0).fill(0).map(() => {\r\n            return new this.ctor(options?.args);\r\n        });\r\n        this._top = 0;\r\n    }\r\n    \r\n    acquire(count: number): O[] {\r\n        const top = this._top;\r\n        const target = top + count;\r\n\r\n        if (this._autoExtendPolicy) {\r\n            while (this._objects.length < target) {\r\n                this.autoExtend();\r\n            }\r\n        }\r\n        this._top = target;\r\n        \r\n        return this._objects.slice(top, target);\r\n    }\r\n\r\n    release(count: number): void {\r\n        const top = this._top;\r\n        if (count > top) {\r\n            console.warn(\"Releasing under zero.\");\r\n        }\r\n        this._top = Math.max(top - count, 0);\r\n    }\r\n\r\n    extend(count: number): void {\r\n        this._objects.push(...Array(count).fill(0).map(() => {\r\n            return new this.ctor();\r\n        }));\r\n    }\r\n    \r\n    clear(): void {\r\n        this._objects = [];\r\n        this._top = 0;\r\n        this._autoExtendTicks = 0;\r\n    }\r\n}\r\n\r\nvar StackPool: StackPoolConstructor = StackPoolBase;","\r\nexport { deg2Rad };\r\nexport { rad2Deg };\r\nexport { qSqrt };\r\nexport { pow2 };\r\nexport { inRange };\r\nexport { clamp };\r\nexport { lerp };\r\nexport { smoothstep };\r\nexport { smootherstep };\r\nexport { randInt };\r\nexport { randFloat };\r\nexport { randFloatSpread };\r\nexport { degToRad };\r\nexport { radToDeg };\r\nexport { isPowerOfTwo };\r\nexport { ceilPowerOfTwo };\r\nexport { floorPowerOfTwo };\r\n\r\nconst DEG2RAD = Math.PI / 180;\r\nconst RAD2DEG = 180 / Math.PI;\r\n\r\nconst deg2Rad = function(deg: number): number {\r\n\treturn DEG2RAD * deg;\r\n}\r\n\r\nconst rad2Deg = function(rad: number): number {\r\n\treturn RAD2DEG / rad;\r\n}\r\n\r\nconst _bytes = new ArrayBuffer(Float32Array.BYTES_PER_ELEMENT);\r\nconst _floatView = new Float32Array(_bytes);\r\nconst _intView = new Uint32Array(_bytes);\r\n\r\nconst qSqrt = function(x: number) {\r\n\tconst halfx = x * 0.5;\r\n\r\n\t_floatView[0] = x;\r\n\t_intView[0] = 0x5f3759df -(_intView[0] >> 1);\r\n\r\n\tlet y = _floatView[0];\r\n\ty = y * (1.5 - (halfx * y * y));\r\n\r\n\treturn y;\r\n}\r\n\r\nconst pow2 = function(k: number): number {\r\n\treturn 1 << k;\r\n}\r\n\t\r\nconst inRange = function(x: number, min: number, max: number): boolean {\r\n\treturn (min <= x) && (x <= max);\r\n}\r\n\r\nconst clamp = function(value: number, min: number, max: number): number {\r\n\treturn Math.max(min, Math.min(max, value));\r\n}\r\n\r\nconst lerp = function(x: number, y: number, t: number): number {\r\n\treturn (1 - t) * x + t * y;\r\n}\r\n\r\nconst smoothstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * (3 - 2 * x);\r\n}\r\n\r\nconst smootherstep = function(x: number, min: number, max: number): number {\r\n\tif (x <= min) return 0;\r\n\tif (x >= max) return 1;\r\n\r\n\tx = (x - min) / (max - min);\r\n\r\n\treturn x * x * x * ( x * ( x * 6 - 15) + 10);\r\n}\r\n\r\nconst randInt = function(low: number, high: number): number {\r\n\treturn low + Math.floor(Math.random() * (high - low + 1));\r\n}\r\n\r\nconst randFloat = function(low: number, high: number): number {\r\n\treturn low + Math.random() * (high - low);\r\n}\r\n\r\nconst randFloatSpread = function(range: number): number {\r\n\treturn range * (0.5 - Math.random());\r\n}\r\n\r\nconst degToRad = function(degrees: number): number {\r\n\treturn degrees * DEG2RAD;\r\n}\r\n\r\nconst radToDeg = function(radians: number): number {\r\n\treturn radians * RAD2DEG;\r\n}\r\nconst isPowerOfTwo = function(value: number): boolean {\r\n\treturn (value & (value - 1)) === 0 && value !== 0;\r\n}\r\n\r\nconst ceilPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\r\n}\r\n\r\nconst floorPowerOfTwo = function(value: number): number {\r\n\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\r\n}","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3Values, Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { Matrix3Values };\r\nexport { Matrix3 };\r\nexport { Matrix3Injector };\r\nexport { Matrix3Base };\r\n\r\ntype Matrix3Values = [\r\n  number, number, number,\r\n  number, number, number,\r\n  number, number, number\r\n];\r\n\r\ninterface Matrix3Constructor {\r\n\treadonly prototype: Matrix3;\r\n\tnew(): Matrix3;\r\n\tnew(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): Matrix3;\r\n  new(array: ArrayLike<number>): Matrix3;\r\n  rotationX(angle: number): Matrix3;\r\n  rotationY(angle: number): Matrix3;\r\n  rotationZ(angle: number): Matrix3;\r\n}\r\n\r\ninterface Matrix3 {\r\n  readonly array: WritableArrayLike<number>;\r\n  setValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this;\r\n  getValues(): Matrix3Values;\r\n  row1: Vector3Values;\r\n  row2: Vector3Values;\r\n  row3: Vector3Values;\r\n  col1: Vector3Values;\r\n  col2: Vector3Values;\r\n  col3: Vector3Values;\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  setRotationX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n\r\n  equals(mat: Matrix3): boolean;\r\n  copy(mat: Matrix3): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix3): this;\r\n  sub(mat: Matrix3): this;\r\n  mult(mat: Matrix3): this;\r\n  multScalar(k: number): this;\r\n  solve(vecB: Vector3): Vector3Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass Matrix3Base implements Matrix3 {\r\n  readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  )\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[0], args[1], args[2],\r\n        args[3], args[4], args[5],\r\n        args[6], args[7], args[8]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array([\r\n        0, 0, 0,\r\n        0, 0, 0,\r\n        0, 0, 0\r\n      ]);\r\n\t\t}\r\n  }\r\n\r\n  get row1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[3],\r\n      this.array[6]\r\n    ];\r\n\t}\r\n\r\n\tset row1(row: Vector3Values) {\r\n    this.array[0] = row[0];\r\n    this.array[3] = row[1];\r\n    this.array[6] = row[2];\r\n  }\r\n\r\n  get row2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[1],\r\n      this.array[4],\r\n      this.array[7]\r\n    ];\r\n\t}\r\n\r\n\tset row2(row: Vector3Values) {\r\n    this.array[1] = row[0];\r\n    this.array[4] = row[1];\r\n    this.array[7] = row[2]\r\n  }\r\n\r\n  get row3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[2],\r\n      this.array[5],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tset row3(row: Vector3Values) {\r\n    this.array[2] = row[0];\r\n    this.array[5] = row[1];\r\n    this.array[8] = row[2]\r\n  }\r\n\r\n  get col1(): Vector3Values {\r\n\t\treturn [\r\n      this.array[0],\r\n      this.array[1],\r\n      this.array[2]\r\n    ];\r\n\t}\r\n\r\n\tset col1(col: Vector3Values) {\r\n    this.array[0] = col[0];\r\n    this.array[1] = col[1];\r\n    this.array[2] = col[2];\r\n  }\r\n\r\n  get col2(): Vector3Values {\r\n\t\treturn [\r\n      this.array[3],\r\n      this.array[4],\r\n      this.array[5]\r\n    ];\r\n\t}\r\n\r\n\tset col2(col: Vector3Values) {\r\n    this.array[3] = col[0];\r\n    this.array[4] = col[1];\r\n    this.array[5] = col[2]\r\n  }\r\n\r\n  get col3(): Vector3Values {\r\n\t\treturn [\r\n      this.array[6],\r\n      this.array[7],\r\n      this.array[8]\r\n    ];\r\n\t}\r\n\r\n\tset col3(col: Vector3Values) {\r\n    this.array[6] = col[0];\r\n    this.array[7] = col[1];\r\n    this.array[8] = col[2];\r\n  }\r\n\r\n  get m11() {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  get m12() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset m12(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  get m13() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tset m13(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  get m22() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tset m22(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  get m23() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tset m23(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  get m32() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tset m32(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  get m33() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n  set m33(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 9) {\r\n\t\t\tthrow new MathError(`Array must be of length 9 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n  getValues(): Matrix3Values {\r\n\t\treturn [\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8],\r\n    ];\r\n\t}\r\n\r\n\tsetValues(\r\n    m11: number, m21: number, m31: number,\r\n    m12: number, m22: number, m32: number,\r\n    m13: number, m23: number, m33: number\r\n  ): this {\r\n    this.array[0] = m11;\r\n    this.array[1] = m21;\r\n    this.array[2] = m31;\r\n    this.array[3] = m12;\r\n    this.array[4] = m22;\r\n    this.array[5] = m32;\r\n    this.array[6] = m13;\r\n    this.array[7] = m23;\r\n    this.array[8] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n\tequals(other: Matrix3): boolean {\r\n    const o = other.array;\r\n    return this.array[0] === o[0]\r\n      && this.array[1] === o[1]\r\n      && this.array[2] === o[2]\r\n      && this.array[3] === o[3]\r\n      && this.array[4] === o[4]\r\n      && this.array[5] === o[5]\r\n      && this.array[6] === o[6]\r\n      && this.array[7] === o[7]\r\n      && this.array[8] === o[8];\r\n  }\r\n\r\n  copy(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = m[0];\r\n    o[1] = m[1];\r\n    o[2] = m[2];\r\n    o[3] = m[3];\r\n    o[4] = m[4];\r\n    o[5] = m[5];\r\n    o[6] = m[6];\r\n    o[7] = m[7];\r\n    o[8] = m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  clone(): this {\r\n    return new Matrix3Base(\r\n      this.array[0], this.array[1], this.array[2],\r\n      this.array[3], this.array[4], this.array[5],\r\n      this.array[6], this.array[7], this.array[8]\r\n    ) as this;\r\n  }\r\n\r\n  setIdentity(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 1;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 1;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  setZeros(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = 0;\r\n    o[1] = 0;\r\n    o[2] = 0;\r\n    o[3] = 0;\r\n    o[4] = 0;\r\n    o[5] = 0;\r\n    o[6] = 0;\r\n    o[7] = 0;\r\n    o[8] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  det(): number {\r\n    const o = this.array;\r\n\r\n    const x = o[0] * ((o[4] * o[8]) - (o[5] * o[7]));\r\n    const y = o[1] * ((o[3] * o[8]) - (o[5] * o[6]));\r\n    const z = o[2] * ((o[3] * o[7]) - (o[4] * o[6]));\r\n\r\n    return x - y + z;\r\n  }\r\n\r\n  trace(): number {\r\n    const o = this.array;\r\n    \r\n    return o[0] + o[4] + o[8];\r\n  }\r\n\r\n  negate(): this {\r\n    const o = this.array;\r\n\r\n    o[0] = -o[0];\r\n    o[1] = -o[1];\r\n    o[2] = -o[2];\r\n    o[3] = -o[3];\r\n    o[4] = -o[4];\r\n    o[5] = -o[5];\r\n    o[6] = -o[6];\r\n    o[7] = -o[7];\r\n    o[8] = -o[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  transpose(): this {\r\n    const o = this.array;\r\n\r\n    let t;\r\n\r\n    t = o[1];\r\n    o[1] = o[3];\r\n    o[3] = t;\r\n\r\n    t = o[2];\r\n    o[2] = o[6];\r\n    o[6] = t;\r\n\r\n    t = o[5];\r\n    o[5] = o[7];\r\n    o[7] = t;\r\n    \r\n    return this;\r\n  }\r\n\r\n  invert(): this {\r\n    const o = this.array;\r\n\r\n    const t11 = o[1 * 3 + 1] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 1];\r\n    const t12 = o[0 * 3 + 1] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 1];\r\n    const t13 = o[0 * 3 + 1] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 1];\r\n\r\n    const t21 = o[1 * 3 + 0] * o[2 * 3 + 2] - o[1 * 3 + 2] * o[2 * 3 + 0];\r\n    const t22 = o[0 * 3 + 0] * o[2 * 3 + 2] - o[0 * 3 + 2] * o[2 * 3 + 0];\r\n    const t23 = o[0 * 3 + 0] * o[1 * 3 + 2] - o[0 * 3 + 2] * o[1 * 3 + 0];\r\n\r\n    const t31 = o[1 * 3 + 0] * o[2 * 3 + 1] - o[1 * 3 + 1] * o[2 * 3 + 0];\r\n    const t32 = o[0 * 3 + 0] * o[2 * 3 + 1] - o[0 * 3 + 1] * o[2 * 3 + 0];\r\n    const t33 = o[0 * 3 + 0] * o[1 * 3 + 1] - o[0 * 3 + 1] * o[1 * 3 + 0];\r\n\r\n    const d = 1.0 / (o[0 * 3 + 0] * t11 - o[1 * 3 + 0] * t12 + o[2 * 3 + 0] * t13);\r\n\r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    o[0] = d * t11;\r\n    o[1] = -d * t12;\r\n    o[2] = d * t13;\r\n\r\n    o[3] = -d * t21;\r\n    o[4] = d * t22;\r\n    o[5] = -d * t23;\r\n\r\n    o[6] = d * t31;\r\n    o[7] = -d * t32;\r\n    o[8] = d * t33;\r\n\r\n    return this;\r\n  }\r\n\r\n  add(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] + m[0];\r\n    o[1] = o[1] + m[1];\r\n    o[2] = o[2] + m[2];\r\n    o[3] = o[3] + m[3];\r\n    o[4] = o[4] + m[4];\r\n    o[5] = o[5] + m[5];\r\n    o[6] = o[6] + m[6];\r\n    o[7] = o[7] + m[7];\r\n    o[8] = o[8] + m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  sub(mat: Matrix3Base): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    o[0] = o[0] - m[0];\r\n    o[1] = o[1] - m[1];\r\n    o[2] = o[2] - m[2];\r\n    o[3] = o[3] - m[3];\r\n    o[4] = o[4] - m[4];\r\n    o[5] = o[5] - m[5];\r\n    o[6] = o[6] - m[6];\r\n    o[7] = o[7] - m[7];\r\n    o[8] = o[8] - m[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  mult(mat: Matrix3): this {\r\n    const o = this.array;\r\n    const m = mat.array;\r\n\r\n    const a11 = o[0 * 3 + 0];\r\n    const a12 = o[0 * 3 + 1];\r\n    const a13 = o[0 * 3 + 2];\r\n    const a21 = o[1 * 3 + 0];\r\n    const a22 = o[1 * 3 + 1];\r\n    const a23 = o[1 * 3 + 2];\r\n    const a31 = o[2 * 3 + 0];\r\n    const a32 = o[2 * 3 + 1];\r\n    const a33 = o[2 * 3 + 2];\r\n    const b11 = m[0 * 3 + 0];\r\n    const b12 = m[0 * 3 + 1];\r\n    const b13 = m[0 * 3 + 2];\r\n    const b21 = m[1 * 3 + 0];\r\n    const b22 = m[1 * 3 + 1];\r\n    const b23 = m[1 * 3 + 2];\r\n    const b31 = m[2 * 3 + 0];\r\n    const b32 = m[2 * 3 + 1];\r\n    const b33 = m[2 * 3 + 2];\r\n\r\n    o[0] = b11 * a11 + b12 * a21 + b13 * a31;\r\n    o[1] = b11 * a12 + b12 * a22 + b13 * a32;\r\n    o[2] = b11 * a13 + b12 * a23 + b13 * a33;\r\n    o[3] = b21 * a11 + b22 * a21 + b23 * a31;\r\n    o[4] = b21 * a12 + b22 * a22 + b23 * a32;\r\n    o[5] = b21 * a13 + b22 * a23 + b23 * a33;\r\n    o[6] = b31 * a11 + b32 * a21 + b33 * a31;\r\n    o[7] = b31 * a12 + b32 * a22 + b33 * a32;\r\n    o[8] = b31 * a13 + b32 * a23 + b33 * a33;\r\n\r\n    return this;\r\n  }\r\n\r\n  multScalar(k: number): this {\r\n    const o = this.array;\r\n\r\n    o[0] = o[0] * k;\r\n    o[1] = o[1] * k;\r\n    o[2] = o[2] * k;\r\n    o[3] = o[3] * k;\r\n    o[4] = o[4] * k;\r\n    o[5] = o[5] * k;\r\n    o[6] = o[6] * k;\r\n    o[7] = o[7] * k;\r\n    o[8] = o[8] * k;\r\n\r\n    return this;\r\n  }\r\n\r\n  writeIntoArray(out: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst m = this.array;\r\n\r\n\t\tout[offset     ] = m[ 0];\r\n\t\tout[offset +  1] = m[ 1];\r\n    out[offset +  2] = m[ 2];\r\n    out[offset +  3] = m[ 3];\r\n\t\tout[offset +  4] = m[ 4];\r\n    out[offset +  5] = m[ 5];\r\n    out[offset +  6] = m[ 6];\r\n\t\tout[offset +  7] = m[ 7];\r\n    out[offset +  8] = m[ 8];\r\n  }\r\n    \r\n  readFromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst o = this.array;\r\n\r\n\t\to[ 0] = arr[offset     ];\r\n\t\to[ 1] = arr[offset +  1];\r\n    o[ 2] = arr[offset +  2];\r\n    o[ 3] = arr[offset +  3];\r\n    o[ 4] = arr[offset +  4];\r\n    o[ 5] = arr[offset +  5];\r\n    o[ 6] = arr[offset +  6];\r\n\t\to[ 7] = arr[offset +  7];\r\n    o[ 8] = arr[offset +  8];\r\n  }\r\n\r\n  static rotationX(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationX(angle);\r\n  }\r\n\r\n  setRotationX(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = 1;\r\n    this.array[1] = 0;\r\n    this.array[2] = 0;\r\n    this.array[3] = 0;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = sinAngle;\r\n    this.array[6] = 0;\r\n    this.array[7] = -sinAngle;\r\n    this.array[8] = cosAngle;\r\n\r\n    return this;\r\n  }\r\n  \r\n  static rotationY(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationY(angle);\r\n  }\r\n\r\n  setRotationY(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n    \r\n    this.array[0] = cosAngle;\r\n    this.array[1] = 0;\r\n    this.array[2] = -sinAngle;\r\n    this.array[3] = 0;\r\n    this.array[4] = 1;\r\n    this.array[5] = 0;\r\n    this.array[6] = sinAngle;\r\n    this.array[7] = 0;\r\n    this.array[8] = cosAngle;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static rotationZ(angle: number): Matrix3Base {\r\n    return new Matrix3Base().setRotationZ(angle);\r\n  }\r\n\r\n  setRotationZ(angle: number): this {\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    this.array[0] = cosAngle;\r\n    this.array[1] = sinAngle;\r\n    this.array[2] = 0;\r\n    this.array[3] = -sinAngle;\r\n    this.array[4] = cosAngle;\r\n    this.array[5] = 0;\r\n    this.array[6] = 0;\r\n    this.array[7] = 0;\r\n    this.array[8] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  solve(vecB: Vector3): Vector3Values {\r\n    const a = this.array;\r\n    \r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a13 = a[2];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const a23 = a[5];\r\n    const a31 = a[6];\r\n    const a32 = a[7];\r\n    const a33 = a[8];\r\n    const bx = vecB.x - a[12];\r\n    const by = vecB.y - a[13];\r\n    const bz = vecB.z - a[14];\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n  \r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n  \r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n\r\n    return [\r\n      x, y, z\r\n    ];\r\n  }\r\n\r\n  solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[3];\r\n    const a22 = a[4];\r\n    const bx = vecB.x - a[4];\r\n    const by = vecB.y - a[7];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by)\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n}\r\n\r\nvar Matrix3: Matrix3Constructor = Matrix3Base;\r\nconst Matrix3Injector: Injector<Matrix3Constructor> = new Injector({\r\n\tdefaultCtor: Matrix3Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix3Constructor) => {\r\n\t\t\tMatrix3 = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Space } from \"../../geometry/space/Space\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { qSqrt } from \"../../Snippets\";\r\nimport { Matrix3 } from \"../matrices/Matrix3\";\r\nimport { Matrix4 } from \"../matrices/Matrix4\";\r\nimport { Vector3 } from \"../vectors/Vector3\";\r\n\r\nexport { QuaternionValues };\r\nexport { Quaternion };\r\nexport { QuaternionInjector };\r\nexport { QuaternionPool };\r\n\r\ntype QuaternionValues = [number, ...number[]] & { length: 4 };\r\n\r\ninterface QuaternionConstructor {\r\n\treadonly prototype: Quaternion;\r\n\tnew(): Quaternion;\r\n\tnew(x: number, y: number, z: number, w: number): Quaternion;\r\n\tnew(array: WritableArrayLike<number>): Quaternion;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tslerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tfromArray(vector: ArrayLike<number>): Quaternion;\r\n\tfromAxisAngle(axis: Vector3, angle?: number): Quaternion;\r\n\tfromEuler(pitch: number, yaw: number, roll: number): Quaternion;\r\n\tfromVector(vector: Vector3): Quaternion;\r\n\tfromMatrix(matrix: Matrix3): Quaternion;\r\n}\r\n// TODO?:\r\n// roll => pitch\r\n// pitch => yaw\r\n// yaw => roll\r\ninterface Quaternion {\r\n\treadonly array: WritableArrayLike<number>;\r\n\tx: number;\r\n\ty: number;\r\n\tz: number;\r\n\tw: number;\r\n\tpitch: number;\r\n\tyaw: number;\r\n\troll: number;\r\n\tgetValues(): QuaternionValues;\r\n\tsetValues(\r\n\t  x: number, y: number,\r\n\t  z: number, w: number\r\n\t): this;\r\n\t//setArray(array: WritableArrayLike<number>): this;\r\n\tlookAt(source: Vector3, dest: Vector3): Quaternion ;\r\n\tsetEuler(pitch: number, yaw: number, roll: number): this;\r\n\r\n\tsetMatrix(matrix: Matrix3): Quaternion;\r\n\tsetMatrix(matrix: Matrix4): Quaternion;\r\n\r\n\tsetAxisAngle(axis: Vector3, angle: number): this;\r\n\tsetVectors(from: Vector3, to: Vector3): this;\r\n\t\r\n\tcopy(quat: Quaternion): this;\r\n\tclone(): this;\r\n\tgetAxis(out: Vector3): Vector3;\r\n\r\n\tgetMatrix3(matrix: Matrix3): Matrix3;\r\n\tgetMatrix4(matrix: Matrix4): Matrix4;\r\n\r\n\trotate(vec: Vector3): Vector3;\r\n\ttoVector(): Vector3;\r\n\r\n\tangleTo(quat: Quaternion): number;\r\n\trotateTowards(quat: Quaternion): this;\r\n\tinvert(): this;\r\n\tconjugate(): this;\r\n\tdot(quat: Quaternion): number;\r\n\tlengthSquared(): number;\r\n\tlength(): number;\r\n\tnormalize(): this;\r\n\tadd(quat: Quaternion): this;\r\n\tsub(quat: Quaternion): this;\r\n\tmult(quat: Quaternion): this;\r\n\tscale(scalar: number): this;\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): this;\r\n\tequals(quat: Quaternion): boolean;\r\n\tcopyIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n    readFromArray(arr: ArrayLike<number>, offset?: number): void;\r\n}\r\n\r\nclass QuaternionBase {\r\n\tprivate _array: WritableArrayLike<number>;\r\n\r\n\tget array(): WritableArrayLike<number> {\r\n\t\treturn this._array;\r\n\t}\r\n\r\n\tconstructor()\r\n\tconstructor(array: WritableArrayLike<number>)\r\n\tconstructor(x: number, y: number, z: number, w: number)\r\n\tconstructor(...args: any[]) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis._array = [\r\n\t\t\t\targs[0], args[1], args[2], args[3]\r\n\t\t\t];\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n\t\t\tthis._checkArray(args[0]);\r\n\t\t\tthis._array = args[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._array = [0, 0, 0, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tget x(): number {\r\n        return this._array[0];\r\n    }\r\n\r\n    set x(x: number) {\r\n\t\tthis._array[0] = x;\r\n    }\r\n\r\n    get y(): number {\r\n        return this._array[1];\r\n    }\r\n\r\n    set y(y: number) {\r\n\t\tthis._array[1] = y;\r\n    }\r\n\r\n    set z(z: number) {\r\n\t\tthis._array[2] = z;\r\n\t}\r\n\t\r\n    get z(): number {\r\n\t\treturn this._array[2];\r\n    }\r\n\r\n    set w(w: number) {\r\n\t\tthis._array[3] = w;\r\n\t}\r\n\r\n    get w(): number {\r\n\t\treturn this._array[3];\r\n\t}\r\n\t\r\n\tget pitch(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinPitch = 2 * (w * y - z * x);\r\n\t\tif (Math.abs(sinPitch) >= 1) {\r\n            return Math.sign(sinPitch) * (Math.PI / 2);\r\n        }\r\n\t\telse {\r\n            return Math.asin(sinPitch);\r\n        }\r\n\t}\r\n\r\n\tget yaw(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinYawCosPitch = 2 * (w * z + x * y);\r\n\t\tconst cosYawCosPitch = 1 - 2 * (y * y + z * z);\r\n\t\treturn Math.atan2(sinYawCosPitch, cosYawCosPitch);\r\n\t}\r\n\r\n\tget roll(): number {\r\n\t\tconst array = this.array;\r\n\t\tconst x = array[0];\r\n\t\tconst y = array[1];\r\n\t\tconst z = array[2];\r\n\t\tconst w = array[3];\r\n\t\tconst sinRollCosPitch = 2 * (w * x + y * z);\r\n\t\tconst cosRollCosPitch = 1 - 2 * (x * x + y * y);\r\n\t\treturn Math.atan2(sinRollCosPitch, cosRollCosPitch);\r\n\t}\r\n\r\n\tgetValues(): QuaternionValues {\r\n\t\treturn [\r\n\t\t\tthis._array[0],\r\n\t\t\tthis._array[1],\r\n\t\t\tthis._array[2],\r\n\t\t\tthis._array[3]\r\n\t\t];\r\n\t}\r\n\r\n\tsetValues(x: number, y: number, z: number, w: number): this {\r\n\t\tthis._array[0] = x;\r\n\t\tthis._array[1] = y;\r\n\t\tthis._array[2] = z;\r\n\t\tthis._array[3] = w;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate _checkArray(array: WritableArrayLike<number>): void {\r\n\t\tif (array.length < 4) {\r\n\t\t\tthrow new MathError(`Array must be of length 4 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t/*setArray(array: WritableArrayLike<number>): this {\r\n\t\tthis._checkArray(array);\r\n\t\tthis._array = array;\r\n\t\treturn this;\r\n\t}*/\r\n\r\n\tstatic fromArray(array: WritableArrayLike<number>): QuaternionBase {\r\n\t\treturn new QuaternionBase(array);\r\n\t}\r\n\r\n\tstatic fromAxisAngle(axis: Vector3, angle: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setAxisAngle(axis, angle);\r\n\t}\r\n\r\n\tstatic fromVector(vector: Vector3): QuaternionBase {\r\n\t\treturn new QuaternionBase(vector.x, vector.y, vector.z, 1);\r\n\t}\r\n\t\r\n\tstatic fromEuler(yaw: number, pitch: number, roll: number): QuaternionBase {\r\n\t\treturn new QuaternionBase().setEuler(yaw, pitch, roll);\r\n\t}\r\n\r\n\tcopy(quat: Quaternion): this {\r\n\t\tconst o = this._array;\r\n\t\tconst q = quat.array;\r\n\r\n\t\to[0] = q[0];\r\n\t\to[1] = q[1];\r\n\t\to[2] = q[2];\r\n\t\to[3] = q[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\treturn new QuaternionBase(this.x, this.y, this.z, this.w) as this;\r\n\t}\r\n\r\n\tequals(quat: Quaternion): boolean {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\treturn (thisArray[0] === quatArray[0])\r\n\t\t\t&& (thisArray[1] === quatArray[1])\r\n\t\t\t&& (thisArray[2] === quatArray[2])\r\n\t\t\t&& (thisArray[3] === quatArray[3]);\r\n\t}\r\n\r\n\tgetAxis(out: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst outArray = out.array;\r\n\r\n\t\tconst den = 1 - (thisArray[3] * thisArray[3]);\r\n\r\n\t\tif (den < Number.EPSILON) {\r\n\t\t  return out.setZeros();\r\n\t\t}\r\n\t  \r\n\t\tconst scale = qSqrt(den);\r\n\t\t\r\n\t\toutArray[0] = thisArray[0] * scale;\r\n\t\toutArray[1] = thisArray[1] * scale;\r\n\t\toutArray[2] = thisArray[2] * scale;\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\tgetMatrix3(matrix: Matrix3): Matrix3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst thisLengthSquared = this.lengthSquared();\r\n\t\tconst s = 2.0 / thisLengthSquared;\r\n\r\n\t\tconst x = thisArray[0];\r\n\t\tconst y = thisArray[1];\r\n\t\tconst z = thisArray[2];\r\n\t\tconst w = thisArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n\t\treturn matrix.setValues(\r\n\t\t\t1 - (yy + zz),\txy + wz,\t\txz - wy,\r\n\t\t\txy - wz,\t\t1 - (xx + zz),\tyz + wx,\r\n\t\t\txz + wy,\t\tyz - wx,\t\t1 - (xx + yy)\r\n\t\t);\r\n\t}\r\n\r\n\tgetMatrix4(matrix: Matrix4): Matrix4 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst thisLengthSquared = this.lengthSquared();\r\n\t\tconst s = 2.0 / thisLengthSquared;\r\n\r\n\t\tconst x = thisArray[0];\r\n\t\tconst y = thisArray[1];\r\n\t\tconst z = thisArray[2];\r\n\t\tconst w = thisArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n\t\treturn matrix.setValues(\r\n\t\t\t1 - (yy + zz),\txy + wz,\t\txz - wy, \t\t0,\r\n\t\t\txy - wz,\t\t1 - (xx + zz),\tyz + wx, \t\t0,\r\n\t\t\txz + wy,\t\tyz - wx,\t\t1 - (xx + yy), \t0,\r\n\t\t\t0, \t\t\t\t0, \t\t\t\t0, \t\t\t\t1\r\n\t\t);\r\n\t}\r\n\r\n\trotate(vector: Vector3): Vector3 {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst vectorArray = vector.array;\r\n\r\n\t\tconst vx = vectorArray[0];\r\n\t\tconst vy = vectorArray[1];\r\n\t\tconst vz = vectorArray[2];\t\t\r\n\t\t\r\n\t\tconst qx = thisArray[0];\r\n\t\tconst qy = thisArray[1];\r\n\t\tconst qz = thisArray[2];\r\n\t\tconst qw = thisArray[3];\r\n\r\n\t\tconst tx = qw * vx + -qx * 0 + -qy * vz + qz * vy;\r\n\t\tconst ty = qw * vy + -qy * 0 + -qz * vx + qx * vz;\r\n\t\tconst tz = qw * vz + -qz * 0 + -qx * vy + qy * vx;\r\n\t\tconst tw = qx * vx + qw * 0 + qy * vy + qz * vz;\r\n\r\n\t\tvectorArray[0] = tw * qz + tz * qw + tx * qy - ty * qx;\r\n\t\tvectorArray[1] = tw * qy + ty * qw + tz * qx - tx * qz;\r\n\t\tvectorArray[2] = tw * qx + tx * qw + ty * qz - tz * qy;\r\n\r\n\t\treturn vector;\r\n\t}\r\n\r\n\ttoVector(): Vector3 {\r\n\t\treturn new Vector3([\r\n\t\t\tthis.x, this.y, this.z\r\n\t\t]);\r\n\t}\r\n\t\r\n\tsetEuler(pitch: number, yaw: number, roll: number): this {\r\n\t\tconst cosYaw = Math.cos(yaw * 0.5);\r\n\t\tconst sinYaw = Math.sin(yaw * 0.5);\r\n\t\tconst cosPitch = Math.cos(pitch * 0.5);\r\n\t\tconst sinPitch = Math.sin(pitch * 0.5);\r\n\t\tconst cosRoll = Math.cos(roll * 0.5);\r\n\t\tconst sinRoll = Math.sin(roll * 0.5);\r\n\t\tconst thisArray = this.array;\r\n\r\n        thisArray[0] = sinRoll * cosPitch * cosYaw - cosRoll * sinPitch * sinYaw;\r\n        thisArray[1] = cosRoll * sinPitch * cosYaw + sinRoll * cosPitch * sinYaw;\r\n        thisArray[2] = cosRoll * cosPitch * sinYaw - sinRoll * sinPitch * cosYaw;\r\n\t\tthisArray[3] = cosRoll * cosPitch * cosYaw + sinRoll * sinPitch * sinYaw;\r\n        \r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetAxisAngle(axis: Vector3, angle: number = 0): this {\r\n\t\tconst axisLength = axis.length();\r\n\t\tif (axisLength === 0) {\r\n\t\t  return this;\r\n\t\t}\r\n\t\tconst halfSin = Math.sin(angle * 0.5) / axisLength;\r\n\t\tconst axisArray = axis.array;\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] = axisArray[0] * halfSin;\r\n\t\tthisArray[1] = axisArray[1] * halfSin;\r\n\t\tthisArray[2] = axisArray[2] * halfSin;\r\n\t\tthisArray[3] = Math.cos(angle * 0.5);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetMatrix(matrix: Matrix3): this\r\n\tsetMatrix(matrix: Matrix4): this\r\n\tsetMatrix(matrix: Matrix3 | Matrix4): this {\r\n\t\tconst matrixArray = matrix.array;\r\n\t\tlet m11 = 0, m12 = 0, m13 = 0,\r\n\t\t\tm21 = 0, m22 = 0, m23 = 0,\r\n\t\t\tm31 = 0, m32 = 0, m33 = 0;\r\n\r\n\t\tif (matrix instanceof Matrix3) {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[3], m13 = matrixArray[6],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[4], m23 = matrixArray[7],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[5], m33 = matrixArray[8];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tm11 = matrixArray[0], m12 = matrixArray[4], m13 = matrixArray[ 8],\r\n\t\t\tm21 = matrixArray[1], m22 = matrixArray[5], m23 = matrixArray[ 9],\r\n\t\t\tm31 = matrixArray[2], m32 = matrixArray[6], m33 = matrixArray[10];\r\n\t\t}\r\n\r\n\t\tconst trace = m11 + m22 + m33;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tif (trace > 0) {\r\n\t\t\tconst s = Math.sqrt(trace + 1) * 2;\r\n\t\t\tthisArray[3] = 0.25 * s;\r\n\t\t\tthisArray[0] = (m32 - m23) / s;\r\n\t\t\tthisArray[1] = (m13 - m31) / s;\r\n\t\t\tthisArray[2] = (m21 - m12) / s;\r\n\t\t}\r\n\t\telse if (m11 > m22 && m11 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n\t\t\tthisArray[3] = (m32 - m23) / s;\r\n\t\t\tthisArray[0] = 0.25 * s;\r\n\t\t\tthisArray[1] = (m12 + m21) / s;\r\n\t\t\tthisArray[2] = (m13 + m31) / s;\r\n\t\t}\r\n\t\telse if (m22 > m33) {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n\t\t\tthisArray[3] = (m13 - m31) / s;\r\n\t\t\tthisArray[0] = (m12 + m21) / s;\r\n\t\t\tthisArray[1] = 0.25 * s;\r\n\t\t\tthisArray[2] = (m23 + m32) / s;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n\t\t\tthisArray[3] = (m21 - m12) / s;\r\n\t\t\tthisArray[0] = (m13 + m31) / s;\r\n\t\t\tthisArray[1] = (m23 + m32) / s;\r\n\t\t\tthisArray[2] = 0.25 * s;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlookAt(source: Vector3, dest: Vector3): Quaternion {\r\n\t\tconst forward = dest.clone().sub(source).normalize();\r\n\r\n\t\tconst axis = Space.forward.clone().cross(forward);\r\n\t\tconst dot = Space.forward.dot(forward);\r\n\r\n\t\treturn new Quaternion(axis.x, axis.y, axis.z, dot + 1).normalize();\r\n\t}\r\n\r\n\tstatic fromMatrix(matrix: Matrix3): QuaternionBase {\r\n\t\treturn new QuaternionBase().setMatrix(matrix);\r\n\t}\r\n\r\n\tsetVectors(from: Vector3, to: Vector3): this {\r\n\t\tconst dot = from.dot(to);\r\n\t\tconst cross = from.cross(to);\r\n\t\tconst crossArray = cross.array;\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = crossArray[0];\r\n\t\tthisArray[1] = crossArray[1];\r\n\t\tthisArray[2] = crossArray[2];\r\n\r\n\t\tconst fromLength = from.length();\r\n\t\tconst toLength = from.length();\r\n\r\n\t\tthisArray[3] = Math.sqrt(fromLength * fromLength * toLength * toLength) + dot;\r\n\r\n\t\treturn this.normalize();\r\n\t}\r\n\r\n\tdot(quat: Quaternion): number {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\treturn thisArray[0] * quatArray[0] + thisArray[1] * quatArray[1] + thisArray[2] * quatArray[2] + thisArray[3] * quatArray[3];\r\n\t}\r\n\r\n\tlengthSquared(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn thisArray[0] ** 2 + thisArray[1] ** 2 + thisArray[2] ** 2 + thisArray[3] ** 2;\r\n\t}\r\n\r\n\tlength(): number {\r\n\t\tconst thisArray = this.array;\r\n\t\treturn Math.hypot(thisArray[0], thisArray[1], thisArray[2], thisArray[3]);\r\n\t}\r\n\r\n\tangleTo(rotation: Quaternion): number {\r\n\t\treturn 2 * Math.acos(Math.abs(Math.max(-1, Math.min(1, this.dot(rotation)))));\r\n\t}\r\n\r\n\trotateTowards(rotation: Quaternion): this {\r\n\t\tconst angle = this.angleTo(rotation);\r\n\r\n\t\tif (angle === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconst t = Math.min(1, angle);\r\n\t\tthis.slerp(this, rotation, t);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tinvert(): this {\r\n\t\treturn this.conjugate();\r\n\t}\r\n\t\r\n\tconjugate(): this {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] *= -1;\r\n\t\tthisArray[1] *= -1;\r\n\t\tthisArray[2] *= -1;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnormalize(): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tlet length = this.length();\r\n\r\n\t\tif (length === 0) {\r\n\t\t\tthisArray[0] = 0;\r\n\t\t\tthisArray[1] = 0;\r\n\t\t\tthisArray[2] = 0;\r\n\t\t\tthisArray[3] = 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlength = 1 / length;\r\n\t\t\tthisArray[0] *= length;\r\n\t\t\tthisArray[1] *= length;\r\n\t\t\tthisArray[2] *= length;\r\n\t\t\tthisArray[3] *= length;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tadd(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] += quatArray[0];\r\n\t\tthisArray[1] += quatArray[1];\r\n\t\tthisArray[2] += quatArray[2];\r\n\t\tthisArray[3] += quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\t\tthisArray[0] -= quatArray[0];\r\n\t\tthisArray[1] -= quatArray[1];\r\n\t\tthisArray[2] -= quatArray[2];\r\n\t\tthisArray[3] -= quatArray[3];\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult(quat: Quaternion): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tconst quatArray = quat.array;\r\n\r\n\t\tconst ax = thisArray[0], ay = thisArray[1], az = thisArray[2], aw = thisArray[3];\r\n\t\tconst bx = quatArray[0], by = quatArray[1], bz = quatArray[2], bw = quatArray[3];\r\n\r\n\t\tthisArray[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n\t\tthisArray[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n\t\tthisArray[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n\t\tthisArray[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tscale(scalar: number): this {\r\n\t\tconst thisArray = this.array;\r\n\t\tthisArray[0] *= scalar;\r\n\t\tthisArray[1] *= scalar;\r\n\t\tthisArray[2] *= scalar;\r\n\t\tthisArray[3] *= scalar;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number): Quaternion\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number, out: Quaternion): Quaternion\r\n\tstatic slerp(from: Quaternion, to: Quaternion, t: number, out?: Quaternion): Quaternion {\r\n\t\tif (!(out instanceof Quaternion)) {\r\n\t\t\tout = new Quaternion();\r\n\t\t}\r\n\t\tif (t === 0) return out.copy(from);\r\n\t\tif (t === 1) return out.copy(to);\r\n\r\n\t\tconst outArray = out.array;\r\n\t\tconst fromArray = from.array;\r\n\t\tconst toArray = to.array;\r\n\r\n\t\tconst cosHalfTheta = fromArray[3] * toArray[3] + fromArray[0] * toArray[0] + fromArray[1] * toArray[1] + fromArray[2] * toArray[2];\r\n\t\t\r\n\t\tif (Math.abs(cosHalfTheta) >= 1) {\r\n\t\t\toutArray[3] = fromArray[3];\r\n\t\t\toutArray[0] = fromArray[0];\r\n\t\t\toutArray[1] = fromArray[1];\r\n\t\t\toutArray[2] = fromArray[2];\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst halfTheta = Math.acos(cosHalfTheta);\r\n\t\tconst sinHalfTheta = Math.sqrt(1 - cosHalfTheta * cosHalfTheta);\r\n\t\t\r\n\t\tif (Math.abs(sinHalfTheta - Math.trunc(sinHalfTheta)) < Number.EPSILON) {\r\n\t\t\toutArray[3] = (fromArray[3] * 0.5 + toArray[3] * 0.5);\r\n\t\t\toutArray[0] = (fromArray[0] * 0.5 + toArray[0] * 0.5);\r\n\t\t\toutArray[1] = (fromArray[1] * 0.5 + toArray[1] * 0.5);\r\n\t\t\toutArray[2] = (fromArray[2] * 0.5 + toArray[2] * 0.5);\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta;\r\n\t\tconst ratioB = Math.sin(t * halfTheta) / sinHalfTheta; \r\n\t\toutArray[3] = (fromArray[3] * ratioA + toArray[3] * ratioB);\r\n\t\toutArray[0] = (fromArray[0] * ratioA + toArray[0] * ratioB);\r\n\t\toutArray[1] = (fromArray[1] * ratioA + toArray[1] * ratioB);\r\n\t\toutArray[2] = (fromArray[2] * ratioA + toArray[2] * ratioB);\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * https://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t */\r\n\tslerp(from: Quaternion, to: Quaternion, t: number): this {\r\n\t\treturn Quaternion.slerp(from, to, t, this) as this;\r\n\t}\r\n\r\n\tcopyIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tarray[offset    ] = thisArray[0];\r\n\t\tarray[offset + 1] = thisArray[1];\r\n\t\tarray[offset + 2] = thisArray[2];\r\n\t\tarray[offset + 3] = thisArray[3];\r\n    }\r\n    \r\n    readFromArray(array: ArrayLike<number>, offset: number = 0): void {\r\n\t\tconst thisArray = this.array;\r\n\r\n\t\tthisArray[0] = array[offset    ];\r\n\t\tthisArray[1] = array[offset + 1];\r\n\t\tthisArray[2] = array[offset + 2];\r\n\t\tthisArray[3] = array[offset + 3];\r\n    }\r\n}\r\n\r\nvar Quaternion: QuaternionConstructor = QuaternionBase;\r\nconst QuaternionPool: StackPool<Quaternion> = new StackPool(QuaternionBase);\r\nconst QuaternionInjector: Injector<QuaternionConstructor> = new Injector({\r\n\tdefaultCtor: QuaternionBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: QuaternionConstructor) => {\r\n\t\t\tQuaternion = ctor;\r\n\t\t}\r\n});","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\nimport { MathError } from \"../../MathError\";\r\nimport { Quaternion } from \"../quaternions/Quaternion\";\r\nimport { Vector2, Vector2Values } from \"../vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"../vectors/Vector3\";\r\nimport { Vector4, Vector4Values } from \"../vectors/Vector4\";\r\nimport { Matrix3, Matrix3Values } from \"./Matrix3\";\r\n\r\nexport { Matrix4Values };\r\nexport { Matrix4 };\r\nexport { Matrix4Injector };\r\nexport { Matrix4Base };\r\n\r\ntype Matrix4Values = [\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number,\r\n  number, number, number, number\r\n];\r\n\r\ninterface Matrix4Constructor {\r\n\treadonly prototype: Matrix4;\r\n\tnew(): Matrix4;\r\n\tnew(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  new(array: ArrayLike<number>): Matrix4;\r\n\r\n  fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4;\r\n  fromArray(array: ArrayLike<number>): Matrix4;\r\n\r\n  invert(A: Matrix4, out: Matrix4): Matrix4;\r\n  transpose(A: Matrix4, out: Matrix4): Matrix4;\r\n  add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n  mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4;\r\n\r\n  identity(): Matrix4;\r\n  zeros(): Matrix4;\r\n\r\n  translation(vector: Vector3): Matrix4;\r\n  rotationX(angle: number): Matrix4;\r\n  rotationY(angle: number): Matrix4;\r\n  rotationZ(angle: number): Matrix4;\r\n  rotation(matrix: Matrix3): Matrix4;\r\n  scaling(vector: Vector3): Matrix4;\r\n  \r\n  perspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): Matrix4;\r\n  orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n  frustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4;\r\n}\r\n\r\n/**\r\n * 4x4 matrix. Values are stored in column major order.\r\n */\r\ninterface Matrix4 {\r\n  readonly array: Float32Array;\r\n  getValues(): Matrix4Values\r\n  setValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this;\r\n  /*row1: Vector4Values;\r\n  row2: Vector4Values;\r\n  row3: Vector4Values;\r\n  row4: Vector4Values;\r\n  col1: Vector4Values;\r\n  col2: Vector4Values;\r\n  col3: Vector4Values;\r\n  col4: Vector4Values;*/\r\n  m11: number;\r\n  m12: number;\r\n  m13: number;\r\n  m14: number;\r\n  m21: number;\r\n  m22: number;\r\n  m23: number;\r\n  m24: number;\r\n  m31: number;\r\n  m32: number;\r\n  m33: number;\r\n  m34: number;\r\n  m41: number;\r\n  m42: number;\r\n  m43: number;\r\n  m44: number;\r\n  //setArray(array: WritableArrayLike<number>): this;\r\n  getRotation(): Quaternion;\r\n  setRotation(rotation: Quaternion): this;\r\n  setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this;\r\n  equals(mat: Matrix4): boolean;\r\n  copy(mat: Matrix4): this;\r\n  clone(): this;\r\n  det(): number;\r\n  trace(): number;\r\n  setIdentity(): this;\r\n  setZeros(): this;\r\n  negate(): this;\r\n  transpose(): this;\r\n  invert(): this;\r\n  add(mat: Matrix4): this;\r\n  sub(mat: Matrix4): this;\r\n  mult(mat: Matrix4): this;\r\n\r\n  getMaxScaleOnAxis(): number;\r\n  solve(vecB: Vector4): Vector4Values;\r\n  solve2(vecB: Vector2): Vector2Values;\r\n  solve3(vecB: Vector3): Vector3Values;\r\n\r\n  writeIntoArray(out: WritableArrayLike<number>, offset?: number): void;\r\n  readFromArray(arr: ArrayLike<number>, offset?: number): this;\r\n\r\n  setTranslation(vector: Vector3): this;\r\n  translate(vector: Vector3): this;\r\n\r\n  setRotationX(angle: number): this;\r\n  rotateX(angle: number): this;\r\n  setRotationY(angle: number): this;\r\n  rotateY(angle: number): this;\r\n  setRotationZ(angle: number): this;\r\n  rotateZ(angle: number): this;\r\n\r\n  rotate(vector: Vector3, angle: number): this\r\n  rotation(matrix: Matrix3): this;\r\n\r\n  setScaling(vector: Vector3): this;\r\n  scale(vector: Vector3): this;\r\n\r\n  lookAt(eye: Vector3 | Vector3Values, target: Vector3, up: Vector3): this;\r\n\r\n  transformPoint(point: Vector3): Vector3;\r\n  transformDirection(direction: Vector3): Vector3;\r\n  transformNormal(normal: Vector3): Vector3;\r\n  \r\n  setFrustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n  setPerspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number): this;\r\n  setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this;\r\n}\r\n\r\nclass Matrix4Base implements Matrix4 {\r\n  readonly array: Float32Array;\r\n\r\n\tconstructor()\r\n  constructor(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  )\r\n  constructor(array: ArrayLike<number>)\r\n\tconstructor(\r\n    ...args: any[]\r\n  ) {\r\n\t\tif (typeof args[0] === \"number\") {\r\n\t\t\tthis.array = new Float32Array([\r\n        args[ 0], args[ 1], args[ 2], args[ 3],\r\n        args[ 4], args[ 5], args[ 6], args[ 7],\r\n        args[ 8], args[ 9], args[10], args[11],\r\n        args[12], args[13], args[14], args[15]\r\n      ]);\r\n\t\t}\r\n\t\telse if (typeof args[0] === \"object\") {\r\n      const array = args[0];\r\n      this.checkArray(array);\r\n      if (array instanceof Float32Array) {\r\n        this.array = array;\r\n      }\r\n      else {\r\n        this.array = new Float32Array(array);\r\n      }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.array = new Float32Array(16);\r\n\t\t}\r\n  }\r\n\r\n  static fromValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): Matrix4Base {\r\n    return new Matrix4Base(\r\n      m11, m21, m31, m41,\r\n      m12, m22, m32, m42,\r\n      m13, m23, m33, m43,\r\n      m14, m24, m34, m44\r\n    );\r\n  }\r\n\r\n  static fromArray(array: ArrayLike<number>): Matrix4Base {\r\n    if (array.length < 16) {\r\n      throw new Error(`Matrix4 needs an array of size 16 at least.`);\r\n    }\r\n    return new Matrix4Base(array);\r\n  }\r\n\r\n  getValues(): Matrix4Values {\r\n    const thisArray = this.array;\r\n\t\treturn [\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ];\r\n\t}\r\n\r\n\tsetValues(\r\n    m11: number, m21: number, m31: number, m41: number,\r\n    m12: number, m22: number, m32: number, m42: number,\r\n    m13: number, m23: number, m33: number, m43: number,\r\n    m14: number, m24: number, m34: number, m44: number\r\n  ): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 3] = m41;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 7] = m42;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n    thisArray[11] = m43;\r\n    thisArray[12] = m14;\r\n    thisArray[13] = m24;\r\n    thisArray[14] = m34;\r\n    thisArray[15] = m44;\r\n\r\n    return this;\r\n  }\r\n  \r\n  get m11(): number {\r\n\t\treturn this.array[0];\r\n\t}\r\n\r\n\tset m11(val: number) {\r\n\t\tthis.array[0] = val;\r\n  }\r\n  \r\n  get m12() {\r\n\t\treturn this.array[4];\r\n\t}\r\n\r\n\tset m12(val: number) {\r\n\t\tthis.array[4] = val;\r\n  }\r\n  \r\n  get m13() {\r\n\t\treturn this.array[8];\r\n\t}\r\n\r\n\tset m13(val: number) {\r\n\t\tthis.array[8] = val;\r\n  }\r\n  \r\n  get m14() {\r\n\t\treturn this.array[12];\r\n\t}\r\n\r\n\tset m14(val: number) {\r\n\t\tthis.array[12] = val;\r\n  }\r\n  \r\n  get m21() {\r\n\t\treturn this.array[1];\r\n\t}\r\n\r\n\tset m21(val: number) {\r\n\t\tthis.array[1] = val;\r\n  }\r\n  \r\n  get m22() {\r\n\t\treturn this.array[5];\r\n\t}\r\n\r\n\tset m22(val: number) {\r\n\t\tthis.array[5] = val;\r\n  }\r\n  \r\n  get m23() {\r\n\t\treturn this.array[9];\r\n\t}\r\n\r\n\tset m23(val: number) {\r\n\t\tthis.array[9] = val;\r\n  }\r\n  \r\n  get m24() {\r\n\t\treturn this.array[13];\r\n\t}\r\n\r\n\tset m24(val: number) {\r\n\t\tthis.array[13] = val;\r\n  }\r\n  \r\n  get m31() {\r\n\t\treturn this.array[2];\r\n\t}\r\n\r\n  set m31(val: number) {\r\n\t\tthis.array[2] = val;\r\n  }\r\n  \r\n  get m32() {\r\n\t\treturn this.array[6];\r\n\t}\r\n\r\n\tset m32(val: number) {\r\n\t\tthis.array[6] = val;\r\n  }\r\n  \r\n  get m33() {\r\n\t\treturn this.array[10];\r\n\t}\r\n\r\n  set m33(val: number) {\r\n\t\tthis.array[10] = val;\r\n  }\r\n  \r\n  get m34() {\r\n\t\treturn this.array[14];\r\n\t}\r\n\r\n\tset m34(m34: number) {\r\n\t\tthis.array[14] = m34;\r\n  }\r\n  \r\n  get m41() {\r\n\t\treturn this.array[3];\r\n\t}\r\n\r\n\tset m41(val: number) {\r\n\t\tthis.array[3] = val;\r\n  }\r\n  \r\n  get m42() {\r\n\t\treturn this.array[7];\r\n\t}\r\n\r\n\tset m42(val: number) {\r\n\t\tthis.array[7] = val;\r\n  }\r\n  \r\n  get m43() {\r\n\t\treturn this.array[11];\r\n\t}\r\n\r\n\tset m43(val: number) {\r\n\t\tthis.array[11] = val;\r\n  }\r\n  \r\n  get m44() {\r\n\t\treturn this.array[15];\r\n\t}\r\n\r\n\tset m44(m44: number) {\r\n\t\tthis.array[15] = m44;\r\n  }\r\n\r\n  private checkArray(array: ArrayLike<number>): void {\r\n\t\tif (array.length < 16) {\r\n\t\t\tthrow new MathError(`Array must be of length 16 at least.`);\r\n\t\t}\r\n\t}\r\n\r\n\t// setArray(array: WritableArrayLike<number>): this {\r\n\t// \tthis._checkArray(array);\r\n\t// \tthisArray = array;\r\n\t// \treturn this;\r\n\t// }\r\n\r\n  getRotation(): Quaternion {\r\n    const thisArray = this.array;\r\n    const m11 = thisArray[0], m12 = thisArray[4], m13 = thisArray[ 8],\r\n          m21 = thisArray[1], m22 = thisArray[5], m23 = thisArray[ 9],\r\n          m31 = thisArray[2], m32 = thisArray[6], m33 = thisArray[10];\r\n    const trace = m11 + m22 + m33;\r\n    \r\n    let x = 0;\r\n    let y = 0;\r\n    let z = 0;\r\n    let w = 0;\r\n\r\n    if (trace > 0) {\r\n      const s = Math.sqrt(trace + 1) * 2;\r\n      w = 0.25 * s;\r\n      x = (m32 - m23) / s;\r\n      y = (m13 - m31) / s;\r\n      z = (m21 - m12) / s;\r\n    }\r\n    else if (m11 > m22 && m11 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n      w = (m32 - m23) / s;\r\n      x = 0.25 * s;\r\n      y = (m12 + m21) / s;\r\n      z = (m13 + m31) / s;\r\n    }\r\n    else if (m22 > m33) {\r\n      const s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n      w = (m13 - m31) / s;\r\n      x = (m12 + m21) / s;\r\n      y = 0.25 * s;\r\n      z = (m23 + m32) / s;\r\n    }\r\n    else {\r\n      const s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n      w = (m21 - m12) / s;\r\n      x = (m13 + m31) / s;\r\n      y = (m23 + m32) / s;\r\n      z = 0.25 * s;\r\n    }\r\n    \r\n    return new Quaternion(x, y, z, w);\r\n  }\r\n\r\n  setTRS(translation: Vector3, rotation: Quaternion, scaling: Vector3): this {\r\n    const thisArray = this.array;\r\n    const rotationArray = rotation.array;\r\n    const translationArray = translation.array;\r\n    const scalingArray = scaling.array;\r\n\r\n    const x = rotationArray[0];\r\n    const y = rotationArray[1];\r\n    const z = rotationArray[2];\r\n    const w = rotationArray[3];\r\n\r\n    const x2 = x + x;\r\n    const y2 = y + y;\r\n    const z2 = z + z;\r\n\r\n    const xx = x * x2;\r\n    const xy = x * y2;\r\n    const xz = x * z2;\r\n    const yy = y * y2;\r\n    const yz = y * z2;\r\n    const zz = z * z2;\r\n    const wx = w * x2;\r\n    const wy = w * y2;\r\n    const wz = w * z2;\r\n    const sx = scalingArray[0];\r\n    const sy = scalingArray[1];\r\n    const sz = scalingArray[2];\r\n\r\n    thisArray[0] = (1 - (yy + zz)) * sx;\r\n    thisArray[1] = (xy + wz) * sx;\r\n    thisArray[2] = (xz - wy) * sx;\r\n    thisArray[3] = 0;\r\n    thisArray[4] = (xy - wz) * sy;\r\n    thisArray[5] = (1 - (xx + zz)) * sy;\r\n    thisArray[6] = (yz + wx) * sy;\r\n    thisArray[7] = 0;\r\n    thisArray[8] = (xz + wy) * sz;\r\n    thisArray[9] = (yz - wx) * sz;\r\n    thisArray[10] = (1 - (xx + yy)) * sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = translationArray[0];\r\n    thisArray[13] = translationArray[1];\r\n    thisArray[14] = translationArray[2];\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n  \r\n  setRotation(quaternion: Quaternion): this {\r\n    const thisArray = this.array;\r\n    const quaternionArray = quaternion.array;\r\n\t\tconst quaternionLengthSquared = quaternion.lengthSquared();\r\n\t\tconst s = 2.0 / quaternionLengthSquared;\r\n\r\n\t\tconst x = quaternionArray[0];\r\n\t\tconst y = quaternionArray[1];\r\n\t\tconst z = quaternionArray[2];\r\n\t\tconst w = quaternionArray[3];\r\n\r\n\t\tconst xs = x * s;\r\n\t\tconst ys = y * s;\r\n\t\tconst zs = z * s;\r\n\t  \r\n\t\tconst wx = w * xs;\r\n\t\tconst wy = w * ys;\r\n\t\tconst wz = w * zs;\r\n\t  \r\n\t\tconst xx = x * xs;\r\n\t\tconst xy = x * ys;\r\n\t\tconst xz = x * zs;\r\n\t\t\r\n\t\tconst yy = y * ys;\r\n\t\tconst yz = y * zs;\r\n\t\tconst zz = z * zs;\r\n\r\n    const m11 = 1 - (yy + zz);\r\n    const m21 = xy + wz;\r\n    const m31 = xz - wy;\r\n    const m12 = xy - wz;\r\n    const m22 = 1 - (xx + zz);\r\n    const m32 = yz + wx;\r\n    const m13 = xz + wy;\r\n    const m23 = yz - wx;\r\n    const m33 = 1 - (xx + yy);\r\n\r\n    thisArray[ 0] = m11;\r\n    thisArray[ 1] = m21;\r\n    thisArray[ 2] = m31;\r\n    thisArray[ 4] = m12;\r\n    thisArray[ 5] = m22;\r\n    thisArray[ 6] = m32;\r\n    thisArray[ 8] = m13;\r\n    thisArray[ 9] = m23;\r\n    thisArray[10] = m33;\r\n\r\n    return this;\r\n  }\r\n\r\n  equals(mat: Matrix4): boolean {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n    return thisArray[ 0] === matArray[ 0]\r\n      && thisArray[ 1] === matArray[ 1]\r\n      && thisArray[ 2] === matArray[ 2]\r\n      && thisArray[ 3] === matArray[ 3]\r\n      && thisArray[ 4] === matArray[ 4]\r\n      && thisArray[ 5] === matArray[ 5]\r\n      && thisArray[ 6] === matArray[ 6]\r\n      && thisArray[ 7] === matArray[ 7]\r\n      && thisArray[ 8] === matArray[ 8]\r\n      && thisArray[ 9] === matArray[ 9]\r\n      && thisArray[10] === matArray[10]\r\n      && thisArray[11] === matArray[11]\r\n      && thisArray[12] === matArray[12]\r\n      && thisArray[13] === matArray[13]\r\n      && thisArray[14] === matArray[14]\r\n      && thisArray[15] === matArray[15];\r\n  }\r\n\r\n  copy(mat: Matrix4): this {\r\n    const thisArray = this.array;\r\n    const matArray = mat.array;\r\n\r\n    thisArray[ 0] = matArray[ 0];\r\n    thisArray[ 1] = matArray[ 1];\r\n    thisArray[ 2] = matArray[ 2];\r\n    thisArray[ 3] = matArray[ 3];\r\n    thisArray[ 4] = matArray[ 4];\r\n    thisArray[ 5] = matArray[ 5];\r\n    thisArray[ 6] = matArray[ 6];\r\n    thisArray[ 7] = matArray[ 7];\r\n    thisArray[ 8] = matArray[ 8];\r\n    thisArray[ 9] = matArray[ 9];\r\n    thisArray[10] = matArray[10];\r\n    thisArray[11] = matArray[11];\r\n    thisArray[12] = matArray[12];\r\n    thisArray[13] = matArray[13];\r\n    thisArray[14] = matArray[14];\r\n    thisArray[15] = matArray[15];\r\n\r\n    return this;\r\n  }\r\n\r\n  clone(): this {\r\n    const thisArray = this.array;\r\n    return new Matrix4Base(\r\n      thisArray[ 0], thisArray[ 1], thisArray[ 2], thisArray[ 3],\r\n      thisArray[ 4], thisArray[ 5], thisArray[ 6], thisArray[ 7],\r\n      thisArray[ 8], thisArray[ 9], thisArray[10], thisArray[11],\r\n      thisArray[12], thisArray[13], thisArray[14], thisArray[15]\r\n    ) as this;\r\n  }\r\n\r\n  static identity(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      1, 0, 0, 0,\r\n      0, 1, 0, 0,\r\n      0, 0, 1, 0,\r\n      0, 0, 0, 1\r\n    );\r\n  }\r\n\r\n  setIdentity(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  static zeros(): Matrix4Base {\r\n    return new Matrix4Base(\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0\r\n    );\r\n  }\r\n\r\n  setZeros(): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 0;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 0;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 0;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  det(): number {\r\n    const thisArray = this.array;\r\n    const det2_01_01 = thisArray[0] * thisArray[5] - thisArray[1] * thisArray[4];\r\n    const det2_01_02 = thisArray[0] * thisArray[6] - thisArray[2] * thisArray[4];\r\n    const det2_01_03 = thisArray[0] * thisArray[7] - thisArray[3] * thisArray[4];\r\n    const det2_01_12 = thisArray[1] * thisArray[6] - thisArray[2] * thisArray[5];\r\n    const det2_01_13 = thisArray[1] * thisArray[7] - thisArray[3] * thisArray[5];\r\n    const det2_01_23 = thisArray[2] * thisArray[7] - thisArray[3] * thisArray[6];\r\n    const det3_201_012 = thisArray[8] * det2_01_12 - thisArray[ 9] * det2_01_02 + thisArray[10] * det2_01_01;\r\n    const det3_201_013 = thisArray[8] * det2_01_13 - thisArray[ 9] * det2_01_03 + thisArray[11] * det2_01_01;\r\n    const det3_201_023 = thisArray[8] * det2_01_23 - thisArray[10] * det2_01_03 + thisArray[11] * det2_01_02;\r\n    const det3_201_123 = thisArray[9] * det2_01_23 - thisArray[10] * det2_01_13 + thisArray[11] * det2_01_12;\r\n\r\n    return -det3_201_123 * thisArray[12] + det3_201_023 * thisArray[13]\r\n      - det3_201_013 * thisArray[14] + det3_201_012 * thisArray[15];\r\n  }\r\n\r\n  trace(): number {\r\n    const thisArray = this.array;\r\n    return thisArray[0] + thisArray[5] + thisArray[10] + thisArray[15];\r\n  }\r\n\r\n  static negate(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = -a[ 0];\r\n    o[ 1] = -a[ 1];\r\n    o[ 2] = -a[ 2];\r\n    o[ 3] = -a[ 3];\r\n    o[ 4] = -a[ 4];\r\n    o[ 5] = -a[ 5];\r\n    o[ 6] = -a[ 6];\r\n    o[ 7] = -a[ 7];\r\n    o[ 8] = -a[ 8];\r\n    o[ 9] = -a[ 9];\r\n    o[10] = -a[10];\r\n    o[11] = -a[11];\r\n    o[12] = -a[12];\r\n    o[13] = -a[13];\r\n    o[14] = -a[14];\r\n    o[15] = -a[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  negate(): this {\r\n    return Matrix4Base.negate(this, this) as this;\r\n  }\r\n\r\n  static transpose(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    o[ 0] = a11;\r\n    o[ 1] = a12;\r\n    o[ 2] = a13;\r\n    o[ 3] = a14;\r\n    o[ 4] = a21;\r\n    o[ 5] = a22;\r\n    o[ 6] = a23;\r\n    o[ 7] = a24;\r\n    o[ 8] = a31;\r\n    o[ 9] = a32;\r\n    o[10] = a33;\r\n    o[11] = a34;\r\n    o[12] = a41;\r\n    o[13] = a42;\r\n    o[14] = a43;\r\n    o[15] = a44;\r\n    \r\n    return out;\r\n  }\r\n\r\n  transpose(): this {\r\n    return Matrix4Base.transpose(this, this) as this;\r\n  }\r\n\r\n  static invert(A: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const o = out.array;\r\n\r\n    const o00 = a[ 0];\r\n    const o01 = a[ 1];\r\n    const o02 = a[ 2];\r\n    const o03 = a[ 3];\r\n    const o10 = a[ 4];\r\n    const o11 = a[ 5];\r\n    const o12 = a[ 6];\r\n    const o13 = a[ 7];\r\n    const o20 = a[ 8];\r\n    const o21 = a[ 9];\r\n    const o22 = a[10];\r\n    const o23 = a[11];\r\n    const o30 = a[12];\r\n    const o31 = a[13];\r\n    const o32 = a[14];\r\n    const o33 = a[15];\r\n\r\n    const t00 = o00 * o11 - o01 * o10;\r\n    const t01 = o00 * o12 - o02 * o10;\r\n    const t02 = o00 * o13 - o03 * o10;\r\n    const t03 = o01 * o12 - o02 * o11;\r\n    const t04 = o01 * o13 - o03 * o11;\r\n    const t05 = o02 * o13 - o03 * o12;\r\n    const t06 = o20 * o31 - o21 * o30;\r\n    const t07 = o20 * o32 - o22 * o30;\r\n    const t08 = o20 * o33 - o23 * o30;\r\n    const t09 = o21 * o32 - o22 * o31;\r\n    const t10 = o21 * o33 - o23 * o31;\r\n    const t11 = o22 * o33 - o23 * o32;\r\n\r\n    const d = (t00 * t11 - t01 * t10 + t02 * t09 + t03 * t08 - t04 * t07 + t05 * t06);\r\n    \r\n    if (d == 0) {\r\n      throw new MathError(`Matrix is not invertible.`);\r\n    }\r\n\r\n    const invDet = 1 / d;\r\n\r\n    o[ 0] = (o11 * t11 - o12 * t10 + o13 * t09) * invDet;\r\n    o[ 1] = (-o01 * t11 + o02 * t10 - o03 * t09) * invDet;\r\n    o[ 2] = (o31 * t05 - o32 * t04 + o33 * t03) * invDet;\r\n    o[ 3] = (-o21 * t05 + o22 * t04 - o23 * t03) * invDet;\r\n    o[ 4] = (-o10 * t11 + o12 * t08 - o13 * t07) * invDet;\r\n    o[ 5] = (o00 * t11 - o02 * t08 + o03 * t07) * invDet;\r\n    o[ 6] = (-o30 * t05 + o32 * t02 - o33 * t01) * invDet;\r\n    o[ 7] = (o20 * t05 - o22 * t02 + o23 * t01) * invDet;\r\n    o[ 8] = (o10 * t10 - o11 * t08 + o13 * t06) * invDet;\r\n    o[ 9] = (-o00 * t10 + o01 * t08 - o03 * t06) * invDet;\r\n    o[10] = (o30 * t04 - o31 * t02 + o33 * t00) * invDet;\r\n    o[11] = (-o20 * t04 + o21 * t02 - o23 * t00) * invDet;\r\n    o[12] = (-o10 * t09 + o11 * t07 - o12 * t06) * invDet;\r\n    o[13] = (o00 * t09 - o01 * t07 + o02 * t06) * invDet;\r\n    o[14] = (-o30 * t03 + o31 * t01 - o32 * t00) * invDet;\r\n    o[15] = (o20 * t03 - o21 * t01 + o22 * t00) * invDet;\r\n\r\n    return out;\r\n  }\r\n\r\n  invert(): this {\r\n    return Matrix4Base.invert(this, this) as this;\r\n  }\r\n\r\n  static add(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] + b[ 0];\r\n    o[ 1] = a[ 1] + b[ 1];\r\n    o[ 2] = a[ 2] + b[ 2];\r\n    o[ 3] = a[ 3] + b[ 3];\r\n    o[ 4] = a[ 4] + b[ 4];\r\n    o[ 5] = a[ 5] + b[ 5];\r\n    o[ 6] = a[ 6] + b[ 6];\r\n    o[ 7] = a[ 7] + b[ 7];\r\n    o[ 8] = a[ 8] + b[ 8];\r\n    o[ 9] = a[ 9] + b[ 9];\r\n    o[10] = a[10] + b[10];\r\n    o[11] = a[11] + b[11];\r\n    o[12] = a[12] + b[12];\r\n    o[13] = a[13] + b[13];\r\n    o[14] = a[14] + b[14];\r\n    o[15] = a[15] + b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  add(matrix: Matrix4): this {\r\n    return Matrix4Base.add(this, matrix, this) as this;\r\n  }\r\n\r\n  static sub(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    o[ 0] = a[ 0] - b[ 0];\r\n    o[ 1] = a[ 1] - b[ 1];\r\n    o[ 2] = a[ 2] - b[ 2];\r\n    o[ 3] = a[ 3] - b[ 3];\r\n    o[ 4] = a[ 4] - b[ 4];\r\n    o[ 5] = a[ 5] - b[ 5];\r\n    o[ 6] = a[ 6] - b[ 6];\r\n    o[ 7] = a[ 7] - b[ 7];\r\n    o[ 8] = a[ 8] - b[ 8];\r\n    o[ 9] = a[ 9] - b[ 9];\r\n    o[10] = a[10] - b[10];\r\n    o[11] = a[11] - b[11];\r\n    o[12] = a[12] - b[12];\r\n    o[13] = a[13] - b[13];\r\n    o[14] = a[14] - b[14];\r\n    o[15] = a[15] - b[15];\r\n\r\n    return out;\r\n  }\r\n\r\n  sub(matrix: Matrix4): this {\r\n    return Matrix4Base.sub(this, matrix, this) as this;\r\n  }\r\n\r\n  static mult(A: Matrix4, B: Matrix4, out: Matrix4): Matrix4 {\r\n    const a = A.array;\r\n    const b = B.array;\r\n    const o = out.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a21 = a[ 1];\r\n    const a31 = a[ 2];\r\n    const a41 = a[ 3];\r\n    const a12 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a32 = a[ 6];\r\n    const a42 = a[ 7];\r\n    const a13 = a[ 8];\r\n    const a23 = a[ 9];\r\n    const a33 = a[10];\r\n    const a43 = a[11];\r\n    const a14 = a[12];\r\n    const a24 = a[13];\r\n    const a34 = a[14];\r\n    const a44 = a[15];\r\n\r\n    const b11 = b[ 0];\r\n    const b21 = b[ 1];\r\n    const b31 = b[ 2];\r\n    const b41 = b[ 3];\r\n    const b12 = b[ 4];\r\n    const b22 = b[ 5];\r\n    const b32 = b[ 6];\r\n    const b42 = b[ 7];\r\n    const b13 = b[ 8];\r\n    const b23 = b[ 9];\r\n    const b33 = b[10];\r\n    const b43 = b[11];\r\n    const b14 = b[12];\r\n    const b24 = b[13];\r\n    const b34 = b[14];\r\n    const b44 = b[15];\r\n\r\n    o[ 0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n    o[ 1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n    o[ 2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n    o[ 3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n    o[ 4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n    o[ 5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n    o[ 6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n    o[ 7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n    o[ 8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n    o[ 9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n    o[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n    o[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n    o[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n    o[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n    o[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n    o[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n    return out;\r\n  }\r\n\r\n  mult(matrix: Matrix4): this {\r\n    return Matrix4Base.mult(this, matrix, this) as this;\r\n  }\r\n\r\n\tgetMaxScaleOnAxis(): number {\r\n    const thisArray = this.array;\r\n    const scaleXSq = thisArray[ 0] * thisArray[ 0] + thisArray[ 1] * thisArray[ 1] + thisArray[ 2] * thisArray[ 2];\r\n    const scaleYSq = thisArray[ 4] * thisArray[ 4] + thisArray[ 5] * thisArray[ 5] + thisArray[ 6] * thisArray[ 6];\r\n    const scaleZSq = thisArray[ 8] * thisArray[ 8] + thisArray[ 9] * thisArray[ 9] + thisArray[10] * thisArray[10];\r\n\r\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\r\n  }\r\n\r\n  writeIntoArray(array: WritableArrayLike<number>, offset: number = 0): void {\r\n    const thisArray = this.array;\r\n\t\tarray[offset     ] = thisArray[ 0];\r\n\t\tarray[offset +  1] = thisArray[ 1];\r\n    array[offset +  2] = thisArray[ 2];\r\n    array[offset +  3] = thisArray[ 3];\r\n\t\tarray[offset +  4] = thisArray[ 4];\r\n    array[offset +  5] = thisArray[ 5];\r\n    array[offset +  6] = thisArray[ 6];\r\n\t\tarray[offset +  7] = thisArray[ 7];\r\n    array[offset +  8] = thisArray[ 8];\r\n    array[offset +  9] = thisArray[ 9];\r\n\t\tarray[offset + 10] = thisArray[10];\r\n    array[offset + 11] = thisArray[11];\r\n    array[offset + 12] = thisArray[12];\r\n\t\tarray[offset + 13] = thisArray[13];\r\n    array[offset + 14] = thisArray[14];\r\n    array[offset + 15] = thisArray[15];\r\n  }\r\n    \r\n  readFromArray(array: ArrayLike<number>, offset: number = 0): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = array[offset     ];\r\n    thisArray[ 1] = array[offset +  1];\r\n    thisArray[ 2] = array[offset +  2];\r\n    thisArray[ 3] = array[offset +  3];\r\n    thisArray[ 4] = array[offset +  4];\r\n    thisArray[ 5] = array[offset +  5];\r\n    thisArray[ 6] = array[offset +  6];\r\n    thisArray[ 7] = array[offset +  7];\r\n    thisArray[ 8] = array[offset +  8];\r\n    thisArray[ 9] = array[offset +  9];\r\n    thisArray[10] = array[offset + 10];\r\n    thisArray[11] = array[offset + 11];\r\n    thisArray[12] = array[offset + 12];\r\n    thisArray[13] = array[offset + 13];\r\n    thisArray[14] = array[offset + 14];\r\n    thisArray[15] = array[offset + 15];\r\n\r\n    return this;\r\n  }\r\n\r\n  solve(vecB: Vector4): Vector4Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a14 = a[ 3];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a24 = a[ 7];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const a34 = a[11];\r\n    const a41 = a[12];\r\n    const a42 = a[13];\r\n    const a43 = a[14];\r\n    const a44 = a[15];\r\n    const b00 = a11 * a22 - a12 * a21;\r\n    const b01 = a11 * a23 - a13 * a21;\r\n    const b02 = a11 * a24 - a14 * a21;\r\n    const b03 = a12 * a23 - a13 * a22;\r\n    const b04 = a12 * a24 - a14 * a22;\r\n    const b05 = a13 * a24 - a14 * a23;\r\n    const b06 = a31 * a42 - a32 * a41;\r\n    const b07 = a31 * a43 - a33 * a41;\r\n    const b08 = a31 * a44 - a34 * a41;\r\n    const b09 = a32 * a43 - a33 * a42;\r\n    const b10 = a32 * a44 - a34 * a42;\r\n    const b11 = a33 * a44 - a34 * a43;\r\n\r\n    const bX = vecB.x;\r\n    const bY = vecB.y;\r\n    const bZ = vecB.z;\r\n    const bW = vecB.w;\r\n\r\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (det != 0) {\r\n      det = 1 / det;\r\n    }\r\n\r\n    const x = det *\r\n      ((a22 * b11 - a23 * b10 + a24 * b09) * bX -\r\n      (a21 * b11 - a23 * b08 + a24 * b07) * bY +\r\n      (a21 * b10 - a22 * b08 + a24 * b06) * bZ -\r\n      (a21 * b09 - a22 * b07 + a23 * b06) * bW)\r\n    const y = det *\r\n      -((a12 * b11 - a13 * b10 + a14 * b09) * bX -\r\n      (a11 * b11 - a13 * b08 + a14 * b07) * bY +\r\n      (a11 * b10 - a12 * b08 + a14 * b06) * bZ -\r\n      (a11 * b09 - a12 * b07 + a13 * b06) * bW)\r\n    const z = det *\r\n      ((a42 * b05 - a43 * b04 + a44 * b03) * bX -\r\n      (a41 * b05 - a43 * b02 + a44 * b01) * bY +\r\n      (a41 * b04 - a42 * b02 + a44 * b00) * bZ -\r\n      (a41 * b03 - a42 * b01 + a43 * b00) * bW)\r\n    const w = det *\r\n      -((a32 * b05 - a33 * b04 + a34 * b03) * bX -\r\n      (a31 * b05 - a33 * b02 + a34 * b01) * bY +\r\n      (a31 * b04 - a32 * b02 + a34 * b00) * bZ -\r\n      (a31 * b03 - a32 * b01 + a33 * b00) * bW);\r\n    \r\n    return [\r\n      x, y, z, w\r\n    ];\r\n  }\r\n\r\n  solve2(vecB: Vector2): Vector2Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[0];\r\n    const a12 = a[1];\r\n    const a21 = a[4];\r\n    const a22 = a[5];\r\n    const bx = vecB.x - a[8];\r\n    const by = vecB.y - a[9];\r\n    \r\n    let det = a11 * a22 - a12 * a21;\r\n\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (a22 * bx - a12 * by);\r\n    const y = det * (a11 * by - a21 * bx);\r\n\r\n    return [\r\n      x, y\r\n    ];\r\n  }\r\n\r\n  solve3(vecB: Vector3): Vector3Values {\r\n    const a = this.array;\r\n\r\n    const a11 = a[ 0];\r\n    const a12 = a[ 1];\r\n    const a13 = a[ 2];\r\n    const a21 = a[ 4];\r\n    const a22 = a[ 5];\r\n    const a23 = a[ 6];\r\n    const a31 = a[ 8];\r\n    const a32 = a[ 9];\r\n    const a33 = a[10];\r\n    const bx = vecB.x - a[12];\r\n    const by = vecB.y - a[13];\r\n    const bz = vecB.z - a[14];\r\n\r\n    let rx = a22 * a33 - a23 * a32;\r\n    let ry = a23 * a31 - a21 * a33;\r\n    let rz = a21 * a32 - a22 * a31;\r\n\r\n    let det = a11 * rx + a12 * ry + a13 * rz;\r\n    if (det != 0.0) {\r\n      det = 1.0 / det;\r\n    }\r\n\r\n    const x = det * (bx * rx + by * ry + bz * rz);\r\n\r\n    rx = -(a32 * bz - a33 * by);\r\n    ry = -(a33 * bx - a31 * bz);\r\n    rz = -(a31 * by - a32 * bx);\r\n    \r\n    const y = det * (a11 * rx + a12 * ry + a13 * rz);\r\n    \r\n    rx = -(by * a23 - bz * a22);\r\n    ry = -(bz * a21 - bx * a23);\r\n    rz = -(bx * a22 - by * a21);\r\n    \r\n    const z = det * (a11 * rx + a12 * ry + a13 * rz);\r\n\r\n    return [\r\n      x, y, z\r\n    ];\r\n  }\r\n\r\n  static translation(vector: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setTranslation(vector);\r\n  }\r\n\r\n  setTranslation(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n\r\n    const x = vecArray[0];\r\n    const y = vecArray[1];\r\n    const z = vecArray[2];\r\n\r\n    /*thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;*/\r\n    thisArray[12] = x;\r\n    thisArray[13] = y;\r\n    thisArray[14] = z;\r\n    //thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  translate(vector: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vectorArray = vector.array;\r\n\r\n    const tx = vectorArray[0];\r\n    const ty = vectorArray[1];\r\n    const tz = vectorArray[2];\r\n    const tw = 1;\r\n\r\n    const t1 = thisArray[0] * tx + thisArray[4] * ty + thisArray[ 8] * tz + thisArray[12] * tw;\r\n    const t2 = thisArray[1] * tx + thisArray[5] * ty + thisArray[ 9] * tz + thisArray[13] * tw;\r\n    const t3 = thisArray[2] * tx + thisArray[6] * ty + thisArray[10] * tz + thisArray[14] * tw;\r\n    const t4 = thisArray[3] * tx + thisArray[7] * ty + thisArray[11] * tz + thisArray[15] * tw;\r\n\r\n    thisArray[12] = t1;\r\n    thisArray[13] = t2;\r\n    thisArray[14] = t3;\r\n    thisArray[15] = t4;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationX(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationX(angle);\r\n  }\r\n\r\n  setRotationX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = 1;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = sinAngle;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = -sinAngle;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  rotateX(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[4] *  cosAngle + thisArray[ 8] * sinAngle;\r\n    const t2 = thisArray[5] *  cosAngle + thisArray[ 9] * sinAngle;\r\n    const t3 = thisArray[6] *  cosAngle + thisArray[10] * sinAngle;\r\n    const t4 = thisArray[7] *  cosAngle + thisArray[11] * sinAngle;\r\n    const t5 = thisArray[4] * -sinAngle + thisArray[ 8] * cosAngle;\r\n    const t6 = thisArray[5] * -sinAngle + thisArray[ 9] * cosAngle;\r\n    const t7 = thisArray[6] * -sinAngle + thisArray[10] * cosAngle;\r\n    const t8 = thisArray[7] * -sinAngle + thisArray[11] * cosAngle;\r\n\r\n    thisArray[ 4] = t1;\r\n    thisArray[ 5] = t2;\r\n    thisArray[ 6] = t3;\r\n    thisArray[ 7] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationY(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationY(angle);\r\n  }\r\n\r\n  setRotationY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = -sinAngle;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 1;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = sinAngle;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = cosAngle;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  rotateY(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[ 0] * cosAngle + thisArray[ 8] * -sinAngle;\r\n    const t2 = thisArray[ 1] * cosAngle + thisArray[ 9] * -sinAngle;\r\n    const t3 = thisArray[ 2] * cosAngle + thisArray[10] * -sinAngle;\r\n    const t4 = thisArray[ 3] * cosAngle + thisArray[11] * -sinAngle;\r\n    const t5 = thisArray[ 0] * sinAngle + thisArray[ 8] *  cosAngle;\r\n    const t6 = thisArray[ 1] * sinAngle + thisArray[ 9] *  cosAngle;\r\n    const t7 = thisArray[ 2] * sinAngle + thisArray[10] *  cosAngle;\r\n    const t8 = thisArray[ 3] * sinAngle + thisArray[11] *  cosAngle;\r\n\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 8] = t5;\r\n    thisArray[ 9] = t6;\r\n    thisArray[10] = t7;\r\n    thisArray[11] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotationZ(angle: number): Matrix4Base {\r\n    return new Matrix4Base().setRotationZ(angle);\r\n  }\r\n\r\n  setRotationZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngles = Math.sin(angle);\r\n\r\n    thisArray[ 0] = cosAngle;\r\n    thisArray[ 1] = sinAngles;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = -sinAngles;\r\n    thisArray[ 5] = cosAngle;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 1;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  rotateZ(angle: number): this {\r\n    const thisArray = this.array;\r\n    const cosAngle = Math.cos(angle);\r\n    const sinAngle = Math.sin(angle);\r\n\r\n    const t1 = thisArray[0] *  cosAngle + thisArray[4] * sinAngle;\r\n    const t2 = thisArray[1] *  cosAngle + thisArray[5] * sinAngle;\r\n    const t3 = thisArray[2] *  cosAngle + thisArray[6] * sinAngle;\r\n    const t4 = thisArray[3] *  cosAngle + thisArray[7] * sinAngle;\r\n    const t5 = thisArray[0] * -sinAngle + thisArray[4] * cosAngle;\r\n    const t6 = thisArray[1] * -sinAngle + thisArray[5] * cosAngle;\r\n    const t7 = thisArray[2] * -sinAngle + thisArray[6] * cosAngle;\r\n    const t8 = thisArray[3] * -sinAngle + thisArray[7] * cosAngle;\r\n    \r\n    thisArray[0] = t1;\r\n    thisArray[1] = t2;\r\n    thisArray[2] = t3;\r\n    thisArray[3] = t4;\r\n    thisArray[4] = t5;\r\n    thisArray[5] = t6;\r\n    thisArray[6] = t7;\r\n    thisArray[7] = t8;\r\n\r\n    return this;\r\n  }\r\n\r\n  static rotation(matrix: Matrix3): Matrix4Base {\r\n    return new Matrix4Base().rotation(matrix);\r\n  }\r\n\r\n  rotation(matrix: Matrix3): this {\r\n    const thisArray = this.array;\r\n    const matArray = matrix.array;\r\n\r\n    thisArray[ 0] = matArray[0];\r\n    thisArray[ 1] = matArray[1];\r\n    thisArray[ 2] = matArray[2];\r\n    thisArray[ 4] = matArray[3];\r\n    thisArray[ 5] = matArray[4];\r\n    thisArray[ 6] = matArray[5];\r\n    thisArray[ 8] = matArray[6];\r\n    thisArray[ 9] = matArray[7];\r\n    thisArray[10] = matArray[8];\r\n\r\n    return this;\r\n  }\r\n\r\n  rotate(axis: Vector3, angle: number): this {\r\n    const thisArray = this.array;\r\n    const axisArray = axis.array;\r\n    const axisLength = axis.length();\r\n    const x = axisArray[0] / axisLength;\r\n    const y = axisArray[1] / axisLength;\r\n    const z = axisArray[2] / axisLength;\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n    const C = 1.0 - c;\r\n    const m11 = x * x * C + c;\r\n    const m12 = x * y * C - z * s;\r\n    const m13 = x * z * C + y * s;\r\n    const m21 = y * x * C + z * s;\r\n    const m22 = y * y * C + c;\r\n    const m23 = y * z * C - x * s;\r\n    const m31 = z * x * C - y * s;\r\n    const m32 = z * y * C + x * s;\r\n    const m33 = z * z * C + c;\r\n    const t1  = thisArray[0] * m11 + thisArray[4] * m21 + thisArray[8] * m31;\r\n    const t2  = thisArray[1] * m11 + thisArray[5] * m21 + thisArray[9] * m31;\r\n    const t3  = thisArray[2] * m11 + thisArray[6] * m21 + thisArray[10] * m31;\r\n    const t4  = thisArray[3] * m11 + thisArray[7] * m21 + thisArray[11] * m31;\r\n    const t5  = thisArray[0] * m12 + thisArray[4] * m22 + thisArray[8] * m32;\r\n    const t6  = thisArray[1] * m12 + thisArray[5] * m22 + thisArray[9] * m32;\r\n    const t7  = thisArray[2] * m12 + thisArray[6] * m22 + thisArray[10] * m32;\r\n    const t8  = thisArray[3] * m12 + thisArray[7] * m22 + thisArray[11] * m32;\r\n    const t9  = thisArray[0] * m13 + thisArray[4] * m23 + thisArray[8] * m33;\r\n    const t10 = thisArray[1] * m13 + thisArray[5] * m23 + thisArray[9] * m33;\r\n    const t11 = thisArray[2] * m13 + thisArray[6] * m23 + thisArray[10] * m33;\r\n    const t12 = thisArray[3] * m13 + thisArray[7] * m23 + thisArray[11] * m33;\r\n    thisArray[ 0] = t1;\r\n    thisArray[ 1] = t2;\r\n    thisArray[ 2] = t3;\r\n    thisArray[ 3] = t4;\r\n    thisArray[ 4] = t5;\r\n    thisArray[ 5] = t6;\r\n    thisArray[ 6] = t7;\r\n    thisArray[ 7] = t8;\r\n    thisArray[ 8] = t9;\r\n    thisArray[ 9] = t10;\r\n    thisArray[10] = t11;\r\n    thisArray[11] = t12;\r\n\r\n    return this;\r\n  }\r\n\r\n  static scaling(vec: Vector3): Matrix4Base {\r\n    return new Matrix4Base().setScaling(vec);\r\n  }\r\n\r\n  setScaling(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] = sx;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = sy;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = sz;\r\n    thisArray[11] = 0;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = 0;\r\n    thisArray[15] = sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  scale(vec: Vector3): this {\r\n    const thisArray = this.array;\r\n    const vecArray = vec.array;\r\n    const sx = vecArray[0];\r\n    const sy = vecArray[1];\r\n    const sz = vecArray[2];\r\n    const sw = 1;\r\n\r\n    thisArray[ 0] *= sx;\r\n    thisArray[ 1] *= sx;\r\n    thisArray[ 2] *= sx;\r\n    thisArray[ 3] *= sx;\r\n    thisArray[ 4] *= sy;\r\n    thisArray[ 5] *= sy;\r\n    thisArray[ 6] *= sy;\r\n    thisArray[ 7] *= sy;\r\n    thisArray[ 8] *= sz;\r\n    thisArray[ 9] *= sz;\r\n    thisArray[10] *= sz;\r\n    thisArray[11] *= sz;\r\n    thisArray[12] *= sw;\r\n    thisArray[13] *= sw;\r\n    thisArray[14] *= sw;\r\n    thisArray[15] *= sw;\r\n\r\n    return this;\r\n  }\r\n\r\n  static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4): Matrix4 {\r\n    const eyeArray = eye.array;\r\n    const upArray = up.array;\r\n    const targetArray = target.array;\r\n    const outArray = out.array;\r\n    const e0 = eyeArray[0];\r\n    const e1 = eyeArray[1];\r\n    const e2 = eyeArray[2];\r\n    const u0 = upArray[0];\r\n    const u1 = upArray[1];\r\n    const u2 = upArray[2];\r\n    const t0 = targetArray[0];\r\n    const t1 = targetArray[1];\r\n    const t2 = targetArray[2];\r\n    let x0, x1, x2, y0, y1, y2, z0, z1, z2, length;\r\n\r\n    z0 = e0 - t0;\r\n    z1 = e1 - t1;\r\n    z2 = e2 - t2;\r\n    length = Math.hypot(z0, z1, z2);\r\n    if (length > 0) {\r\n      length = 1 / Math.hypot(z0, z1, z2);\r\n      z0 *= length;\r\n      z1 *= length;\r\n      z2 *= length;\r\n    }\r\n  \r\n    x0 = u1 * z2 - u2 * z1;\r\n    x1 = u2 * z0 - u0 * z2;\r\n    x2 = u0 * z1 - u1 * z0;\r\n    length = Math.hypot(x0, x1, x2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      x0 *= length;\r\n      x1 *= length;\r\n      x2 *= length;\r\n    }\r\n\r\n    y0 = z1 * x2 - z2 * x1;\r\n    y1 = z2 * x0 - z0 * x2;\r\n    y2 = z0 * x1 - z1 * x0;\r\n    length = Math.hypot(y0, y1, y2);\r\n    if (length > 0) {\r\n      length = 1 / length;\r\n      y0 *= length;\r\n      y1 *= length;\r\n      y2 *= length;\r\n    }\r\n  \r\n    outArray[ 0] = x0;\r\n    outArray[ 1] = x1;\r\n    outArray[ 2] = x2;\r\n    outArray[ 3] = 0;\r\n    outArray[ 4] = y0;\r\n    outArray[ 5] = y1;\r\n    outArray[ 6] = y2;\r\n    outArray[ 7] = 0;\r\n    outArray[ 8] = z0;\r\n    outArray[ 9] = z1;\r\n    outArray[10] = z2;\r\n    outArray[11] = 0;\r\n    outArray[12] = e0;\r\n    outArray[13] = e1;\r\n    outArray[14] = e2;\r\n    outArray[15] = 1;\r\n  \r\n    return out;\r\n  }\r\n\r\n  lookAt(eye: Vector3, target: Vector3, up: Vector3): this {\r\n    return Matrix4Base.lookAt(eye, target, up, this) as this;\r\n  }\r\n\r\n  transformPoint(point: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const pointArray = point.array;\r\n\r\n    const x = pointArray[0];\r\n    const y = pointArray[1];\r\n    const z = pointArray[2];\r\n\r\n    const d = x * thisArray[3] + y * thisArray[7] + z * thisArray[11] + thisArray[15];\r\n\r\n    point.setValues(\r\n      (x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8] + thisArray[12]) / d,\r\n      (x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9] + thisArray[13]) / d,\r\n      (x * thisArray[2] + y * thisArray[6] + z * thisArray[10] + thisArray[14]) / d\r\n    );\r\n\r\n    return point;\r\n  }\r\n\r\n  transformDirection(direction: Vector3): Vector3 {\r\n    const thisArray = this.array;\r\n    const directionArray = direction.array;\r\n\r\n    const x = directionArray[0];\r\n    const y = directionArray[1];\r\n    const z = directionArray[2];\r\n\r\n    direction.setValues(\r\n      x * thisArray[0] + y * thisArray[4] + z * thisArray[ 8],\r\n      x * thisArray[1] + y * thisArray[5] + z * thisArray[ 9],\r\n      x * thisArray[2] + y * thisArray[6] + z * thisArray[10]\r\n    );\r\n\r\n    return direction;\r\n  }\r\n\r\n  transformNormal(normal: Vector3): Vector3 {\r\n    const normalArray = normal.array;\r\n\r\n    const thisInvArray = this.invert().array;\r\n\r\n    const x = normalArray[0];\r\n    const y = normalArray[1];\r\n    const z = normalArray[2];\r\n\r\n    normal.setValues(\r\n      x * thisInvArray[0] + y * thisInvArray[4] + z * thisInvArray[ 8],\r\n      x * thisInvArray[1] + y * thisInvArray[5] + z * thisInvArray[ 9],\r\n      x * thisInvArray[2] + y * thisInvArray[6] + z * thisInvArray[10]\r\n    );\r\n\r\n    this.invert();\r\n\r\n    return normal;\r\n  }\r\n\r\n  static perspective(fov: number, aspect: number, zNear: number, zFar: number): Matrix4Base {\r\n    return new Matrix4Base().setPerspective(fov, aspect, zNear, zFar);\r\n  }\r\n\r\n  setPerspective(fov: number, aspect: number, zNear: number, zFar: number): this {\r\n    const thisArray = this.array;\r\n    const width = Math.tan(Math.PI * 0.5 - 0.5 * fov);\r\n    const height = width / aspect;\r\n    const rangeInv = 1 / (zNear - zFar);\r\n\r\n    thisArray[ 0] = height;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = width;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = (zNear + zFar) * rangeInv;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = (2 * zNear * zFar) * rangeInv;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setOrthographic(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  setOrthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    thisArray[ 0] = 2 / (right - left);\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = 2 / (top - bottom);\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = 0;\r\n    thisArray[ 9] = 0;\r\n    thisArray[10] = 2 / (near - far);\r\n    thisArray[11] = 0;\r\n    thisArray[12] = (right + left) / (left - right);\r\n    thisArray[13] = (top + bottom) / (bottom - top);\r\n    thisArray[14] = (far + near) / (near - far);\r\n    thisArray[15] = 1;\r\n    \r\n    return this;\r\n  }\r\n\r\n  static frustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): Matrix4Base {\r\n    return new Matrix4Base().setFrustrum(left, right, bottom, top, near, far);\r\n  }\r\n\r\n  setFrustrum(left: number, right: number, bottom: number, top: number, near: number, far: number): this {\r\n    const thisArray = this.array;\r\n    const invWidth = 1 / (right - left);\r\n    const invHeight = 1 / (top - bottom);\r\n    const invDepth = 1 / (near - far);\r\n\r\n    thisArray[ 0] = near * 2 * invWidth;\r\n    thisArray[ 1] = 0;\r\n    thisArray[ 2] = 0;\r\n    thisArray[ 3] = 0;\r\n    thisArray[ 4] = 0;\r\n    thisArray[ 5] = near * 2 * invHeight;\r\n    thisArray[ 6] = 0;\r\n    thisArray[ 7] = 0;\r\n    thisArray[ 8] = (right + left) * invWidth;\r\n    thisArray [9] = (top + bottom) * invHeight;\r\n    thisArray[10] = (far + near) * invDepth;\r\n    thisArray[11] = -1;\r\n    thisArray[12] = 0;\r\n    thisArray[13] = 0;\r\n    thisArray[14] = far * near * 2 * invDepth;\r\n    thisArray[15] = 0;\r\n    \r\n    return this;\r\n  }\r\n}\r\n\r\nvar Matrix4: Matrix4Constructor = Matrix4Base;\r\n\r\nconst Matrix4Injector: Injector<Matrix4Constructor> = new Injector({\r\n\tdefaultCtor: Matrix4Base,\r\n\tonDefaultOverride:\r\n\t\t(ctor: Matrix4Constructor) => {\r\n\t\t\tMatrix4 = ctor;\r\n\t\t}\r\n});","import { StackPool } from \"../../../patterns/pools/StackPool\";\r\nimport { Matrix4 } from \"../../algebra/matrices/Matrix4\";\r\nimport { Vector3, Vector3Constructor } from \"../../algebra/vectors/Vector3\";\r\n\r\nexport { Vector3Pool };\r\n\r\nclass Vector3PoolBase extends StackPool<Vector3> implements StackPool<Vector3> {\r\n    private _buffer: Float32Array;\r\n    private _bufferViews: Array<WritableArrayLike<number>>;\r\n    private _extensions: Array<WritableArrayLike<number>>;\r\n\r\n    constructor(ctor: Vector3Constructor, options?: any) {\r\n        super(ctor, options);\r\n        this._buffer = new Float32Array(0);\r\n        this._bufferViews = Array(options?.size || 0).fill(0).map(() => {\r\n            return this._buffer.subarray();\r\n        });\r\n        this._extensions = [];\r\n    }\r\n}\r\n\r\nconst Vector3Pool: StackPool<Vector3> = new Vector3PoolBase(Vector3);","export { UUID };\r\nexport { Identifiable };\r\nexport { UUIDGeneratorBase };\r\nexport { UUIDGenerator };\r\n\r\ntype UUID = string;\r\n\r\ninterface Identifiable {\r\n    readonly uuid: UUID;\r\n}\r\n\r\ninterface UUIDGenerator {\r\n    newUUID(): UUID;\r\n}\r\n\r\nclass UUIDGeneratorBase {\r\n\r\n    private _count: number;\r\n\r\n    constructor() {\r\n        this._count = 0\r\n    }\r\n\r\n    newUUID(): UUID {\r\n        return (++this._count).toString(16);\r\n    }\r\n}\r\n\r\nconst UUIDGenerator: UUIDGenerator = new UUIDGeneratorBase();","import { EulerAngles } from \"../../libs/maths/algebra/angles/EulerAngles\";\r\nimport { Matrix3 } from \"../../libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Quaternion, QuaternionPool } from \"../../libs/maths/algebra/quaternions/Quaternion\";\r\nimport { Vector3 } from \"../../libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../libs/maths/extensions/pools/Vector3Pools\";\r\nimport { UUID, UUIDGenerator } from \"../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Object3D } from \"../rendering/scenes/objects/Object3D\";\r\n\r\nexport { Transform };\r\nexport { TransformBase };\r\n\r\ninterface TransformConstructor {\r\n    readonly prototype: Transform;\r\n    new(): Transform;\r\n    new(owner: Object3D): Transform;\r\n}\r\n\r\ninterface Transform {\r\n    readonly localArray: Float32Array;\r\n    readonly array: Float32Array;\r\n    readonly uuid: UUID;\r\n    readonly owner: Object3D | null;\r\n\r\n    localMatrix: Matrix4;\r\n    matrix: Matrix4;\r\n\r\n    getMatrix(matrix: Matrix4): Matrix4;\r\n    setMatrix(matrix: Matrix4): this;\r\n    getLocalMatrix(matrix: Matrix4): Matrix4;\r\n    setLocalMatrix(matrix: Matrix4): this;\r\n\r\n    getRight(vector: Vector3): Vector3;\r\n    getLeft(vector: Vector3): Vector3;\r\n    getUp(vector: Vector3): Vector3;\r\n    getDown(vector: Vector3): Vector3;\r\n    getForward(vector: Vector3): Vector3;\r\n    getBackward(vector: Vector3): Vector3;\r\n\r\n    getTranslation(vector: Vector3): Vector3;\r\n    setTranslation(vector: Vector3): this;\r\n    translate(vector: Vector3): this;\r\n\r\n    getRotation(rotation: Quaternion): Quaternion;\r\n    setRotation(rotation: Quaternion): this;\r\n    rotate(rotation: Quaternion): this;\r\n\r\n    getScaling(scaling: Vector3): Vector3;\r\n    setScaling(scaling: Vector3): this;\r\n    scale(scaling: Vector3): this;\r\n    \r\n    lookAt(target: Vector3, up?: Vector3): this;\r\n}\r\n\r\nclass TransformBase implements Transform {\r\n    readonly localArray: Float32Array;\r\n    readonly array: Float32Array;\r\n    readonly uuid: UUID;\r\n    readonly owner: Object3D | null;\r\n\r\n    readonly matrix: Matrix4;\r\n    readonly localMatrix: Matrix4;\r\n\r\n    private _hasChanged: boolean;\r\n\r\n    constructor(owner?: Object3D) {\r\n        this.uuid = UUIDGenerator.newUUID();\r\n        this.owner = owner || null;\r\n        \r\n        this.array = new Float32Array(16);\r\n        this.localArray = new Float32Array(16);\r\n\r\n        this.matrix = new Matrix4(this.array).setIdentity();\r\n        this.localMatrix = new Matrix4(this.localArray).setIdentity();\r\n\r\n        this._hasChanged = false;\r\n    }\r\n\r\n    getMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisArray[ 0];\r\n        matrixArray[ 1] = thisArray[ 1];\r\n        matrixArray[ 2] = thisArray[ 2];\r\n        matrixArray[ 3] = thisArray[ 3];\r\n        matrixArray[ 4] = thisArray[ 4];\r\n        matrixArray[ 5] = thisArray[ 5];\r\n        matrixArray[ 6] = thisArray[ 6];\r\n        matrixArray[ 7] = thisArray[ 7];\r\n        matrixArray[ 8] = thisArray[ 8];\r\n        matrixArray[ 9] = thisArray[ 9];\r\n        matrixArray[10] = thisArray[10];\r\n        matrixArray[11] = thisArray[11];\r\n        matrixArray[12] = thisArray[12];\r\n        matrixArray[13] = thisArray[13];\r\n        matrixArray[14] = thisArray[14];\r\n        matrixArray[15] = thisArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    setMatrix(matrix: Matrix4): this {\r\n        const thisArray = this.array;\r\n        const matrixArray = matrix.array;\r\n        thisArray[ 0] = matrixArray[ 0];\r\n        thisArray[ 1] = matrixArray[ 1];\r\n        thisArray[ 2] = matrixArray[ 2];\r\n        thisArray[ 3] = matrixArray[ 3];\r\n        thisArray[ 4] = matrixArray[ 4];\r\n        thisArray[ 5] = matrixArray[ 5];\r\n        thisArray[ 6] = matrixArray[ 6];\r\n        thisArray[ 7] = matrixArray[ 7];\r\n        thisArray[ 8] = matrixArray[ 8];\r\n        thisArray[ 9] = matrixArray[ 9];\r\n        thisArray[10] = matrixArray[10];\r\n        thisArray[11] = matrixArray[11];\r\n        thisArray[12] = matrixArray[12];\r\n        thisArray[13] = matrixArray[13];\r\n        thisArray[14] = matrixArray[14];\r\n        thisArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    getLocalMatrix(matrix: Matrix4): Matrix4 {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        matrixArray[ 0] = thisLocalArray[ 0];\r\n        matrixArray[ 1] = thisLocalArray[ 1];\r\n        matrixArray[ 2] = thisLocalArray[ 2];\r\n        matrixArray[ 3] = thisLocalArray[ 3];\r\n        matrixArray[ 4] = thisLocalArray[ 4];\r\n        matrixArray[ 5] = thisLocalArray[ 5];\r\n        matrixArray[ 6] = thisLocalArray[ 6];\r\n        matrixArray[ 7] = thisLocalArray[ 7];\r\n        matrixArray[ 8] = thisLocalArray[ 8];\r\n        matrixArray[ 9] = thisLocalArray[ 9];\r\n        matrixArray[10] = thisLocalArray[10];\r\n        matrixArray[11] = thisLocalArray[11];\r\n        matrixArray[12] = thisLocalArray[12];\r\n        matrixArray[13] = thisLocalArray[13];\r\n        matrixArray[14] = thisLocalArray[14];\r\n        matrixArray[15] = thisLocalArray[15];\r\n\r\n        return matrix;\r\n    }\r\n\r\n    setLocalMatrix(matrix: Matrix4): this {\r\n        const thisLocalArray = this.localArray;\r\n        const matrixArray = matrix.array;\r\n        thisLocalArray[ 0] = matrixArray[ 0];\r\n        thisLocalArray[ 1] = matrixArray[ 1];\r\n        thisLocalArray[ 2] = matrixArray[ 2];\r\n        thisLocalArray[ 3] = matrixArray[ 3];\r\n        thisLocalArray[ 4] = matrixArray[ 4];\r\n        thisLocalArray[ 5] = matrixArray[ 5];\r\n        thisLocalArray[ 6] = matrixArray[ 6];\r\n        thisLocalArray[ 7] = matrixArray[ 7];\r\n        thisLocalArray[ 8] = matrixArray[ 8];\r\n        thisLocalArray[ 9] = matrixArray[ 9];\r\n        thisLocalArray[10] = matrixArray[10];\r\n        thisLocalArray[11] = matrixArray[11];\r\n        thisLocalArray[12] = matrixArray[12];\r\n        thisLocalArray[13] = matrixArray[13];\r\n        thisLocalArray[14] = matrixArray[14];\r\n        thisLocalArray[15] = matrixArray[15];\r\n\r\n        return this;\r\n    }\r\n\r\n    getRight(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[0];\r\n        vectorArray[1] = thisArray[1];\r\n        vectorArray[2] = thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    getLeft(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[0];\r\n        vectorArray[1] = -thisArray[1];\r\n        vectorArray[2] = -thisArray[2];\r\n        return vector;\r\n    }\r\n\r\n    getUp(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[4];\r\n        vectorArray[1] = thisArray[5];\r\n        vectorArray[2] = thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    getDown(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[4];\r\n        vectorArray[1] = -thisArray[5];\r\n        vectorArray[2] = -thisArray[6];\r\n        return vector;\r\n    }\r\n\r\n    getForward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 8];\r\n        vectorArray[1] = thisArray[ 9];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    getBackward(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = -thisArray[ 8];\r\n        vectorArray[1] = -thisArray[ 9];\r\n        vectorArray[2] = -thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    get hasChanged() {\r\n        return this._hasChanged;\r\n    }\r\n\r\n    getTranslation(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[12];\r\n        vectorArray[1] = thisArray[13];\r\n        vectorArray[2] = thisArray[14];\r\n        return vector;\r\n    }\r\n\r\n    setTranslation(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] = vectorArray[0];\r\n        thisArray[13] = vectorArray[1];\r\n        thisArray[14] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    translate(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[12] += vectorArray[0];\r\n        thisArray[13] += vectorArray[1];\r\n        thisArray[14] += vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    getScaling(vector: Vector3): Vector3 {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        vectorArray[0] = thisArray[ 0];\r\n        vectorArray[1] = thisArray[ 5];\r\n        vectorArray[2] = thisArray[10];\r\n        return vector;\r\n    }\r\n\r\n    setScaling(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] = vectorArray[0];\r\n        thisArray[ 5] = vectorArray[1];\r\n        thisArray[10] = vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    scale(vector: Vector3): this {\r\n        const thisArray = this.array;\r\n        const vectorArray = vector.array;\r\n        thisArray[ 0] *= vectorArray[0];\r\n        thisArray[ 5] *= vectorArray[1];\r\n        thisArray[10] *= vectorArray[2];\r\n        return this;\r\n    }\r\n\r\n    getRotation(rotation: Quaternion): Quaternion {\r\n        rotation.setMatrix(this.matrix);\r\n        return rotation;\r\n    }\r\n    \r\n    setRotation(rotation: Quaternion): this {\r\n        this.matrix.setRotation(rotation);\r\n        return this;\r\n    }\r\n\r\n    rotate(rotation: Quaternion): this {\r\n        this.matrix.mult(\r\n            rotation.getMatrix4(new Matrix4())\r\n        );\r\n        return this;\r\n    }\r\n\r\n    transformPoint(point: Vector3): Vector3 {\r\n        return point;\r\n    }\r\n\r\n    transformDirection(direction: Vector3): Vector3 {\r\n        return direction;\r\n    }\r\n\r\n    transformVector(vector: Vector3): Vector3 {\r\n        return vector;\r\n    }\r\n\r\n    lookAt(target: Vector3, up: Vector3): this {\r\n        const thisPosition = this.getTranslation(Vector3Pool.acquire(1)[0]);\r\n        this.matrix.lookAt(thisPosition, target, up);\r\n        Vector3Pool.release(1);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Transform: TransformConstructor = TransformBase;","import { Injector } from \"../../../patterns/injectors/Injector\";\r\nimport { Vector3 } from \"../../algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../extensions/pools/Vector3Pools\";\r\n\r\nexport { Plane };\r\nexport { PlaneInjector };\r\nexport { PlaneBase };\r\n\r\ninterface Plane {\r\n    normal: Vector3;\r\n    constant: number;\r\n\r\n    copy(plane: Plane): Plane;\r\n    set(x: number, y: number, z: number, constant: number): Plane;\r\n    setFromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n\tsetFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n\tsetFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): Plane;\r\n\tdistanceToPoint(point: Vector3): number;\r\n    normalized(): Plane;\r\n}\r\n\r\ninterface PlaneConstructor {\r\n    readonly prototype: Plane;\r\n    new(): Plane;\r\n    new(normal: Vector3, constant: number): Plane;\r\n    new(normal?: Vector3, constant?: number): Plane;\r\n    fromNormalAndConstant(normal: Vector3, constant: number): Plane;\r\n    fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane;\r\n    fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane;\r\n}\r\n\r\nclass PlaneBase implements Plane {\r\n\r\n    private _normal: Vector3;\r\n    private _constant: number;\r\n\r\n    constructor()\r\n    constructor(normal: Vector3, constant: number)\r\n    constructor(normal?: Vector3, constant?: number) {\r\n        this._normal = normal || new Vector3([0, 0, 0]);\r\n        this._constant = constant || 0;\r\n    }\r\n\r\n    static fromNormalAndConstant(normal: Vector3, constant: number): Plane {\r\n        return new PlaneBase().setFromNormalAndConstant(normal, constant);\r\n    }\r\n\r\n\tstatic fromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): Plane {\r\n\t\treturn new PlaneBase().setFromNormalAndCoplanarPoint(normal, point);\r\n\t}\r\n\r\n\tstatic fromCoplanarPoints(a: Vector3, b: Vector3, c: Vector3): Plane {\r\n        return new PlaneBase().setFromCoplanarPoints(a, b, c);\r\n    }\r\n\r\n    get normal(): Vector3 {\r\n\t\treturn this._normal;\r\n\t}\r\n\r\n\tset normal(normal: Vector3) {\r\n\t\tthis._normal = normal;\r\n\t}\r\n\r\n\tget constant(): number {\r\n\t\treturn this._constant;\r\n\t}\r\n\r\n\tset constant(constant: number) {\r\n\t\tthis._constant = constant;\r\n\t}\r\n\r\n    copy(plane: PlaneBase): PlaneBase {\r\n        this._normal = plane._normal.clone();\r\n        this._constant = plane._constant;\r\n\r\n        return this;\r\n    }\r\n\r\n    set(x: number, y: number, z: number, constant: number): PlaneBase {\r\n        this._normal.setValues(x, y, z);\r\n        this._constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n    setFromNormalAndConstant(normal: Vector3, constant: number): PlaneBase {\r\n        this._normal.copy(normal);\r\n        this._constant = constant;\r\n\r\n        return this;\r\n    }\r\n\r\n\tsetFromNormalAndCoplanarPoint(normal: Vector3, point: Vector3): PlaneBase {\r\n\t\tthis._normal.copy(normal);\r\n        this._constant = -point.dot(this._normal);\r\n        \r\n        return this;\r\n\t}\r\n\r\n\tsetFromCoplanarPoints(point1: Vector3, point2: Vector3, point3: Vector3): PlaneBase {\r\n        const normal = point3.clone();\r\n        const [temp] = Vector3Pool.acquire(1);\r\n        temp.copy(point1);\r\n        normal.sub(point2).cross(temp.sub(point2)).normalize();\r\n        this.setFromNormalAndCoplanarPoint(normal, point1);\r\n        Vector3Pool.release(1);\r\n\t\treturn this;\r\n    }\r\n\r\n\tdistanceToPoint(point: Vector3): number {\r\n\t\treturn this._normal.dot(point) + this._constant;\r\n\t}\r\n    \r\n    normalized(): PlaneBase {\r\n        const inverseNormalLength = 1.0 / this._normal.length();\r\n        \r\n        this._normal.scale(inverseNormalLength);\r\n\t\tthis._constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nvar Plane: PlaneConstructor = PlaneBase;\r\nconst PlaneInjector: Injector<PlaneConstructor> = new Injector({\r\n\tdefaultCtor: PlaneBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: PlaneConstructor) => {\r\n\t\t\tPlane = ctor;\r\n\t\t}\r\n});","import { Matrix4 } from \"../../maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../maths/algebra/vectors/Vector3\";\r\nimport { Vector3Pool } from \"../../maths/extensions/pools/Vector3Pools\";\r\nimport { Plane } from \"../../maths/geometry/primitives/Plane\";\r\nimport { Injector } from \"../../patterns/injectors/Injector\";\r\nimport { BoundingBox } from \"./AxisAlignedBoundingBox\";\r\nimport { BoundingSphere } from \"./BoundingSphere\";\r\n\r\nexport { Frustrum };\r\nexport { FrustrumInjector };\r\nexport { FrustrumBase };\r\n\r\ninterface Frustrum {\r\n    readonly nearPlane: Plane;\r\n    readonly farPlane: Plane;\r\n    readonly topPlane: Plane;\r\n    readonly bottomPlane: Plane;\r\n    readonly leftPlane: Plane;\r\n    readonly rightPlane: Plane;\r\n    copy(frustrum: Frustrum): Frustrum;\r\n\tclone(): Frustrum;\r\n\tsetFromPerspectiveMatrix(matrix: Matrix4): Frustrum;\r\n\tset(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane\r\n    ): Frustrum;\r\n\tintersectsSphere(sphere: BoundingSphere): boolean;\r\n\tintersectsBox(box: BoundingBox): boolean;\r\n\tcontainsPoint(point: Vector3): boolean;\r\n}\r\n\r\ninterface FrustrumConstructor {\r\n    readonly prototype: Frustrum;\r\n    new(): Frustrum;\r\n}\r\n\r\nclass FrustrumBase implements Frustrum {\r\n    readonly nearPlane: Plane;\r\n    readonly farPlane: Plane;\r\n    readonly topPlane: Plane;\r\n    readonly bottomPlane: Plane;\r\n    readonly leftPlane: Plane;\r\n    readonly rightPlane: Plane;\r\n\r\n    constructor() {\r\n\t\tthis.nearPlane = new Plane();\r\n        this.farPlane = new Plane();\r\n        this.topPlane = new Plane();\r\n        this.bottomPlane = new Plane();\r\n        this.leftPlane = new Plane();\r\n        this.rightPlane = new Plane();\r\n    }\r\n\r\n    set(\r\n        nearPlane: Plane, farPlane: Plane,\r\n        topPlane: Plane, bottomPlane: Plane,\r\n        leftPlane: Plane, rightPlane: Plane): Frustrum {\r\n\r\n\t\tthis.nearPlane.copy(nearPlane);\r\n\t\tthis.farPlane.copy(farPlane);\r\n        this.topPlane.copy(topPlane);\r\n        this.bottomPlane.copy(bottomPlane);\r\n        this.leftPlane.copy(leftPlane);\r\n        this.rightPlane.copy(rightPlane);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n    copy(frustrum: FrustrumBase): FrustrumBase {\r\n        this.set(\r\n            frustrum.nearPlane,\r\n            frustrum.farPlane,\r\n            frustrum.topPlane,\r\n            frustrum.bottomPlane,\r\n            frustrum.leftPlane,\r\n            frustrum.rightPlane\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n\tclone(): FrustrumBase {\r\n\t\treturn new FrustrumBase().copy(this);\r\n    }\r\n    \r\n\tsetFromPerspectiveMatrix(matrix: Matrix4): FrustrumBase {\r\n        const m11 = matrix.m11;\r\n        const m12 = matrix.m12;\r\n        const m13 = matrix.m13;\r\n        const m14 = matrix.m14;\r\n        const m21 = matrix.m21;\r\n        const m22 = matrix.m22;\r\n        const m23 = matrix.m23;\r\n        const m24 = matrix.m24;\r\n        const m31 = matrix.m31;\r\n        const m32 = matrix.m32;\r\n        const m33 = matrix.m33;\r\n        const m34 = matrix.m34;\r\n        const m41 = matrix.m41;\r\n        const m42 = matrix.m42;\r\n        const m43 = matrix.m43;\r\n        const m44 = matrix.m44;\r\n\r\n        this.nearPlane.set(m31 + m41, m32 + m42, m33 + m43, m34 + m44).normalized();\r\n        this.farPlane.set(-m31 + m41, -m32 + m42, -m33 + m43, -m34 + m44).normalized();\r\n        this.bottomPlane.set(m21 + m41, m22 + m42, m23 + m43, m24 + m44).normalized();\r\n        this.topPlane.set(-m21 + m41, -m22 + m42, -m23 + m43, -m24 + m44).normalized();\r\n        this.leftPlane.set(m11 + m41, m12 + m42, m13 + m43, m14 + m44).normalized();\r\n        this.rightPlane.set(-m11 + m41, -m12 + m42, -m13 + m43, -m14 + m44).normalized();\r\n        \r\n\t\treturn this;\r\n    }\r\n    \r\n\tintersectsSphere(sphere: BoundingSphere): boolean {\r\n        const center = sphere.center;\r\n        const radius = sphere.radius;\r\n        return center.dot(this.nearPlane.normal) + this.nearPlane.constant + radius <= 0 ||\r\n            center.dot(this.farPlane.normal) + this.farPlane.constant + radius <= 0 ||\r\n            center.dot(this.bottomPlane.normal) + this.bottomPlane.constant + radius <= 0 ||\r\n            center.dot(this.topPlane.normal) + this.topPlane.constant + radius <= 0 ||\r\n            center.dot(this.leftPlane.normal) + this.leftPlane.constant + radius <= 0 ||\r\n            center.dot(this.rightPlane.normal) + this.rightPlane.constant + radius <= 0;\r\n\t}\r\n\r\n\tintersectsBox(box: BoundingBox): boolean {\r\n        let intersects = true;\r\n\r\n        const boxMax = box.max;\r\n        const boxMin = box.min;\r\n\r\n        const [temp] = Vector3Pool.acquire(1);\r\n        intersects = \r\n            this.nearPlane.distanceToPoint(temp.setValues(\r\n                this.nearPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.nearPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.nearPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.farPlane.distanceToPoint(temp.setValues(\r\n                this.farPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.farPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.farPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.bottomPlane.distanceToPoint(temp.setValues(\r\n                this.bottomPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.bottomPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.bottomPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.topPlane.distanceToPoint(temp.setValues(\r\n                this.topPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.topPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.topPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.leftPlane.distanceToPoint(temp.setValues(\r\n                this.leftPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.leftPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.leftPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0 &&\r\n            this.rightPlane.distanceToPoint(temp.setValues(\r\n                this.rightPlane.normal.x > 0 ? boxMax.x : boxMin.x,\r\n                this.rightPlane.normal.y > 0 ? boxMax.y : boxMin.y,\r\n                this.rightPlane.normal.z > 0 ? boxMax.z : boxMin.z\r\n            )) >= 0;\r\n        Vector3Pool.release(1);\r\n\r\n\t\treturn intersects;\r\n\t}\r\n\r\n\tcontainsPoint(point: Vector3): boolean {\r\n        return this.nearPlane.distanceToPoint(point) >= 0 &&\r\n            this.farPlane.distanceToPoint(point) >= 0 &&\r\n            this.bottomPlane.distanceToPoint(point) >= 0 &&\r\n            this.topPlane.distanceToPoint(point) >= 0 &&\r\n            this.leftPlane.distanceToPoint(point) >= 0 &&\r\n            this.rightPlane.distanceToPoint(point) >= 0;\r\n    }\r\n}\r\n\r\nvar Frustrum: FrustrumConstructor = FrustrumBase;\r\nconst FrustrumInjector: Injector<FrustrumConstructor> = new Injector({\r\n\tdefaultCtor: FrustrumBase,\r\n\tonDefaultOverride:\r\n\t\t(ctor: FrustrumConstructor) => {\r\n\t\t\tFrustrum = ctor;\r\n\t\t}\r\n});","export { Buffer };\r\n\r\nexport enum BufferDataUsage {\r\n    STATIC_DRAW = 0x88E4,\r\n    DYNAMIC_DRAW = 0x88E8,\r\n    STREAM_DRAW = 0x88E0,\r\n    STATIC_READ = 0x88E5,\r\n    DYNAMIC_READ = 0x88E9,\r\n    STREAM_READ = 0x88E1,\r\n    STATIC_COPY = 0x88E6,\r\n    DYNAMIC_COPY = 0x88EA,\r\n    STREAM_COPY = 0x88E2\r\n}\r\n\r\nexport enum BufferTarget {\r\n    ARRAY_BUFFER = 0x8892,\r\n    ELEMENT_ARRAY_BUFFER = 0x8893,\r\n    TRANSFORM_FEEDBACK_BUFFER = 0x8C8E,\r\n    UNIFORM_BUFFER = 0x8A11,\r\n}\r\n\r\ntype Buffer = {\r\n    internal: WebGLBuffer;\r\n    target: BufferTarget;\r\n    usage: BufferDataUsage;\r\n    data: ArrayBuffer;\r\n}","export enum ShaderType {\r\n    FRAGMENT_SHADER = 0x8B30,\r\n    VERTEX_SHADER = 0x8B31,\r\n}\r\n\r\nexport type Program = {\r\n    internal: WebGLProgram;\r\n    vertexShader: Shader;\r\n    fragmentShader: Shader;\r\n}\r\n\r\nexport type Shader = {\r\n    internal: WebGLShader;\r\n}\r\n\r\nexport type ProgramProperties = {\r\n    vertexSource: string;\r\n    vertexFlags?: string[];\r\n    fragmentSource: string;\r\n    fragmentFlags?: string[];\r\n}\r\n\r\nexport class WebGLProgramUtilities {\r\n\r\n    static createShader(gl: WebGL2RenderingContext, type: ShaderType, source: string): Shader | null {\r\n        const shader = gl.createShader(type);\r\n        \r\n        if (shader == null) {\r\n            console.error(`Could not create WebGLShader.`);\r\n            return null;\r\n        }\r\n\r\n        gl.shaderSource(shader, source);\r\n        gl.compileShader(shader);\r\n        \r\n        const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n        if (success) {\r\n            return {\r\n                internal: shader\r\n            };\r\n        }\r\n\r\n        const shaderInfoLog = gl.getShaderInfoLog(shader);\r\n        if (shaderInfoLog !== null) {\r\n            console.warn(shaderInfoLog);\r\n        }\r\n\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n\r\n    static deleteShader(gl: WebGL2RenderingContext, shader: Shader): void {\r\n        const {internal} = shader;\r\n        if (gl.isShader(internal)) {\r\n            gl.deleteShader(internal);\r\n        }\r\n    }\r\n    \r\n    static createProgram(gl: WebGL2RenderingContext, properties: ProgramProperties): Program | null {\r\n        const {vertexSource, fragmentSource} = properties;\r\n\r\n        //@TODO: bindAttribLocation ?\r\n        //@TODO: definitions ?\r\n\r\n        const vertexShader = this.createShader(gl, ShaderType.VERTEX_SHADER, vertexSource);\r\n        if (vertexShader == null) {\r\n            return null;\r\n        }\r\n\r\n        const fragmentShader = this.createShader(gl, ShaderType.FRAGMENT_SHADER, fragmentSource);\r\n        if (fragmentShader == null) {\r\n            return null;\r\n        }\r\n        \r\n        const program = gl.createProgram();\r\n\r\n        if (program == null) {\r\n            console.error(\"Could not create WebGLProgram.\");\r\n            return null;\r\n        }\r\n        \r\n        gl.attachShader(program, vertexShader.internal);\r\n        gl.attachShader(program, fragmentShader.internal);\r\n        gl.linkProgram(program);\r\n\r\n        const success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n        if (success) {\r\n            return {\r\n                internal: program,\r\n                vertexShader: vertexShader,\r\n                fragmentShader: fragmentShader\r\n            };\r\n        }\r\n\r\n        const programInfoLog = gl.getProgramInfoLog(program);\r\n        const vsInfoLog = gl.getProgramInfoLog(program);\r\n        const fsInfoLog = gl.getProgramInfoLog(program);\r\n        if (programInfoLog !== null) {\r\n            console.warn(`Program info: ${programInfoLog}`);\r\n            console.warn(`VS info: ${vsInfoLog}`);\r\n            console.warn(`FS info: ${fsInfoLog}`);\r\n        }\r\n        \r\n        gl.deleteProgram(program);\r\n\r\n        return null;\r\n    }\r\n    \r\n    static deleteProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        const {vertexShader, fragmentShader, internal} = program;\r\n        if (gl.isShader(vertexShader)) {\r\n            gl.deleteShader(vertexShader);\r\n        }\r\n        if (gl.isShader(fragmentShader)) {\r\n            gl.deleteShader(fragmentShader);\r\n        }\r\n        if (gl.isProgram(internal)) {\r\n            gl.deleteProgram(internal);\r\n        }\r\n    }\r\n\r\n    static useProgram(gl: WebGL2RenderingContext, program: Program) {\r\n        const {internal} = program;\r\n        const currentProgram = gl.getParameter(gl.CURRENT_PROGRAM);\r\n        if (currentProgram !== internal) {\r\n            gl.useProgram(internal);\r\n        }\r\n    }\r\n}","import { LogLevel } from \"../../logger/Logger\";\r\nimport { BufferDataUsage, BufferTarget, Buffer } from \"./WebGLBufferUtilities\";\r\nimport { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\n\r\nexport { VertexArrayAttributeValue };\r\nexport { VertexArrayAttributeProperties };\r\nexport { VertexArrayProperties };\r\nexport { VertexArrayValues };\r\nexport { VertexArray };\r\nexport { WebGLVertexArrayUtilities };\r\n\r\nexport enum DrawMode {\r\n    POINTS = 0x0000,\r\n    LINES = 0x0001,\r\n    LINE_LOOP = 0x0002,\r\n    LINE_STRIP = 0x0003,\r\n    TRIANGLES = 0x0004,\r\n    TRIANGLE_STRIP = 0x0005,\r\n    TRIANGLE_FAN = 0x0006\r\n}\r\n\r\nexport enum DataComponentType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406\r\n}\r\n\r\nexport enum AttributeDataType {\r\n    VEC2 = \"VEC2\",\r\n    VEC3 = \"VEC3\",\r\n    VEC4 = \"VEC4\"\r\n}\r\n\r\nexport enum ElementArrayDataType {\r\n    UNSIGNED_BYTE = 0x1401,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    UNSIGNED_INT = 0x1405\r\n}\r\n\r\nexport type AttributeArray =\r\n    Float32Array | Int32Array | Uint32Array |\r\n    Int16Array | Uint16Array |\r\n    Int8Array | Uint8Array;\r\n\r\ntype VertexArrayAttributeProperties = {\r\n    array: AttributeArray;\r\n    type: AttributeDataType;\r\n    divisor?: number;\r\n    normalize?: boolean;\r\n    constant?: boolean;\r\n}\r\n\r\ntype VertexArrayAttributeValue = {\r\n    array: AttributeArray;\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n}\r\n\r\ntype VertexArrayAttributeSetter = {\r\n    location: number;\r\n    divisor: number;\r\n    componentType: DataComponentType;\r\n    constant: boolean;\r\n    byteOffset: number;\r\n    type: AttributeDataType;\r\n    normalize: boolean;\r\n}\r\n\r\ntype VertexArrayProperties = {\r\n    attributes: {\r\n        [name: string]: VertexArrayAttributeProperties;\r\n    };\r\n    usage?: BufferDataUsage;\r\n    interleave?: boolean;\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    elementsCount: number;\r\n}\r\n\r\ntype VertexArrayValues = {\r\n    attributes: {\r\n        [name: string]: VertexArrayAttributeValue;\r\n    };\r\n    indices?: Uint8Array | Uint16Array | Uint32Array;\r\n    elementsCount: number;\r\n}\r\n\r\ntype VertexArray = {\r\n    internal: WebGLVertexArrayObject;\r\n    program: Program;\r\n    attributeSetters: {\r\n        [name: string]: VertexArrayAttributeSetter;\r\n    };\r\n    verticesBuffer: Buffer;\r\n    elementsCount: number;\r\n    indexType?: ElementArrayDataType;\r\n    indicesBuffer?: WebGLBuffer;\r\n}\r\n\r\nclass WebGLVertexArrayUtilities {\r\n\r\n    static getAttributeDataTypeElementsSize(type: AttributeDataType): number {\r\n        switch (type) {\r\n            case AttributeDataType.VEC2:\r\n                return 2;\r\n            case AttributeDataType.VEC3:\r\n                return 3;\r\n            case AttributeDataType.VEC4:\r\n                return 4;\r\n            default:\r\n                throw new Error(`Unsupported AttributeDataType ${type}`);\r\n        }\r\n    }\r\n\r\n    static getDataComponentTypeArrayConstructor(type: DataComponentType):\r\n        typeof Float32Array | typeof Int32Array | typeof Uint32Array |\r\n        typeof Int16Array | typeof Uint16Array |\r\n        typeof Int8Array | typeof Uint8Array {\r\n        switch (type) {\r\n            case DataComponentType.FLOAT:\r\n                return Float32Array;\r\n            case DataComponentType.BYTE:\r\n                return Uint8Array;\r\n            case DataComponentType.UNSIGNED_BYTE:\r\n                return Uint8Array;\r\n            case DataComponentType.SHORT:\r\n                return Int16Array;\r\n            case DataComponentType.UNSIGNED_SHORT:\r\n                return Uint16Array;\r\n            case DataComponentType.INT:\r\n                return Int32Array;\r\n            case DataComponentType.UNSIGNED_INT:\r\n                return Uint32Array;\r\n            default:\r\n                throw new Error(`Unsupported DataComponentType ${type}`);\r\n        }\r\n    }\r\n\r\n    static getAttributeArrayDataComponentType(array: AttributeArray): DataComponentType {\r\n        if (array instanceof Float32Array) {\r\n            return DataComponentType.FLOAT;\r\n        }\r\n        else if (array instanceof Int32Array) {\r\n            return DataComponentType.INT;\r\n        }\r\n        else if (array instanceof Uint32Array) {\r\n            return DataComponentType.UNSIGNED_INT;\r\n        }\r\n        else if (array instanceof Int16Array) {\r\n            return DataComponentType.SHORT;\r\n        }\r\n        else if (array instanceof Uint16Array) {\r\n            return DataComponentType.UNSIGNED_SHORT;\r\n        }\r\n        else if (array instanceof Int8Array) {\r\n            return DataComponentType.BYTE;\r\n        }\r\n        else if (array instanceof Uint8Array) {\r\n            return DataComponentType.UNSIGNED_BYTE;\r\n        }\r\n        throw new Error(`Unsupported VertexArrayAttributeArray`);\r\n    }\r\n\r\n    static getDataComponentTypeBytesPerElement(type: DataComponentType): number {\r\n        switch (type) {\r\n            case DataComponentType.FLOAT:\r\n            case DataComponentType.INT:\r\n            case DataComponentType.UNSIGNED_INT:\r\n                return 4;\r\n            case DataComponentType.SHORT:\r\n            case DataComponentType.UNSIGNED_SHORT:\r\n                return 2;\r\n            case DataComponentType.BYTE:\r\n            case DataComponentType.UNSIGNED_BYTE:\r\n                return 1;\r\n            default:\r\n                throw new Error(`Unsupported DataComponentType ${type}`);\r\n        }\r\n    }\r\n\r\n    static createVertexArray(gl: WebGL2RenderingContext, program: Program, vertexArray: VertexArrayProperties): VertexArray | null {\r\n        //@TODO: Allow multiple buffers and existing buffers as input.\r\n        const {attributes, indices, elementsCount, interleave} = vertexArray;\r\n        let {usage} = vertexArray;\r\n\r\n        const internal = gl.createVertexArray();\r\n        if (internal === null) {\r\n            console.error(\"Could not create WebGLVertexArrayObject.\");\r\n            return null;\r\n        }\r\n        gl.bindVertexArray(internal);\r\n            \r\n        const buffer = gl.createBuffer();\r\n        if (buffer == null) {\r\n            console.error(\"Could not create WebGLBuffer.\");\r\n            return null;\r\n        }\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n        \r\n        const attributesEntries = Object.entries(attributes);\r\n\r\n        const {length: attributesCount} = attributesEntries;\r\n        const maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n        if (attributesCount > maxAttributes) {\r\n            console.warn(\"Attributes count is greater than max.\");\r\n        }\r\n\r\n        const byteLength = attributesEntries.reduce(\r\n            (byteLength, [_, attribute]) => byteLength + attribute.array.byteLength, 0\r\n        );\r\n\r\n        const data = new ArrayBuffer(byteLength);\r\n        usage = usage ?? gl.STATIC_DRAW;\r\n\r\n        const verticesBuffer = {\r\n            internal: buffer,\r\n            target: gl.ARRAY_BUFFER,\r\n            usage, data\r\n        };\r\n\r\n        const byteStride = interleave ? attributesEntries.reduce(\r\n            (stride, [_, attribute]) => {\r\n                const {constant} = attribute;\r\n                if (!constant) {\r\n                    const {array, type} = attribute;\r\n                    return stride + array.BYTES_PER_ELEMENT * WebGLVertexArrayUtilities.getAttributeDataTypeElementsSize(type);\r\n                }\r\n                return stride;\r\n            }, 0\r\n        ) : 0;\r\n        const bufferSlices = interleave ? Math.trunc(byteLength / byteStride) : 0;\r\n        let byteOffset = 0;\r\n\r\n        const attributeSetters: {\r\n            [name: string]: VertexArrayAttributeSetter;\r\n        } = {};\r\n\r\n        attributesEntries.forEach(([attributeName, attribute]) => {\r\n            const {array, type} = attribute;\r\n            let {constant, divisor, normalize} = attribute;\r\n            constant = constant ?? false;\r\n\r\n            const location = gl.getAttribLocation(program.internal, attributeName);\r\n            if (location == -1) {\r\n                console.warn(`Attribute ${attributeName} could not be located.`);\r\n                return;\r\n            }\r\n            \r\n            const componentType = this.getAttributeArrayDataComponentType(array);\r\n            const elementsSize = this.getAttributeDataTypeElementsSize(type);\r\n            divisor = divisor ?? 0;\r\n            normalize = normalize ?? false;\r\n            \r\n            gl.vertexAttribPointer(location, elementsSize, componentType, normalize, byteStride, byteOffset);\r\n            if (divisor > 0) {\r\n                gl.vertexAttribDivisor(location, divisor);\r\n            }\r\n            if (constant) {\r\n                switch (elementsSize) {\r\n                    case 1:\r\n                        gl.vertexAttrib1fv(location, array);\r\n                        break;\r\n                    case 2:\r\n                        gl.vertexAttrib2fv(location, array);\r\n                        break;\r\n                    case 3:\r\n                        gl.vertexAttrib3fv(location, array);\r\n                        break;\r\n                    case 4:\r\n                        gl.vertexAttrib4fv(location, array);\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                if (interleave) {\r\n                    const {array, type} = attribute;\r\n                    const elementsSize = WebGLVertexArrayUtilities.getAttributeDataTypeElementsSize(type);\r\n                    const bufferArrayConstructor = WebGLVertexArrayUtilities.getDataComponentTypeArrayConstructor(\r\n                        WebGLVertexArrayUtilities.getAttributeArrayDataComponentType(array)\r\n                    );\r\n                    const {BYTES_PER_ELEMENT} = array;\r\n                    const bufferArray = new bufferArrayConstructor(data, byteOffset);\r\n                    const arrayStrideOffset = byteStride / BYTES_PER_ELEMENT;\r\n                    for (let i = 0; i < bufferSlices; i++) {\r\n                        let arraySliceIndex = i * elementsSize;\r\n                        bufferArray.set(\r\n                            array.slice(\r\n                                arraySliceIndex,\r\n                                arraySliceIndex + elementsSize\r\n                            ),\r\n                            i * arrayStrideOffset\r\n                        );\r\n                    }\r\n                    byteOffset += elementsSize * BYTES_PER_ELEMENT;\r\n                }\r\n                else {\r\n                    const {array} = attribute;\r\n                    const {byteLength} = array;\r\n                    const bufferArrayConstructor = WebGLVertexArrayUtilities.getDataComponentTypeArrayConstructor(\r\n                        WebGLVertexArrayUtilities.getAttributeArrayDataComponentType(array)\r\n                    );\r\n                    const bufferArray = new bufferArrayConstructor(data, byteOffset);\r\n                    bufferArray.set(array);\r\n                    byteOffset += byteLength;\r\n                }\r\n                gl.enableVertexAttribArray(location);\r\n            }\r\n            attributeSetters[attributeName] = {\r\n                location,\r\n                componentType,\r\n                type,\r\n                normalize,\r\n                constant,\r\n                divisor,\r\n                byteOffset\r\n            };\r\n        });\r\n\r\n        gl.bufferData(gl.ARRAY_BUFFER, data, usage);\r\n\r\n        let indicesBuffer: WebGLBuffer | null | undefined = void 0;\r\n        let indexType: ElementArrayDataType | undefined = void 0;\r\n        if (indices !== void 0) {\r\n            indexType = this.getElementArrayBufferType(indices);\r\n            indicesBuffer = gl.createBuffer();\r\n            if (indicesBuffer == null) {\r\n                console.error(\"Could not create WebGLBuffer.\");\r\n                return null;\r\n            }\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indicesBuffer);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\r\n        }\r\n\r\n        return {\r\n            attributeSetters,\r\n            verticesBuffer,\r\n            indicesBuffer,\r\n            program,\r\n            internal,\r\n            elementsCount,\r\n            indexType\r\n        };\r\n    }\r\n\r\n    static deleteVertexArray(gl: WebGL2RenderingContext, vertexArray: VertexArray): void {\r\n        const {internal} = vertexArray;\r\n        if (gl.isVertexArray(internal)) {\r\n            gl.deleteVertexArray(internal);\r\n        }\r\n    }\r\n\r\n    static drawVertexArray(gl: WebGL2RenderingContext, vertexArray: VertexArray, mode: DrawMode, instanceCount?: number): void {\r\n        const {program, internal, indexType, elementsCount} = vertexArray;\r\n\r\n        WebGLProgramUtilities.useProgram(gl, program);\r\n        \r\n        const currentVertexArray = gl.getParameter(gl.VERTEX_ARRAY_BINDING);\r\n        if (currentVertexArray !== internal) {\r\n            gl.bindVertexArray(internal);\r\n        }\r\n        \r\n        if (indexType !== void 0) {\r\n            if (instanceCount !== void 0) {\r\n                gl.drawElementsInstanced(mode, elementsCount, indexType, 0, instanceCount);\r\n            }\r\n            else {\r\n                gl.drawElements(mode, elementsCount, indexType, 0);\r\n            }\r\n        }\r\n        else {\r\n            if (instanceCount !== void 0) {\r\n                gl.drawArraysInstanced(mode, 0, elementsCount, instanceCount);\r\n            }\r\n            else {\r\n                gl.drawArrays(mode, 0, elementsCount);\r\n            }\r\n        }\r\n    }\r\n\r\n    static setVertexArrayAttributeValue(gl: WebGL2RenderingContext, vertexArray: VertexArray, attributeName: string, value: VertexArrayAttributeValue) {\r\n        //@TODO: Handle interleaved attributes\r\n        const {attributeSetters, verticesBuffer} = vertexArray;\r\n        const attributeSetter = attributeSetters[attributeName];\r\n        const {internal} = verticesBuffer;\r\n        const {array} = value;\r\n\r\n        const currentArrayBufferBinding = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\r\n        if (currentArrayBufferBinding !== internal) {\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, internal);\r\n        }\r\n\r\n        let {srcOffset, srcLength} = value;\r\n        srcOffset = srcOffset ?? 0;\r\n\r\n        if (attributeSetter !== void 0) {\r\n            const {byteOffset} = attributeSetter;\r\n            gl.bufferSubData(gl.ARRAY_BUFFER, byteOffset, array, srcOffset, srcLength);\r\n        }\r\n        else {\r\n            console.warn(`Attribute ${attributeName} does not exist in the setters.`);\r\n        }\r\n    }\r\n\r\n    static setVertexArrayValues(gl: WebGL2RenderingContext, vertexArray: VertexArray, values: VertexArrayValues): void {\r\n        const {indicesBuffer} = vertexArray;\r\n        const {attributes, indices, elementsCount} = values;\r\n\r\n        Object.entries(attributes).forEach(([attributeName, attribute]) => {\r\n            this.setVertexArrayAttributeValue(gl, vertexArray, attributeName, attribute);\r\n        });\r\n\r\n        Object.assign(vertexArray, {elementsCount});\r\n\r\n        if (indices !== void 0 && indicesBuffer !== void 0) {\r\n            const currentElementArrayBufferBinding = gl.getParameter(gl.ELEMENT_ARRAY_BUFFER_BINDING);\r\n            if (currentElementArrayBufferBinding !== indicesBuffer) {\r\n                gl.bindBuffer(BufferTarget.ELEMENT_ARRAY_BUFFER, indicesBuffer);\r\n            }\r\n            gl.bufferSubData(BufferTarget.ELEMENT_ARRAY_BUFFER, 0, indices);\r\n        }\r\n    }\r\n\r\n    static unbindVertexArray(gl: WebGL2RenderingContext): void {\r\n        gl.bindVertexArray(null);\r\n    }\r\n\r\n    static getElementArrayBufferType(indices: Uint8Array | Uint16Array | Uint32Array): ElementArrayDataType {\r\n        if (indices instanceof Uint8Array) {\r\n            return ElementArrayDataType.UNSIGNED_BYTE;\r\n        }\r\n        else if (indices instanceof Uint16Array) {\r\n            return ElementArrayDataType.UNSIGNED_SHORT;\r\n        }\r\n        else {\r\n            return ElementArrayDataType.UNSIGNED_INT;\r\n        }\r\n    }\r\n}","import { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { CameraBase } from \"./Camera\";\r\n\r\nexport class PerspectiveCamera extends CameraBase {\r\n    \r\n    constructor(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number) {\r\n        \r\n        super(Matrix4.perspective(fov, aspect, zNear, zFar));\r\n    }\r\n\r\n    setValues(\r\n        fov: number,\r\n        aspect: number,\r\n        zNear: number,\r\n        zFar: number): PerspectiveCamera\r\n    {\r\n        this._projection.setPerspective(fov, aspect, zNear, zFar);\r\n        this.updateFrustrum();\r\n        return this;\r\n    }\r\n}","import { Vector3 } from \"engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Matrix4 } from \"../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Space } from \"../../../../libs/maths/geometry/space/Space\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { Frustrum } from \"../../../../libs/physics/collisions/Frustrum\";\r\nimport { Mesh } from \"../objects/meshes/Mesh\";\r\nimport { Object3D, Object3DBase } from \"../objects/Object3D\";\r\n\r\nexport { Camera };\r\nexport { CameraBase };\r\n\r\ninterface Camera extends Object3D {\r\n  readonly uuid: UUID;\r\n  readonly viewProjection: Matrix4;\r\n  readonly projection: Matrix4;\r\n  readonly view: Matrix4\r\n  isViewing(mesh: Mesh): boolean;\r\n}\r\n\r\nclass CameraBase extends Object3DBase {\r\n    readonly uuid: UUID;\r\n    protected _projection: Matrix4;\r\n    private _frustrum: Frustrum;\r\n  \r\n    constructor()\r\n    constructor(projection: Matrix4)\r\n    constructor(projection?: Matrix4) {\r\n      super();\r\n      this.uuid = UUIDGenerator.newUUID();\r\n      this._projection = projection || new Matrix4();\r\n      this._frustrum = new Frustrum().setFromPerspectiveMatrix(this._projection);\r\n    }\r\n\r\n    getFront(vector: Vector3): Vector3 {\r\n      return this.transform.getBackward(vector);\r\n    }\r\n\r\n    get projection(): Matrix4 {\r\n      return this._projection.clone();\r\n    }\r\n\r\n    get view(): Matrix4 {\r\n      return this.transform.matrix.clone().invert();\r\n    }\r\n\r\n    get viewProjection(): Matrix4 {\r\n      return this.projection.clone().mult(this.view);\r\n    }\r\n\r\n    isViewing(mesh: Mesh): boolean {\r\n      /*if (typeof mesh.geometry.boundingBox === 'undefined') {\r\n        const boundingBox = mesh.geometry.computeBoundingBox();\r\n        return this._frustrum.intersectsBox(boundingBox);\r\n      }\r\n      return this._frustrum.intersectsBox(mesh.geometry.boundingBox);*/\r\n      return true;\r\n    }\r\n\r\n    protected updateFrustrum(): void {\r\n      this._frustrum.setFromPerspectiveMatrix(this._projection);\r\n    }\r\n}","import { Transform, TransformBase } from \"../../../general/Transform\";\r\n\r\nexport { Object3D };\r\nexport { Object3DBase };\r\n\r\ninterface Object3D {\r\n    transform: Transform;\r\n}\r\n\r\nclass Object3DBase implements Object3D {\r\n    readonly transform: Transform;\r\n\r\n    constructor() {\r\n        this.transform = new TransformBase(this);\r\n    }\r\n}","import { BufferDataUsage } from \"../../webgl/WebGLBufferUtilities\";\r\nimport { AttributeArray, AttributeDataType, DataComponentType, WebGLVertexArrayUtilities } from \"../../webgl/WebGLVertexArrayUtilities\";\r\n\r\nexport { GeometryBuffer };\r\n\r\ninterface GeometryBufferConstructor {\r\n    readonly prototype: GeometryBuffer;\r\n    new(\r\n        attributes: {\r\n            [name: string]: GeometryBufferAttribute;\r\n        },\r\n        interleaved?: boolean,\r\n        usage?: BufferDataUsage\r\n    ): GeometryBuffer;\r\n}\r\n\r\ninterface GeometryBuffer {\r\n    readonly interleaved: boolean;\r\n    readonly buffer: ArrayBuffer;\r\n    readonly usage: BufferDataUsage;\r\n    readonly attributes: {\r\n        [name: string]: {\r\n            componentType: DataComponentType;\r\n            byteOffset: number;\r\n            count: number;\r\n            type: AttributeDataType;\r\n        }\r\n    }\r\n    getAttribute(name: string): GeometryBufferAttribute | null;\r\n}\r\n\r\ninterface GeometryBufferAttribute {\r\n    array: AttributeArray,\r\n    type: AttributeDataType;\r\n}\r\n\r\nclass GeometryBufferBase implements GeometryBuffer {\r\n    readonly buffer: ArrayBuffer;\r\n    readonly attributes: {\r\n        [name: string]: {\r\n            componentType: DataComponentType;\r\n            byteOffset: number;\r\n            count: number;\r\n            type: AttributeDataType;\r\n        }\r\n    };\r\n    readonly usage: BufferDataUsage;\r\n    readonly interleaved: boolean;\r\n    readonly stride: number;\r\n\r\n    constructor(\r\n        attributes: {\r\n            [name: string]: GeometryBufferAttribute\r\n        },\r\n        interleaved: boolean = false,\r\n        usage: BufferDataUsage = BufferDataUsage.STATIC_DRAW\r\n    ) {\r\n        const attributesBuffers = Object.values(attributes);\r\n        const bufferByteLength = attributesBuffers.reduce(\r\n            (byteLength, attribute) => byteLength + attribute.array.byteLength, 0\r\n        );\r\n        const buffer = new ArrayBuffer(bufferByteLength);\r\n        const bufferStride = (interleaved) ? attributesBuffers.reduce(\r\n            (stride, attribute) => {\r\n                const {array, type} = attribute;\r\n                return stride + array.BYTES_PER_ELEMENT * WebGLVertexArrayUtilities.getAttributeDataTypeElementsSize(type);\r\n            }, 0\r\n        ) : 0;\r\n        const bufferSlices = Math.trunc(bufferByteLength / bufferStride);\r\n        \r\n        this.attributes = {};\r\n        this.interleaved = interleaved;\r\n        this.stride = bufferStride;\r\n        this.buffer = buffer;\r\n        this.usage = usage;\r\n        \r\n        let byteOffset = 0;\r\n        if (interleaved) {\r\n            Object.entries(attributes).forEach(([name, attribute]) => {\r\n                const {array, type} = attribute;\r\n                const componentType = WebGLVertexArrayUtilities.getAttributeArrayDataComponentType(array);\r\n                const elementsSize = WebGLVertexArrayUtilities.getAttributeDataTypeElementsSize(type);\r\n                const bufferArrayConstructor = WebGLVertexArrayUtilities.getDataComponentTypeArrayConstructor(\r\n                    WebGLVertexArrayUtilities.getAttributeArrayDataComponentType(array)\r\n                );\r\n                const {BYTES_PER_ELEMENT} = array;\r\n                const {length: count} = array;\r\n                const bufferArray = new bufferArrayConstructor(buffer, byteOffset);\r\n                const arrayStrideOffset = bufferStride / BYTES_PER_ELEMENT;\r\n                for (let i = 0; i < bufferSlices; i++) {\r\n                    let arraySliceIndex = i * elementsSize;\r\n                    bufferArray.set(\r\n                        array.slice(\r\n                            arraySliceIndex,\r\n                            arraySliceIndex + elementsSize\r\n                        ),\r\n                        i * arrayStrideOffset\r\n                    );\r\n                }\r\n                this.attributes[name] = {\r\n                    type: type,\r\n                    byteOffset: byteOffset,\r\n                    count: count,\r\n                    componentType: componentType\r\n                };\r\n                byteOffset += elementsSize * BYTES_PER_ELEMENT;\r\n            });\r\n        }\r\n        else {\r\n            Object.entries(attributes).forEach(([name, attribute]) => {\r\n                const {array, type} = attribute;\r\n                const {length: count} = array;\r\n                const {byteLength} = array;\r\n                const componentType = WebGLVertexArrayUtilities.getAttributeArrayDataComponentType(array);\r\n                const bufferArrayConstructor = WebGLVertexArrayUtilities.getDataComponentTypeArrayConstructor(\r\n                    WebGLVertexArrayUtilities.getAttributeArrayDataComponentType(array)\r\n                );\r\n                const bufferArray = new bufferArrayConstructor(buffer, byteOffset);\r\n                bufferArray.set(array);\r\n                this.attributes[name] = {\r\n                    byteOffset: byteOffset,\r\n                    count: count,\r\n                    type: type,\r\n                    componentType: componentType\r\n                };\r\n                byteOffset += byteLength;\r\n            });\r\n        }\r\n    }\r\n\r\n    getAttribute(name: string): GeometryBufferAttribute | null {\r\n        const attribute = this.attributes[name];\r\n        if (attribute) {\r\n            const {count, type, byteOffset, componentType} = attribute;\r\n            const attributeArrayConstructor = WebGLVertexArrayUtilities.getDataComponentTypeArrayConstructor(componentType);\r\n            const numComponents = WebGLVertexArrayUtilities.getAttributeDataTypeElementsSize(type);\r\n            const bufferByteLength = this.buffer.byteLength;\r\n            const interleaved = this.interleaved;\r\n            const {BYTES_PER_ELEMENT} = attributeArrayConstructor;\r\n            const attributeArray = new attributeArrayConstructor(count);\r\n            if (interleaved) {\r\n                const bufferArray = new attributeArrayConstructor(this.buffer, byteOffset);\r\n                const bufferStride = this.stride;\r\n                const bufferSlices = Math.trunc(bufferByteLength / bufferStride);\r\n                const arrayStrideOffset = bufferStride / BYTES_PER_ELEMENT;\r\n                for (let i = 0; i < bufferSlices; i++) {\r\n                    let bufferArraySliceIndex = arrayStrideOffset * i;\r\n                    attributeArray.set(\r\n                        bufferArray.slice(\r\n                            bufferArraySliceIndex,\r\n                            bufferArraySliceIndex + numComponents\r\n                        ),\r\n                        numComponents * i\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                const bufferArray = new attributeArrayConstructor(this.buffer, byteOffset, count);\r\n                attributeArray.set(bufferArray);\r\n            }\r\n            return {\r\n                array: attributeArray,\r\n                type: type\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nvar GeometryBuffer: GeometryBufferConstructor = GeometryBufferBase;","\r\n\r\n// Vertices : counter clock-wise ordered\r\n\r\nimport { TriangleList } from \"../../../../libs/maths/extensions/lists/TriangleList\";\r\nimport { Vector2List } from \"../../../../libs/maths/extensions/lists/Vector2List\";\r\nimport { Vector3List } from \"../../../../libs/maths/extensions/lists/Vector3List\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { BoundingBox } from \"../../../../libs/physics/collisions/AxisAlignedBoundingBox\";\r\nimport { BoundingSphere } from \"../../../../libs/physics/collisions/BoundingSphere\";\r\nimport { GeometryBuffer } from \"./GeometryBuffer\";\r\nimport { GeometryBuilder } from \"./GeometryBuilder\";\r\nimport { GeometryUtils } from \"./GeometryUtils\";\r\n\r\n// FaceIndices : 3 vertices indices\r\n// FaceArea : triangle.getArea()\r\n// FaceNormal : triangle.getNormal()\r\n// FaceUV / FaceColor ?\r\n\r\n// VertexNormal => Weighted (by area) average of the normals of the faces containing the vertex (=> Varying)\r\n// - Clone the vertex array, read the face indices array\r\n\r\n// VertexIndices\r\n\r\n// PerVertex Animation / MorphTargets\r\n\r\n// SkeletalAnimation\r\n\r\n// Bones are a hierarchical tree\r\n\r\n// bonesWeights\r\n// bonesIndices\r\n\r\n// MorphTarget Animation\r\n\r\n// MorphTargets are a copy of each face, being transformed over time\r\n\r\n// morphIndices\r\n// morphTargets = []; MorphTargets are a transformed copy of faces\r\n// morphNormals = [];\r\n\r\nexport { GeometryPropertyKeys };\r\nexport { Geometry };\r\n//export { isGeometry };\r\nexport { GeometryBase };\r\n\r\nenum GeometryPropertyKeys {\r\n    vertices,\r\n    indices,\r\n    uvs,\r\n    facesNormals,\r\n    verticesNormals,\r\n    tangents,\r\n    bitangents\r\n}\r\n\r\n\r\ninterface GeometryConstructor {\r\n\r\n}\r\n\r\ninterface Geometry {\r\n    /*readonly isGeometry: true;\r\n    readonly uuid: UUID;\r\n    \r\n    indices: TypedArray;\r\n    distances: TypedArray;\r\n    vertices: Vector3List;\r\n    barycentrics: Vector2List\r\n    faces: TriangleList;\r\n    uvs: Vector2List;\r\n\r\n    facesNormals: Vector3List;\r\n    verticesNormals: Vector3List;\r\n    tangents: Vector3List;\r\n    bitangents: Vector3List;\r\n\r\n    readonly boundingBox?: BoundingBox;\r\n    readonly boundingSphere?: BoundingSphere;*/\r\n\r\n    //builder(): GeometryBuilder;\r\n\r\n    //readonly changes: SingleTopicMessageSubscriber<{prop: GeometryPropertyKeys, section: BufferSectionValues}>;\r\n    \r\n    //copy(geometry: Geometry): Geometry;\r\n    //clone(): Geometry;\r\n\r\n    //computeFacesNormals(options?: ListLoopOptions): Geometry;\r\n    //computeVerticesNormals(weighted?: boolean, options?: ListLoopOptions): Geometry;\r\n    //computeTangentsAndBitangents(options?: ListLoopOptions): Geometry;\r\n\r\n\t// computeBoundingBox(): BoundingBox;\r\n    // computeBoundingSphere(): BoundingSphere;\r\n    \r\n    //updateVertices(vertices: TypedArray, offset?: number): Geometry;\r\n    //updateUvs(uvs: TypedArray, offset?: number): Geometry;\r\n}\r\n/*\r\nfunction isGeometry(obj: any): obj is Geometry {\r\n    return (obj as Geometry).isGeometry;\r\n}*/\r\n\r\nabstract class GeometryBase implements Geometry {\r\n\r\n    /*readonly uuid: UUID;\r\n    readonly isGeometry: true;\r\n    \r\n    private _boundingBox?: BoundingBox;\r\n    private _boundingSphere?: BoundingSphere;\r\n\r\n    private _indicesArray: TypedArray;\r\n\r\n    private _distancesArray: TypedArray;\r\n\r\n    private _verticesArray: TypedArray;\r\n    private _vertices: Vector3List;\r\n    private _faces: TriangleList;\r\n\r\n    private _uvsArray: TypedArray;\r\n    private _uvs: Vector2List;\r\n\r\n    private _facesNormalsArray: TypedArray;\r\n    private _facesNormals: Vector3List;\r\n\r\n    private _verticesNormalsArray: TypedArray;\r\n    private _verticesNormals: Vector3List;\r\n\r\n    private _tangentsArray: TypedArray;\r\n    private _tangents: Vector3List;\r\n\r\n    private _bitangentsArray: TypedArray;\r\n    private _bitangents: Vector3List;\r\n\r\n    private _barycentricsArray: TypedArray;\r\n    private _barycentrics: Vector2List;\r\n\r\n    private _weightedVerticesNormals: boolean;*/\r\n\r\n    constructor(/*desc: {\r\n        vertices: TypedArray;\r\n        indices: TypedArray;\r\n        uvs: TypedArray;\r\n        weightedVerticesNormals?: boolean\r\n    }*/) {\r\n        /*this.uuid = UUIDGenerator.newUUID();\r\n        this.isGeometry = true;\r\n        \r\n        this._verticesArray = desc.vertices;\r\n        this._vertices = new Vector3List(this._verticesArray);\r\n        this._faces = new TriangleList(this._verticesArray);\r\n\r\n        this._indicesArray = desc.indices;\r\n\r\n        this._uvsArray = desc.uvs;\r\n        this._uvs = new Vector2List(this._uvsArray);\r\n\r\n        this._weightedVerticesNormals = desc.weightedVerticesNormals ?? false;\r\n\r\n        this._facesNormalsArray = GeometryUtils.computeFacesNormals(this._verticesArray, this._indicesArray, Float32Array);\r\n        this._facesNormals = new Vector3List(this._facesNormalsArray);\r\n        \r\n        this._verticesNormalsArray = GeometryUtils.computeVerticesNormals(this._verticesArray, this._indicesArray, this._weightedVerticesNormals, Float32Array, this._facesNormalsArray);\r\n        this._verticesNormals = new Vector3List(this._verticesNormalsArray);\r\n\r\n        this._barycentricsArray = GeometryUtils.computeBarycentrics(this._verticesArray, Float32Array);\r\n        this._barycentrics = new Vector2List(this._barycentricsArray);\r\n\r\n        this._distancesArray = GeometryUtils.computeDistances(this._verticesArray, this._indicesArray, Float32Array);\r\n        \r\n        const { tangentsArray, bitangentsArray } = GeometryUtils.computeTangentsAndBitangents(this._verticesArray, this._uvsArray, this._indicesArray, Float32Array);\r\n        this._tangentsArray = tangentsArray;\r\n        this._bitangentsArray = bitangentsArray;\r\n        this._tangents = new Vector3List(this._tangentsArray);\r\n        this._bitangents = new Vector3List(this._bitangentsArray);*/\r\n    }\r\n\r\n    /*builder(): GeometryBuilder {\r\n        return new GeometryBuilderBase(this);\r\n    }*/\r\n\r\n    /*get indices(): TypedArray {\r\n        return this._indicesArray;\r\n    }\r\n\r\n    get vertices(): Vector3List {\r\n        return this._vertices;\r\n    }\r\n\r\n    get barycentrics(): Vector2List {\r\n        return this._barycentrics;\r\n    }\r\n\r\n    get distances(): TypedArray {\r\n        return this._distancesArray;\r\n    }\r\n\r\n    get uvs(): Vector2List {\r\n        return this._uvs;\r\n    }\r\n\r\n    get faces(): TriangleList {\r\n        return this._faces;\r\n    }\r\n\r\n    get facesNormals(): Vector3List {\r\n        return this._facesNormals;\r\n    }\r\n\r\n    get verticesNormals(): Vector3List {\r\n        return this._verticesNormals;\r\n    }\r\n\r\n    get tangents(): Vector3List {\r\n        return this._tangents;\r\n    }\r\n\r\n    get bitangents(): Vector3List {\r\n        return this._bitangents;\r\n    }\r\n\r\n    get boundingBox(): BoundingBox | undefined {\r\n        return this._boundingBox;\r\n    }\r\n    \r\n\tget boundingSphere(): BoundingSphere | undefined {\r\n        return this._boundingSphere;\r\n    }*/\r\n\r\n    abstract toBuilder(): GeometryBuilder;\r\n    \r\n    /*copy(geometry: GeometryBase): GeometryBase {\r\n        this._verticesArray = geometry._verticesArray.slice();\r\n        this._indicesArray = geometry._indicesArray.slice();\r\n        this._uvsArray = geometry._uvsArray.slice();\r\n        this._facesNormalsArray = geometry._facesNormalsArray.slice();\r\n        this._verticesNormalsArray = geometry._verticesNormalsArray.slice();\r\n        this._tangentsArray = geometry._tangentsArray.slice();\r\n        this._bitangentsArray = geometry._bitangentsArray.slice();\r\n\r\n        if (typeof geometry._boundingBox !== 'undefined') {\r\n            this.computeBoundingBox();\r\n        }\r\n\r\n        if (typeof geometry._boundingSphere !== 'undefined') {\r\n            this.computeBoundingSphere();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    updateVertices(vertices: TypedArray, offset: number = 0): GeometryBase {\r\n        const idxFrom = offset;\r\n        const idxTo = offset + vertices.length;\r\n        this._verticesArray.set(vertices, offset);\r\n        this._updateFacesNormals({idxFrom, idxTo});\r\n        this._updateVerticesNormals(this._weightedVerticesNormals, {idxFrom, idxTo});\r\n        //this._changes.publish({prop: GeometryPropertyKeys.vertices, section: [idxFrom, idxTo]});\r\n        return this;\r\n    }\r\n\r\n    updateUvs(uvs: TypedArray, offset: number = 0): GeometryBase {\r\n        const idxFrom = offset;\r\n        const idxTo = offset + uvs.length;\r\n        this._uvsArray.set(uvs, offset);\r\n        if (typeof this._tangents !== 'undefined') {\r\n            this._updateTangentsAndBitangents({idxFrom, idxTo});\r\n        }\r\n        //this._changes.publish({prop: GeometryPropertyKeys.uvs, section: [idxFrom, idxTo]});\r\n        return this;\r\n    }\r\n\r\n    clone(): GeometryBase {\r\n        return new GeometryBase({\r\n            vertices: this._verticesArray.slice(),\r\n            indices: this._indicesArray.slice(),\r\n            uvs: this._uvsArray.slice()\r\n        }).copy(this);\r\n    }\r\n\r\n    private _updateFacesNormals(options?: {\r\n        idxFrom: number;\r\n        idxTo: number;\r\n    }): GeometryBase {\r\n        GeometryUtils.computeFacesNormals(this._faces,  this._indicesArray, this._facesNormals, options);\r\n        //this._changes.publish({prop: GeometryPropertyKeys.facesNormals, section: [options?.idxFrom || 0, options?.idxTo || this._facesNormals.buffer.length]});\r\n        return this;\r\n    }\r\n\r\n    private _updateVerticesNormals(weighted: boolean = false, options?: {\r\n        idxFrom: number;\r\n        idxTo: number;\r\n    }): GeometryBase {\r\n        this._weightedVerticesNormals = weighted;\r\n        if (typeof this.facesNormals === 'undefined') {\r\n            this._updateFacesNormals();\r\n        }\r\n        GeometryUtils.computeVerticesNormals(this._vertices, this._faces, this._indicesArray, this._facesNormals!, this._verticesNormals, weighted, options);\r\n        //this._changes.publish({prop: GeometryPropertyKeys.verticesNormals, section: [options?.idxFrom || 0, options?.idxTo || this._verticesNormals.buffer.length]});\r\n        return this;\r\n    }\r\n\r\n    private _updateTangentsAndBitangents(options?: {\r\n        idxFrom: number;\r\n        idxTo: number;\r\n    }): GeometryBase {\r\n        //this._changes.publish({prop: GeometryPropertyKeys.tangents, section: [options?.idxFrom || 0, options?.idxTo || this._tangents.buffer.length]});\r\n        //this._changes.publish({prop: GeometryPropertyKeys.bitangents, section: [options?.idxFrom || 0, options?.idxTo || this._bitangents.buffer.length]});\r\n        GeometryUtils.computeTangentsAndBitangents(this._verticesArray, this._uvsArray, this._indicesArray, this._tangentsArray, this._bitangentsArray, options);\r\n        return this;\r\n    }*/\r\n    \r\n\t/*computeBoundingBox(): BoundingBox {\r\n        if (this._boundingBox === undefined) {\r\n            this._boundingBox = new BoundingBox().setFromPoints(this._vertices);\r\n        }\r\n        else {\r\n            this._boundingBox.setFromPoints(this._vertices);\r\n        }\r\n        return this._boundingBox;\r\n    }\r\n    \r\n\tcomputeBoundingSphere(): BoundingSphere {\r\n        if (this._boundingSphere === undefined) {\r\n            this._boundingSphere = new BoundingSphere().setFromPoints(this._vertices);\r\n        }\r\n        else {\r\n            this._boundingSphere.setFromPoints(this._vertices);\r\n        }\r\n        return this._boundingSphere;\r\n    }*/\r\n}","import { Matrix4 } from \"../../../../../libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector3 } from \"../../../../../libs/maths/algebra/vectors/Vector3\";\r\n\r\nexport { BoundingBox };\r\n\r\nconst corners = new Array(8).fill(0).map(_ => new Vector3());\r\n\r\ninterface BoundingBoxConstructor {\r\n    prototype: BoundingBox;\r\n    new(\r\n        min: Vector3,\r\n        max: Vector3\r\n    ): BoundingBox;\r\n}\r\n\r\ninterface BoundingBox {\r\n    readonly min: Vector3;\r\n    readonly max: Vector3;\r\n    hits(other: BoundingBox): boolean;\r\n    transform(matrix: Matrix4): void;\r\n}\r\n\r\nclass BoundingBoxBase {\r\n    readonly min: Vector3;\r\n    readonly max: Vector3;\r\n\r\n    constructor(\r\n        min: Vector3,\r\n        max: Vector3\r\n    ) {\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n\r\n    static fromBoxes(...boxes: BoundingBox[]) {\r\n        const positiveInfinity = Number.POSITIVE_INFINITY;\r\n        const negativeInfinity = Number.NEGATIVE_INFINITY;\r\n        let minX = positiveInfinity;\r\n        let minY = positiveInfinity;\r\n        let minZ = positiveInfinity;\r\n        let maxX = negativeInfinity;\r\n        let maxY = negativeInfinity;\r\n        let maxZ = negativeInfinity;\r\n        boxes.forEach((box_i) => {\r\n            const {min: boxMin, max: boxMax} = box_i;\r\n            const {x: boxMinX, y: boxMinY, z: boxMinZ} = boxMin;\r\n            const {x: boxMaxX, y: boxMaxY, z: boxMaxZ} = boxMax;\r\n            if (boxMinX < minX) minX = boxMinX;\r\n            else if (boxMaxX > maxX) maxX = boxMaxX;\r\n            if (boxMinY < minY) minY = boxMinY;\r\n            else if (boxMaxY > maxY) maxY = boxMaxY;\r\n            if (boxMinZ < minZ) minZ = boxMinZ;\r\n            else if (boxMaxZ > maxZ) maxZ = boxMaxZ;\r\n        });\r\n        return new BoundingBox(\r\n            new Vector3(minX, minY, minZ),\r\n            new Vector3(maxX, maxY, maxZ)\r\n        );\r\n    }\r\n\r\n    hits(other: BoundingBox): boolean {\r\n        const {min, max} = this;\r\n        const {x: minX, y: minY, z: minZ} = min;\r\n        const {x: maxX, y: maxY, z: maxZ} = max;\r\n        const {min: otherMin, max: otherMax} = other;\r\n        const {x: otherMinX, y: otherMinY, z: otherMinZ} = otherMin;\r\n        const {x: otherMaxX, y: otherMaxY, z: otherMaxZ} = otherMax;\r\n        return (minX <= otherMaxX && maxX >= otherMinX) &&\r\n            (minY <= otherMaxY && maxY >= otherMinY) &&\r\n            (minZ <= otherMaxZ && maxZ >= otherMinZ);\r\n    }\r\n\r\n    transform(matrix: Matrix4): void {\r\n        const {min, max} = this;\r\n        let {x: minX, y: minY, z: minZ} = min;\r\n        let {x: maxX, y: maxY, z: maxZ} = max;\r\n        corners[0].copy(min);\r\n        corners[1].setValues(minX, minY, maxZ);\r\n        corners[2].setValues(minX, maxY, minZ);\r\n        corners[3].setValues(maxX, minY, minZ);\r\n        corners[4].setValues(minX, maxY, maxZ);\r\n        corners[5].setValues(maxX, minY, maxZ);\r\n        corners[6].setValues(maxX, maxY, minZ);\r\n        corners[7].copy(max);\r\n        const {POSITIVE_INFINITY, NEGATIVE_INFINITY} = Number;\r\n        minX = minY = minZ = POSITIVE_INFINITY;\r\n        maxX = maxY = maxZ = NEGATIVE_INFINITY;\r\n        corners.forEach((corner_i) => {\r\n            matrix.transformPoint(corner_i);\r\n            const [x, y, z] = corner_i;\r\n            if (x < minX) minX = x;\r\n            else if (x > maxX) maxX = x;\r\n            if (y < minY) minY = y;\r\n            else if (y > maxY) maxY = y;\r\n            if (z < minZ) minZ = z;\r\n            else if (z > maxZ) maxZ = z;\r\n        });\r\n        min.setValues(minX, minY, minZ);\r\n        max.setValues(maxX, maxY, maxZ);\r\n    }\r\n}\r\n\r\nvar BoundingBox: BoundingBoxConstructor = BoundingBoxBase;","\r\n\r\n// Vertices : counter clock-wise ordered\r\n\r\nimport { TriangleList } from \"../../../../libs/maths/extensions/lists/TriangleList\";\r\nimport { Vector2List } from \"../../../../libs/maths/extensions/lists/Vector2List\";\r\nimport { Vector3List } from \"../../../../libs/maths/extensions/lists/Vector3List\";\r\nimport { UUID, UUIDGenerator } from \"../../../../libs/maths/statistics/random/UUIDGenerator\";\r\nimport { BoundingBox } from \"../../../../libs/physics/collisions/AxisAlignedBoundingBox\";\r\nimport { BoundingSphere } from \"../../../../libs/physics/collisions/BoundingSphere\";\r\nimport { GeometryBuffer } from \"./GeometryBuffer\";\r\nimport { GeometryBuilder } from \"./GeometryBuilder\";\r\nimport { GeometryUtils } from \"./GeometryUtils\";\r\n\r\n// FaceIndices : 3 vertices indices\r\n// FaceArea : triangle.getArea()\r\n// FaceNormal : triangle.getNormal()\r\n// FaceUV / FaceColor ?\r\n\r\n// VertexNormal => Weighted (by area) average of the normals of the faces containing the vertex (=> Varying)\r\n// - Clone the vertex array, read the face indices array\r\n\r\n// VertexIndices\r\n\r\n// PerVertex Animation / MorphTargets\r\n\r\n// SkeletalAnimation\r\n\r\n// Bones are a hierarchical tree\r\n\r\n// bonesWeights\r\n// bonesIndices\r\n\r\n// MorphTarget Animation\r\n\r\n// MorphTargets are a copy of each face, being transformed over time\r\n\r\n// morphIndices\r\n// morphTargets = []; MorphTargets are a transformed copy of faces\r\n// morphNormals = [];\r\n\r\nexport { GeometryPropertyKeys };\r\nexport { Geometry };\r\n//export { isGeometry };\r\nexport { GeometryBase };\r\n\r\nenum GeometryPropertyKeys {\r\n    vertices,\r\n    indices,\r\n    uvs,\r\n    facesNormals,\r\n    verticesNormals,\r\n    tangents,\r\n    bitangents\r\n}\r\n\r\n\r\ninterface GeometryConstructor {\r\n\r\n}\r\n\r\ninterface Geometry {\r\n    /*readonly isGeometry: true;\r\n    readonly uuid: UUID;\r\n    \r\n    indices: TypedArray;\r\n    distances: TypedArray;\r\n    vertices: Vector3List;\r\n    barycentrics: Vector2List\r\n    faces: TriangleList;\r\n    uvs: Vector2List;\r\n\r\n    facesNormals: Vector3List;\r\n    verticesNormals: Vector3List;\r\n    tangents: Vector3List;\r\n    bitangents: Vector3List;\r\n\r\n    readonly boundingBox?: BoundingBox;\r\n    readonly boundingSphere?: BoundingSphere;*/\r\n\r\n    //builder(): GeometryBuilder;\r\n\r\n    //readonly changes: SingleTopicMessageSubscriber<{prop: GeometryPropertyKeys, section: BufferSectionValues}>;\r\n    \r\n    //copy(geometry: Geometry): Geometry;\r\n    //clone(): Geometry;\r\n\r\n    //computeFacesNormals(options?: ListLoopOptions): Geometry;\r\n    //computeVerticesNormals(weighted?: boolean, options?: ListLoopOptions): Geometry;\r\n    //computeTangentsAndBitangents(options?: ListLoopOptions): Geometry;\r\n\r\n\t// computeBoundingBox(): BoundingBox;\r\n    // computeBoundingSphere(): BoundingSphere;\r\n    \r\n    //updateVertices(vertices: TypedArray, offset?: number): Geometry;\r\n    //updateUvs(uvs: TypedArray, offset?: number): Geometry;\r\n}\r\n/*\r\nfunction isGeometry(obj: any): obj is Geometry {\r\n    return (obj as Geometry).isGeometry;\r\n}*/\r\n\r\nabstract class GeometryBase implements Geometry {\r\n\r\n    /*readonly uuid: UUID;\r\n    readonly isGeometry: true;\r\n    \r\n    private _boundingBox?: BoundingBox;\r\n    private _boundingSphere?: BoundingSphere;\r\n\r\n    private _indicesArray: TypedArray;\r\n\r\n    private _distancesArray: TypedArray;\r\n\r\n    private _verticesArray: TypedArray;\r\n    private _vertices: Vector3List;\r\n    private _faces: TriangleList;\r\n\r\n    private _uvsArray: TypedArray;\r\n    private _uvs: Vector2List;\r\n\r\n    private _facesNormalsArray: TypedArray;\r\n    private _facesNormals: Vector3List;\r\n\r\n    private _verticesNormalsArray: TypedArray;\r\n    private _verticesNormals: Vector3List;\r\n\r\n    private _tangentsArray: TypedArray;\r\n    private _tangents: Vector3List;\r\n\r\n    private _bitangentsArray: TypedArray;\r\n    private _bitangents: Vector3List;\r\n\r\n    private _barycentricsArray: TypedArray;\r\n    private _barycentrics: Vector2List;\r\n\r\n    private _weightedVerticesNormals: boolean;*/\r\n\r\n    constructor(/*desc: {\r\n        vertices: TypedArray;\r\n        indices: TypedArray;\r\n        uvs: TypedArray;\r\n        weightedVerticesNormals?: boolean\r\n    }*/) {\r\n        /*this.uuid = UUIDGenerator.newUUID();\r\n        this.isGeometry = true;\r\n        \r\n        this._verticesArray = desc.vertices;\r\n        this._vertices = new Vector3List(this._verticesArray);\r\n        this._faces = new TriangleList(this._verticesArray);\r\n\r\n        this._indicesArray = desc.indices;\r\n\r\n        this._uvsArray = desc.uvs;\r\n        this._uvs = new Vector2List(this._uvsArray);\r\n\r\n        this._weightedVerticesNormals = desc.weightedVerticesNormals ?? false;\r\n\r\n        this._facesNormalsArray = GeometryUtils.computeFacesNormals(this._verticesArray, this._indicesArray, Float32Array);\r\n        this._facesNormals = new Vector3List(this._facesNormalsArray);\r\n        \r\n        this._verticesNormalsArray = GeometryUtils.computeVerticesNormals(this._verticesArray, this._indicesArray, this._weightedVerticesNormals, Float32Array, this._facesNormalsArray);\r\n        this._verticesNormals = new Vector3List(this._verticesNormalsArray);\r\n\r\n        this._barycentricsArray = GeometryUtils.computeBarycentrics(this._verticesArray, Float32Array);\r\n        this._barycentrics = new Vector2List(this._barycentricsArray);\r\n\r\n        this._distancesArray = GeometryUtils.computeDistances(this._verticesArray, this._indicesArray, Float32Array);\r\n        \r\n        const { tangentsArray, bitangentsArray } = GeometryUtils.computeTangentsAndBitangents(this._verticesArray, this._uvsArray, this._indicesArray, Float32Array);\r\n        this._tangentsArray = tangentsArray;\r\n        this._bitangentsArray = bitangentsArray;\r\n        this._tangents = new Vector3List(this._tangentsArray);\r\n        this._bitangents = new Vector3List(this._bitangentsArray);*/\r\n    }\r\n\r\n    /*builder(): GeometryBuilder {\r\n        return new GeometryBuilderBase(this);\r\n    }*/\r\n\r\n    /*get indices(): TypedArray {\r\n        return this._indicesArray;\r\n    }\r\n\r\n    get vertices(): Vector3List {\r\n        return this._vertices;\r\n    }\r\n\r\n    get barycentrics(): Vector2List {\r\n        return this._barycentrics;\r\n    }\r\n\r\n    get distances(): TypedArray {\r\n        return this._distancesArray;\r\n    }\r\n\r\n    get uvs(): Vector2List {\r\n        return this._uvs;\r\n    }\r\n\r\n    get faces(): TriangleList {\r\n        return this._faces;\r\n    }\r\n\r\n    get facesNormals(): Vector3List {\r\n        return this._facesNormals;\r\n    }\r\n\r\n    get verticesNormals(): Vector3List {\r\n        return this._verticesNormals;\r\n    }\r\n\r\n    get tangents(): Vector3List {\r\n        return this._tangents;\r\n    }\r\n\r\n    get bitangents(): Vector3List {\r\n        return this._bitangents;\r\n    }\r\n\r\n    get boundingBox(): BoundingBox | undefined {\r\n        return this._boundingBox;\r\n    }\r\n    \r\n\tget boundingSphere(): BoundingSphere | undefined {\r\n        return this._boundingSphere;\r\n    }*/\r\n\r\n    abstract toBuilder(): GeometryBuilder;\r\n    \r\n    /*copy(geometry: GeometryBase): GeometryBase {\r\n        this._verticesArray = geometry._verticesArray.slice();\r\n        this._indicesArray = geometry._indicesArray.slice();\r\n        this._uvsArray = geometry._uvsArray.slice();\r\n        this._facesNormalsArray = geometry._facesNormalsArray.slice();\r\n        this._verticesNormalsArray = geometry._verticesNormalsArray.slice();\r\n        this._tangentsArray = geometry._tangentsArray.slice();\r\n        this._bitangentsArray = geometry._bitangentsArray.slice();\r\n\r\n        if (typeof geometry._boundingBox !== 'undefined') {\r\n            this.computeBoundingBox();\r\n        }\r\n\r\n        if (typeof geometry._boundingSphere !== 'undefined') {\r\n            this.computeBoundingSphere();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    updateVertices(vertices: TypedArray, offset: number = 0): GeometryBase {\r\n        const idxFrom = offset;\r\n        const idxTo = offset + vertices.length;\r\n        this._verticesArray.set(vertices, offset);\r\n        this._updateFacesNormals({idxFrom, idxTo});\r\n        this._updateVerticesNormals(this._weightedVerticesNormals, {idxFrom, idxTo});\r\n        //this._changes.publish({prop: GeometryPropertyKeys.vertices, section: [idxFrom, idxTo]});\r\n        return this;\r\n    }\r\n\r\n    updateUvs(uvs: TypedArray, offset: number = 0): GeometryBase {\r\n        const idxFrom = offset;\r\n        const idxTo = offset + uvs.length;\r\n        this._uvsArray.set(uvs, offset);\r\n        if (typeof this._tangents !== 'undefined') {\r\n            this._updateTangentsAndBitangents({idxFrom, idxTo});\r\n        }\r\n        //this._changes.publish({prop: GeometryPropertyKeys.uvs, section: [idxFrom, idxTo]});\r\n        return this;\r\n    }\r\n\r\n    clone(): GeometryBase {\r\n        return new GeometryBase({\r\n            vertices: this._verticesArray.slice(),\r\n            indices: this._indicesArray.slice(),\r\n            uvs: this._uvsArray.slice()\r\n        }).copy(this);\r\n    }\r\n\r\n    private _updateFacesNormals(options?: {\r\n        idxFrom: number;\r\n        idxTo: number;\r\n    }): GeometryBase {\r\n        GeometryUtils.computeFacesNormals(this._faces,  this._indicesArray, this._facesNormals, options);\r\n        //this._changes.publish({prop: GeometryPropertyKeys.facesNormals, section: [options?.idxFrom || 0, options?.idxTo || this._facesNormals.buffer.length]});\r\n        return this;\r\n    }\r\n\r\n    private _updateVerticesNormals(weighted: boolean = false, options?: {\r\n        idxFrom: number;\r\n        idxTo: number;\r\n    }): GeometryBase {\r\n        this._weightedVerticesNormals = weighted;\r\n        if (typeof this.facesNormals === 'undefined') {\r\n            this._updateFacesNormals();\r\n        }\r\n        GeometryUtils.computeVerticesNormals(this._vertices, this._faces, this._indicesArray, this._facesNormals!, this._verticesNormals, weighted, options);\r\n        //this._changes.publish({prop: GeometryPropertyKeys.verticesNormals, section: [options?.idxFrom || 0, options?.idxTo || this._verticesNormals.buffer.length]});\r\n        return this;\r\n    }\r\n\r\n    private _updateTangentsAndBitangents(options?: {\r\n        idxFrom: number;\r\n        idxTo: number;\r\n    }): GeometryBase {\r\n        //this._changes.publish({prop: GeometryPropertyKeys.tangents, section: [options?.idxFrom || 0, options?.idxTo || this._tangents.buffer.length]});\r\n        //this._changes.publish({prop: GeometryPropertyKeys.bitangents, section: [options?.idxFrom || 0, options?.idxTo || this._bitangents.buffer.length]});\r\n        GeometryUtils.computeTangentsAndBitangents(this._verticesArray, this._uvsArray, this._indicesArray, this._tangentsArray, this._bitangentsArray, options);\r\n        return this;\r\n    }*/\r\n    \r\n\t/*computeBoundingBox(): BoundingBox {\r\n        if (this._boundingBox === undefined) {\r\n            this._boundingBox = new BoundingBox().setFromPoints(this._vertices);\r\n        }\r\n        else {\r\n            this._boundingBox.setFromPoints(this._vertices);\r\n        }\r\n        return this._boundingBox;\r\n    }\r\n    \r\n\tcomputeBoundingSphere(): BoundingSphere {\r\n        if (this._boundingSphere === undefined) {\r\n            this._boundingSphere = new BoundingSphere().setFromPoints(this._vertices);\r\n        }\r\n        else {\r\n            this._boundingSphere.setFromPoints(this._vertices);\r\n        }\r\n        return this._boundingSphere;\r\n    }*/\r\n}","import { BufferMask } from \"./WebGLRendererUtilities\";\r\nimport { Texture, TextureMagFilter, TexturePixelFormat, TexturePixelType } from \"./WebGLTextureUtilities\";\r\n\r\nexport enum FramebufferStatus {\r\n    FRAMEBUFFER_COMPLETE = 0x8CD5,\r\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6,\r\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7,\r\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9,\r\n    FRAMEBUFFER_UNSUPPORTED = 0x8CDD\r\n}\r\n\r\nexport enum FramebufferTextureTarget {\r\n    TEXTURE_2D = 0x0DE1,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A\r\n}\r\n\r\nexport enum FramebufferAttachment {\r\n    COLOR_ATTACHMENT0 = 0x8CE0,\r\n    COLOR_ATTACHMENT1 = 0x8CE1,\r\n    COLOR_ATTACHMENT2 = 0x8CE2,\r\n    COLOR_ATTACHMENT3 = 0x8CE3,\r\n    COLOR_ATTACHMENT4 = 0x8CE4,\r\n    COLOR_ATTACHMENT5 = 0x8CE5,\r\n    COLOR_ATTACHMENT6 = 0x8CE6,\r\n    COLOR_ATTACHMENT7 = 0x8CE7,\r\n    COLOR_ATTACHMENT8 = 0x8CE8,\r\n    COLOR_ATTACHMENT9 = 0x8CE9,\r\n    COLOR_ATTACHMENT10 = 0x8CEA,\r\n    COLOR_ATTACHMENT11 = 0x8CEB,\r\n    COLOR_ATTACHMENT12 = 0x8CEC,\r\n    COLOR_ATTACHMENT13 = 0x8CED,\r\n    COLOR_ATTACHMENT14 = 0x8CEE,\r\n    COLOR_ATTACHMENT15 = 0x8CEF,\r\n    DEPTH_ATTACHMENT = 0x8D00,\r\n    STENCIL_ATTACHMENT = 0x8D20,\r\n    DEPTH_STENCIL_ATTACHMENT = 0x821A\r\n}\r\n\r\nexport enum RenderbufferPixelFormat {\r\n    R8 = 0x8229,\r\n    R8UI = 0x8232,\r\n    R8I = 0x8231,\r\n    R16UI = 0x8234,\r\n    R16I = 0x8233,\r\n    R32UI = 0x8236,\r\n    R32I = 0x8235,\r\n    RG8 = 0x822B,\r\n    RG8UI = 0x8238,\r\n    RG8I = 0x8237,\r\n    RG16UI = 0x823A,\r\n    RG16I = 0x8239,\r\n    RG32UI = 0x823C,\r\n    RG32I = 0x823B,\r\n    RGB8 = 0x8051,\r\n    RGBA8 = 0x8058,\r\n    SRGB8_ALPHA8 = 0x8C43,\r\n    RGBA4 = 0x8056,\r\n    RGB565 = 0x8D62,\r\n    RGB5_A1 = 0x8057,\r\n    RGB10_A2 = 0x8059,\r\n    RGBA8UI = 0x8D7C,\r\n    RGBA8I = 0x8D8E,\r\n    RGB10_A2UI = 0x906F,\r\n    RGBA16UI = 0x8D76,\r\n    RGBA16I = 0x8D88,\r\n    RGBA32I = 0x8D82,\r\n    RGBA32UI = 0x8D70,\r\n    DEPTH_COMPONENT16 = 0x81A5,\r\n    DEPTH_COMPONENT24 = 0x81A6,\r\n    DEPTH_COMPONENT32F = 0x8CAC,\r\n    DEPTH24_STENCIL8 = 0x88F0,\r\n    DEPTH32F_STENCIL8 = 0x8CAD,\r\n    STENCIL_INDEX8 = 0x8D48\r\n}\r\n\r\nexport type Renderbuffer = {\r\n    internal: WebGLRenderbuffer;\r\n}\r\n\r\nexport type RenderbufferProperties = {\r\n    internalFormat: RenderbufferPixelFormat;\r\n    width: number;\r\n    height: number;\r\n    samples?: number;\r\n}\r\n\r\ntype Framebuffer = {\r\n    internal: WebGLFramebuffer;\r\n};\r\n\r\ntype FramebufferTextureAttachmentProperties = {\r\n    attachment: FramebufferAttachment;\r\n    textureTarget: FramebufferTextureTarget;\r\n    texture: Texture;\r\n}\r\n\r\ntype FramebufferTextureAttachment = FramebufferTextureAttachmentProperties & Framebuffer;\r\n\r\ntype FramebufferRenderbufferAttachmentProperties = {\r\n    attachment: FramebufferAttachment;\r\n    renderbuffer: Renderbuffer;\r\n}\r\n\r\ntype FramebufferRenderbufferAttachment = FramebufferRenderbufferAttachmentProperties & Framebuffer;\r\n\r\nexport class WebGLFramebufferUtilities {\r\n\r\n    static createFramebuffer(gl: WebGL2RenderingContext): Framebuffer | null {\r\n        const framebuffer = gl.createFramebuffer();\r\n    \r\n        if (framebuffer === null) {\r\n            console.error(\"Could not create WebGLFramebuffer.\");\r\n            return null;\r\n        }\r\n        \r\n        return {\r\n            internal: framebuffer\r\n        };\r\n    }\r\n\r\n    static createRenderbuffer(gl: WebGL2RenderingContext, props: RenderbufferProperties): Renderbuffer | null {\r\n        const renderbuffer = gl.createRenderbuffer();\r\n        \r\n        if (renderbuffer == null) {\r\n            console.error(\"Could not create WebGLRenderbuffer.\");\r\n            return null;\r\n        }\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\r\n        \r\n        if (typeof props.samples !== \"undefined\") {\r\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, props.samples, props.internalFormat, props.width, props.height);\r\n        }\r\n        else {\r\n            gl.renderbufferStorage(gl.RENDERBUFFER, props.internalFormat, props.width, props.height);\r\n        }\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n        return {\r\n            ...props,\r\n            internal: renderbuffer\r\n        };\r\n    }\r\n\r\n    static attachTexture(gl: WebGL2RenderingContext, framebuffer: Framebuffer, ...props: FramebufferTextureAttachmentProperties[]): FramebufferTextureAttachment[] {\r\n        const currentFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\r\n        if (currentFramebuffer !== framebuffer.internal) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer.internal);\r\n        }\r\n        \r\n        const attachments = props.map((props) => {\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, props.attachment, props.textureTarget, props.texture.internal, 0);\r\n            return {\r\n                ...props,\r\n                ...framebuffer\r\n            };\r\n        });\r\n\r\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        if (status !== FramebufferStatus.FRAMEBUFFER_COMPLETE) {\r\n            console.warn(`Incomplete framebuffer status: ${FramebufferStatus[status]}`);\r\n        }\r\n\r\n        return attachments;\r\n    }\r\n\r\n    static attachRenderbuffer(gl: WebGL2RenderingContext, framebuffer: Framebuffer, ...props: FramebufferRenderbufferAttachmentProperties[]): FramebufferRenderbufferAttachment[] {\r\n        const currentFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\r\n        if (currentFramebuffer !== framebuffer.internal) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer.internal);\r\n        }\r\n\r\n        const attachments = props.map((props) => {\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, props.attachment, gl.RENDERBUFFER, props.renderbuffer.internal);\r\n            return {\r\n                ...props,\r\n                ...framebuffer\r\n            };\r\n        });\r\n\r\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        if (status !== FramebufferStatus.FRAMEBUFFER_COMPLETE) {\r\n            console.warn(`Incomplete framebuffer status: ${FramebufferStatus[status]}`);\r\n        }\r\n\r\n        return attachments;\r\n    }\r\n\r\n    static blit(gl: WebGL2RenderingContext, readFramebuffer: Framebuffer | null, drawFramebuffer: Framebuffer | null, readRectangle: number[], drawRectangle: number[], mask: BufferMask, filter: TextureMagFilter): void {\r\n        \r\n        const currentReadFramebuffer = gl.getParameter(gl.READ_FRAMEBUFFER_BINDING);\r\n        if (currentReadFramebuffer !== readFramebuffer) {\r\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, (readFramebuffer !== null) ? readFramebuffer.internal : null);\r\n        }\r\n        \r\n        const currentDrawFramebuffer = gl.getParameter(gl.DRAW_FRAMEBUFFER_BINDING);\r\n        if (currentDrawFramebuffer !== drawFramebuffer) {\r\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, (drawFramebuffer !== null) ? drawFramebuffer.internal : null);\r\n        }\r\n        \r\n        gl.blitFramebuffer(readRectangle[0], readRectangle[1], readRectangle[2], readRectangle[3], drawRectangle[0], drawRectangle[1], drawRectangle[2], drawRectangle[3], mask, filter);\r\n    }\r\n\r\n    static readPixels(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number, format: TexturePixelFormat, type: TexturePixelType, pixels: ArrayBufferView): void {\r\n        gl.readPixels(x, y, width, height, format, type, pixels);\r\n    }\r\n\r\n    static bindFramebuffer(gl: WebGL2RenderingContext, framebuffer: Framebuffer): void {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer.internal);\r\n    }\r\n\r\n    static unbindFramebuffer(gl: WebGL2RenderingContext): void {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    static deleteFramebuffer(gl: WebGL2RenderingContext, framebuffer: Framebuffer): void {\r\n        if (gl.isFramebuffer(framebuffer.internal)) {\r\n            gl.deleteFramebuffer(framebuffer.internal);\r\n        }\r\n    }\r\n\r\n    static deleteRenderbuffer(gl: WebGL2RenderingContext, renderbuffer: Renderbuffer): void {\r\n        if (gl.isRenderbuffer(renderbuffer.internal)) {\r\n            gl.deleteRenderbuffer(renderbuffer.internal);\r\n        }\r\n    }\r\n}","import { Vector3 } from \"../../../../libs/maths/algebra/vectors/Vector3\"\r\nimport { BoundingBox } from \"./bounding/BoundingBox\";\r\n\r\nexport { GeometryBuilder };\r\n\r\ninterface GeometryBuilder {\r\n    halfEdges: Array<HalfEdge>;\r\n    vertices: Array<Vertex>;\r\n    faces: Array<Face>;\r\n    //clone(): GeometryBuilder;\r\n    addTriangleFace(v0: Vertex, v1: Vertex, v2: Vertex, properties?: {[key: string]: any;}): void;\r\n    addQuadFace(v0: Vertex, v1: Vertex, v2: Vertex, v3: Vertex, properties?: {[key: string]: any;}): void;\r\n    addVertex(vertex: number[] | Float32Array | Float64Array): Vertex;\r\n    addFace(vertices: Vertex[], properties?: {[key: string]: any;}[]): void;\r\n    verticesArray(): Float32Array;\r\n    uvsArray(): Float32Array;\r\n    indicesArray(): Uint8Array | Uint16Array | Uint32Array;\r\n    linesArray(): Float32Array;\r\n    verticesNormalsArray(): Float32Array;\r\n    tangentsArray(): Float32Array;\r\n    boundingBox(): BoundingBox;\r\n}\r\n\r\ninterface GeometryBuilderConstructor {\r\n    readonly prototype: GeometryBuilder;\r\n    new(): GeometryBuilder;\r\n}\r\n\r\nclass GeometryBuilderBase implements GeometryBuilder {\r\n    halfEdges: Array<HalfEdge>;\r\n    vertices: Array<Vertex>;\r\n    faces: Array<Face>;\r\n\r\n    constructor() {\r\n        this.halfEdges = [];\r\n        this.vertices = [];\r\n        this.faces = [];\r\n    }\r\n\r\n    /*clone(): GeometryBuilder {\r\n        const {halfEdges, faces, vertices} = this;\r\n        const clone = new GeometryBuilder();\r\n        const cloneHalfEdges = new Map<HalfEdge, HalfEdge>();\r\n        const cloneFaces = new Map<Face, Face>();\r\n        const cloneVertices = new Map<Vertex, Vertex>();\r\n        halfEdges.forEach((halfEdge) => {\r\n            cloneHalfEdges.set(halfEdge, {\r\n                target: null,\r\n                twin: null,\r\n                prev: null,\r\n                next: null,\r\n                face: null\r\n            });\r\n        });\r\n        faces.forEach((face) => {\r\n            cloneFaces.set(face, {\r\n                halfEdge: null\r\n            });\r\n        });\r\n        vertices.forEach((vertex) => {\r\n            const {position} = vertex;\r\n            cloneVertices.set(vertex, {\r\n                position: position,\r\n                halfEdge: null\r\n            });\r\n        });\r\n        halfEdges.forEach((halfEdge) => {\r\n            const {face, next, prev, target, twin} = halfEdge;\r\n            const cloneHalfEdge = cloneHalfEdges.get(halfEdge)!;\r\n            if (face !== null) {\r\n                cloneHalfEdge.face = cloneFaces.get(face)!;\r\n            }\r\n            if (next !== null) {\r\n                cloneHalfEdge.next = cloneHalfEdges.get(next)!;\r\n            }\r\n            if (prev !== null) {\r\n                cloneHalfEdge.prev = cloneHalfEdges.get(prev)!;\r\n            }\r\n            if (target !== null) {\r\n                cloneHalfEdge.target = cloneVertices.get(target)!;\r\n            }\r\n            if (twin !== null) {\r\n                cloneHalfEdge.twin = cloneHalfEdges.get(twin)!;\r\n            }\r\n        });\r\n        faces.forEach((face) => {\r\n            const {halfEdge} = face;\r\n            const cloneFace = cloneFaces.get(face)!;\r\n            if (halfEdge) {\r\n                cloneFace.halfEdge = cloneHalfEdges.get(halfEdge)!;\r\n            }\r\n        });\r\n        vertices.forEach((vertex) => {\r\n            const {halfEdge} = vertex;\r\n            const cloneVertex = cloneVertices.get(vertex)!;\r\n            if (halfEdge) {\r\n                cloneVertex.halfEdge = cloneHalfEdges.get(halfEdge)!;\r\n            }\r\n        });\r\n        clone.halfEdges = Array.from(cloneHalfEdges.values());\r\n        clone.faces = Array.from(cloneFaces.values());\r\n        clone.vertices = Array.from(cloneVertices.values());\r\n        return clone;\r\n    }*/\r\n\r\n    addTriangleFace(v0: Vertex, v1: Vertex, v2: Vertex, properties?: {[key: string]: any;}): void {\r\n        this.addFace([v0, v1, v2], properties);\r\n    }\r\n\r\n    addQuadFace(v0: Vertex, v1: Vertex, v2: Vertex, v3: Vertex, properties?: {[key: string]: any;}): void {\r\n        this.addFace([v0, v1, v2, v3], properties);\r\n    }\r\n    \r\n    addVertex(position: number[] | Float32Array | Float64Array): Vertex {\r\n        const {vertices} = this;\r\n        const vertex: Vertex = {\r\n            position: position,\r\n            halfEdge: null\r\n        };\r\n        vertices.push(vertex);\r\n        return vertex;\r\n    }\r\n\r\n    addFace(vertices: Vertex[], properties?: {[key: string]: any;}): void {\r\n        const {halfEdges, faces} = this;\r\n        if (vertices.length < 2) {\r\n            console.warn(\"At least 2 vertices are required to create a face.\");\r\n            return;\r\n        }\r\n        const face: Face = {\r\n            halfEdge: null,\r\n            ...properties\r\n        };\r\n        let source: Vertex | null = null;\r\n        let target: Vertex | null = null;\r\n        let firstHalfEdge: HalfEdge | null = null;\r\n        let halfEdge: HalfEdge | null = null;\r\n        let previousHalfEdge: HalfEdge | null = null;\r\n        for (let i = 0; i < vertices.length; i++) {\r\n            source = vertices[i];\r\n            target = (i < vertices.length - 1) ? vertices[i + 1] : vertices[0];\r\n            const existingHalfEdge = Array.from(new VertexFacesIterator(source)).find(\r\n                (face) => {\r\n                    if (face == null) return false;\r\n                    return Array.from(new FaceHalfEdgesIterator(face)).find(\r\n                        (halfEdge) => halfEdge.target === target && halfEdge.prev?.target === source\r\n                    );\r\n                }\r\n            );\r\n            if (existingHalfEdge) {\r\n                continue;\r\n            }\r\n            halfEdge = {\r\n                target: target,\r\n                twin: null,\r\n                next: null,\r\n                prev: null,\r\n                face: face\r\n            };\r\n            if (previousHalfEdge == null) {\r\n                face.halfEdge = halfEdge;\r\n                firstHalfEdge = halfEdge;\r\n            }\r\n            else {\r\n                halfEdge.prev = previousHalfEdge;\r\n                previousHalfEdge.next = halfEdge;\r\n            }\r\n            if (source.halfEdge == null) {\r\n                source.halfEdge = halfEdge;\r\n            }\r\n            const twinHalfEdge = halfEdges.find(\r\n                halfEdge => halfEdge.target === source && halfEdge.prev?.target === target\r\n            ) ?? null;\r\n            if (twinHalfEdge !== null) {\r\n                halfEdge.twin = twinHalfEdge;\r\n                twinHalfEdge.twin = halfEdge;\r\n            }\r\n            previousHalfEdge = halfEdge;\r\n            halfEdges.push(halfEdge);\r\n        }\r\n        if (halfEdge !== null && firstHalfEdge !== null) {\r\n            firstHalfEdge.prev = halfEdge;\r\n            halfEdge.next = firstHalfEdge;\r\n        }\r\n        faces.push(face);\r\n    }\r\n\r\n    linesArray(): Float32Array {\r\n        const {faces} = this;\r\n        return new Float32Array(faces.flatMap((face) => {\r\n            const faceVertices = Array.from(new FaceVerticesIterator(face));\r\n            if (faceVertices.length === 4) {\r\n                const v0 = faceVertices[0];\r\n                const v1 = faceVertices[1];\r\n                const v2 = faceVertices[2];\r\n                const v3 = faceVertices[3];\r\n                return [\r\n                    ...v0.position, ...v1.position,\r\n                    ...v1.position, ...v2.position,\r\n                    ...v2.position, ...v3.position,\r\n                    ...v3.position, ...v0.position\r\n                ];\r\n            }\r\n            else {\r\n                const v0 = faceVertices[0];\r\n                const v1 = faceVertices[1];\r\n                const v2 = faceVertices[2];\r\n                return [\r\n                    ...v0.position, ...v1.position,\r\n                    ...v1.position, ...v2.position,\r\n                    ...v2.position, ...v0.position\r\n                ];\r\n            }\r\n        }));\r\n    }\r\n\r\n    verticesArray(): Float32Array {\r\n        const {faces} = this;\r\n        return new Float32Array(faces.flatMap((face) => {\r\n            return Array.from(new FaceVerticesIterator(face)).flatMap((vertex) => {\r\n                return Array.from(vertex.position);\r\n            });\r\n        }));\r\n    }\r\n\r\n    tangentsArray(): Float32Array {\r\n        const {faces} = this;\r\n        return new Float32Array(faces.flatMap((face) => {\r\n            const faceVertices = Array.from(new FaceVerticesIterator(face));\r\n            const faceUvs = face.uv as Array<Array<number>>;\r\n            const p0 = faceVertices[0].position;\r\n            const p1 = faceVertices[1].position;\r\n            const p2 = faceVertices[2].position;\r\n            const uv0 = faceUvs[0];\r\n            const uv1 = faceUvs[1];\r\n            const uv2 = faceUvs[2];\r\n            const edge1 = p1.map((p1_i, i) => p0[i] - p1_i);\r\n            const edge2 = p1.map((p1_i, i) => p2[i] - p1_i);\r\n            const deltaUV1 = uv1.map((uv1_i, i) => uv0[i] - uv1_i);\r\n            const deltaUV2 = uv1.map((uv1_i, i) => uv2[i] - uv1_i);\r\n            const f = 1.0 / (deltaUV1[0] * deltaUV2[1] - deltaUV1[1] * deltaUV2[0]);\r\n            const tangent = edge1.map((edge1_i, i) => -(edge1_i * deltaUV2[1] - edge2[i] * deltaUV1[1]) * f);\r\n            const length = Math.hypot(...tangent);\r\n            face.tangent = tangent.map(tangent_i => tangent_i / length);\r\n\r\n            return faceVertices.flatMap(() => {\r\n                return Array.from(face.tangent);\r\n            });\r\n        }));\r\n    }\r\n\r\n    verticesNormalsArray(): Float32Array {\r\n        const {faces} = this;\r\n        return new Float32Array(faces.flatMap((face) => {\r\n            const faceVertices = Array.from(new FaceVerticesIterator(face));\r\n            const p0 = faceVertices[0].position;\r\n            const p1 = faceVertices[1].position;\r\n            const p2 = faceVertices[2].position;\r\n            const edge1 = p1.map((p1_i, i) => p0[i] - p1_i);\r\n            const edge2 = p1.map((p1_i, i) => p2[i] - p1_i);\r\n            const components = edge1.length;\r\n            const normal = edge1.map((_, i) => {\r\n                const ni = (i + 1) % components;\r\n                const pi = ((i - 1) + components) % components;\r\n                return -(edge1[ni] * edge2[pi] - edge1[pi] * edge2[ni]);\r\n            });\r\n            const length = Math.hypot(...normal);\r\n            face.normal = normal.map(normal_i => normal_i / length);\r\n            \r\n            return faceVertices.flatMap(() => {\r\n                return Array.from(face.normal);\r\n            });\r\n        }));\r\n    }\r\n\r\n    uvsArray(): Float32Array {\r\n        const {faces} = this;\r\n        return new Float32Array(faces.flatMap((face) => {\r\n            return face.uv.flat(1);\r\n        }));\r\n    }\r\n\r\n    indicesArray(): Uint8Array | Uint16Array | Uint32Array {\r\n        const {faces} = this;\r\n        const count = faces.reduce((verticesCount, face) => {\r\n            return verticesCount + Array.from(new FaceVerticesIterator(face)).length;\r\n        }, 0);\r\n        const arrayConstructor = (count < Math.pow(2, 8)) ? Uint8Array : (count < Math.pow(2, 16)) ? Uint16Array : Uint32Array;\r\n        return new arrayConstructor(faces.reduce(([indices, index], face) => {\r\n            const vertices = Array.from(new FaceVerticesIterator(face));\r\n            if (vertices.length === 4) {\r\n                return [indices.concat([index, index + 1, index + 2, index + 2, index + 3, index]), index + 4] as [number[], number];\r\n            }\r\n            return [indices.concat([index, index + 1, index + 2]), index + 3] as [number[], number];\r\n        }, [[], 0] as [number[], number])[0]);\r\n    }\r\n\r\n    boundingBox(): BoundingBox {\r\n        const positiveInfinity = Number.POSITIVE_INFINITY;\r\n        const negativeInfinity = Number.NEGATIVE_INFINITY;\r\n        let minX = positiveInfinity;\r\n        let minY = positiveInfinity;\r\n        let minZ = positiveInfinity;\r\n        let maxX = negativeInfinity;\r\n        let maxY = negativeInfinity;\r\n        let maxZ = negativeInfinity;\r\n        const {vertices} = this;\r\n        if (vertices.length > 0) {\r\n            vertices.forEach((vertex_i) => {\r\n                const [x, y, z] = vertex_i.position;\r\n                if (x < minX) minX = x;\r\n                else if (x > maxX) maxX = x;\r\n                if (y < minY) minY = y;\r\n                else if (y > maxY) maxY = y;\r\n                if (z < minZ) minZ = z;\r\n                else if (z > maxZ) maxZ = z;\r\n            });\r\n        }\r\n        const min = new Vector3([minX, minY, minZ]);\r\n        const max = new Vector3([maxX, maxY, maxZ]);\r\n        return new BoundingBox(min, max);\r\n    }\r\n}\r\n\r\nvar GeometryBuilder: GeometryBuilderConstructor = GeometryBuilderBase;\r\n\r\nexport type HalfEdge = {\r\n    target: Vertex | null;\r\n    twin: HalfEdge | null;\r\n    prev: HalfEdge | null;\r\n    next: HalfEdge | null;\r\n    face: Face | null;\r\n}\r\n\r\nexport type Face = {\r\n    halfEdge: HalfEdge | null;\r\n    [key: string]: any;\r\n}\r\n\r\nexport type Vertex = {\r\n    position: number[] | Float32Array | Float64Array;\r\n    halfEdge: HalfEdge | null;\r\n    properties?: {\r\n        [key: string]: any;\r\n    }\r\n}\r\n\r\nexport class FaceHalfEdgesIterator {\r\n    #face: Face;\r\n    #halfEdge: HalfEdge | null;\r\n\r\n    constructor(face: Face) {\r\n        this.#face = face;\r\n        this.#halfEdge = null;\r\n    }\r\n\r\n    reset(): void {\r\n        this.#halfEdge = null;\r\n    }\r\n\r\n    current(): HalfEdge | null {\r\n        return this.#halfEdge;\r\n    }\r\n\r\n    next(): IteratorResult<HalfEdge> {\r\n        if (this.#halfEdge == null) {\r\n            const firstHalfEdge = this.#face.halfEdge ?? null;\r\n            const nextHalfEdge = this.#face.halfEdge?.next ?? null;\r\n            this.#halfEdge = nextHalfEdge;\r\n            if (firstHalfEdge !== null) {\r\n                return {\r\n                    value: firstHalfEdge, done: nextHalfEdge == null\r\n                };\r\n            }\r\n        }\r\n        else if (this.#halfEdge !== this.#face.halfEdge) {\r\n            const halfEdge = this.#halfEdge;\r\n            const nextHalfEdge = halfEdge.next ?? null;\r\n            this.#halfEdge = nextHalfEdge;\r\n            if (halfEdge !== null) {\r\n                return {\r\n                    value: halfEdge, done: nextHalfEdge == null\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            value: void 0, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<HalfEdge> {\r\n        this.#halfEdge = null;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class FaceVerticesIterator {\r\n    #face: Face;\r\n    #halfEdge: HalfEdge | null;\r\n\r\n    constructor(face: Face) {\r\n        this.#face = face;\r\n        this.#halfEdge = null;\r\n    }\r\n\r\n    reset(): void {\r\n        this.#halfEdge = null;\r\n    }\r\n\r\n    current(): Vertex | null {\r\n        return this.#halfEdge?.prev?.target ?? null;\r\n    }\r\n\r\n    next(): IteratorResult<Vertex> {\r\n        if (this.#halfEdge == null) {\r\n            const firstVertex = this.#face.halfEdge?.prev?.target ?? null;\r\n            const nextHalfEdge = this.#face.halfEdge?.next ?? null;\r\n            this.#halfEdge = nextHalfEdge;\r\n            if (firstVertex !== null) {\r\n                return {\r\n                    value: firstVertex, done: nextHalfEdge == null\r\n                };\r\n            }\r\n        }\r\n        else if (this.#halfEdge !== this.#face.halfEdge) {\r\n            const vertex = this.#halfEdge.prev?.target ?? null;\r\n            const nextHalfEdge = this.#halfEdge.next ?? null;\r\n            this.#halfEdge = nextHalfEdge;\r\n            if (vertex !== null) {\r\n                return {\r\n                    value: vertex, done: nextHalfEdge == null\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            value: void 0, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<Vertex> {\r\n        this.#halfEdge = null;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class VertexFacesIterator {\r\n    #halfEdge: HalfEdge | null;\r\n    #vertex: Vertex;\r\n\r\n    constructor(vertex: Vertex) {\r\n        this.#vertex = vertex;\r\n        this.#halfEdge = null;\r\n    }\r\n\r\n    reset(): void {\r\n        this.#halfEdge = null;\r\n    }\r\n\r\n    current(): Face | null {\r\n        return this.#halfEdge?.face ?? null;\r\n    }\r\n\r\n    next(): IteratorResult<Face>  {\r\n        if (this.#halfEdge == null) {\r\n            const face = this.#vertex.halfEdge?.face ?? null;\r\n            const nextHalfEdge = this.#vertex.halfEdge?.prev?.twin ?? null;\r\n            this.#halfEdge = nextHalfEdge;\r\n            if (face !== null) {\r\n                return {\r\n                    value: face, done: nextHalfEdge == null\r\n                };\r\n            }\r\n        }\r\n        else if (this.#halfEdge !== this.#vertex.halfEdge) {\r\n            const face = this.#halfEdge.face ?? null;\r\n            const nextHalfEdge = this.#halfEdge?.prev?.twin ?? null;\r\n            this.#halfEdge = nextHalfEdge;\r\n            if (face !== null) {\r\n                return {\r\n                    value: face, done: nextHalfEdge == null\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            value: void 0, done: true\r\n        };\r\n    }\r\n\r\n    [Symbol.iterator](): Iterator<Face> {\r\n        this.#halfEdge = null;\r\n        return this;\r\n    }\r\n}","import { GeometryBase } from \"../../Geometry\";\r\nimport { GeometryBuilder, Vertex } from \"../../GeometryBuilder\";\r\n\r\nexport class CubeGeometry extends GeometryBase {\r\n\twidth: number;\r\n\theight: number;\r\n\tdepth: number;\r\n\twidthSegments: number;\r\n\theightSegments: number;\r\n\tdepthSegments: number;\r\n\r\n\tconstructor(properties?: {width?: number, height?: number, depth?: number, widthSegments?: number, heightSegments?: number, depthSegments?: number}) {\r\n\t\tsuper();\r\n\t\tconst {width, height, depth, widthSegments, heightSegments, depthSegments} = properties ?? {};\r\n\t\tthis.width = width ?? 1;\r\n\t\tthis.height = height ?? 1;\r\n\t\tthis.depth = depth ?? 1;\r\n\t\tthis.widthSegments = widthSegments ?? 1;\r\n\t\tthis.heightSegments = heightSegments ?? 1;\r\n\t\tthis.depthSegments = depthSegments ?? 1;\r\n\t}\r\n\t\r\n\ttoBuilder(): GeometryBuilder {\r\n\t\tconst builder = new GeometryBuilder();\r\n\t\tconst {width, height, depth} = this;\r\n\t\tlet {widthSegments, heightSegments, depthSegments} = this;\r\n\t\twidthSegments = Math.floor(widthSegments);\r\n\t\theightSegments = Math.floor(heightSegments);\r\n\t\tdepthSegments = Math.floor(depthSegments);\r\n\r\n\t\tconst indices: number[] = [];\r\n\t\tconst vertices: number[] = [];\r\n\t\tconst uvs: number[] = [];\r\n\t\tlet verticesCount = 0;\r\n\r\n\t\t[\r\n\t\t\t[2, 1, 0, -1, -1, depth, height, width, depthSegments, heightSegments],\r\n\t\t\t[2, 1, 0, +1, -1, depth, height, -width, depthSegments, heightSegments],\r\n\t\t\t[0, 2, 1, +1, +1, width, depth, height, widthSegments, depthSegments],\r\n\t\t\t[0, 2, 1, +1, -1, width, depth, -height, widthSegments, depthSegments],\r\n\t\t\t[0, 1, 2, +1, -1, width, height, depth, widthSegments, heightSegments],\r\n\t\t\t[0, 1, 2, -1, -1, width, height, -depth, widthSegments, heightSegments]\r\n\t\t].forEach(([u, v, w, udir, vdir, width, height, depth, gridX, gridY]) => {\r\n\t\t\tconst segmentWidth = width / gridX;\r\n\t\t\tconst segmentHeight = height / gridY;\r\n\t\t\tconst widthHalf = width / 2;\r\n\t\t\tconst heightHalf = height / 2;\r\n\t\t\tconst depthHalf = depth / 2;\r\n\t\t\tconst gridX1 = gridX + 1;\r\n\t\t\tconst gridY1 = gridY + 1;\r\n\t\t\tlet index = 0;\r\n\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\r\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\r\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\r\n\t\t\t\t\tconst vertex = new Array(3);\r\n\t\t\t\t\tvertex[u] = x * udir;\r\n\t\t\t\t\tvertex[v] = y * vdir;\r\n\t\t\t\t\tvertex[w] = depthHalf;\r\n\t\t\t\t\tvertices.push(\r\n\t\t\t\t\t\t...vertex\r\n\t\t\t\t\t);\r\n\t\t\t\t\tuvs.push(ix / gridX, 1 - (iy / gridY));\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let iy = 0; iy < gridY; iy++) {\r\n\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\r\n\t\t\t\t\tconst a = verticesCount + ix + gridX1 * iy;\r\n\t\t\t\t\tconst b = verticesCount + ix + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst c = verticesCount + (ix + 1) + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst d = verticesCount + (ix + 1) + gridX1 * iy;\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tverticesCount += index;\r\n\t\t});\r\n\r\n\t\tconst {length: indicesCount} = indices;\r\n\t\tconst verticesArray: Vertex[] = [];\r\n\t\tconst uvsArray: number[][] = [];\r\n\t\tfor (let i = 0; i < indicesCount; i += 3) {\r\n\t\t\tconst vi1 = 3 * indices[i], vi2 = 3 * indices[i + 1], vi3 = 3 * indices[i + 2];\r\n\t\t\tconst ui1 = 2 * indices[i], ui2 = 2 * indices[i + 1], ui3 = 2 * indices[i + 2];\r\n\t\t\tlet v1 = verticesArray[vi1], v2 = verticesArray[vi2], v3 = verticesArray[vi3];\r\n\t\t\tif (v1 == undefined) {\r\n\t\t\t\tv1 = builder.addVertex([vertices[vi1], vertices[vi1 + 1], vertices[vi1 + 2]]), verticesArray[vi1] = v1;\r\n\t\t\t}\r\n\t\t\tif (v2 == undefined) {\r\n\t\t\t\tv2 = builder.addVertex([vertices[vi2], vertices[vi2 + 1], vertices[vi2 + 2]]), verticesArray[vi2] = v2;\r\n\t\t\t}\r\n\t\t\tif (v3 == undefined) {\r\n\t\t\t\tv3 = builder.addVertex([vertices[vi3], vertices[vi3 + 1], vertices[vi3 + 2]]), verticesArray[vi3] = v3;\r\n\t\t\t}\r\n\t\t\tlet uv1 = uvsArray[ui1], uv2 = uvsArray[ui2], uv3 = uvsArray[ui3];\r\n\t\t\tif (uv1 == undefined) {\r\n\t\t\t\tuv1 = [uvs[ui1], uvs[ui1 + 1]], uvsArray[ui1] = uv1;\r\n\t\t\t}\r\n\t\t\tif (uv2 == undefined) {\r\n\t\t\t\tuv2 = [uvs[ui2], uvs[ui2 + 1]], uvsArray[ui2] = uv2;\r\n\t\t\t}\r\n\t\t\tif (uv3 == undefined) {\r\n\t\t\t\tuv3 = [uvs[ui3], uvs[ui3 + 1]], uvsArray[ui3] = uv3;\r\n\t\t\t}\r\n\t\t\tbuilder.addTriangleFace(v1, v2, v3, {\r\n\t\t\t\tuv: [uv1, uv2, uv3]\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn builder;\r\n\t}\r\n}","import { GeometryBase } from \"../geometry\";\r\nimport { GeometryBuilder, Vertex } from \"../GeometryBuilder\";\r\n\r\nexport { QuadGeometry };\r\n\r\nclass QuadGeometry extends GeometryBase {\r\n\twidth: number;\r\n\theight: number;\r\n\twidthSegments: number;\r\n\theightSegments: number;\r\n\r\n\tconstructor(properties?: {width?: number, height?: number, widthSegments?: number, heightSegments?: number}) {\r\n\t\tsuper();\r\n\t\tthis.width = properties?.width ?? 1;\r\n\t\tthis.height = properties?.height ?? 1;\r\n\t\tthis.widthSegments = properties?.widthSegments ?? 1;\r\n\t\tthis.heightSegments = properties?.heightSegments ?? 1;\r\n\t}\r\n\t\r\n\ttoBuilder(): GeometryBuilder {\r\n\t\tconst builder = new GeometryBuilder();\r\n\t\tconst {heightSegments, widthSegments, width, height} = this;\r\n\t\tconst widthHalf = width / 2;\r\n\t\tconst heightHalf = height / 2;\r\n\r\n\t\tconst gridX = Math.floor(widthSegments);\r\n\t\tconst gridY = Math.floor(heightSegments);\r\n\r\n\t\tconst gridX1 = gridX + 1;\r\n\t\tconst gridY1 = gridY + 1;\r\n\r\n\t\tconst segmentWidth = width / gridX;\r\n\t\tconst segmentHeight = height / gridY;\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\tfor (let iy = 0; iy < gridY1; iy++) {\r\n\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\r\n\t\t\t\tconst x = ix * segmentWidth - widthHalf;\r\n\t\t\t\tvertices.push(x, - y, 0);\r\n\t\t\t\tuvs.push(ix / gridX);\r\n\t\t\t\tuvs.push(1 - (iy / gridY));\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let iy = 0; iy < gridY; iy++) {\r\n\t\t\tfor (let ix = 0; ix < gridX; ix++) {\r\n\t\t\t\tconst a = ix + gridX1 * iy;\r\n\t\t\t\tconst b = ix + gridX1 * (iy + 1);\r\n\t\t\t\tconst c = (ix + 1) + gridX1 * (iy + 1);\r\n\t\t\t\tconst d = (ix + 1) + gridX1 * iy;\r\n\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\tindices.push(b, c, d);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst {length: indicesCount} = indices;\r\n\t\tconst verticesArray: Vertex[] = [];\r\n\t\tconst uvsArray: number[][] = [];\r\n\t\tfor (let i = 0; i < indicesCount; i += 3) {\r\n\t\t\tconst vi1 = 3 * indices[i], vi2 = 3 * indices[i + 1], vi3 = 3 * indices[i + 2];\r\n\t\t\tconst ui1 = 2 * indices[i], ui2 = 2 * indices[i + 1], ui3 = 2 * indices[i + 2];\r\n\t\t\tlet v1 = verticesArray[vi1], v2 = verticesArray[vi2], v3 = verticesArray[vi3];\r\n\t\t\tif (v1 == undefined) {\r\n\t\t\t\tv1 = builder.addVertex([vertices[vi1], vertices[vi1 + 1], vertices[vi1 + 2]]), verticesArray[vi1] = v1;\r\n\t\t\t}\r\n\t\t\tif (v2 == undefined) {\r\n\t\t\t\tv2 = builder.addVertex([vertices[vi2], vertices[vi2 + 1], vertices[vi2 + 2]]), verticesArray[vi2] = v2;\r\n\t\t\t}\r\n\t\t\tif (v3 == undefined) {\r\n\t\t\t\tv3 = builder.addVertex([vertices[vi3], vertices[vi3 + 1], vertices[vi3 + 2]]), verticesArray[vi3] = v3;\r\n\t\t\t}\r\n\t\t\tlet uv1 = uvsArray[ui1], uv2 = uvsArray[ui2], uv3 = uvsArray[ui3];\r\n\t\t\tif (uv1 == undefined) {\r\n\t\t\t\tuv1 = [uvs[ui1], uvs[ui1 + 1]], uvsArray[ui1] = uv1;\r\n\t\t\t}\r\n\t\t\tif (uv2 == undefined) {\r\n\t\t\t\tuv2 = [uvs[ui2], uvs[ui2 + 1]], uvsArray[ui2] = uv2;\r\n\t\t\t}\r\n\t\t\tif (uv3 == undefined) {\r\n\t\t\t\tuv3 = [uvs[ui3], uvs[ui3 + 1]], uvsArray[ui3] = uv3;\r\n\t\t\t}\r\n\t\t\tbuilder.addTriangleFace(v1, v2, v3, {\r\n\t\t\t\tuv: [uv1, uv2, uv3]\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn builder;\r\n\t}\r\n}","export enum TexturePixelFormat {\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    DEPTH_COMPONENT = 0x1902,\r\n    DEPTH_STENCIL = 0x84F9,\r\n    RED = 0x1903,\r\n    RG = 0x8227,\r\n    RED_INTEGER = 0x8D94,\r\n    RG_INTEGER = 0x8228,\r\n    RGB_INTEGER = 0x8D98,\r\n    RGBA_INTEGER = 0x8D99\r\n}\r\n\r\nexport enum TextureInternalPixelFormat {\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190A,\r\n    DEPTH_COMPONENT16 = 0x81A5,\r\n    DEPTH_COMPONENT24 = 0x81A6,\r\n    DEPTH_COMPONENT32F = 0x8CAC,\r\n    DEPTH24_STENCIL8 = 0x88F0,\r\n    DEPTH32F_STENCIL8 = 0x8CAD,\r\n    R8 = 0x8229,\r\n    R8_SNORM = 0x8F94,\r\n    RG8 = 0x822B,\r\n    RG8_SNORM = 0x8F95,\r\n    RGB8 = 0x8051,\r\n    RGB8_SNORM = 0x8F96,\r\n    RGB565 = 0x8D62,\r\n    RGBA8 = 0x8058,\r\n    RGBA4 = 0x8056,\r\n    RGB5_A1 = 0x8057,\r\n    RGBA8_SNORM = 0x8F97,\r\n    RGB10_A2UI = 0x906F,\r\n    SRGB = 0x8C40,\r\n    SRGB8 = 0x8C41,\r\n    SRGB8_ALPHA8 = 0x8C43,\r\n    R16F = 0x822D,\r\n    RGB16F = 0x881B,\r\n    RGBA16F = 0x881A,\r\n    R32F = 0x822E,\r\n    RG32F = 0x8230,\r\n    RGB32F = 0x8815,\r\n    RGBA32F\t= 0x8814,\r\n    R11F_G11F_B10F = 0x8C3A,\r\n    RGB9_E5 = 0x8C3D,\r\n    R8UI = 0x8232,\r\n    R16I = 0x8233,\r\n    R16UI = 0x8234,\r\n    R32I = 0x8235,\r\n    R32UI = 0x8236,\r\n    RG8I = 0x8237,\r\n    RG8UI = 0x8238,\r\n    RG16I = 0x8239,\r\n    RG16UI = 0x823A,\r\n    RG32I = 0x823B,\r\n    RG32UI = 0x823C,\r\n    RGB8I = 0x8D8F,\r\n    RGB8UI = 0x8D7D,\r\n    RGB16I = 0x8D89,\r\n    RGB16UI = 0x8D77,\r\n    RGB32I = 0x8D83,\r\n    RGB32UI = 0x8D71,\r\n    RGBA8I = 0x8D8E,\r\n    RGBA8UI = 0x8D7C,\r\n    RGBA16I = 0x8D88,\r\n    RGBA16UI = 0x8D76,\r\n    RGBA32I = 0x8D82,\r\n    RGBA32UI = 0x8D70,\r\n}\r\n\r\nexport enum TexturePixelType {\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406,\r\n    HALF_FLOAT = 0x140B,\r\n    UNSIGNED_SHORT_4_4_4_4 = 0x8033,\r\n    UNSIGNED_SHORT_5_5_5_1 = 0x8034,\r\n    UNSIGNED_SHORT_5_6_5 = 0x8363,\r\n    UNSIGNED_INT_2_10_10_10_REV = 0x8368,\r\n    UNSIGNED_INT_24_8 = 0x84FA,\r\n    UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B,\r\n    UNSIGNED_INT_5_9_9_9_REV = 0x8C3E,\r\n    FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD,\r\n    INT_2_10_10_10_REV = 0x8D9F\r\n}\r\n\r\nexport enum TextureParameter {\r\n    TEXTURE_MAG_FILTER = 0x2800,\r\n    TEXTURE_MIN_FILTER = 0x2801,\r\n    TEXTURE_WRAP_S = 0x2802,\r\n    TEXTURE_WRAP_T = 0x2803,\r\n    TEXTURE_BASE_LEVEL = 0x813C,\r\n    TEXTURE_MAX_LEVEL = 0x813D,\r\n    TEXTURE_MAX_LOD = 0x813B,\r\n    TEXTURE_MIN_LOD = 0x813A,\r\n    TEXTURE_WRAP_R = 0x8072,\r\n    TEXTURE_COMPARE_FUNC = 0x884D,\r\n    TEXTURE_COMPARE_MODE = 0x884C\r\n}\r\n\r\nexport enum TextureTarget {\r\n    TEXTURE_2D = 0x0DE1,\r\n    TEXTURE_CUBE_MAP = 0x8513,\r\n    TEXTURE_3D = 0x806F,\r\n    TEXTURE_2D_ARRAY = 0x8C1A,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A\r\n}\r\n\r\nexport enum TextureMagFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600\r\n}\r\n\r\nexport enum TextureMinFilter {\r\n    LINEAR = 0x2601,\r\n    NEAREST = 0x2600,\r\n    NEAREST_MIPMAP_NEAREST = 0x2700, \r\n    LINEAR_MIPMAP_NEAREST = 0x2701, \r\n    NEAREST_MIPMAP_LINEAR = 0x2702,\r\n    LINEAR_MIPMAP_LINEAR = 0x2703\r\n}\r\n\r\nexport enum TextureCompareMode {\r\n    COMPARE_REF_TO_TEXTURE = 0x884E,\r\n    NONE = 0\r\n}\r\n\r\nexport enum TextureWrapMode {\r\n    REPEAT = 0x2901,\r\n    CLAMP_TO_EDGE = 0x812F, \r\n    MIRRORED_REPEAT = 0x8370\r\n}\r\n\r\nexport enum TextureCompareFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207\r\n}\r\n\r\nexport type Texture2DPixels = Uint32Array |  Uint16Array | Uint8Array | TexImageSource;\r\n\r\nexport type TextureCubeMapPixels = {\r\n    xPos: TexImageSource;\r\n    xNeg: TexImageSource;\r\n    yPos: TexImageSource;\r\n    yNeg: TexImageSource;\r\n    zPos: TexImageSource;\r\n    zNeg: TexImageSource;\r\n}\r\n\r\nexport type TextureProperties = {\r\n    target: TextureTarget;\r\n    pixels: Texture2DPixels | TextureCubeMapPixels | null;\r\n    width: number;\r\n    height: number;\r\n    format: TexturePixelFormat;\r\n    internalFormat: TextureInternalPixelFormat;\r\n    type: TexturePixelType;\r\n\r\n    depth?: number;\r\n    lod?: number;\r\n    border?: number;\r\n\r\n    subimages?: {\r\n        pixels: Texture2DPixels;\r\n        xoffset: number;\r\n        yoffset: number;\r\n        zoffset?: number;\r\n        width: number;\r\n        height: number;\r\n        depth?: number;\r\n    }[];\r\n\r\n    min?: TextureMinFilter;\r\n    mag?: TextureMagFilter;\r\n\r\n    wrapS?: TextureWrapMode;\r\n    wrapT?: TextureWrapMode;\r\n    wrapR?: TextureWrapMode;\r\n\r\n    baseMipmapLevel?: number;\r\n    maxMipmapLevel?: number;\r\n\r\n    minLod?: number;\r\n    maxLod?: number;\r\n\r\n    compareFunction?: TextureCompareFunction;\r\n    compareMode?: TextureCompareMode;\r\n}\r\n\r\nexport type Texture = {\r\n    name: string;\r\n    unit: number;\r\n    internal: WebGLTexture;\r\n    properties?: TextureProperties;\r\n}\r\n\r\nexport class WebGLTextureUtilities {\r\n\r\n    static #textureUnits: Map<string, number> = new Map();\r\n\r\n\r\n    static getTexturesUnitsEntries(): IterableIterator<[string, number]> {\r\n        return this.#textureUnits.entries();\r\n    }\r\n\r\n    static createTexture(gl: WebGL2RenderingContext, name: string, properties: TextureProperties): Texture | null {\r\n        const internal = gl.createTexture();\r\n        \r\n        if (internal === null) {\r\n            console.error(\"Could not create WebGLTexture.\");\r\n            return null;\r\n        }\r\n\r\n        let unit = this.#textureUnits.get(name);\r\n        if (unit == undefined) {\r\n            unit = Math.max(-1, ...this.#textureUnits.values()) + 1;\r\n            this.#textureUnits.set(name, unit);\r\n        }\r\n\r\n        const {pixels, target, subimages, width, height, format, internalFormat, type} = properties;\r\n        let {lod, border, depth} = properties;\r\n\r\n        lod = lod ?? 0;\r\n        border = border ?? 0;\r\n        depth = depth ?? 0;\r\n\r\n        const activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE);\r\n        if (activeTexture !== unit) {\r\n            gl.activeTexture(gl.TEXTURE0 + unit);\r\n            gl.bindTexture(target, internal);\r\n        }\r\n        \r\n        switch (target) {\r\n            case TextureTarget.TEXTURE_2D: {\r\n                gl.texImage2D(target, lod, internalFormat, width, height, border, format, type, <ArrayBufferView | null>pixels);\r\n                if (subimages) {\r\n                    subimages.forEach((subimage_i) => {\r\n                        const {xoffset, yoffset, width, height, pixels} = subimage_i;\r\n                        gl.texSubImage2D(target, lod!, xoffset, yoffset, width, height, format, type, pixels as ArrayBufferView);\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case TextureTarget.TEXTURE_CUBE_MAP: {\r\n                if (pixels == null) {\r\n                    gl.texImage2D(target, lod, internalFormat, width, height, border, format, type, null);  \r\n                }\r\n                else {\r\n                    if (\"xPos\" in pixels) {\r\n                        const {xPos, xNeg, yPos, yNeg, zPos, zNeg} = pixels;\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_X, lod, internalFormat, width, height, border, format, type, xPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_X, lod, internalFormat, width, height, border, format, type, xNeg);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Y, lod, internalFormat, width, height, border, format, type, yPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Y, lod, internalFormat, width, height, border, format, type, yNeg);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_POSITIVE_Z, lod, internalFormat, width, height, border, format, type, zPos);\r\n                        gl.texImage2D(TextureTarget.TEXTURE_CUBE_MAP_NEGATIVE_Z, lod, internalFormat, width, height, border, format, type, zNeg);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case TextureTarget.TEXTURE_2D_ARRAY: {\r\n                gl.texImage3D(target, lod, internalFormat, width, height,  depth, border, format, type, <ArrayBufferView | null>pixels);\r\n                if (subimages) {\r\n                    subimages.forEach((subimage_i, i) => {\r\n                        const {xoffset, yoffset, zoffset, width, height, depth, pixels} = subimage_i;\r\n                        gl.texSubImage3D(target, lod!, xoffset, yoffset, zoffset!, width, height, depth!, format, type, pixels as ArrayBufferView);\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        gl.generateMipmap(target);\r\n\r\n        const {min, mag, wrapS, wrapT, wrapR, baseMipmapLevel, maxMipmapLevel, compareFunction, compareMode, minLod, maxLod} = properties;\r\n\r\n        if (min !== void 0)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MIN_FILTER, min);\r\n        if (mag !== void 0)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MAG_FILTER, mag);\r\n        if (wrapS  !== void 0)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_S, wrapS);\r\n        if (wrapT !== void 0)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_T, wrapT);\r\n        if (wrapR !== void 0)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_WRAP_R, wrapR);\r\n        if (baseMipmapLevel !== void 0)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_BASE_LEVEL, baseMipmapLevel);\r\n        if (maxMipmapLevel !== void 0)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_MAX_LEVEL, maxMipmapLevel);\r\n        if (compareFunction !== void 0)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_COMPARE_FUNC, compareFunction);\r\n        if (compareMode !== void 0)\r\n            gl.texParameteri(target, TextureParameter.TEXTURE_COMPARE_MODE, compareMode);\r\n        if (minLod !== void 0)\r\n            gl.texParameterf(target, TextureParameter.TEXTURE_MIN_LOD, minLod);\r\n        if (maxLod !== void 0)\r\n            gl.texParameterf(target, TextureParameter.TEXTURE_MAX_LOD, maxLod);\r\n        \r\n        return {\r\n            unit,\r\n            internal,\r\n            name,\r\n            properties: {\r\n                pixels,\r\n                target,\r\n                subimages,\r\n                lod,\r\n                width,\r\n                height,\r\n                format,\r\n                internalFormat,\r\n                type,\r\n                min,\r\n                mag,\r\n                wrapS,\r\n                wrapT,\r\n                wrapR,\r\n                baseMipmapLevel,\r\n                maxMipmapLevel,\r\n                compareFunction,\r\n                compareMode,\r\n                minLod,\r\n                maxLod\r\n            }\r\n        };\r\n    }\r\n\r\n    static setUnpackAlignment(gl: WebGL2RenderingContext, alignment: number): void {\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, alignment);\r\n    }\r\n\r\n    static deleteTexture(gl: WebGL2RenderingContext, texture: Texture): void {\r\n        const {internal, name} = texture;\r\n        if (gl.isTexture(internal)) {\r\n            gl.deleteTexture(internal);\r\n            this.#textureUnits.delete(name);\r\n        }\r\n    }\r\n}","import { Interpolant } from \"../../../libs/maths/calculus/interpolation/Interpolant\";\r\nimport { Program, WebGLProgramUtilities } from \"./WebGLProgramUtilities\";\r\nimport { Texture, TextureTarget } from \"./WebGLTextureUtilities\";\r\n\r\nexport { UniformValue };\r\nexport { UniformProperties };\r\nexport { Uniform };\r\nexport { UniformsList };\r\nexport { UniformSetter };\r\nexport { UniformsListSetter };\r\nexport { WebGLUniformUtilities };\r\n\r\nexport enum UniformType {\r\n    BOOL = 0x8B56,\r\n    BOOL_VEC2 = 0x8B57,\t \r\n    BOOL_VEC3 = 0x8B58,\t \r\n    BOOL_VEC4 = 0x8B59,\r\n    INT = 0x1404,\r\n    INT_VEC2 = 0x8B53,\t \r\n    INT_VEC3 = 0x8B54,\t \r\n    INT_VEC4 = 0x8B55,\t \r\n    INT_SAMPLER_2D = 0x8DCA,\r\n    INT_SAMPLER_3D = 0x8DCB,\r\n    INT_SAMPLER_CUBE = 0x8DCC,\r\n    INT_SAMPLER_2D_ARRAY = 0x8DCF,\r\n    UNSIGNED_INT_SAMPLER_2D = 0x8DD2,\r\n    UNSIGNED_INT_SAMPLER_3D = 0x8DD3,\r\n    UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4,\r\n    UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7,\r\n    UNSIGNED_INT = 0x1405,\r\n    UNSIGNED_INT_VEC2 = 0x8DC6,\r\n    UNSIGNED_INT_VEC3 = 0x8DC7,\r\n    UNSIGNED_INT_VEC4 = 0x8DC8,\r\n    FLOAT = 0x1406,\r\n    FLOAT_VEC2 = 0x8B50,\t \r\n    FLOAT_VEC3 = 0x8B51,\t \r\n    FLOAT_VEC4 = 0x8B52,\r\n    FLOAT_MAT2 = 0x8B5A,\t \r\n    FLOAT_MAT3 = 0x8B5B,\t \r\n    FLOAT_MAT4 = 0x8B5C,\t \r\n    FLOAT_MAT2x3 = 0x8B65,\r\n    FLOAT_MAT2x4 = 0x8B66,\r\n    FLOAT_MAT3x2 = 0x8B67,\r\n    FLOAT_MAT3x4 = 0x8B68,\r\n    FLOAT_MAT4x2 = 0x8B69,\r\n    FLOAT_MAT4x3 = 0x8B6A,\r\n    SAMPLER_2D = 0x8B5E,\t \r\n    SAMPLER_3D = 0x8B5F,\r\n    SAMPLER_CUBE = 0x8B60,\r\n    SAMPLER_2D_SHADOW = 0x8B62,\r\n    SAMPLER_2D_ARRAY = 0x8DC1,\r\n    SAMPLER_2D_ARRAY_SHADOW = 0x8DC4,\r\n    SAMPLER_CUBE_SHADOW = 0x8DC5\r\n}\r\n\r\ntype UniformValue = number | Float32List | Uint32List | Int32List | Texture;\r\n\r\ntype UniformProperties = {\r\n    srcOffset?: number;\r\n    srcLength?: number;\r\n    transpose?: boolean;\r\n}\r\n\r\ntype Uniform = {\r\n    value: UniformValue;\r\n    props?: UniformProperties;\r\n}\r\n\r\ntype UniformsList = {\r\n    [name: string]: Uniform\r\n};\r\n\r\ntype UniformSetter = {\r\n    type: UniformType;\r\n    set: (value: any) => void;\r\n}\r\n\r\ntype UniformsListSetter = {\r\n    setters: {\r\n        [name: string]: UniformSetter;\r\n    };\r\n    program: Program;\r\n}\r\n\r\nexport enum UniformDataType {\r\n    SCALAR = \"SCALAR\",\r\n    VEC2 = \"VEC2\",\r\n    VEC3 = \"VEC3\",\r\n    VEC4 = \"VEC4\",\r\n    MAT2 = \"MAT2\",\r\n    MAT3 = \"MAT3\",\r\n    MAT4 = \"MAT4\"\r\n}\r\n\r\nclass WebGLUniformUtilities {\r\n\r\n    static asArrayBufferView(uniformValue: UniformValue): ArrayBufferView {\r\n        if (typeof uniformValue === \"object\") {\r\n            if (\"buffer\" in uniformValue) {\r\n                return uniformValue;\r\n            }\r\n            else if (\"unit\" in uniformValue) {\r\n                return Float32Array.of(uniformValue.unit);\r\n            }\r\n            else {\r\n                return Float32Array.from(uniformValue);\r\n            }\r\n        }\r\n        else {\r\n            return Float32Array.of(uniformValue);\r\n        }\r\n    }\r\n\r\n    static getUniformSetter(gl: WebGL2RenderingContext, uniform: Uniform, location: WebGLUniformLocation , uniformType: UniformType): UniformSetter | null { \r\n        const uniformValue = uniform.value;\r\n        let {props} = uniform;\r\n        props = props ?? {};\r\n\r\n        const {srcOffset, srcLength} = props;\r\n        let {transpose} = props;\r\n        transpose = transpose ?? false;\r\n\r\n        switch (uniformType) {\r\n            case UniformType.FLOAT:\r\n                if (typeof uniformValue === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1f(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT:\r\n                if (typeof uniformValue === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1ui(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL:\r\n            case UniformType.INT:\r\n                if (typeof uniformValue === \"number\") {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (num: number) => {\r\n                            gl.uniform1i(location, num);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.INT_SAMPLER_2D:\r\n            case UniformType.INT_SAMPLER_2D_ARRAY:\r\n            case UniformType.INT_SAMPLER_3D:\r\n            case UniformType.INT_SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D:\r\n            case UniformType.SAMPLER_3D:\r\n            case UniformType.SAMPLER_CUBE:\r\n            case UniformType.SAMPLER_2D_SHADOW:\r\n            case UniformType.SAMPLER_2D_ARRAY:\r\n            case UniformType.SAMPLER_2D_ARRAY_SHADOW:\r\n            case UniformType.SAMPLER_CUBE_SHADOW:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_3D:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_CUBE:\r\n            case UniformType.UNSIGNED_INT_SAMPLER_2D_ARRAY:\r\n                if (typeof uniformValue == \"object\" && \"unit\" in uniformValue) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (tex: Texture) => {\r\n                            const {unit} = tex;\r\n                            gl.uniform1i(location, unit);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC2:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform2fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC2:\r\n            case UniformType.INT_VEC2:\r\n                if (uniformValue instanceof Int32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform2iv(location, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC2:\r\n                if (uniformValue instanceof Uint32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform2uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC3:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform3fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC3:\r\n            case UniformType.INT_VEC3:\t\r\n                if (uniformValue instanceof Int32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform3iv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC3:\r\n                if (uniformValue instanceof Uint32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform3uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_VEC4:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniform4fv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.BOOL_VEC4:\r\n            case UniformType.INT_VEC4:\r\n                if (uniformValue instanceof Int32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Int32List) => {\r\n                            gl.uniform4iv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.UNSIGNED_INT_VEC4:\r\n                if (uniformValue instanceof Uint32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Uint32List) => {\r\n                            gl.uniform4uiv(location, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4:\t\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4fv(location, transpose!, list);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x3:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT2x4:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix2x4fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x2:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT3x4:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix3x4fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x2:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x2fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n            case UniformType.FLOAT_MAT4x3:\r\n                if (uniformValue instanceof Float32Array || Array.isArray(uniformValue)) {\r\n                    return {\r\n                        type: uniformType,\r\n                        set: (list: Float32List) => {\r\n                            gl.uniformMatrix4x3fv(location, transpose!, list, srcOffset, srcLength);\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static getUniformsListSetter(gl: WebGL2RenderingContext, program: Program, list: UniformsList): UniformsListSetter | null {\r\n        const {internal} = program;\r\n        \r\n        const uniformsNames = Object.keys(list);\r\n        let uniformIndices = gl.getUniformIndices(internal, uniformsNames);\r\n        if (uniformIndices == null) {\r\n            console.error(`No uniform indices found.`);\r\n            return null;\r\n        }\r\n\r\n        const activeUniforms = gl.getProgramParameter(internal, gl.ACTIVE_UNIFORMS);\r\n        const validUniformIndices = Array.from(uniformIndices).filter((index_i, i) => {\r\n            const isValid = index_i >= 0 && index_i < activeUniforms;\r\n            if (!isValid) {\r\n                console.warn(`Uniform ${uniformsNames[i]} could not be located.`);\r\n            }\r\n            return isValid;\r\n        });\r\n        \r\n        const setters: {\r\n            [name: string]: UniformSetter;\r\n        } = {};\r\n\r\n        const activeUniformsInfo: WebGLActiveInfo[] = validUniformIndices.map(index => gl.getActiveUniform(internal, index)!);\r\n        activeUniformsInfo.forEach(({name, type}) => {\r\n            const uniform = list[name];\r\n            const location = gl.getUniformLocation(internal, name);\r\n            if (location == null) {\r\n                console.warn(`Uniform ${name} could not be located.`);\r\n                return null;\r\n            }\r\n            const setter = this.getUniformSetter(gl, uniform, location, type);\r\n            if (setter) {\r\n                setters[name] = setter;\r\n            }\r\n        });\r\n        \r\n        return {\r\n            setters,\r\n            program\r\n        };\r\n    }\r\n\r\n    static setUniformsListValues(gl: WebGL2RenderingContext, setter: UniformsListSetter, list: UniformsList): void {\r\n        const {program, setters} = setter;\r\n        WebGLProgramUtilities.useProgram(gl, program);\r\n        \r\n        Object.keys(list).forEach((name) => {\r\n            if (!(name in setters)) {\r\n                console.warn(`Uniform ${name} does not match any of the given setters.`);\r\n            }\r\n            const setter = setters[name];\r\n            const uniform = list[name];\r\n            const {value} = uniform;\r\n            setter.set(value);\r\n        });\r\n    }\r\n}","export enum StencilAction {\r\n    KEEP = 0x1E00,\r\n    REPLACE\t= 0x1E01,\r\n    INCR = 0x1E02,\r\n    DECR = 0x1E03,\r\n    INVERT = 0x150A,\r\n    INCR_WRAP = 0x8507,\r\n    DECR_WRAP = 0x8508\r\n}\r\n\r\nexport enum BufferMask {\r\n    DEPTH_BUFFER_BIT = 0x00000100,\r\n    STENCIL_BUFFER_BIT = 0x00000400,\r\n    COLOR_BUFFER_BIT = 0x00004000\r\n}\r\n\r\nexport enum TestFunction {\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207,\r\n}\r\n\r\nexport enum BlendingMode {\r\n    ZERO = 0,\r\n    ONE = 1,\r\n    SRC_COLOR = 0x0300,\r\n    ONE_MINUS_SRC_COLOR = 0x0301,\r\n    SRC_ALPHA = 0x0302,\r\n    ONE_MINUS_SRC_ALPHA\t= 0x0303,\r\n    DST_ALPHA = 0x0304,\r\n    ONE_MINUS_DST_ALPHA = 0x0305,\r\n    DST_COLOR = 0x0306,\r\n    ONE_MINUS_DST_COLOR = 0x0307,\r\n    SRC_ALPHA_SATURATE = 0x0308,\r\n    CONSTANT_COLOR = 0x8001,\r\n    ONE_MINUS_CONSTANT_COLOR = 0x8002,\r\n    CONSTANT_ALPHA = 0x8003,\r\n    ONE_MINUS_CONSTANT_ALPHA = 0x8004\r\n}\r\n\r\nexport enum BlendingEquation {\r\n    FUNC_ADD = 0x8006,\r\n    FUNC_SUBTRACT = 0x800A,\r\n    FUNC_REVERSE_SUBTRACT = 0x800B,\r\n    MIN = 0x8007,\r\n    MAX = 0x8008,\r\n}\r\n\r\nexport enum Capabilities {\r\n    BLEND = 0x0BE2,\r\n    CULL_FACE = 0x0B44,\r\n    DEPTH_TEST = 0x0B71,\r\n    DITHER = 0x0BD0,\r\n    POLYGON_OFFSET_FILL = 0x8037,\r\n    SAMPLE_ALPHA_TO_COVERAGE = 0x809E,\r\n    SAMPLE_COVERAGE = 0x80A0,\r\n    SCISSOR_TEST = 0x0C11,\r\n    STENCIL_TEST= 0x0B90,\r\n    RASTERIZER_DISCARD = 0x8C89\r\n}\r\n\r\nexport enum Face {\r\n    FRONT = 0x0404,\r\n    BACK = 0x0405,\r\n    FRONT_AND_BACK = 0x0408\r\n}\r\n\r\nexport enum WindingOrder {\r\n    CW = 0x0900,\r\n    CCW = 0x0901\r\n}\r\n\r\nexport enum HintTarget {\r\n    GENERATE_MIPMAP_HINT = 0x8192,\r\n    FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B\r\n}\r\n\r\nexport enum HintMode {\r\n    DONT_CARE = 0x1100,\r\n    FASTEST\t= 0x1101,\r\n    NICEST = 0x1102\r\n}\r\n\r\nexport class WebGLRendererUtilities {\r\n\r\n    static hint(gl: WebGL2RenderingContext, target: HintTarget, mode: HintMode) {\r\n        gl.hint(target, mode);\r\n    }\r\n\r\n    static frontFace(gl: WebGL2RenderingContext, winding: WindingOrder): void {\r\n        gl.frontFace(winding);\r\n    }\r\n\r\n    static scissor(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.scissor(x, y, width, height);\r\n    }\r\n\r\n    static viewport(gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number): void {\r\n        gl.viewport(x, y, width, height);\r\n    }\r\n\r\n    static clearColor(gl: WebGL2RenderingContext, color: [number, ...number[]] & { length: 4 }): void {\r\n        gl.clearColor(color[0], color[1], color[2], color[3]);\r\n    }\r\n\r\n    static depthFunction(gl: WebGL2RenderingContext, func: TestFunction): void {\r\n        gl.depthFunc(func);\r\n    }\r\n\r\n    static blendEquation(gl: WebGL2RenderingContext, equ: BlendingEquation): void {\r\n        gl.blendEquation(equ);\r\n    }\r\n\r\n    static blendFunction(gl: WebGL2RenderingContext, srcFunc: BlendingMode, dstFunc: BlendingMode): void {\r\n        gl.blendFunc(srcFunc, dstFunc);\r\n    }\r\n\r\n    static stencilFunction(gl: WebGL2RenderingContext, func: TestFunction, ref: number, mask: number, face: Face): void {\r\n        gl.stencilFuncSeparate(face, func, ref, mask);\r\n    }\r\n\r\n    static stencilOperations(gl: WebGL2RenderingContext, fail: StencilAction, zFail: StencilAction, zPass: StencilAction, face: Face) {\r\n        gl.stencilOpSeparate(face, fail, zFail, zPass);\r\n    }\r\n\r\n    static stencilMask(gl: WebGL2RenderingContext, mask: number, face: Face) {\r\n        gl.stencilMaskSeparate(face, mask);\r\n    }\r\n\r\n    static colorMask(gl: WebGL2RenderingContext, red: boolean, green: boolean, blue: boolean, alpha: boolean) {\r\n        gl.colorMask(red, green, blue, alpha);\r\n    }\r\n\r\n    static enable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.enable(capability);\r\n    }\r\n\r\n    static disable(gl: WebGL2RenderingContext, capability: Capabilities): void {\r\n        gl.disable(capability);\r\n    }\r\n\r\n    static clear(gl: WebGL2RenderingContext, buffer: BufferMask): void {\r\n        gl.clear(buffer);\r\n    }\r\n\r\n    static getViewport(gl: WebGL2RenderingContext): Int32Array {\r\n        return gl.getParameter(gl.VIEWPORT) as Int32Array;\r\n    }\r\n\r\n    static getMaxSamples(gl: WebGL2RenderingContext): number {\r\n        return gl.getParameter(gl.MAX_SAMPLES) as number;\r\n    }\r\n}","import { UniformsList, WebGLUniformUtilities } from \"./WebGLUniformUtilities\";\r\nimport { Buffer, BufferDataUsage } from \"./WebGLBufferUtilities\";\r\nimport { Program } from \"./WebGLProgramUtilities\";\r\n\r\nexport type UniformBlock = {\r\n    name: string;\r\n    blockIndex: number;\r\n    program: Program;\r\n    layout: UniformBlockLayout;\r\n    blockSize: number;\r\n    bindingPoint: number;\r\n}\r\n\r\nexport type UniformBlockLayout = {\r\n    [name: string]: {\r\n        offset: number;\r\n    }\r\n}\r\n\r\nexport type UniformBuffer = Buffer & {\r\n    //bindingPoint: number;\r\n    rangeOffset?: number;\r\n    rangeSize?: number;\r\n}\r\n\r\nexport type RangedUniformBuffer = UniformBuffer & {\r\n    rangeOffset: number;\r\n    rangeSize: number;\r\n}\r\n\r\nexport type UniformBufferProperties = {\r\n    usage: BufferDataUsage;\r\n}\r\n\r\nexport class WebGLUniformBlockUtilities {\r\n\r\n    static #bindingPoints: Map<string, number> = new Map();\r\n\r\n    static getBindingPointsEntries(): IterableIterator<[string, number]> {\r\n        return this.#bindingPoints.entries();\r\n    }\r\n\r\n    static createUniformBlock(gl: WebGL2RenderingContext, program: Program, name: string): UniformBlock | null {\r\n        const {internal} = program;\r\n\r\n        let bindingPoint = this.#bindingPoints.get(name);\r\n        if (bindingPoint == undefined) {\r\n            bindingPoint = Math.max(-1, ...this.#bindingPoints.values()) + 1;\r\n            this.#bindingPoints.set(name, bindingPoint);\r\n        }\r\n\r\n        const blockIndex = gl.getUniformBlockIndex(internal, name);\r\n        if (blockIndex === gl.INVALID_INDEX) {\r\n            console.error(`Block '${name}' does not identify a valid uniform block.`);\r\n            return null;\r\n        }\r\n\r\n        gl.uniformBlockBinding(internal, blockIndex, bindingPoint);\r\n\r\n        const blockSize = gl.getActiveUniformBlockParameter(internal, blockIndex, gl.UNIFORM_BLOCK_DATA_SIZE);\r\n        const layout: UniformBlockLayout = {};\r\n        const blockUniformsIndices = gl.getActiveUniformBlockParameter(internal, blockIndex, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES);\r\n        const activeUniformsOffsets = gl.getActiveUniforms(internal, blockUniformsIndices, gl.UNIFORM_OFFSET);\r\n        activeUniformsOffsets.forEach((uniformOffset_i: number, i: number) => {\r\n            const uniformIndex = blockUniformsIndices[i];\r\n            const uniformInfo = gl.getActiveUniform(internal, uniformIndex);\r\n            if (uniformInfo !== null) {\r\n                const {name} = uniformInfo;\r\n                layout[name] = {\r\n                    offset: uniformOffset_i\r\n                };\r\n            }\r\n        });\r\n\r\n        return {\r\n            name: name,\r\n            blockIndex: blockIndex,\r\n            bindingPoint: bindingPoint,\r\n            blockSize: blockSize,\r\n            layout: layout,\r\n            program: program\r\n        };\r\n    }\r\n\r\n    static createUniformBuffer(gl: WebGL2RenderingContext, byteLength: number, usage?: BufferDataUsage): UniformBuffer | null {\r\n        const internal = gl.createBuffer();\r\n        if (internal == null) {\r\n            console.error(\"Could not create WebGLBuffer.\");\r\n            return null;\r\n        }\r\n        \r\n        const target = gl.UNIFORM_BUFFER;\r\n        gl.bindBuffer(target, internal);\r\n\r\n        usage = usage ?? BufferDataUsage.DYNAMIC_DRAW;\r\n\r\n        const data = new ArrayBuffer(byteLength);\r\n        gl.bufferData(target, data, usage);\r\n        \r\n        return {\r\n            internal: internal,\r\n            target: target,\r\n            usage: usage,\r\n            data: data\r\n        };\r\n    }\r\n\r\n    static createRangedUniformBuffers(gl: WebGL2RenderingContext, blocks: UniformBlock[], usage?: BufferDataUsage): {\r\n        [name: string]: RangedUniformBuffer\r\n    } | null {\r\n        const offsetAlignment = gl.getParameter(gl.UNIFORM_BUFFER_OFFSET_ALIGNMENT);\r\n        const bufferByteLength = blocks.reduce(\r\n            (size, block) => size + Math.max(Math.ceil(block.blockSize / offsetAlignment), 1) * offsetAlignment, 0\r\n        );\r\n        \r\n        const maxUniformBlockSize = gl.getParameter(gl.MAX_UNIFORM_BLOCK_SIZE);\r\n        if (bufferByteLength > maxUniformBlockSize) {\r\n            console.error(`Uniform block size is beyond MAX_UNIFORM_BLOCK_SIZE.`);\r\n        }\r\n\r\n        const buffer = this.createUniformBuffer(gl, bufferByteLength, usage);\r\n        if (buffer == null) {\r\n            return null;\r\n        }\r\n\r\n        let rangedUniformBuffers: {[name: string]: RangedUniformBuffer} = {};\r\n        let rangeOffset = 0;\r\n        blocks.forEach((block) => {\r\n            const {blockSize: rangeSize, name} = block;\r\n            rangedUniformBuffers[name] = {\r\n                ...buffer,\r\n                rangeOffset: rangeOffset,\r\n                rangeSize: rangeSize\r\n            };\r\n            rangeOffset += Math.max(Math.ceil(rangeSize / offsetAlignment), 1) * offsetAlignment;\r\n        });\r\n\r\n        return rangedUniformBuffers;\r\n    }\r\n\r\n    static setUniformBufferValues(gl: WebGL2RenderingContext, block: UniformBlock, buffer: UniformBuffer, uniforms: UniformsList): void {\r\n        const {internal} = buffer;\r\n        const currentUniformBuffer = gl.getParameter(gl.UNIFORM_BUFFER_BINDING);\r\n        if (currentUniformBuffer !== internal) {\r\n            gl.bindBuffer(gl.UNIFORM_BUFFER, internal);\r\n        }\r\n        \r\n        const {layout, name} = block;\r\n        const {rangeOffset} = buffer;\r\n        Object.entries(uniforms).forEach(([uniformName, uniform]) => {\r\n            const {value} = uniform;\r\n            if (!(uniformName in layout)) {\r\n                console.warn(`${uniformName} does not exist in block ${name}.`);\r\n            }\r\n            const {offset} = layout[uniformName];\r\n            gl.bufferSubData(gl.UNIFORM_BUFFER, offset + (rangeOffset ?? 0), WebGLUniformUtilities.asArrayBufferView(value));\r\n        });\r\n    }\r\n\r\n    static bindUniformBuffer(gl: WebGL2RenderingContext, block: UniformBlock, buffer: UniformBuffer): void {\r\n        const {data, internal} = buffer;\r\n        const {bindingPoint} = block;\r\n        const {byteLength} = data;\r\n        let {rangeOffset, rangeSize} = buffer;\r\n\r\n        if (rangeOffset) {\r\n            rangeSize = rangeSize ?? (byteLength - rangeOffset);\r\n            gl.bindBufferRange(gl.UNIFORM_BUFFER, bindingPoint, internal, rangeOffset, rangeSize);\r\n        }\r\n        else {\r\n            gl.bindBufferBase(gl.UNIFORM_BUFFER, bindingPoint, internal);\r\n        }\r\n    }\r\n}","import { VertexArray, VertexArrayValues, VertexArrayProperties, WebGLVertexArrayUtilities, DrawMode } from \"./WebGLVertexArrayUtilities\"\r\nimport { Texture, TextureProperties, WebGLTextureUtilities } from \"./WebGLTextureUtilities\"\r\nimport { UniformBlock, UniformBuffer, UniformBufferProperties, WebGLUniformBlockUtilities } from \"./WebGLUniformBlockUtilities\"\r\nimport { UniformsList, UniformsListSetter, WebGLUniformUtilities } from \"./WebGLUniformUtilities\"\r\nimport { Program } from \"./WebGLProgramUtilities\"\r\n\r\nexport type PacketProperties = {\r\n    vertexArray: VertexArrayProperties;\r\n    uniforms?: UniformsList;\r\n    textures?: {\r\n        texture: Texture;\r\n        properties: TextureProperties;\r\n    }[];\r\n    uniformBlocks?: {\r\n        block: UniformBlock;\r\n        buffer?: UniformBuffer | UniformBufferProperties;\r\n        uniforms?: UniformsList;\r\n    }[];\r\n    options?: {\r\n        drawMode?: DrawMode;\r\n        instanceCount?: number;\r\n    };\r\n}\r\n\r\nexport type PacketValues = {\r\n    vertexArray?: VertexArrayValues;\r\n    uniforms?: UniformsList;\r\n    uniformBlocks?: {\r\n        block: UniformBlock;\r\n        buffer: UniformBuffer;\r\n        uniforms: UniformsList;\r\n    }[];\r\n}\r\n\r\nexport type Packet = {\r\n    vertexArray?: VertexArray;\r\n    uniformsSetter?: UniformsListSetter;\r\n    uniformBlocks?: {\r\n        [name: string]: {\r\n            block: UniformBlock;\r\n            buffer: UniformBuffer;\r\n        }\r\n    };\r\n    drawMode: DrawMode;\r\n    instanceCount?: number;\r\n}\r\n\r\nexport class WebGLPacketUtilities {\r\n\r\n    static createTextures(gl: WebGL2RenderingContext, textures: {\r\n        [name: string]: TextureProperties;\r\n    }): {[name: string]: Texture} {\r\n        const _textures: {\r\n            [key: string]: Texture\r\n        } = {};\r\n        Object.entries(textures).forEach(([name, properties]) => {\r\n            const texture = WebGLTextureUtilities.createTexture(gl, name, properties);\r\n            if (texture !== null) {\r\n                _textures[name] = texture;\r\n            }\r\n        });\r\n        return _textures;\r\n    }\r\n\r\n    static createUniformBlocks(gl: WebGL2RenderingContext, program: Program, uniformBlocks: string[]): {[name: string]: UniformBlock} {\r\n        const _uniformBlocks: {\r\n            [key: string]: UniformBlock\r\n        } = {};\r\n        uniformBlocks.forEach((blockName) => {\r\n            const uniformBlock = WebGLUniformBlockUtilities.createUniformBlock(\r\n                gl, program, blockName\r\n            );\r\n            if (uniformBlock !== null) {\r\n                _uniformBlocks[blockName] = uniformBlock;\r\n            }\r\n        });\r\n        return _uniformBlocks;\r\n    }\r\n\r\n    static createPacket(gl: WebGL2RenderingContext, program: Program, packet: PacketProperties): Packet | null {\r\n        const {options, vertexArray: vertexArrayProperties, uniforms: uniformsProperties, uniformBlocks: uniformBlocksProperties, textures: texturesProperties} = packet;\r\n        const drawMode = options?.drawMode || DrawMode.TRIANGLES;\r\n        const instanceCount = options?.instanceCount;\r\n\r\n        let vertexArray: VertexArray | undefined = void 0;\r\n        if (vertexArrayProperties !== void 0) {\r\n            vertexArray = WebGLVertexArrayUtilities.createVertexArray(gl, program, vertexArrayProperties) ?? void 0;\r\n            if (vertexArray == void 0) {\r\n                return null;\r\n            }\r\n        }\r\n      \r\n        let uniformsSetter: UniformsListSetter | undefined = void 0;\r\n        if (uniformsProperties !== void 0) {\r\n            uniformsSetter = WebGLUniformUtilities.getUniformsListSetter(gl, program, uniformsProperties) ?? void 0;\r\n            if (uniformsSetter == void 0) {\r\n                return null;\r\n            }\r\n            WebGLUniformUtilities.setUniformsListValues(gl, uniformsSetter, uniformsProperties);\r\n        }\r\n\r\n        let uniformBlocks: {\r\n            [name: string]: {\r\n                block: UniformBlock;\r\n                buffer: UniformBuffer;\r\n            }\r\n        } = {};\r\n\r\n        if (uniformBlocksProperties !== void 0) {\r\n            uniformBlocksProperties.forEach((uniformBlock) => {\r\n                const {block, buffer: bufferProperties, uniforms} = uniformBlock;\r\n                const {blockSize, name: blockName} = block;\r\n                let buffer: UniformBuffer | null = null;\r\n                if (bufferProperties) {\r\n                    const {usage} = bufferProperties;\r\n                    buffer = \"internal\" in bufferProperties ? bufferProperties :\r\n                        WebGLUniformBlockUtilities.createUniformBuffer(gl, usage, blockSize);\r\n                }\r\n                else {\r\n                    buffer = WebGLUniformBlockUtilities.createUniformBuffer(gl, blockSize);\r\n                }\r\n                if (buffer == null) {\r\n                    return null;\r\n                }\r\n                WebGLUniformBlockUtilities.bindUniformBuffer(gl, block, buffer);\r\n                if (uniforms !== undefined) {\r\n                    WebGLUniformBlockUtilities.setUniformBufferValues(gl, block, buffer, uniforms);\r\n                }\r\n                uniformBlocks[blockName] = {block, buffer};\r\n            });\r\n        }\r\n\r\n        return {\r\n            vertexArray,\r\n            uniformsSetter,\r\n            uniformBlocks,\r\n            drawMode,\r\n            instanceCount\r\n        };\r\n    }\r\n\r\n    static setPacketValues(gl: WebGL2RenderingContext, packet: Packet, values: PacketValues): void {\r\n        const {vertexArray: vertexArrayValues, uniforms: uniformsValues, uniformBlocks: uniformBlocksValues} = values;\r\n        const {vertexArray, uniformsSetter} = packet;\r\n\r\n        if (vertexArrayValues && vertexArray) {\r\n            WebGLVertexArrayUtilities.setVertexArrayValues(gl, vertexArray, vertexArrayValues);\r\n        }\r\n        if (uniformsValues && uniformsSetter) {\r\n            WebGLUniformUtilities.setUniformsListValues(gl, uniformsSetter, uniformsValues);\r\n        }\r\n        if (uniformBlocksValues) {\r\n            uniformBlocksValues.forEach((uniformBlock_i) => {\r\n                const {block, buffer, uniforms} = uniformBlock_i;\r\n                WebGLUniformBlockUtilities.setUniformBufferValues(gl, block, buffer, uniforms);\r\n            });\r\n        }\r\n    }\r\n\r\n    static drawPacket(gl: WebGL2RenderingContext, packet: Packet): void {\r\n        const {vertexArray} = packet;\r\n\r\n        if (vertexArray) {\r\n            const {drawMode, instanceCount} = packet;\r\n            WebGLVertexArrayUtilities.drawVertexArray(gl, vertexArray, drawMode, instanceCount);\r\n        }\r\n        else {\r\n            console.error(\"No vertex array to draw.\");\r\n        }\r\n\r\n        //@TODO: getError ?\r\n    }\r\n}","export { ColorValues };\r\nexport { Color };\r\nexport { ColorBase };\r\n\r\ntype ColorValues = [number, number, number, number];\r\n\r\ninterface ColorConstructor {\r\n    readonly prototype: Color;\r\n    new(): Color;\r\n    new(values: ColorValues): Color;\r\n    new(values?: ColorValues): Color;\r\n    readonly BLACK: Color;\r\n    readonly RED: Color;\r\n    readonly GREEN: Color;\r\n    readonly BLUE: Color;\r\n    readonly WHITE: Color;\r\n    rgb(r: number, g: number, b: number): Color;\r\n    rgba(r: number, g: number, b: number, a: number): Color;\r\n    array(...colors: Color[]): number[];\r\n}\r\n\r\ninterface Color {\r\n    array: WritableArrayLike<number>;\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n    a: number;\r\n    copy(color: Color): Color;\r\n    clone(): Color;\r\n    getValues(): ColorValues;\r\n    setValues(\r\n        r: number,\r\n        g: number,\r\n        b: number,\r\n        a: number\r\n    ): Color;\r\n    lerp(color: Color, t: number): Color;\r\n    valuesNormalized(): ColorValues;\r\n}\r\n\r\nclass ColorBase implements Color {\r\n    private _array: TypedArray;\r\n\r\n\tconstructor()\r\n\tconstructor(type: new(length: number) => TypedArray)\r\n\tconstructor(type?: new(length: number) => TypedArray) {\r\n\t\tthis._array = new (type || Uint8Array)(9);\r\n    }\r\n    \r\n    static readonly BLACK = ColorBase.rgb(0, 0, 0);\r\n    static readonly RED = ColorBase.rgb(255, 0, 0);\r\n    static readonly GREEN = ColorBase.rgb(0, 255, 0);\r\n    static readonly BLUE = ColorBase.rgb(0, 0, 255);\r\n    static readonly WHITE = ColorBase.rgb(255, 255, 255);\r\n\r\n    static rgb(r: number, g: number, b: number): ColorBase {\r\n        const color =  new ColorBase()\r\n        color.setValues(r, g, b, 255);\r\n        return color;\r\n    }\r\n\r\n    static rgba(r: number, g: number, b: number, a: number): ColorBase {\r\n        const color =  new ColorBase()\r\n        color.setValues(r, g, b, a);\r\n        return color;\r\n    }\r\n\r\n    static array(...colors: ColorBase[]): number[] {\r\n        const a = new Array<number>(colors.length * 4);\r\n        let c;\r\n        let i = 0;\r\n        for (const color of colors) {\r\n            c = color._array;\r\n            a[i + 0] = c[0];\r\n            a[i + 1] = c[1];\r\n            a[i + 2] = c[2];\r\n            a[i + 3] = c[3];\r\n            i += 4;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    get array(): WritableArrayLike<number> {\r\n        return this._array;\r\n    }\r\n\r\n    get r(): number {\r\n        return this._array[0];\r\n    }\r\n\r\n    set r(r: number) {\r\n        this._array[0] = r;\r\n    }\r\n\r\n    get g(): number {\r\n        return this._array[1];\r\n    }\r\n\r\n    set g(g: number) {\r\n        this._array[1] = g;\r\n    }\r\n\r\n    get b(): number {\r\n        return this._array[2];\r\n    }\r\n\r\n    set b(b: number) {\r\n        this._array[2] = b;\r\n    }\r\n\r\n    get a(): number {\r\n        return this._array[3];\r\n    }\r\n\r\n    set a(a: number) {\r\n        this._array[3] = a;\r\n    }\r\n\r\n    setValues(r: number, g: number, b: number, a: number): ColorBase {\r\n\t\tconst o = this._array;\r\n\r\n\t\to[0] = r;\r\n\t\to[1] = g;\r\n\t\to[2] = b;\r\n\t\to[3] = a;\r\n\r\n\t\treturn this;\r\n    }\r\n    \r\n    getValues(): ColorValues {\r\n\t\tconst c = this._array;\r\n\t\t\r\n\t\treturn [\r\n\t\t\tc[0], c[1], c[2], c[3]\r\n\t\t];\r\n\t}\r\n    \r\n    copy(color: ColorBase): ColorBase {\r\n        const o = this._array;\r\n\r\n        o[0] = color.r;\r\n        o[1] = color.g;\r\n        o[2] = color.b;\r\n        o[3] = color.a;\r\n\r\n        return this;\r\n\t}\r\n\r\n\tclone(): ColorBase {\r\n\t\treturn new ColorBase().copy(this);\r\n    }\r\n    \r\n    lerp(color: ColorBase, t: number): ColorBase {\r\n\t\tconst o = this._array;\r\n\t\tconst c = color._array;\r\n\r\n\t\to[0] = t * (c[0] - o[0]);\r\n\t\to[1] = t * (c[1] - o[1]);\r\n\t\to[2] = t * (c[2] - o[2]);\r\n\t\to[3] = t * (c[3] - o[3]);\r\n\r\n\t\treturn this;\r\n\t}\r\n    \r\n    valuesNormalized(): ColorValues {\r\n        return [this.r / 255, this.g / 255, this.b / 255, this.a / 255];\r\n    }\r\n}\r\n\r\nconst Color: ColorConstructor = ColorBase;","import { IcosahedronGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/IcosahedronGeometry\";\r\nimport { ArcballCameraControl } from \"../../engine/core/controls/ArcballCameraControl\";\r\nimport { FreeCameraControl } from \"../../engine/core/controls/FreeCameraControl\";\r\nimport { Transform } from \"../../engine/core/general/Transform\";\r\nimport { Input } from \"../../engine/core/input/Input\";\r\nimport { PerspectiveCamera } from \"../../engine/core/rendering/scenes/cameras/PerspectiveCamera\";\r\nimport { GeometryBuffer } from \"../../engine/core/rendering/scenes/geometries/GeometryBuffer\";\r\nimport { CubeGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/CubeGeometry\";\r\nimport { QuadGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/QuadGeometry\";\r\nimport { BufferDataUsage } from \"../../engine/core/rendering/webgl/WebGLBufferUtilities\";\r\nimport { FramebufferAttachment, FramebufferTextureTarget, RenderbufferPixelFormat, WebGLFramebufferUtilities } from \"../../engine/core/rendering/webgl/WebGLFramebufferUtilities\";\r\nimport { WebGLPacketUtilities, PacketProperties } from \"../../engine/core/rendering/webgl/WebGLPacketUtilities\";\r\nimport { WebGLProgramUtilities } from \"../../engine/core/rendering/webgl/WebGLProgramUtilities\";\r\nimport { BufferMask, Capabilities, TestFunction, WebGLRendererUtilities, WindingOrder } from \"../../engine/core/rendering/webgl/WebGLRendererUtilities\";\r\nimport { TexturePixelFormat, TexturePixelType, TextureMagFilter, TextureMinFilter, TextureTarget, TextureWrapMode, WebGLTextureUtilities, TextureInternalPixelFormat } from \"../../engine/core/rendering/webgl/WebGLTextureUtilities\";\r\nimport { WebGLUniformBlockUtilities } from \"../../engine/core/rendering/webgl/WebGLUniformBlockUtilities\";\r\nimport { AttributeDataType, DrawMode } from \"../../engine/core/rendering/webgl/WebGLVertexArrayUtilities\";\r\nimport { Color } from \"../../engine/libs/graphics/colors/Color\";\r\nimport { Matrix4 } from \"../../engine/libs/maths/algebra/matrices/Matrix4\";\r\nimport { Quaternion } from \"../../engine/libs/maths/algebra/quaternions/Quaternion\";\r\nimport { Vector3, Vector3Values } from \"../../engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Space } from \"../../engine/libs/maths/geometry/space/Space\";\r\nimport { addWidgets, createPositionWidgets, createRelativePositionWidgets, createRotationWidgets } from \"./Common\";\r\nimport { SphereGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/SphereGeometry\";\r\nimport { CylinderGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/CylinderGeometry\";\r\nimport { DodecahedronGeometry } from \"../../engine/core/rendering/scenes/geometries/lib/polyhedron/DodecahedronGeometry\";\r\n\r\nconst simpleSceneDOM = /*template*/`\r\n<!--<link rel=\"stylesheet\" href=\"./css/main.css\"/>-->\r\n  <div class=\"flex-auto flex-cols\">\r\n    <main class=\"flex-rows flex-auto\">\r\n        <section class=\"centered padded\">\r\n          <div id=\"ui\" class=\"flex-cols\">\r\n            <div class=\"flex-none\">FPS: <span id=\"canvas-fps\">-.-</span><button id=\"playpause\">Pause</button></div>\r\n          </div>\r\n          <div id=\"widgets\"></div>\r\n          <canvas id=\"canvas\" tabindex=\"0\" tooltip=\"mon-canvas\" oncontextmenu=\"return false;\"></canvas>\r\n          <style>\r\n            circle:hover {\r\n              fill: rgb(255, 0, 0);\r\n            }\r\n          </style>\r\n          <!--<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" width=\"100\" height=\"100\">\r\n            <circle cx=\"10\" cy=\"10\" r=\"4\"/>\r\n          </svg>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\" width=\"200\" height=\"200\" id=\"save\" fill=\"none\">\r\n            <g>\r\n              <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"red\"></rect>\r\n              <text text-anchor=\"middle\" alignment-baseline=\"middle\" x=\"50\" y=\"50\" font-family=\"Verdana\" fill=\"blue\">Hello,World!</text>\r\n            </g>\r\n          </svg>-->\r\n        </section>\r\n    </main>\r\n  </div>`;\r\n\r\nexport async function start() {\r\n  const template = document.createElement(\"template\");\r\n  template.innerHTML = simpleSceneDOM;\r\n  document.body.insertBefore(template.content, document.body.firstChild);\r\n\r\n  /*let onCapture = false;\r\n  const handlePointerUpEvent = (event: PointerEvent) => {\r\n    const {target, pointerId} = event;\r\n    if (target instanceof Element && target.tagName == \"circle\") {\r\n      (<Element>target).releasePointerCapture(pointerId);\r\n      onCapture = false;\r\n    }\r\n  }\r\n  const handlePointerDownEvent = (event: PointerEvent) => {\r\n    const {target, pointerId} = event;\r\n    if (target instanceof Element && target.tagName == \"circle\") {\r\n      (<Element>target).setPointerCapture(pointerId);\r\n      onCapture = true;\r\n    }\r\n  }\r\n  const handlePointerOutEvent = (event: PointerEvent) => {\r\n    const {target, pointerId} = event;\r\n    if (target instanceof Element && target.tagName == \"circle\") {\r\n      (<Element>target).releasePointerCapture(pointerId);\r\n      onCapture = false;\r\n    }\r\n  }\r\n  const handlePointerMoveEvent = (event: PointerEvent) => {\r\n    if (onCapture) {\r\n      const {currentTarget, clientX, clientY} = event;\r\n      const svg = <Element>currentTarget;\r\n      const {\r\n        right: svgRight, left: svgLeft, width: svgWidth,\r\n        bottom: svgBottom, top: svgTop, height: svgHeight\r\n      } = svg.getBoundingClientRect();\r\n      const {target} = event;\r\n      const targetElement = <Element>target;\r\n      const [viewMinX, viewMinY, viewMaxX, viewMaxY] = svg.getAttribute(\"viewBox\")!.split(\" \").map(value => parseFloat(value));\r\n      const offsetX = (Math.min(svgRight, Math.max(clientX, svgLeft)) - svgLeft) / svgWidth;\r\n      const offsetY = (Math.min(svgBottom, Math.max(clientY, svgTop)) - svgTop) / svgHeight;\r\n      const newTargetX = Math.round(offsetX * (viewMaxX - viewMinX));\r\n      const newTargetY = Math.round(offsetY * (viewMaxY - viewMinY));\r\n      targetElement.setAttribute(\"cx\", `${newTargetX}`);\r\n      targetElement.setAttribute(\"cy\", `${newTargetY}`);\r\n    }\r\n  }\r\n  const svg = document.querySelector(\"svg\");\r\n  svg!.addEventListener(\"pointerdown\", handlePointerDownEvent);\r\n  svg!.addEventListener(\"pointermove\", handlePointerMoveEvent);\r\n  svg!.addEventListener(\"pointerup\", handlePointerUpEvent);\r\n  svg!.addEventListener(\"pointerout\", handlePointerOutEvent);*/\r\n\r\n  try {\r\n    launchScene();\r\n  }\r\n  catch (e) {\r\n    console.trace(e);\r\n  }\r\n}\r\n\r\nexport async function launchScene() {\r\n  let frameRequest: number;\r\n  let render: (time: number) => void;\r\n  let fps: number = 0;\r\n  let paused = false;\r\n\r\n  const playPause = document.getElementById('playpause') as HTMLButtonElement;\r\n  if (playPause !== null) {\r\n    playPause.onclick = () => {\r\n      paused = !paused;\r\n      playPause.textContent = paused ? \"Play\" : \"Pause\";\r\n      if (!paused) {\r\n        render(0);\r\n      }\r\n    };\r\n  }\r\n\r\n  const fpsElement = document.getElementById('canvas-fps') as HTMLSpanElement;\r\n  if (!fpsElement) {\r\n    return;\r\n  }\r\n\r\n  const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n  if (!canvas) {\r\n    return;\r\n  }\r\n  \r\n  const canvasWidth = 800;\r\n  const canvasHeight = 600;\r\n  const supersamplingRatio = 1;\r\n  canvas.width = canvasWidth * supersamplingRatio;\r\n  canvas.height = canvasHeight * supersamplingRatio;\r\n  canvas.style.width = `${canvasWidth}px`;\r\n  canvas.style.height = `${canvasHeight}px`;\r\n  \r\n  const gl = canvas.getContext(\"webgl2\", {alpha: false}/*, {antialias: true}*//*, {preserveDrawingBuffer: true}*/);\r\n  if (!gl) {\r\n    return;\r\n  }\r\n\r\n  WebGLTextureUtilities.setUnpackAlignment(gl, 1);\r\n\r\n  // Shaders\r\n  const phongVert = await fetch(\"assets/engine/shaders/common/phong.vert.glsl\").then(resp => resp.text());\r\n  const phongFrag = await fetch(\"assets/engine/shaders/common/phong.frag.glsl\").then(resp => resp.text());\r\n  const phongProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: phongVert, fragmentSource: phongFrag});\r\n  if (phongProgram == null) return;\r\n\r\n  const skyboxVert = await fetch(\"assets/engine/shaders/common/skybox.vert\").then(resp => resp.text());\r\n  const skyboxFrag = await fetch(\"assets/engine/shaders/common/skybox.frag\").then(resp => resp.text());\r\n  const skyboxProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: skyboxVert, fragmentSource: skyboxFrag});\r\n  if (skyboxProgram == null) return;\r\n  \r\n  const textureVert = await fetch(\"assets/engine/shaders/common/texture.vert\").then(resp => resp.text());\r\n  const textureFrag = await fetch(\"assets/engine/shaders/common/texture.frag\").then(resp => resp.text());\r\n  const texProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: textureVert, fragmentSource: textureFrag});\r\n  if (texProgram == null) return;\r\n\r\n  const basicVert = await fetch(\"assets/engine/shaders/common/basic.vert.glsl\").then(resp => resp.text());\r\n  const basicFrag = await fetch(\"assets/engine/shaders/common/basic.frag.glsl\").then(resp => resp.text());\r\n  const basicProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: basicVert, fragmentSource: basicFrag});\r\n  if (basicProgram == null) return;\r\n  \r\n  const depthVert = await fetch(\"assets/engine/shaders/common/depth.vert.glsl\").then(resp => resp.text());\r\n  const depthFrag = await fetch(\"assets/engine/shaders/common/depth.frag.glsl\").then(resp => resp.text());\r\n  const depthProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: depthVert, fragmentSource: depthFrag});\r\n  if (depthProgram == null) return;\r\n\r\n  const linesVertex = await fetch(\"assets/engine/shaders/common/lines.vert.glsl\").then(resp => resp.text());\r\n  const linesFragment = await fetch(\"assets/engine/shaders/common/lines.frag.glsl\").then(resp => resp.text());\r\n  const linesProgram = WebGLProgramUtilities.createProgram(gl, {vertexSource: linesVertex, fragmentSource: linesFragment});\r\n  if (linesProgram == null) return;\r\n\r\n  async function fetchImage(url: string) {\r\n    return fetch(url).then((resp) => {\r\n      if (resp.ok) {\r\n        return new Promise<HTMLImageElement>((resolve) => {\r\n          const img = new Image();\r\n          img.onload = () => {\r\n            resolve(img);\r\n          };\r\n          img.src = url;\r\n        })\r\n      }\r\n      else {\r\n        throw new Error(`Image '${url}' not found.`);\r\n      }\r\n    });\r\n  }\r\n  // Images\r\n  const albedoMapImg = await fetchImage(\"assets/engine/img/NormalMap.png\");\r\n  const normalMapImg = await fetchImage(\"assets/engine/img/NormalMap_0.png\");\r\n  const displacementMapImg = await fetchImage(\"assets/engine/img/DisplacementMap.png\");\r\n  const skyboxXPosImg = await fetchImage(\"assets/engine/img/skybox_x_pos.png\");\r\n  const skyboxXNegImg = await fetchImage(\"assets/engine/img/skybox_x_neg.png\");\r\n  const skyboxYPosImg = await fetchImage(\"assets/engine/img/skybox_y_pos.png\");\r\n  const skyboxYNegImg = await fetchImage(\"assets/engine/img/skybox_y_neg.png\");\r\n  const skyboxZPosImg = await fetchImage(\"assets/engine/img/skybox_z_pos.png\");\r\n  const skyboxZNegImg = await fetchImage(\"assets/engine/img/skybox_z_neg.png\");\r\n\r\n  /*const norm16Extension = gl.getExtension(\"EXT_texture_norm16\");\r\n  if (norm16Extension) {\r\n    console.log(`Extension EXT_texture_norm16 activated.`);\r\n  }*/\r\n\r\n  const textures = WebGLPacketUtilities.createTextures(gl, {\r\n    albedoMap: {\r\n      pixels: albedoMapImg,\r\n      width: albedoMapImg.width, height: albedoMapImg.height,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGB,\r\n      internalFormat: TextureInternalPixelFormat.RGB,\r\n\r\n      min: TextureMinFilter.NEAREST,\r\n      mag: TextureMagFilter.NEAREST,\r\n    },\r\n    // albedoMap: {\r\n    //   pixels: null,\r\n    //   width: 8, height: 8, depth: 2,\r\n    //   // pixels: albedoMapImg,\r\n    //   // width: albedoMapImg.width, height: albedoMapImg.height,\r\n    //   target: TextureTarget.TEXTURE_2D_ARRAY,\r\n    //   type: TexturePixelType.UNSIGNED_BYTE,\r\n\r\n    //   /*wrapS: TextureWrapMode.CLAMP_TO_EDGE,\r\n    //   wrapT: TextureWrapMode.CLAMP_TO_EDGE,\r\n    //   wrapR: TextureWrapMode.CLAMP_TO_EDGE,*/\r\n\r\n    //   format: TexturePixelFormat.LUMINANCE,\r\n    //   internalFormat: TextureInternalPixelFormat.LUMINANCE,\r\n\r\n    //   // format: TexturePixelFormat.RGB,\r\n    //   // internalFormat: TextureInternalPixelFormat.RGB\r\n\r\n    //   min: TextureMinFilter.NEAREST,\r\n    //   mag: TextureMagFilter.NEAREST,\r\n\r\n    //   subimages: [\r\n    //     {\r\n    //       pixels: new Uint8Array([\r\n    //         0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC,\r\n    //         0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF,\r\n    //         0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC,\r\n    //         0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF,\r\n    //         0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC,\r\n    //         0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF,\r\n    //         0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC,\r\n    //         0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF, 0xCC, 0xFF,\r\n    //       ]),\r\n    //       xoffset: 0,\r\n    //       yoffset: 0,\r\n    //       zoffset: 0,\r\n    //       width: 8,\r\n    //       height: 8,\r\n    //       depth: 1\r\n    //     },\r\n    //     {\r\n    //       pixels: new Uint8Array([\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //         0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,\r\n    //       ]),\r\n    //       xoffset: 0,\r\n    //       yoffset: 0,\r\n    //       zoffset: 1,\r\n    //       width: 8,\r\n    //       height: 8,\r\n    //       depth: 1\r\n    //     }\r\n    //   ]\r\n    // },\r\n    normalMap: {\r\n      pixels: normalMapImg,\r\n      width: normalMapImg.width, height: normalMapImg.height,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGB,\r\n      internalFormat: TextureInternalPixelFormat.RGB8,\r\n      min: TextureMinFilter.LINEAR_MIPMAP_LINEAR,\r\n      mag: TextureMagFilter.LINEAR\r\n    },\r\n    displacementMap: {\r\n      pixels: displacementMapImg,\r\n      width: displacementMapImg.width, height: displacementMapImg.height,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGBA,\r\n      internalFormat: TextureInternalPixelFormat.RGBA8\r\n    },\r\n    skybox: {\r\n      pixels: {\r\n        xPos: skyboxXPosImg, xNeg: skyboxXNegImg,\r\n        yPos: skyboxYPosImg, yNeg: skyboxYNegImg,\r\n        zPos: skyboxZPosImg, zNeg: skyboxZNegImg\r\n      },\r\n      width: skyboxXPosImg.width, height: skyboxXPosImg.height,\r\n      target: TextureTarget.TEXTURE_CUBE_MAP,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGBA,\r\n      internalFormat: TextureInternalPixelFormat.RGBA8\r\n    },\r\n    fbColorTex: {\r\n      width: canvas.width, height: canvas.height,\r\n      pixels: null,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_BYTE,\r\n      format: TexturePixelFormat.RGBA,\r\n      internalFormat: TextureInternalPixelFormat.RGBA8,\r\n      mag: TextureMagFilter.LINEAR,\r\n      min: TextureMinFilter.LINEAR,\r\n      wrapS: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapT: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapR: TextureWrapMode.CLAMP_TO_EDGE,\r\n    },\r\n    depthTex: {\r\n      width: canvas.width, height: canvas.height,\r\n      pixels: null,\r\n      target: TextureTarget.TEXTURE_2D,\r\n      type: TexturePixelType.UNSIGNED_INT,\r\n      format: TexturePixelFormat.DEPTH_COMPONENT,\r\n      internalFormat: TextureInternalPixelFormat.DEPTH_COMPONENT24,\r\n      wrapS: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapT: TextureWrapMode.CLAMP_TO_EDGE,\r\n      wrapR: TextureWrapMode.CLAMP_TO_EDGE,\r\n      mag: TextureMagFilter.NEAREST,\r\n      min: TextureMinFilter.NEAREST,\r\n    }\r\n  })!;\r\n\r\n  const phongUniformBlocks = WebGLPacketUtilities.createUniformBlocks(gl, phongProgram, [\"viewBlock\", \"modelBlock\", \"lightsBlock\", \"phongBlock\"]);\r\n  const basicUniformBlocks = WebGLPacketUtilities.createUniformBlocks(gl, basicProgram, [\"viewBlock\", \"basicModelBlock\"]);\r\n  const linesUniformBlocks = WebGLPacketUtilities.createUniformBlocks(gl, linesProgram, [\"viewBlock\", \"modelBlock\"]);\r\n\r\n  const phongPacketBuffers = WebGLUniformBlockUtilities.createRangedUniformBuffers(gl,\r\n    Object.values(phongUniformBlocks), BufferDataUsage.DYNAMIC_DRAW\r\n  )!;\r\n\r\n  const {albedoMap, normalMap, displacementMap, skybox, fbColorTex, depthTex} = textures;\r\n\r\n  /*const anisotropicExtension = gl.getExtension(\"EXT_texture_filter_anisotropic\");\r\n  if (anisotropicExtension) {\r\n    console.log(`Extension EXT_texture_filter_anisotropic activated.`);\r\n    const maxFiltering = gl.getParameter(anisotropicExtension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n    const textures = [albedoMap, normalMap];\r\n    textures.forEach((texture) => {\r\n      gl.activeTexture(gl.TEXTURE0 + texture.unit);\r\n      gl.bindTexture(gl.TEXTURE_2D, texture.internal);\r\n      gl.texParameterf(gl.TEXTURE_2D, anisotropicExtension.TEXTURE_MAX_ANISOTROPY_EXT, maxFiltering);\r\n    });\r\n  }*/\r\n\r\n  const cubeGeometry =\r\n    //new QuadGeometry({heightSegments: 64, widthSegments: 64});\r\n    new CubeGeometry({height: 4, width: 4, depth: 4, heightSegments: 32, widthSegments: 32, depthSegments: 32});\r\n    //new SphereGeometry({widthSegments: 64, heightSegments: 64});\r\n    //new CylinderGeometry();\r\n    //new DodecahedronGeometry();\r\n\r\n  const cubeGeometryBuilder = cubeGeometry.toBuilder();\r\n  const quad = new QuadGeometry({height: 2, width: 2});\r\n  const quadGeometryBuilder = quad.toBuilder();\r\n  const cube = new Transform();\r\n  cube.setScaling(new Vector3([1, 1, 1]));\r\n  \r\n  const fov = (1 / 3) * Math.PI;\r\n  const aspect = gl.canvas.width / gl.canvas.height;\r\n  const zNear = 0.1;\r\n  const zFar = 100;\r\n\r\n  const camera = new PerspectiveCamera(fov, aspect, zNear, zFar);\r\n  camera.transform.setTranslation(new Vector3([0, 8, 8]));\r\n  camera.transform.lookAt(new Vector3([0, 0, 0]), Space.up);\r\n\r\n  const lightTransform = new Transform();\r\n  lightTransform.setTranslation(new Vector3([0, 2, 2]));\r\n  lightTransform.setScaling(new Vector3([0.2, 0.2, 0.2]));\r\n\r\n  camera.transform.setTranslation(lightTransform.getTranslation(new Vector3()).scale(2));\r\n  camera.transform.lookAt(new Vector3([0, 0, 0]), Space.up);\r\n\r\n  const viewDirectionProjectionInverse = camera.projection.clone().mult(new Matrix4().setIdentity().setRotation(camera.view.getRotation())).invert();\r\n/*\r\n  addWidgets([\r\n    ...createRotationWidgets(cube, \"Cube\"),\r\n    ...createPositionWidgets(cube, \"Cube\"),\r\n    ...createRelativePositionWidgets(cube, \"Cube\"),\r\n    ...createRelativePositionWidgets(camera.transform, \"Camera\"),\r\n  ]);*/\r\n\r\n  const cubeVertices = cubeGeometryBuilder.verticesArray();\r\n  const cubeIndices = cubeGeometryBuilder.indicesArray();\r\n  const cubeNormals = cubeGeometryBuilder.verticesNormalsArray();\r\n  const cubeUVs = cubeGeometryBuilder.uvsArray();\r\n  const cubeTangents = cubeGeometryBuilder.tangentsArray();\r\n  const cubeLines = cubeGeometryBuilder.linesArray();\r\n\r\n  const cubeGeometryBuffer = new GeometryBuffer({\r\n    a_position: { array: cubeVertices, type: AttributeDataType.VEC3 },\r\n    a_normal: { array: cubeNormals, type: AttributeDataType.VEC3 },\r\n    a_tangent: { array: cubeTangents, type: AttributeDataType.VEC3 },\r\n    a_uv: { array: cubeUVs, type: AttributeDataType.VEC2 },\r\n  }, true);\r\n  \r\n  const phongCubePacketProperties: PacketProperties = {\r\n    vertexArray: {\r\n      attributes: {\r\n        a_position: cubeGeometryBuffer.getAttribute(\"a_position\")!,\r\n        a_normal: cubeGeometryBuffer.getAttribute(\"a_normal\")!,\r\n        a_tangent: cubeGeometryBuffer.getAttribute(\"a_tangent\")!,\r\n        a_uv: cubeGeometryBuffer.getAttribute(\"a_uv\")!\r\n      },\r\n      indices: cubeIndices,\r\n      elementsCount: cubeIndices.length,\r\n      interleave: true\r\n    },\r\n    uniformBlocks: [\r\n      {\r\n        block: phongUniformBlocks.viewBlock,\r\n        buffer: phongPacketBuffers.viewBlock,\r\n        uniforms: {\r\n          u_view: { value: camera.view.array },\r\n          u_projection: { value: camera.projection.array },\r\n        }\r\n      },\r\n      {\r\n        block: phongUniformBlocks.modelBlock,\r\n        buffer: phongPacketBuffers.modelBlock,\r\n        uniforms: {\r\n          \"models[0].u_model\": { value: cube.matrix.array },\r\n          \"models[0].u_modelView\": { value: camera.view.mult(cube.matrix).array },\r\n          \"models[0].u_normal\": { value: camera.view.mult(cube.matrix).invert().transpose().array }\r\n        }\r\n      },\r\n      {\r\n        block: phongUniformBlocks.lightsBlock,\r\n        buffer: phongPacketBuffers.lightsBlock,\r\n        uniforms: {\r\n          \"lights[0].u_lightWorldPos\": { value: Array.from(lightTransform.getTranslation(new Vector3())) },\r\n          \"lights[0].u_lightDirection\": { value: Array.from(lightTransform.getBackward(new Vector3())) },\r\n          \"lights[0].u_cutOff\": { value: (2 / 360) * Math.PI },\r\n          \"lights[0].u_lightColor\": { value: [1, 0.8, 0.8] }\r\n        }\r\n      },\r\n      {\r\n        block: phongUniformBlocks.phongBlock,\r\n        buffer: phongPacketBuffers.phongBlock,\r\n        uniforms: {\r\n          u_ambientColor: { value: [0.1, 0.1, 0.1] },\r\n          u_diffuseColor: { value: [0.8, 0, 0] },\r\n          u_specularColor: { value: [1, 1, 1] },\r\n          u_ambientFactor: { value: 1 },\r\n          u_diffuseFactor: { value: 1 },\r\n          u_specularFactor: { value: 1 },\r\n          u_shininess: { value: 36 },\r\n          u_constant: { value: 1 }, \r\n          u_linear: { value: 0.09 },\r\n          u_quadratic: { value: 0.032 }\r\n        }\r\n      }\r\n    ],\r\n    uniforms: {\r\n      u_albedoMap: { value: albedoMap },\r\n      u_normalMap: { value: normalMap },\r\n      u_displacementMap: { value: displacementMap }\r\n    }\r\n  };\r\n\r\n  const linesProperties: PacketProperties = {\r\n    vertexArray: {\r\n      attributes: {\r\n        a_position: {\r\n          array: cubeLines,\r\n          type: AttributeDataType.VEC3\r\n        }\r\n      },\r\n      elementsCount: cubeLines.length / 2\r\n    },\r\n    uniformBlocks: [\r\n        {\r\n          block: linesUniformBlocks.modelBlock,\r\n          buffer: phongPacketBuffers.modelBlock\r\n        },\r\n        {\r\n          block: linesUniformBlocks.viewBlock,\r\n          buffer: phongPacketBuffers.viewBlock\r\n        }\r\n    ],\r\n    uniforms: {\r\n      u_color: {\r\n        value: new Float32Array([1, 0, 0])\r\n      }\r\n    },\r\n    options: {\r\n      drawMode: DrawMode.LINES\r\n    }\r\n  };\r\n\r\n  const basicPacketProperties: PacketProperties = {\r\n    vertexArray: {\r\n      attributes: {\r\n        a_position: { array: cubeVertices, type: AttributeDataType.VEC3 },\r\n      },\r\n      indices: cubeIndices,\r\n      elementsCount: cubeIndices.length\r\n    },\r\n    uniformBlocks: [\r\n      {\r\n        block: basicUniformBlocks.basicModelBlock,\r\n        uniforms: {\r\n          u_model: { value: lightTransform.matrix.array },\r\n          u_color: { value: [1, 1, 0] }\r\n        }\r\n      },\r\n      {\r\n        block: basicUniformBlocks.viewBlock,\r\n        buffer: phongPacketBuffers.viewBlock,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const quadIndices = quadGeometryBuilder.indicesArray();\r\n  const quadVertices = quadGeometryBuilder.verticesArray();\r\n  const quadUVs = quadGeometryBuilder.uvsArray();\r\n  const quadWorld = new Matrix4().setIdentity();\r\n\r\n  const skyboxPacketProperties: PacketProperties = {\r\n    vertexArray: {\r\n      attributes: {\r\n        a_position: { array: quadVertices, type: AttributeDataType.VEC3 },\r\n      },\r\n      indices: quadIndices,\r\n      elementsCount: quadIndices.length\r\n    },\r\n    uniforms: {\r\n      u_world: { value: quadWorld.array },\r\n      u_viewDirectionProjectionInverse: { value: viewDirectionProjectionInverse.array }, \r\n      u_skybox: { value: skybox },\r\n    }\r\n  };\r\n\r\n  const depthPacketProperties: PacketProperties = {\r\n    vertexArray: {\r\n      attributes: {\r\n        a_position: { array: quadVertices, type: AttributeDataType.VEC3 },\r\n        a_uv: { array: quadUVs, type: AttributeDataType.VEC2 },\r\n      },\r\n      indices: quadIndices,\r\n      elementsCount: quadIndices.length\r\n    },\r\n    uniforms: {\r\n      u_world: { value: quadWorld.array },\r\n      u_tex: { value: depthTex }\r\n    }\r\n  };\r\n\r\n  const texPacketProperties: PacketProperties = {\r\n    vertexArray: {\r\n      attributes: {\r\n        a_position: { array: quadVertices, type: AttributeDataType.VEC3 },\r\n        a_uv: { array: quadUVs, type: AttributeDataType.VEC2 },\r\n      },\r\n      indices: quadIndices,\r\n      elementsCount: quadIndices.length\r\n    },\r\n    uniforms: {\r\n      u_world: { value: quadWorld.array },\r\n      u_tex: { value: fbColorTex }\r\n    }\r\n  };\r\n\r\n  const linesPacket = WebGLPacketUtilities.createPacket(gl, linesProgram, linesProperties)!;\r\n  const phongCubePacket = WebGLPacketUtilities.createPacket(gl, phongProgram, phongCubePacketProperties)!;\r\n  const basicPacket = WebGLPacketUtilities.createPacket(gl, basicProgram, basicPacketProperties)!;\r\n  const skyboxPacket = WebGLPacketUtilities.createPacket(gl, skyboxProgram, skyboxPacketProperties)!;\r\n  const depthPacket = WebGLPacketUtilities.createPacket(gl, depthProgram, depthPacketProperties)!;\r\n  const texPacket = WebGLPacketUtilities.createPacket(gl, texProgram, texPacketProperties)!;\r\n\r\n  const framebuffer = WebGLFramebufferUtilities.createFramebuffer(gl)!;\r\n  const maxSamples = WebGLRendererUtilities.getMaxSamples(gl);\r\n  \r\n  WebGLFramebufferUtilities.attachRenderbuffer(\r\n    gl, framebuffer,\r\n    {\r\n      renderbuffer: WebGLFramebufferUtilities.createRenderbuffer(gl, {\r\n        internalFormat: RenderbufferPixelFormat.DEPTH_COMPONENT24,\r\n        width: canvas.width,\r\n        height: canvas.height,\r\n        samples: maxSamples\r\n      })!,\r\n      attachment: FramebufferAttachment.DEPTH_ATTACHMENT\r\n    },\r\n    {\r\n      renderbuffer: WebGLFramebufferUtilities.createRenderbuffer(gl, {\r\n        internalFormat: RenderbufferPixelFormat.RGBA8,\r\n        width: canvas.width,\r\n        height: canvas.height,\r\n        samples: maxSamples\r\n      })!,\r\n      attachment: FramebufferAttachment.COLOR_ATTACHMENT0,\r\n    }\r\n  );\r\n\r\n  const postFramebuffer = WebGLFramebufferUtilities.createFramebuffer(gl)!;\r\n\r\n  WebGLFramebufferUtilities.attachTexture(\r\n    gl, postFramebuffer, \r\n    {\r\n      textureTarget: FramebufferTextureTarget.TEXTURE_2D,\r\n      texture: fbColorTex,\r\n      attachment: FramebufferAttachment.COLOR_ATTACHMENT0\r\n    },\r\n    {\r\n      textureTarget: FramebufferTextureTarget.TEXTURE_2D,\r\n      texture: depthTex,\r\n      attachment: FramebufferAttachment.DEPTH_ATTACHMENT\r\n    }\r\n  );\r\n\r\n  WebGLRendererUtilities.viewport(gl, 0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n  //WebGLRendererUtilities.frontFace(gl, WindingOrder.CW);\r\n  WebGLRendererUtilities.enable(gl, Capabilities.DEPTH_TEST);\r\n  WebGLRendererUtilities.enable(gl, Capabilities.CULL_FACE);\r\n  \r\n  let lastFrameTime = 0;\r\n  let deltaTime = 0;\r\n\r\n  let t = 0;\r\n  let direction = 1;\r\n  \r\n  let initRotation = cube.getRotation(new Quaternion());\r\n  let initPosition = cube.getTranslation(new Vector3());\r\n\r\n  const targetPosition = new Vector3([2, -2, -2]);\r\n  const targetRotation = Quaternion.fromAxisAngle(Space.down, Math.PI / 3);\r\n  \r\n  function animate(transform: Transform, initPosition: Vector3, initRotation: Quaternion, targetPosition: Vector3, targetRotation: Quaternion, t: number) {\r\n    /*transform.setTranslation(\r\n      new Vector3().lerp(initPosition, targetPosition, t)\r\n    );*/\r\n    //transform.setRotation(transform.getRotation(new Quaternion()).slerp(initRotation, targetRotation, t));\r\n    \r\n    //transform.rotate(new Quaternion().slerp(initRotation, targetRotation, t));\r\n    transform.rotate(Quaternion.fromAxisAngle(Space.down, Math.PI / 128));\r\n  }\r\n\r\n  Input.initialize(gl.canvas);\r\n  \r\n  WebGLFramebufferUtilities.unbindFramebuffer(gl);\r\n\r\n  const cameraControl = new FreeCameraControl(camera);\r\n\r\n  let frame = 0;\r\n  render = function(frameTime: number) {\r\n    ++frame;\r\n    if (paused) {\r\n      return;\r\n    }\r\n    \r\n    frameTime *= 0.001;\r\n\r\n    deltaTime = frameTime - lastFrameTime;\r\n    lastFrameTime = frameTime;\r\n    fps = 1 / deltaTime;\r\n\r\n    fpsElement.textContent = fps.toFixed(0);\r\n\r\n    cameraControl.update(deltaTime);\r\n    lightTransform.setMatrix(camera.transform.matrix);\r\n\r\n    animate(\r\n      cube,\r\n      initPosition, initRotation,\r\n      targetPosition, targetRotation,\r\n      t\r\n    );\r\n    \r\n    t += deltaTime * direction * 0.5;\r\n    if (t > 1 || t < 0) {\r\n      direction *= -1;\r\n    }\r\n    \r\n    WebGLRendererUtilities.clearColor(gl, Color.GREEN.valuesNormalized());\r\n    WebGLRendererUtilities.clear(gl, BufferMask.COLOR_BUFFER_BIT | BufferMask.DEPTH_BUFFER_BIT);\r\n    \r\n    viewDirectionProjectionInverse.copy(camera.projection).mult(new Matrix4().setIdentity().setRotation(camera.view.getRotation())).invert();\r\n\r\n    // Framebuffer\r\n    // WebGLFramebufferUtilities.bindFramebuffer(gl, depthFramebuffer);\r\n    WebGLFramebufferUtilities.bindFramebuffer(gl, framebuffer);\r\n\r\n    WebGLRendererUtilities.clear(gl, BufferMask.COLOR_BUFFER_BIT | BufferMask.DEPTH_BUFFER_BIT);\r\n    WebGLRendererUtilities.depthFunction(gl, TestFunction.LESS);\r\n\r\n    WebGLPacketUtilities.setPacketValues(gl, phongCubePacket, {\r\n      uniformBlocks: [\r\n        {\r\n          block: phongUniformBlocks.modelBlock,\r\n          buffer: phongPacketBuffers.modelBlock,\r\n          uniforms: {\r\n            \"models[0].u_model\": { value: cube.matrix.array },\r\n            \"models[0].u_modelView\": { value: camera.view.mult(cube.matrix).array },\r\n            \"models[0].u_normal\": { value: camera.view.mult(cube.matrix).invert().transpose().array },\r\n          }\r\n        },\r\n        {\r\n          block: phongUniformBlocks.viewBlock,\r\n          buffer: phongPacketBuffers.viewBlock,\r\n          uniforms: {\r\n            u_view: { value: camera.view.array },\r\n            u_projection: { value: camera.projection.array },\r\n          }\r\n        },\r\n        {\r\n          block: phongUniformBlocks.lightsBlock,\r\n          buffer: phongPacketBuffers.lightsBlock,\r\n          uniforms: {\r\n            \"lights[0].u_lightWorldPos\": { value: Array.from(lightTransform.getTranslation(new Vector3())) },\r\n            \"lights[0].u_lightDirection\": { value: Array.from(lightTransform.getBackward(new Vector3())) },\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    \r\n    WebGLPacketUtilities.drawPacket(gl, phongCubePacket);\r\n\r\n    WebGLPacketUtilities.drawPacket(gl, linesPacket);\r\n    \r\n    WebGLPacketUtilities.drawPacket(gl, basicPacket);\r\n    \r\n    WebGLPacketUtilities.setPacketValues(gl, skyboxPacket, {\r\n      uniforms: {\r\n        u_viewDirectionProjectionInverse: { value: viewDirectionProjectionInverse.array }\r\n      }\r\n    });\r\n    \r\n    WebGLRendererUtilities.depthFunction(gl, TestFunction.LEQUAL);\r\n    WebGLPacketUtilities.drawPacket(gl, skyboxPacket);\r\n    \r\n    // Framebuffer\r\n    WebGLFramebufferUtilities.blit(gl, framebuffer, postFramebuffer,\r\n      [0, 0, canvas.width, canvas.height],\r\n      [0, 0, canvas.width, canvas.height],\r\n      BufferMask.COLOR_BUFFER_BIT,\r\n      TextureMagFilter.LINEAR\r\n    );\r\n    // WebGLFramebufferUtilities.blit(gl, framebuffer, postFramebuffer,\r\n    //   [0, 0, canvas.width, canvas.height],\r\n    //   [0, 0, canvas.width, canvas.height],\r\n    //   BufferMask.DEPTH_BUFFER_BIT,\r\n    //   TextureMagFilter.NEAREST\r\n    // );\r\n\r\n    // WebGLFramebufferUtilities.unbindFramebuffer(gl);\r\n    // WebGLPacketUtilities.drawPacket(gl, depthPacket);\r\n\r\n    WebGLFramebufferUtilities.unbindFramebuffer(gl);\r\n    WebGLPacketUtilities.drawPacket(gl, texPacket);\r\n\r\n    Input.clear();\r\n\r\n    frameRequest = requestAnimationFrame(render);\r\n  }\r\n\r\n  /*const stream = gl.canvas.captureStream(60);\r\n  const rec = new MediaRecorder(stream, {\r\n    mimeType: \"video/webm; codecs=vp9\",\r\n    audioBitsPerSecond: 0,\r\n    videoBitsPerSecond: canvas.width * canvas.height * 24 * 60\r\n  });\r\n\r\n  const chunks: BlobPart[] = [];\r\n  rec.addEventListener(\"dataavailable\", (event) => {\r\n    chunks.push(event.data);\r\n  });\r\n  rec.addEventListener(\"stop\", () => {\r\n    const blob = new Blob(chunks, {type: \"video/webm; codecs=vp9\"});\r\n    const anchor = document.createElement(\"a\");\r\n    anchor.download = \"recorded.webm\";\r\n    anchor.href = URL.createObjectURL(blob);\r\n    anchor.click();\r\n  });\r\n  rec.start();*/\r\n  \r\n  render(0);\r\n  \r\n  // const saveSVG = document.querySelector<SVGSVGElement>(\"svg#save\")!;\r\n  // const getSVGImageData = (svg: SVGSVGElement) => new Promise((resolve: (value: string) => void) => {\r\n  //   const url = URL.createObjectURL(new Blob([svg.outerHTML], {\r\n  //     type: \"image/svg+xml\"\r\n  //   }));\r\n  //   const svgImage = document.createElement(\"img\");\r\n  //   document.body.appendChild(svgImage);\r\n  //   svgImage.onload = () => {\r\n  //     const canvas = document.createElement(\"canvas\");\r\n  //     const ctx = canvas.getContext(\"2d\", {alpha: true})!;\r\n  //     canvas.width = svgImage.clientWidth;\r\n  //     canvas.height = svgImage.clientHeight;\r\n  //     ctx.drawImage(svgImage, 0, 0);\r\n  //     const imgData = canvas.toDataURL(\"image/png\");\r\n  //     resolve(imgData);\r\n  //     URL.revokeObjectURL(url);\r\n  //     svgImage.remove();\r\n  //   };\r\n  //   svgImage.src = url;\r\n  // });\r\n\r\n  // getSVGImageData(saveSVG).then(\r\n  //   (data: string) => {\r\n  //     const img = new Image();\r\n  //     img.src = data;\r\n  //     document.body.append(img);\r\n  //   }\r\n  // )\r\n}","import { Entity } from \"./src/engine/core/general/Entity\";\r\nimport { Scene } from \"./src/engine/core/general/Scene\";\r\nimport { FaceHalfEdgesIterator, FaceVerticesIterator, Vertex, VertexFacesIterator } from \"./src/engine/core/rendering/scenes/geometries/GeometryBuilder\";\r\nimport { QuadGeometry } from \"./src/engine/core/rendering/scenes/geometries/lib/QuadGeometry\";\r\nimport { Matrix3 } from \"./src/engine/libs/maths/algebra/matrices/Matrix3\";\r\nimport { Matrix4 } from \"./src/engine/libs/maths/algebra/matrices/Matrix4\";\r\nimport { Vector2 } from \"./src/engine/libs/maths/algebra/vectors/Vector2\";\r\nimport { Vector3, Vector3Values } from \"./src/engine/libs/maths/algebra/vectors/Vector3\";\r\nimport { Vector4 } from \"./src/engine/libs/maths/algebra/vectors/Vector4\";\r\nimport { GOLDEN_RATIO } from \"./src/engine/libs/maths/geometry/GeometryConstants\";\r\nimport { Triangle } from \"./src/engine/libs/maths/geometry/primitives/Triangle\";\r\nimport { Space } from \"./src/engine/libs/maths/geometry/space/Space\";\r\nimport { buildArrayFromIndexedArrays } from \"./src/engine/utils/Snippets\";\r\nimport { instanced } from \"./src/samples/scenes/Instanced\";\r\nimport { startMaps } from \"./src/samples/scenes/Maps\";\r\nimport { start } from \"./src/samples/scenes/SimpleScene\";\r\nimport { wireframe } from \"./src/samples/scenes/Wireframe\";\r\n/*\r\nfunction windingOrder(v0: Vector3, v1: Vector3, v2: Vector3) {\r\n    const triangle = new Triangle(v0, v1, v2);\r\n    const centroid = triangle.getMidpoint(new Vector3());\r\n    const normal = triangle.getNormal(new Vector3());\r\n    \r\n    const e1 = v1.clone().sub(v0);\r\n    const e2 = e1.clone().cross(normal);\r\n\r\n    e1.normalize();\r\n    e2.normalize();\r\n\r\n    const v0_centered = v0.clone().sub(centroid);\r\n    const v1_centered = v1.clone().sub(centroid);\r\n    const v2_centered = v2.clone().sub(centroid);\r\n\r\n    const v0_t1 = e1.dot(v0_centered);\r\n    const v0_t2 = e2.dot(v0_centered);\r\n\r\n    const v1_t1 = e1.dot(v1_centered);\r\n    const v1_t2 = e2.dot(v1_centered);\r\n\r\n    const v2_t1 = e1.dot(v2_centered);\r\n    const v2_t2 = e2.dot(v2_centered);\r\n\r\n    const det = (v1_t1 - v0_t1) * (v2_t2 - v0_t2) - (v1_t2 - v0_t2) * (v2_t1 - v0_t1);\r\n    console.log(det < 0 ? \"CW\" : \"CCW\");\r\n\r\n    // const v0_out = new Vector2([v0_t1, v0_t2]);\r\n    // const v1_out = new Vector2([v1_t1, v1_t2]);\r\n    // const v2_out = new Vector2([v2_t1, v2_t2]);\r\n    // const v0_angle = Math.atan2(v0_out.y, v0_out.x);\r\n    // const v1_angle = Math.atan2(v1_out.y, v1_out.x);\r\n    // const v2_angle = Math.atan2(v2_out.y, v2_out.x);\r\n    \r\n    // const angles = [v0_angle, v1_angle, v2_angle];\r\n}*/\r\n\r\nexport async function main() {\r\n    //instanced();\r\n    //wireframe();\r\n\r\n    const myWorker = new Worker(\"./worker.js\");\r\n    const sab = new SharedArrayBuffer(1024);\r\n    const array = new Uint32Array(sab);\r\n    myWorker.addEventListener(\"message\", (event) => {\r\n        console.log(`Received back: ${array[10]}`);\r\n    });\r\n\r\n    myWorker.postMessage(sab);\r\n\r\n    start();\r\n\r\n    //startMaps();\r\n\r\n    // const button = document.createElement(\"button\");\r\n    // button.textContent = \"Get bin\";\r\n    // document.body.insertAdjacentElement(\"beforebegin\", button);\r\n    // button.onclick = () => {\r\n    //     const anchor = document.createElement(\"a\");\r\n    //     const myData = new Float32Array([32.20, 1]);\r\n    //     const myBlob = new Blob([myData]);\r\n    //     anchor.download = \"dat.bin\";\r\n    //     anchor.href = URL.createObjectURL(myBlob);\r\n    //     anchor.click();\r\n    // };\r\n    \r\n    // const input = document.createElement(\"input\");\r\n    // input.type = \"file\";\r\n    // input.oninput = () => {\r\n    //     if (input.files) {\r\n    //         Array.from(input.files).forEach((file) => {\r\n    //             file.arrayBuffer().then((arr) => {\r\n    //                 console.log(Array.from(new Float32Array(arr)).map(val => val.toFixed(3)));\r\n    //             });\r\n    //         });\r\n    //     }\r\n    // };\r\n    // document.body.insertAdjacentElement(\"beforebegin\", input);\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Injector","constructor","args","this","_defaultCtor","defaultCtor","_onDefaultOverride","onDefaultOverride","_constructors","Map","overrideDefaultCtor","forceQualifier","qualifier","_forcedQualifier","unforceQualifier","getConstructor","qualifierValue","Error","inject","Array","from","register","has","set","Vector2Base","values","array","Float32Array","x","y","setValues","equals","vec","v","copy","clone","setUnit","setZeros","add","addScalar","k","sub","lerp","t","clamp","min","max","l","g","Math","multScalar","cross","a","b","dot","length","sqrt","lengthSquared","dist","dx","dy","distSquared","normalize","lenSq","len","Number","EPSILON","negate","mult","arg0","Vector2","m","addScaled","writeIntoArray","out","offset","readFromArray","arr","copyAndSub","vecA","vecB","ctor","MathError","name","Vector3Base","toString","join","static","vectorA","vectorB","temp","Vector3","acos","z","vector","to","scale","t0","t1","t2","distance","dz","hypot","distanceSquared","toSpherical","center","thisArray","centerArray","roh","theta","phi","atan2","toCartesian","sin","cos","mat","copyAndCross","iterator","i","next","done","Key","Space","origin","right","left","up","down","forward","backward","KEYS_COUNT","keys","KeyModifier","MouseButton","MOUSE_BUTTONS_COUNT","MOUSE_BUTTONS_INDICES","freeze","reduce","map","button","index","assign","KEYS_INDICES","Input","keyFlags","fill","mouseFlags","pointerPosition","wheelDelta","canvas","canvasRectangle","initialize","getBoundingClientRect","addEventListener","getCanvasRect","rect","clear","handleEvent","event","eventIndex","type","canvasRect","clientX","clientY","top","deltaY","getKey","getKeyUp","getKeyDown","getMouseButton","getPointerPosition","getPointerScreenPosition","positionAray","width","height","getWheelDelta","getMouseButtonDown","getMouseButtonUp","PoolAutoExtendPolicy","StackPool","policy","_ctor","_autoExtendPolicy","AUTO_EXTEND_ONE","_autoExtendTicks","autoExtendPolicy","autoExtend","extend","AUTO_EXTEND_POW2","pow","options","super","_objects","size","_top","acquire","count","target","slice","release","console","warn","push","PI","_bytes","ArrayBuffer","BYTES_PER_ELEMENT","_floatView","_intView","Uint32Array","Matrix3Base","checkArray","row1","row","row2","row3","col1","col","col2","col3","m11","val","m12","m13","m21","m22","m23","m31","m32","m33","getValues","other","setIdentity","det","trace","transpose","invert","t11","t12","t13","t21","t22","t23","t31","t32","t33","d","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","angle","setRotationX","cosAngle","sinAngle","setRotationY","setRotationZ","solve","bx","by","bz","rx","ry","rz","solve2","Matrix3","QuaternionBase","_array","_checkArray","w","pitch","sinPitch","abs","sign","asin","yaw","sinYawCosPitch","cosYawCosPitch","roll","sinRollCosPitch","cosRollCosPitch","axis","setAxisAngle","setEuler","quat","q","quatArray","getAxis","outArray","den","halfx","qSqrt","getMatrix3","matrix","s","xs","ys","zs","wx","wy","wz","xx","xy","xz","yy","yz","zz","getMatrix4","rotate","vectorArray","vx","vy","vz","qx","qy","qz","qw","tx","ty","tz","tw","toVector","cosYaw","sinYaw","cosPitch","cosRoll","sinRoll","axisLength","halfSin","axisArray","setMatrix","matrixArray","lookAt","source","dest","Quaternion","setVectors","crossArray","fromLength","toLength","angleTo","rotation","rotateTowards","slerp","conjugate","ax","ay","az","aw","bw","scalar","fromArray","toArray","cosHalfTheta","halfTheta","sinHalfTheta","trunc","ratioA","ratioB","copyIntoArray","Matrix4Base","m41","m42","m43","m14","m24","m34","m44","getRotation","setTRS","translation","scaling","rotationArray","translationArray","scalingArray","x2","y2","z2","sx","sy","sz","setRotation","quaternion","quaternionArray","matArray","det2_01_01","det2_01_02","det2_01_03","det2_01_12","det2_01_13","det2_01_23","det3_201_012","det3_201_013","det3_201_023","A","a41","a42","a43","a14","a24","a34","a44","o00","o01","o02","o03","o10","o11","o12","o13","o20","o21","o22","o23","o30","o31","o32","o33","t00","t01","t02","t03","t04","t05","t06","t07","t08","t09","t10","invDet","B","b41","b42","b43","b14","b24","b34","b44","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","bX","bY","bZ","bW","solve3","setTranslation","vecArray","translate","t3","t4","rotateX","t5","t6","t7","t8","rotateY","sinAngles","rotateZ","c","C","t9","setScaling","eye","eyeArray","upArray","targetArray","e0","e1","e2","u0","u1","u2","x0","x1","y0","y1","z0","z1","transformPoint","point","pointArray","transformDirection","direction","directionArray","transformNormal","normal","normalArray","thisInvArray","fov","aspect","zNear","zFar","setPerspective","tan","rangeInv","bottom","near","far","setOrthographic","setFrustrum","invWidth","invHeight","invDepth","Matrix4","Vector3Pool","_buffer","_bufferViews","subarray","_extensions","UUIDGenerator","_count","newUUID","TransformBase","owner","uuid","localArray","localMatrix","_hasChanged","getMatrix","getLocalMatrix","thisLocalArray","setLocalMatrix","getRight","getLeft","getUp","getDown","getForward","getBackward","hasChanged","getTranslation","getScaling","transformVector","thisPosition","Transform","PlaneBase","constant","_normal","_constant","setFromNormalAndConstant","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","plane","point1","point2","point3","distanceToPoint","normalized","inverseNormalLength","Plane","FrustrumBase","nearPlane","farPlane","topPlane","bottomPlane","leftPlane","rightPlane","frustrum","setFromPerspectiveMatrix","intersectsSphere","sphere","radius","intersectsBox","box","intersects","boxMax","boxMin","containsPoint","BufferDataUsage","BufferTarget","ShaderType","DrawMode","DataComponentType","AttributeDataType","ElementArrayDataType","Frustrum","PerspectiveCamera","transform","projection","_projection","_frustrum","getFront","view","viewProjection","isViewing","mesh","updateFrustrum","perspective","WebGLProgramUtilities","gl","shader","createShader","error","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","internal","shaderInfoLog","getShaderInfoLog","deleteShader","isShader","properties","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","programInfoLog","getProgramInfoLog","vsInfoLog","fsInfoLog","deleteProgram","isProgram","getParameter","CURRENT_PROGRAM","useProgram","WebGLVertexArrayUtilities","VEC2","VEC3","VEC4","FLOAT","BYTE","UNSIGNED_BYTE","Uint8Array","SHORT","Int16Array","UNSIGNED_SHORT","Uint16Array","INT","Int32Array","UNSIGNED_INT","Int8Array","vertexArray","attributes","indices","elementsCount","interleave","usage","createVertexArray","bindVertexArray","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","attributesEntries","entries","attributesCount","MAX_VERTEX_ATTRIBS","byteLength","_","attribute","data","STATIC_DRAW","verticesBuffer","byteStride","stride","getAttributeDataTypeElementsSize","bufferSlices","byteOffset","attributeSetters","indicesBuffer","indexType","forEach","attributeName","divisor","location","getAttribLocation","componentType","getAttributeArrayDataComponentType","elementsSize","vertexAttribPointer","vertexAttribDivisor","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","bufferArrayConstructor","getDataComponentTypeArrayConstructor","bufferArray","arrayStrideOffset","arraySliceIndex","enableVertexAttribArray","bufferData","getElementArrayBufferType","ELEMENT_ARRAY_BUFFER","isVertexArray","deleteVertexArray","mode","instanceCount","VERTEX_ARRAY_BINDING","drawElementsInstanced","drawElements","drawArraysInstanced","drawArrays","attributeSetter","ARRAY_BUFFER_BINDING","srcOffset","srcLength","bufferSubData","setVertexArrayAttributeValue","ELEMENT_ARRAY_BUFFER_BINDING","GeometryPropertyKeys","corners","FramebufferStatus","FramebufferTextureTarget","FramebufferAttachment","RenderbufferPixelFormat","BoundingBox","boxes","positiveInfinity","POSITIVE_INFINITY","negativeInfinity","NEGATIVE_INFINITY","minX","minY","minZ","maxX","maxY","maxZ","box_i","boxMinX","boxMinY","boxMinZ","boxMaxX","boxMaxZ","boxMaxY","hits","otherMin","otherMax","otherMinX","otherMinY","otherMinZ","otherMaxX","otherMaxY","otherMaxZ","corner_i","GeometryBuilder","halfEdges","vertices","faces","addTriangleFace","v0","v1","v2","addFace","addQuadFace","v3","addVertex","position","vertex","halfEdge","face","firstHalfEdge","previousHalfEdge","existingHalfEdge","VertexFacesIterator","find","FaceHalfEdgesIterator","prev","twin","twinHalfEdge","linesArray","flatMap","faceVertices","FaceVerticesIterator","verticesArray","tangentsArray","faceUvs","uv","p0","p1","p2","uv0","uv1","uv2","edge1","p1_i","edge2","deltaUV1","uv1_i","deltaUV2","f","tangent","edge1_i","tangent_i","verticesNormalsArray","components","ni","pi","normal_i","uvsArray","flat","indicesArray","verticesCount","concat","boundingBox","vertex_i","reset","current","nextHalfEdge","firstVertex","CubeGeometry","depth","widthSegments","heightSegments","depthSegments","toBuilder","builder","floor","uvs","u","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","iy","ix","indicesCount","vi1","vi2","vi3","ui1","ui2","ui3","undefined","uv3","QuadGeometry","WebGLFramebufferUtilities","framebuffer","createFramebuffer","props","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","samples","renderbufferStorageMultisample","internalFormat","renderbufferStorage","FRAMEBUFFER_BINDING","bindFramebuffer","FRAMEBUFFER","attachments","framebufferTexture2D","attachment","textureTarget","texture","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","framebufferRenderbuffer","readFramebuffer","drawFramebuffer","readRectangle","drawRectangle","mask","filter","READ_FRAMEBUFFER_BINDING","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER_BINDING","DRAW_FRAMEBUFFER","blitFramebuffer","format","pixels","readPixels","isFramebuffer","deleteFramebuffer","isRenderbuffer","deleteRenderbuffer","TexturePixelFormat","TextureInternalPixelFormat","TexturePixelType","TextureParameter","TextureTarget","TextureMagFilter","TextureMinFilter","TextureCompareMode","TextureWrapMode","TextureCompareFunction","UniformType","UniformDataType","WebGLTextureUtilities","createTexture","unit","subimages","lod","border","ACTIVE_TEXTURE","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texImage2D","subimage_i","xoffset","yoffset","texSubImage2D","TEXTURE_CUBE_MAP","xPos","xNeg","yPos","yNeg","zPos","zNeg","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_2D_ARRAY","texImage3D","zoffset","texSubImage3D","generateMipmap","mag","wrapS","wrapT","wrapR","baseMipmapLevel","maxMipmapLevel","compareFunction","compareMode","minLod","maxLod","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","texParameterf","TEXTURE_MIN_LOD","TEXTURE_MAX_LOD","alignment","pixelStorei","UNPACK_ALIGNMENT","isTexture","deleteTexture","delete","WebGLUniformUtilities","uniformValue","of","uniform","uniformType","num","uniform1f","uniform1ui","BOOL","uniform1i","INT_SAMPLER_2D","INT_SAMPLER_2D_ARRAY","INT_SAMPLER_3D","INT_SAMPLER_CUBE","SAMPLER_2D","SAMPLER_3D","SAMPLER_CUBE","SAMPLER_2D_SHADOW","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","tex","FLOAT_VEC2","isArray","list","uniform2fv","BOOL_VEC2","INT_VEC2","uniform2iv","UNSIGNED_INT_VEC2","uniform2uiv","FLOAT_VEC3","uniform3fv","BOOL_VEC3","INT_VEC3","uniform3iv","UNSIGNED_INT_VEC3","uniform3uiv","FLOAT_VEC4","uniform4fv","BOOL_VEC4","INT_VEC4","uniform4iv","UNSIGNED_INT_VEC4","uniform4uiv","FLOAT_MAT2","uniformMatrix2fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","FLOAT_MAT2x3","uniformMatrix2x3fv","FLOAT_MAT2x4","uniformMatrix2x4fv","FLOAT_MAT3x2","uniformMatrix3x2fv","FLOAT_MAT3x4","uniformMatrix3x4fv","FLOAT_MAT4x2","uniformMatrix4x2fv","FLOAT_MAT4x3","uniformMatrix4x3fv","uniformsNames","uniformIndices","getUniformIndices","activeUniforms","ACTIVE_UNIFORMS","validUniformIndices","index_i","isValid","setters","getActiveUniform","getUniformLocation","setter","getUniformSetter","StencilAction","BufferMask","TestFunction","BlendingMode","BlendingEquation","Capabilities","Face","WindingOrder","HintTarget","HintMode","WebGLUniformBlockUtilities","bindingPoint","blockIndex","getUniformBlockIndex","INVALID_INDEX","uniformBlockBinding","blockSize","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","layout","blockUniformsIndices","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","getActiveUniforms","UNIFORM_OFFSET","uniformOffset_i","uniformIndex","uniformInfo","UNIFORM_BUFFER","DYNAMIC_DRAW","blocks","offsetAlignment","UNIFORM_BUFFER_OFFSET_ALIGNMENT","bufferByteLength","block","ceil","MAX_UNIFORM_BLOCK_SIZE","createUniformBuffer","rangedUniformBuffers","rangeOffset","rangeSize","uniforms","UNIFORM_BUFFER_BINDING","uniformName","asArrayBufferView","bindBufferRange","bindBufferBase","WebGLPacketUtilities","textures","_textures","uniformBlocks","_uniformBlocks","blockName","uniformBlock","createUniformBlock","packet","vertexArrayProperties","uniformsProperties","uniformBlocksProperties","texturesProperties","drawMode","TRIANGLES","uniformsSetter","setUniformsListValues","bufferProperties","bindUniformBuffer","setUniformBufferValues","vertexArrayValues","uniformsValues","uniformBlocksValues","setVertexArrayValues","uniformBlock_i","drawVertexArray","WebGLRendererUtilities","hint","winding","frontFace","scissor","viewport","color","clearColor","func","depthFunc","equ","blendEquation","srcFunc","dstFunc","blendFunc","ref","stencilFuncSeparate","fail","zFail","zPass","stencilOpSeparate","stencilMaskSeparate","red","green","blue","alpha","colorMask","capability","enable","disable","VIEWPORT","MAX_SAMPLES","ColorBase","r","colors","valuesNormalized","BLACK","rgb","RED","GREEN","BLUE","WHITE","Color","async","start","template","document","createElement","innerHTML","body","insertBefore","content","firstChild","frameRequest","render","fps","paused","playPause","getElementById","onclick","textContent","fpsElement","canvasWidth","canvasHeight","style","getContext","setUnpackAlignment","phongVert","fetch","then","resp","text","phongFrag","phongProgram","skyboxVert","skyboxFrag","skyboxProgram","textureVert","textureFrag","texProgram","basicVert","basicFrag","basicProgram","depthVert","depthFrag","depthProgram","linesVertex","linesFragment","linesProgram","fetchImage","url","ok","Promise","resolve","img","Image","onload","src","albedoMapImg","normalMapImg","displacementMapImg","skyboxXPosImg","skyboxXNegImg","skyboxYPosImg","skyboxYNegImg","skyboxZPosImg","skyboxZNegImg","createTextures","albedoMap","RGB","NEAREST","normalMap","RGB8","LINEAR_MIPMAP_LINEAR","LINEAR","displacementMap","RGBA","RGBA8","skybox","fbColorTex","CLAMP_TO_EDGE","depthTex","DEPTH_COMPONENT","DEPTH_COMPONENT24","phongUniformBlocks","createUniformBlocks","basicUniformBlocks","linesUniformBlocks","phongPacketBuffers","createRangedUniformBuffers","cubeGeometryBuilder","quadGeometryBuilder","cube","camera","lightTransform","viewDirectionProjectionInverse","cubeVertices","cubeIndices","cubeNormals","cubeUVs","cubeTangents","cubeLines","cubeGeometryBuffer","interleaved","attributesBuffers","bufferStride","getAttribute","attributeArrayConstructor","numComponents","attributeArray","bufferArraySliceIndex","a_position","a_normal","a_tangent","a_uv","phongCubePacketProperties","viewBlock","u_view","u_projection","modelBlock","lightsBlock","phongBlock","u_ambientColor","u_diffuseColor","u_specularColor","u_ambientFactor","u_diffuseFactor","u_specularFactor","u_shininess","u_constant","u_linear","u_quadratic","u_albedoMap","u_normalMap","u_displacementMap","linesProperties","u_color","LINES","basicPacketProperties","basicModelBlock","u_model","quadIndices","quadVertices","quadUVs","quadWorld","skyboxPacketProperties","u_world","u_viewDirectionProjectionInverse","u_skybox","depthPacketProperties","u_tex","texPacketProperties","linesPacket","createPacket","phongCubePacket","basicPacket","skyboxPacket","texPacket","maxSamples","getMaxSamples","attachRenderbuffer","DEPTH_ATTACHMENT","COLOR_ATTACHMENT0","postFramebuffer","attachTexture","DEPTH_TEST","CULL_FACE","lastFrameTime","deltaTime","fromAxisAngle","unbindFramebuffer","cameraControl","params","rotationSpeed","translationSpeed","update","cameraTransform","cameraPosition","cameraForward","cameraForwardArray","lastPointerPosition","cameraUpSign","Z","ARROW_UP","Q","ARROW_LEFT","S","ARROW_DOWN","D","ARROW_RIGHT","RIGHT","newPointerPosition","newTheta","frameTime","toFixed","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","depthFunction","LESS","setPacketValues","drawPacket","LEQUAL","blit","requestAnimationFrame","launchScene","e","main","myWorker","Worker","sab","SharedArrayBuffer","log","postMessage"],"sourceRoot":""}