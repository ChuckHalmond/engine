@font-face {	
	font-family: 'Roboto';
	src: url('../assets/editor/fonts/Roboto_Mono/RobotoMono-VariableFont_wght.ttf') format('truetype');
}


:root {
    --padding: 4px;
    --margin: 4px;
}

* {
    box-sizing: border-box;
}

html, body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
}

body {
    font-family: "Roboto";
    font-size: 16px;
}

input,
select {
    font: unset;
}

#root,
main {
    height: 100%;
}

header:empty,
footer:empty {
    display: none;
}

input[type="checkbox"],
input[type="radio"],
e-menuitem[type="checkbox"]::part(input),
e-menuitem[type="radio"]::part(input) {
    width: 16px;
    height: 16px;
}

e-tab::after {
    content: " ";
    display: inline-block;
    height: 24px;
    width: 24px;
    background-color: dimgray;
}

e-tab:hover::after,
e-tab[active]::after {
    background-color: rgb(52, 52, 52);
}

e-tab[name="extract"]::after {
    -webkit-mask-image: url("../assets/editor/icons/iconmonstr-database-1.svg");
    mask-image: url("../assets/editor/icons/iconmonstr-database-1.svg");
}

e-tab[name="transform"]::after {
    -webkit-mask-image: url("../assets/editor/icons/iconmonstr-gear-3.svg");
    mask-image: url("../assets/editor/icons/iconmonstr-gear-3.svg");
}

e-tab[name="export"]::after {
    -webkit-mask-image: url("../assets/editor/icons/iconmonstr-check-mark-13.svg");
    mask-image: url("../assets/editor/icons/iconmonstr-check-mark-13.svg");
}

button {
    cursor: pointer;
}

summary {
    position: relative;
    list-style: none;
    user-select: none;
    background-color: gainsboro;
    cursor: pointer;
}

summary::before {
    position: relative;
    content: "►";
    width: 16px;
    height: 16px;
    padding-right: 8px;
    color: dimgray;
    display: inline-block;
}

details[open] > summary::before {
    content: "▼";
}

details.indented {
    margin-left: 8px;
}

fieldset {
    border: none;
    padding: 0;
    margin: 0;
}

fieldset *:not(e-draggable) > e-dropzone:empty {
    min-width: 120px;
}

input[type="radio"]:not(:checked) + * {
    opacity: 0.25;
}

input::placeholder {
    color: inherit;
}
  

#data-col {
    display: flex;
    flex-direction: column;
    overflow-y: auto;
}

#data-col summary {
    margin-top: 4px;
}

e-dragzone *:not(e-draggable) {
    pointer-events: none;
}

e-dropzone e-draggable {
    cursor: pointer !important;
}

e-draggable input {
    border: none;
}

.flex-rows {
    display: flex;
    flex-flow: column nowrap;
}

.flex-cols {
    display: flex;
    flex-flow: row nowrap;
}

.flex-none {
    flex: none;
}

.flex-auto {
    flex: auto;
}

.padded {
    padding: var(--padding);
}

.padded-horizontal {
    padding-left: var(--padding);
    padding-right: var(--padding);
}

.padded-vertical {
    padding-top: var(--padding);
    padding-bottom: var(--padding);
}

.padded-top { padding-top: var(--padded); }
.padded-bottom { padding-bottom: var(--padded); }
.padded-left { padding-left: var(--padded); }
.padded-right { padding-right: var(--padded); }

.margin {
    margin: var(--margin);
}

.margin-horizontal {
    margin-left: var(--margin);
    margin-right: var(--margin);
}

.margin-horizontal {
    margin-left: var(--margin);
    margin-right: var(--margin);
}

.margin-vertical {
    margin-top: var(--margin);
    margin-bottom: var(--margin);
}

.margin-top { margin-top: var(--margin); }
.margin-bottom { margin-bottom: var(--margin); }
.margin-left { margin-left: var(--margin); }
.margin-right { margin-right: var(--margin); }

[hidden] {
    display: none !important;
}

.grid-fieldset {
    display: grid;
    grid-template-columns: 120px max-content;
    grid-gap: 4px;
}

.grid-fieldset > :nth-child(odd) {
    grid-column: 1 / 2;
}

.grid-fieldset > :nth-child(even) {
    grid-column: 2 / 3;
}

.grid-field {
    display: grid;
    grid-template-columns: max-content;
    grid-gap: 4px;
}

.grid-field > :nth-child(odd) {
    grid-column: 1 / 2;
}

.grid-field > :nth-child(even) {
    grid-column: 2 / 3;
}

.flex-field {
    display: flex;
}

.flex-field > * {
    flex: 1;
}

.flex-none {
    flex: none;
}

.flex-field > *:not(:first-child) {
    margin-left: 2px;
}

.flex-field > *:not(:last-child) {
    margin-right: 2px;
}

#doc-col .params {
    display: grid;
    grid-template-columns: 120px max-content;
    grid-gap: 4px;
}

.borded {
    border: 2px solid gray;
    border-radius: 4px;
}