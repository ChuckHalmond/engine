import { crashIfNull } from "engine/utils/Snippets";

const gl = crashIfNull(document.createElement('canvas').getContext('webgl2'));

export { BlendingMode };
export { BlendingEquation };
export { BufferDataUsage };
export { BufferMask };
export { BufferMaskBit };
export { BufferBindingPoint };
export { BufferIndexType };
export { BufferInterpolation };
export { BufferTarget };
export { Capabilities };
export { CullFaceMode };
export { DrawMode };
export { DataType };
export { Error };
export { FramebufferAttachment };
export { FramebufferAttachmentParameter };
export { FramebufferTarget };
export { FramebufferTextureTarget };
export { FrontFace };
export { HintTarget };
export { HintMode };
export { Parameter };
export { PixelFormat };
export { PixelStorageMode };
export { PixelType };
export { RenderbufferTarget };
export { Shader };
export { ShaderType };
export { ShaderPrecision };
export { StencilAction };
export { TestFunction };
export { TextureUnits };
export { TextureParameter };
export { TextureTarget };
export { TextureMagFilter };
export { TextureMinFilter };
export { TextureWrapMode };
export { UniformQuery };
export { UniformType };
export { VertexAttribute };

enum BlendingMode {
    ZERO = gl.ZERO,
    ONE = gl.ONE,
    SRC_COLOR = gl.SRC_COLOR,
    ONE_MINUS_SRC_COLOR = gl.ONE_MINUS_SRC_COLOR,
    DST_COLOR = gl.DST_COLOR,
    ONE_MINUS_DST_COLOR = gl.ONE_MINUS_DST_COLOR,
    SRC_ALPHA = gl.SRC_ALPHA,
    ONE_MINUS_SRC_ALPHA = gl.ONE_MINUS_SRC_ALPHA,
    ONE_MINUS_DST_ALPHA = gl.ONE_MINUS_DST_ALPHA,
    CONSTANT_COLOR = gl.CONSTANT_COLOR,
    ONE_MINUS_CONSTANT_COLOR = gl.ONE_MINUS_CONSTANT_COLOR,
    CONSTANT_ALPHA = gl.CONSTANT_ALPHA,
    ONE_MINUS_CONSTANT_ALPHA = gl.ONE_MINUS_CONSTANT_ALPHA,
    SRC_ALPHA_SATURATE = gl.SRC_ALPHA_SATURATE
}

enum BlendingEquation {
    FUNC_ADD = gl.FUNC_ADD,
    FUNC_SUBTRACT = gl.FUNC_SUBTRACT,
    FUNC_REVERSE_SUBTRACT = gl.FUNC_REVERSE_SUBTRACT,
    MIN = gl.MIN,
    MAX = gl.MAX
}

enum BufferMaskBit {
    DEPTH_BUFFER_BIT = gl.DEPTH_BUFFER_BIT,
    STENCIL_BUFFER_BIT = gl.STENCIL_BUFFER_BIT,
    COLOR_BUFFER_BIT = gl.COLOR_BUFFER_BIT
}

enum BufferMask {
    DEPTH = gl.DEPTH,
    STENCIL = gl.STENCIL,
    COLOR = gl.COLOR,
    DEPTH_STENCIL = gl.DEPTH_STENCIL
}

enum BufferDataUsage {
    STATIC_DRAW = gl.STATIC_DRAW,
    DYNAMIC_DRAW = gl.DYNAMIC_DRAW,
    STREAM_DRAW = gl.STREAM_DRAW,
    STATIC_READ = gl.STATIC_READ,
    DYNAMIC_READ = gl.DYNAMIC_READ,
    STREAM_READ = gl.STREAM_READ,
    STATIC_COPY = gl.STATIC_COPY,
    DYNAMIC_COPY = gl.DYNAMIC_COPY,
    STREAM_COPY = gl.STREAM_COPY
}

enum BufferBindingPoint {
    ARRAY_BUFFER = gl.ARRAY_BUFFER,
    ELEMENT_ARRAY_BUFFER = gl.ELEMENT_ARRAY_BUFFER,
    COPY_READ_BUFFER = gl.COPY_READ_BUFFER,
    COPY_WRITE_BUFFER = gl.COPY_WRITE_BUFFER,
    TRANSFORM_FEEDBACK_BUFFER = gl.TRANSFORM_FEEDBACK_BUFFER,
    UNIFORM_BUFFER = gl.UNIFORM_BUFFER,
    PIXEL_PACK_BUFFER = gl.PIXEL_PACK_BUFFER,
    PIXEL_UNPACK_BUFFER = gl.PIXEL_UNPACK_BUFFER
}

enum BufferIndexType {
    UNSIGNED_BYTE = gl.UNSIGNED_BYTE,
    UNSIGNED_SHORT = gl.UNSIGNED_SHORT,
    UNSIGNED_INT = gl.UNSIGNED_INT,
}

enum BufferInterpolation {
    LINEAR = gl.LINEAR,
    NEAREST = gl.NEAREST
}

enum BufferTarget {
    ARRAY_BUFFER = gl.ARRAY_BUFFER,
    ELEMENT_ARRAY_BUFFER = gl.ELEMENT_ARRAY_BUFFER,
    COPY_READ_BUFFER = gl.COPY_READ_BUFFER,
    COPY_WRITE_BUFFER = gl.COPY_WRITE_BUFFER,
    TRANSFORM_FEEDBACK_BUFFER = gl.TRANSFORM_FEEDBACK_BUFFER,
    UNIFORM_BUFFER = gl.UNIFORM_BUFFER,
    PIXEL_PACK_BUFFER = gl.PIXEL_PACK_BUFFER,
    PIXEL_UNPACK_BUFFER = gl.PIXEL_UNPACK_BUFFER
}

enum Capabilities {
    BLEND = gl.BLEND,
    CULL_FACE = gl.CULL_FACE,
    DEPTH_TEST = gl.DEPTH_TEST,
    DITHER = gl.DITHER,
    POLYGON_OFFSET_FILL = gl.POLYGON_OFFSET_FILL,
    SAMPLE_ALPHA_TO_COVERAGE = gl.SAMPLE_ALPHA_TO_COVERAGE,
    SAMPLE_COVERAGE = gl.SAMPLE_COVERAGE,
    SCISSOR_TEST = gl.SCISSOR_TEST,
    STENCIL_TEST= gl.STENCIL_TEST,
    RASTERIZER_DISCARD = gl.RASTERIZER_DISCARD
}

enum CullFaceMode {
    FRONT = gl.FRONT,
    BACK = gl.BACK,
    FRONT_AND_BACK = gl.FRONT_AND_BACK
}

enum DrawMode {
    POINTS = gl.POINTS,
    LINE_STRIP = gl.LINE_STRIP,
    LINE_LOOP = gl.LINE_LOOP,
    LINES = gl.LINES,
    TRIANGLE_STRIP = gl.TRIANGLE_STRIP,
    TRIANGLE_FAN = gl.TRIANGLE_FAN,
    TRIANGLES = gl.TRIANGLES 
}

enum DataType {
    BYTE = gl.BYTE,
    SHORT = gl.SHORT,
    UNSIGNED_BYTE = gl.UNSIGNED_BYTE,
    UNSIGNED_SHORT = gl.UNSIGNED_SHORT,
    FLOAT = gl.FLOAT,
    HALF_FLOAT = gl.HALF_FLOAT 
}

enum Error {
    NO_ERROR = gl.NO_ERROR,
    INVALID_ENUM = gl.INVALID_ENUM,
    INVALID_OPERATION = gl.INVALID_OPERATION,
    OUT_OF_MEMORY = gl.OUT_OF_MEMORY,
    CONTEXT_LOST_WEBGL = gl.CONTEXT_LOST_WEBGL
}

enum FramebufferAttachment {
    COLOR_ATTACHMENT0 = gl.COLOR_ATTACHMENT0,
    COLOR_ATTACHMENT1 = gl.COLOR_ATTACHMENT1,
    COLOR_ATTACHMENT2 = gl.COLOR_ATTACHMENT2,
    COLOR_ATTACHMENT3 = gl.COLOR_ATTACHMENT3,
    COLOR_ATTACHMENT4 = gl.COLOR_ATTACHMENT4,
    COLOR_ATTACHMENT5 = gl.COLOR_ATTACHMENT5,
    COLOR_ATTACHMENT6 = gl.COLOR_ATTACHMENT6,
    COLOR_ATTACHMENT7 = gl.COLOR_ATTACHMENT7,
    COLOR_ATTACHMENT8 = gl.COLOR_ATTACHMENT8,
    COLOR_ATTACHMENT9 = gl.COLOR_ATTACHMENT9,
    COLOR_ATTACHMENT10 = gl.COLOR_ATTACHMENT10,
    COLOR_ATTACHMENT11 = gl.COLOR_ATTACHMENT11,
    COLOR_ATTACHMENT12 = gl.COLOR_ATTACHMENT12,
    COLOR_ATTACHMENT13 = gl.COLOR_ATTACHMENT13,
    COLOR_ATTACHMENT14 = gl.COLOR_ATTACHMENT14,
    COLOR_ATTACHMENT15 = gl.COLOR_ATTACHMENT15,
    DEPTH_ATTACHMENT = gl.DEPTH_ATTACHMENT,
    STENCIL_ATTACHMENT = gl.STENCIL_ATTACHMENT,
    DEPTH_STENCIL_ATTACHMENT = gl.DEPTH_STENCIL_ATTACHMENT,
}

enum FramebufferAttachmentParameter {
    FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,
    FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,
    FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,
    FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,
    FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = gl.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE,
    FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = gl.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE,
    FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = gl.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING,
    FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = gl.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE,
    FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = gl.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE,
    FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = gl.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE,
    FRAMEBUFFER_ATTACHMENT_RED_SIZE = gl.FRAMEBUFFER_ATTACHMENT_RED_SIZE,
    FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = gl.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE,
    FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
}

enum FramebufferTarget {
    FRAMEBUFFER = gl.FRAMEBUFFER,
    DRAW_FRAMEBUFFER = gl.DRAW_FRAMEBUFFER,
    READ_FRAMEBUFFER = gl.READ_FRAMEBUFFER
}

enum FramebufferTextureTarget {
    TEXTURE_2D = gl.TEXTURE_2D,
    TEXTURE_CUBE_MAP_POSITIVE_X = gl.TEXTURE_CUBE_MAP_POSITIVE_X,
    TEXTURE_CUBE_MAP_NEGATIVE_X = gl.TEXTURE_CUBE_MAP_NEGATIVE_X,
    TEXTURE_CUBE_MAP_POSITIVE_Y = gl.TEXTURE_CUBE_MAP_POSITIVE_Y,
    TEXTURE_CUBE_MAP_NEGATIVE_Y = gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,
    TEXTURE_CUBE_MAP_POSITIVE_Z = gl.TEXTURE_CUBE_MAP_POSITIVE_Z,
    TEXTURE_CUBE_MAP_NEGATIVE_Z = gl.TEXTURE_CUBE_MAP_NEGATIVE_Z
}

enum FrontFace {
    CW = gl.CW,
    CCW = gl.CCW
}

enum HintTarget {
    GENERATE_MIPMAP_HINT = gl.GENERATE_MIPMAP_HINT,
    FRAGMENT_SHADER_DERIVATIVE_HINT = gl.FRAGMENT_SHADER_DERIVATIVE_HINT
}

enum HintMode {
    FASTEST = gl.FASTEST,
    NICEST = gl.NICEST,
    DONT_CARE = gl.DONT_CARE
}

enum Parameter {
    ACTIVE_TEXTURE = gl.ACTIVE_TEXTURE,	
    ALIASED_LINE_WIDTH_RANGE = gl.ALIASED_LINE_WIDTH_RANGE,
    ALIASED_POINT_SIZE_RANGE = gl.ALIASED_POINT_SIZE_RANGE,
    ALPHA_BITS = gl.ALPHA_BITS,
    ARRAY_BUFFER_BINDING = gl.ARRAY_BUFFER_BINDING,
    BLEND = gl.BLEND,
    BLEND_COLOR = gl.BLEND_COLOR,
    BLEND_DST_ALPHA = gl.BLEND_DST_ALPHA,
    BLEND_DST_RGB = gl.BLEND_DST_RGB,
    BLEND_EQUATION = gl.BLEND_EQUATION,
    BLEND_EQUATION_ALPHA = gl.BLEND_EQUATION_ALPHA,
    BLEND_EQUATION_RGB = gl.BLEND_EQUATION_RGB,
    BLEND_SRC_ALPHA = gl.BLEND_SRC_ALPHA,
    BLEND_SRC_RGB = gl.BLEND_SRC_RGB,
    BLUE_BITS = gl.BLUE_BITS,
    COLOR_CLEAR_VALUE = gl.COLOR_CLEAR_VALUE,
    COLOR_WRITEMASK = gl.COLOR_WRITEMASK,
    COMPRESSED_TEXTURE_FORMATS = gl.COMPRESSED_TEXTURE_FORMATS,
    CULL_FACE = gl.CULL_FACE,
    CULL_FACE_MODE = gl.CULL_FACE_MODE,
    CURRENT_PROGRAM = gl.CURRENT_PROGRAM,
    DEPTH_BITS = gl.DEPTH_BITS,
    DEPTH_CLEAR_VALUE = gl.DEPTH_CLEAR_VALUE,
    DEPTH_FUNC = gl.DEPTH_FUNC,
    DEPTH_RANGE = gl.DEPTH_RANGE,
    DEPTH_TEST = gl.DEPTH_TEST,
    DEPTH_WRITEMASK = gl.DEPTH_WRITEMASK,
    DITHER = gl.DITHER,
    ELEMENT_ARRAY_BUFFER_BINDING = gl.ELEMENT_ARRAY_BUFFER_BINDING,
    FRAMEBUFFER_BINDING = gl.FRAMEBUFFER_BINDING,
    FRONT_FACE = gl.FRONT_FACE,
    GENERATE_MIPMAP_HINT = gl.GENERATE_MIPMAP_HINT,
    GREEN_BITS = gl.GREEN_BITS,	
    IMPLEMENTATION_COLOR_READ_FORMAT = gl.IMPLEMENTATION_COLOR_READ_FORMAT,	
    IMPLEMENTATION_COLOR_READ_TYPE = gl.IMPLEMENTATION_COLOR_READ_TYPE,	
    LINE_WIDTH = gl.LINE_WIDTH,
    MAX_COMBINED_TEXTURE_IMAGE_UNITS = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS,	
    MAX_CUBE_MAP_TEXTURE_SIZE = gl.MAX_CUBE_MAP_TEXTURE_SIZE,
    MAX_FRAGMENT_UNIFORM_VECTORS = gl.MAX_FRAGMENT_UNIFORM_VECTORS,	
    MAX_RENDERBUFFER_SIZE = gl.MAX_RENDERBUFFER_SIZE,	
    MAX_TEXTURE_IMAGE_UNITS = gl.MAX_TEXTURE_IMAGE_UNITS,
    MAX_TEXTURE_SIZE = gl.MAX_TEXTURE_SIZE,
    MAX_VARYING_VECTORS = gl.MAX_VARYING_VECTORS,	
    MAX_VERTEX_ATTRIBS = gl.MAX_VERTEX_ATTRIBS,
    MAX_VERTEX_UNIFORM_VECTORS = gl.MAX_VERTEX_UNIFORM_VECTORS,
    MAX_VIEWPORT_DIMS = gl.MAX_VIEWPORT_DIMS,	
    PACK_ALIGNMENT = gl.PACK_ALIGNMENT,
    POLYGON_OFFSET_FACTOR = gl.POLYGON_OFFSET_FACTOR,
    POLYGON_OFFSET_FILL = gl.POLYGON_OFFSET_FILL,	
    POLYGON_OFFSET_UNITS = gl.POLYGON_OFFSET_UNITS,	
    RED_BITS = gl.RED_BITS,
    RENDERBUFFER_BINDING = gl.RENDERBUFFER_BINDING,
    RENDERER = gl.RENDERER,
    SAMPLE_BUFFERS = gl.SAMPLE_BUFFERS,	
    SAMPLE_COVERAGE_INVERT = gl.SAMPLE_COVERAGE_INVERT,
    SAMPLE_COVERAGE_VALUE = gl.SAMPLE_COVERAGE_VALUE,
    SAMPLES = gl.SAMPLES,
    SCISSOR_BOX = gl.SCISSOR_BOX,
    SCISSOR_TEST = gl.SCISSOR_TEST,
    SHADING_LANGUAGE_VERSION = gl.SHADING_LANGUAGE_VERSION,	
    STENCIL_BACK_FAIL = gl.STENCIL_BACK_FAIL,	
    STENCIL_BACK_FUNC = gl.STENCIL_BACK_FUNC,
    STENCIL_BACK_PASS_DEPTH_FAIL = gl.STENCIL_BACK_PASS_DEPTH_FAIL,	
    STENCIL_BACK_PASS_DEPTH_PASS = gl.STENCIL_BACK_PASS_DEPTH_PASS,	
    STENCIL_BACK_REF = gl.STENCIL_BACK_REF,
    STENCIL_BACK_VALUE_MASK = gl.STENCIL_BACK_VALUE_MASK,
    STENCIL_BACK_WRITEMASK = gl.STENCIL_BACK_WRITEMASK,
    STENCIL_BITS = gl.STENCIL_BITS,
    STENCIL_CLEAR_VALUE = gl.STENCIL_CLEAR_VALUE,
    STENCIL_FAIL = gl.STENCIL_FAIL,
    STENCIL_FUNC = gl.STENCIL_FUNC,
    STENCIL_PASS_DEPTH_FAIL = gl.STENCIL_PASS_DEPTH_FAIL,	
    STENCIL_PASS_DEPTH_PASS = gl.STENCIL_PASS_DEPTH_PASS,	
    STENCIL_REF = gl.STENCIL_REF,
    STENCIL_TEST = gl.STENCIL_TEST,	
    STENCIL_VALUE_MASK = gl.STENCIL_VALUE_MASK,	
    STENCIL_WRITEMASK = gl.STENCIL_WRITEMASK,
    SUBPIXEL_BITS = gl.SUBPIXEL_BITS,
    TEXTURE_BINDING_2D = gl.TEXTURE_BINDING_2D,	
    TEXTURE_BINDING_CUBE_MAP = gl.TEXTURE_BINDING_CUBE_MAP,	
    UNPACK_ALIGNMENT = gl.UNPACK_ALIGNMENT,
    UNPACK_COLORSPACE_CONVERSION_WEBGL = gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,
    UNPACK_FLIP_Y_WEBGL = gl.UNPACK_FLIP_Y_WEBGL,
    UNPACK_PREMULTIPLY_ALPHA_WEBGL = gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
    VENDOR = gl.VENDOR,
    VERSION = gl.VERSION,
    VIEWPORT = gl.VIEWPORT,
    COPY_READ_BUFFER_BINDING = gl.COPY_READ_BUFFER_BINDING,
    COPY_WRITE_BUFFER_BINDING = gl.COPY_WRITE_BUFFER_BINDING,
    DRAW_FRAMEBUFFER_BINDING = gl.DRAW_FRAMEBUFFER_BINDING,
    FRAGMENT_SHADER_DERIVATIVE_HINT = gl.FRAGMENT_SHADER_DERIVATIVE_HINT,
    MAX_3D_TEXTURE_SIZE = gl.MAX_3D_TEXTURE_SIZE,
    MAX_ARRAY_TEXTURE_LAYERS = gl.MAX_ARRAY_TEXTURE_LAYERS,
    MAX_CLIENT_WAIT_TIMEOUT_WEBGL = gl.MAX_CLIENT_WAIT_TIMEOUT_WEBGL,
    MAX_COLOR_ATTACHMENTS = gl.MAX_COLOR_ATTACHMENTS,
    MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = gl.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS,
    MAX_COMBINED_UNIFORM_BLOCKS = gl.MAX_COMBINED_UNIFORM_BLOCKS,
    MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = gl.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS,
    MAX_DRAW_BUFFERS = gl.MAX_DRAW_BUFFERS,
    MAX_ELEMENT_INDEX = gl.MAX_ELEMENT_INDEX,
    MAX_ELEMENTS_INDICES = gl.MAX_ELEMENTS_INDICES,
    MAX_ELEMENTS_VERTICES = gl.MAX_ELEMENTS_VERTICES,	
    MAX_FRAGMENT_INPUT_COMPONENTS = gl.MAX_FRAGMENT_INPUT_COMPONENTS,
    MAX_FRAGMENT_UNIFORM_BLOCKS = gl.MAX_FRAGMENT_UNIFORM_BLOCKS,
    MAX_FRAGMENT_UNIFORM_COMPONENTS = gl.MAX_FRAGMENT_UNIFORM_COMPONENTS,
    MAX_PROGRAM_TEXEL_OFFSET = gl.MAX_PROGRAM_TEXEL_OFFSET,
    MAX_SAMPLES = gl.MAX_SAMPLES,
    MAX_SERVER_WAIT_TIMEOUT = gl.MAX_SERVER_WAIT_TIMEOUT,
    MAX_TEXTURE_LOD_BIAS = gl.MAX_TEXTURE_LOD_BIAS,
    MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = gl.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS,
    MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = gl.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS,
    MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = gl.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS,	
    MAX_UNIFORM_BLOCK_SIZE = gl.MAX_UNIFORM_BLOCK_SIZE,
    MAX_UNIFORM_BUFFER_BINDINGS = gl.MAX_UNIFORM_BUFFER_BINDINGS,
    MAX_VARYING_COMPONENTS = gl.MAX_VARYING_COMPONENTS,
    MAX_VERTEX_OUTPUT_COMPONENTS = gl.MAX_VERTEX_OUTPUT_COMPONENTS,
    MAX_VERTEX_UNIFORM_BLOCKS = gl.MAX_VERTEX_UNIFORM_BLOCKS,
    MAX_VERTEX_UNIFORM_COMPONENTS = gl.MAX_VERTEX_UNIFORM_COMPONENTS,
    MIN_PROGRAM_TEXEL_OFFSET = gl.MIN_PROGRAM_TEXEL_OFFSET,
    PACK_ROW_LENGTH = gl.PACK_ROW_LENGTH,
    PACK_SKIP_PIXELS = gl.PACK_SKIP_PIXELS,
    PACK_SKIP_ROWS = gl.PACK_SKIP_ROWS,
    PIXEL_PACK_BUFFER_BINDING = gl.PIXEL_PACK_BUFFER_BINDING,
    PIXEL_UNPACK_BUFFER_BINDING = gl.PIXEL_UNPACK_BUFFER_BINDING,
    RASTERIZER_DISCARD = gl.RASTERIZER_DISCARD,
    READ_BUFFER = gl.READ_BUFFER,
    READ_FRAMEBUFFER_BINDING = gl.READ_FRAMEBUFFER_BINDING,
    SAMPLE_ALPHA_TO_COVERAGE = gl.SAMPLE_ALPHA_TO_COVERAGE,
    SAMPLE_COVERAGE = gl.SAMPLE_COVERAGE,
    SAMPLER_BINDING = gl.SAMPLER_BINDING,
    TEXTURE_BINDING_2D_ARRAY = gl.TEXTURE_BINDING_2D_ARRAY,
    TEXTURE_BINDING_3D = gl.TEXTURE_BINDING_3D,
    TRANSFORM_FEEDBACK_ACTIVE = gl.TRANSFORM_FEEDBACK_ACTIVE,
    TRANSFORM_FEEDBACK_BINDING = gl.TRANSFORM_FEEDBACK_BINDING,
    TRANSFORM_FEEDBACK_BUFFER_BINDING = gl.TRANSFORM_FEEDBACK_BUFFER_BINDING,
    TRANSFORM_FEEDBACK_PAUSED = gl.TRANSFORM_FEEDBACK_PAUSED,
    UNIFORM_BUFFER_BINDING = gl.UNIFORM_BUFFER_BINDING,
    UNIFORM_BUFFER_OFFSET_ALIGNMENT = gl.UNIFORM_BUFFER_OFFSET_ALIGNMENT,
    UNPACK_IMAGE_HEIGHT = gl.UNPACK_IMAGE_HEIGHT,
    UNPACK_ROW_LENGTH = gl.UNPACK_ROW_LENGTH,
    UNPACK_SKIP_IMAGES = gl.UNPACK_SKIP_IMAGES,
    UNPACK_SKIP_PIXELS = gl.UNPACK_SKIP_PIXELS,
    UNPACK_SKIP_ROWS = gl.UNPACK_SKIP_ROWS,
    VERTEX_ARRAY_BINDING = gl.VERTEX_ARRAY_BINDING
}

enum PixelFormat {
    ALPHA = gl.ALPHA,
    LUMINANCE = gl.LUMINANCE,	 
    LUMINANCE_ALPHA = gl.LUMINANCE_ALPHA,
    RGB	= gl.RGB,	 
    RGBA = gl.RGBA,
    RGBA4 = gl.RGBA4,
    RGB565 = gl.RGB565,
    RGB5_A1 = gl.RGB5_A1,
    DEPTH_COMPONENT = gl.DEPTH_COMPONENT,
    DEPTH_STENCIL = gl.DEPTH_STENCIL,
    STENCIL_INDEX8 = gl.STENCIL_INDEX8,
    R8 = gl.R8,
    R8UI = gl.R8UI,
    R8I = gl.R8I,
    R16UI = gl.R16UI,
    R16I = gl.R16I,
    R32UI = gl.R32UI,
    R32I = gl.R32I,
    RG8 = gl.RG8,
    RG8UI = gl.RG8UI,
    RG8I = gl.RG8I,
    RG16UI = gl.RG16UI,
    RG16I = gl.RG16I,
    RG32UI = gl.RG32UI,
    RG32I = gl.RG32I,
    RGB8 = gl.RGB8,
    RGBA8 = gl.RGBA8,
    SRGB8_ALPHA8 = gl.SRGB8_ALPHA8,
    RGB10_A2 = gl.RGB10_A2,
    RGBA8UI = gl.RGBA8UI,
    RGBA8I = gl.RGBA8I,
    RGB10_A2UI = gl.RGB10_A2UI,
    RGBA16UI = gl.RGBA16UI,
    RGBA16I = gl.RGBA16I,
    RGBA32I = gl.RGBA32I,
    RGBA32UI = gl.RGBA32UI,
    DEPTH_COMPONENT24 = gl.DEPTH_COMPONENT24,
    DEPTH_COMPONENT32F = gl.DEPTH_COMPONENT32F,
    DEPTH24_STENCIL8 = gl.DEPTH24_STENCIL8,
    DEPTH32F_STENCIL8 = gl.DEPTH32F_STENCIL8
}

enum PixelStorageMode {
    UNPACK_FLIP_Y_WEBGL = gl.UNPACK_FLIP_Y_WEBGL,
    UNPACK_PREMULTIPLY_ALPHA_WEBGL = gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
    UNPACK_COLORSPACE_CONVERSION_WEBGL = gl.UNPACK_COLORSPACE_CONVERSION_WEBGL
}

enum PixelType {
    BYTE = gl.BYTE,
    FLOAT = gl.FLOAT,
    FLOAT_32_UNSIGNED_INT_24_8_REV = gl.FLOAT_32_UNSIGNED_INT_24_8_REV,
    HALF_FLOAT = gl.HALF_FLOAT,
    INT = gl.INT,  
    SHORT = gl.SHORT,
    UNSIGNED_BYTE = gl.UNSIGNED_BYTE,
    UNSIGNED_INT = gl.UNSIGNED_INT,
    UNSIGNED_INT_2_10_10_10_REV = gl.UNSIGNED_INT_2_10_10_10_REV,
    UNSIGNED_INT_10F_11F_11F_REV = gl.UNSIGNED_INT_10F_11F_11F_REV,
    UNSIGNED_INT_5_9_9_9_REV = gl.UNSIGNED_INT_5_9_9_9_REV,
    UNSIGNED_INT_24_8 = gl.UNSIGNED_INT_24_8,
    UNSIGNED_SHORT = gl.UNSIGNED_SHORT,
    UNSIGNED_SHORT_5_6_5 = gl.UNSIGNED_SHORT_5_6_5,
    UNSIGNED_SHORT_4_4_4_4 = gl.UNSIGNED_SHORT_4_4_4_4,
    UNSIGNED_SHORT_5_5_5_1 = gl.UNSIGNED_SHORT_5_5_5_1
}

enum RenderbufferTarget {
    RENDERBUFFER = gl.RENDERBUFFER
}

enum Shader {
    FRAGMENT_SHADER = gl.FRAGMENT_SHADER,
    VERTEX_SHADER = gl.VERTEX_SHADER,
    COMPILE_STATUS = gl.COMPILE_STATUS,
    DELETE_STATUS = gl.DELETE_STATUS,
    LINK_STATUS = gl.LINK_STATUS,
    VALIDATE_STATUS = gl.VALIDATE_STATUS,
    ATTACHED_SHADERS = gl.ATTACHED_SHADERS,
    ACTIVE_ATTRIBUTES = gl.ACTIVE_ATTRIBUTES,
    ACTIVE_UNIFORMS = gl.ACTIVE_UNIFORMS,
    MAX_VERTEX_ATTRIBS = gl.MAX_VERTEX_ATTRIBS,
    MAX_VERTEX_UNIFORM_VECTORS = gl.MAX_VERTEX_UNIFORM_VECTORS,
    MAX_VARYING_VECTORS = gl.MAX_VARYING_VECTORS,
    MAX_COMBINED_TEXTURE_IMAGE_UNITS = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS,
    MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS,
    MAX_TEXTURE_IMAGE_UNITS = gl.MAX_TEXTURE_IMAGE_UNITS,
    MAX_FRAGMENT_UNIFORM_VECTORS = gl.MAX_FRAGMENT_UNIFORM_VECTORS,
    SHADER_TYPE = gl.SHADER_TYPE,
    SHADING_LANGUAGE_VERSION = gl.SHADING_LANGUAGE_VERSION,
    CURRENT_PROGRAM = gl.CURRENT_PROGRAM
}

enum ShaderType {
    FRAGMENT_SHADER = gl.FRAGMENT_SHADER,
    VERTEX_SHADER = gl.VERTEX_SHADER,
}

enum ShaderPrecision {
    LOW_FLOAT = gl.LOW_FLOAT,	 
    MEDIUM_FLOAT = gl.MEDIUM_FLOAT,	 
    HIGH_FLOAT = gl.HIGH_FLOAT,	 
    LOW_INT = gl.LOW_INT,	 
    MEDIUM_INT = gl.MEDIUM_INT,	 
    HIGH_INT = gl.HIGH_INT
}

enum StencilAction {
    KEEP = gl.KEEP,	 
    REPLACE	= gl.REPLACE,	 
    INCR = gl.INCR,	 
    DECR = gl.DECR,	 
    INVERT = gl.INVERT,	 
    INCR_WRAP = gl.INCR_WRAP,	 
    DECR_WRAP = gl.DECR_WRAP
}

enum TestFunction {
    NEVER = gl.NEVER,
    LESS = gl.LESS,
    EQUAL = gl.EQUAL,
    LEQUAL = gl.LEQUAL,
    GREATER = gl.GREATER,
    NOTEQUAL = gl.NOTEQUAL,
    GEQUAL = gl.GEQUAL,
    ALWAYS = gl.ALWAYS
}

enum TextureUnits {
    TEXTURE = gl.TEXTURE,
    TEXTURE0 = gl.TEXTURE0,
}

enum TextureParameter {
    TEXTURE_MAG_FILTER = gl.TEXTURE_MAG_FILTER,
    TEXTURE_MIN_FILTER = gl.TEXTURE_MIN_FILTER,
    TEXTURE_WRAP_S = gl.TEXTURE_WRAP_S,
    TEXTURE_WRAP_T = gl.TEXTURE_WRAP_T,
    TEXTURE_BASE_LEVEL = gl.TEXTURE_BASE_LEVEL,
    TEXTURE_MAX_LEVEL = gl.TEXTURE_MAX_LEVEL,
    TEXTURE_MAX_LOD = gl.TEXTURE_MAX_LOD,
    TEXTURE_MIN_LOD = gl.TEXTURE_MIN_LOD,
    TEXTURE_WRAP_R = gl.TEXTURE_WRAP_R
}

enum TextureTarget {
    TEXTURE_2D = gl.TEXTURE_2D,
    TEXTURE_CUBE_MAP = gl.TEXTURE_CUBE_MAP,
    TEXTURE_3D = gl.TEXTURE_3D,
    TEXTURE_2D_ARRAY = gl.TEXTURE_2D_ARRAY,
    TEXTURE_CUBE_MAP_POSITIVE_X = gl.TEXTURE_CUBE_MAP_POSITIVE_X,
    TEXTURE_CUBE_MAP_NEGATIVE_X = gl.TEXTURE_CUBE_MAP_NEGATIVE_X,
    TEXTURE_CUBE_MAP_POSITIVE_Y = gl.TEXTURE_CUBE_MAP_POSITIVE_Y,
    TEXTURE_CUBE_MAP_NEGATIVE_Y = gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,
    TEXTURE_CUBE_MAP_POSITIVE_Z = gl.TEXTURE_CUBE_MAP_POSITIVE_Z,
    TEXTURE_CUBE_MAP_NEGATIVE_Z = gl.TEXTURE_CUBE_MAP_NEGATIVE_Z
}

enum TextureMagFilter {
    LINEAR = gl.LINEAR,
    NEAREST = gl.NEAREST
}

enum TextureMinFilter {
    LINEAR = gl.LINEAR,
    NEAREST = gl.NEAREST,
    NEAREST_MIPMAP_NEAREST = gl.NEAREST_MIPMAP_NEAREST, 
    LINEAR_MIPMAP_NEAREST = gl.LINEAR_MIPMAP_NEAREST, 
    NEAREST_MIPMAP_LINEAR = gl.NEAREST_MIPMAP_LINEAR,
    LINEAR_MIPMAP_LINEAR = gl.LINEAR_MIPMAP_LINEAR
}

enum TextureWrapMode {
    REPEAT = gl.REPEAT,
    CLAMP_TO_EDGE = gl.CLAMP_TO_EDGE, 
    MIRRORED_REPEAT = gl.MIRRORED_REPEAT
}

enum UniformQuery {
    UNIFORM_TYPE = gl.UNIFORM_TYPE,
    UNIFORM_SIZE = gl.UNIFORM_SIZE,
    UNIFORM_BLOCK_INDEX = gl.UNIFORM_BLOCK_INDEX,
    UNIFORM_OFFSET = gl.UNIFORM_OFFSET,
    UNIFORM_ARRAY_STRIDE = gl.UNIFORM_ARRAY_STRIDE,
    UNIFORM_MATRIX_STRIDE = gl.UNIFORM_MATRIX_STRIDE,
    UNIFORM_IS_ROW_MAJOR = gl.UNIFORM_IS_ROW_MAJOR
}

enum UniformType {
    BOOL = gl.BOOL,	 
    BOOL_VEC2 = gl.BOOL_VEC2,	 
    BOOL_VEC3 = gl.BOOL_VEC3,	 
    BOOL_VEC4 = gl.BOOL_VEC4,
    INT = gl.INT,
    INT_VEC2 = gl.INT_VEC2,	 
    INT_VEC3 = gl.INT_VEC3,	 
    INT_VEC4 = gl.INT_VEC4,	 
    INT_SAMPLER_2D = gl.INT_SAMPLER_2D,
    INT_SAMPLER_3D = gl.INT_SAMPLER_3D,
    INT_SAMPLER_CUBE = gl.INT_SAMPLER_CUBE,
    INT_SAMPLER_2D_ARRAY = gl.INT_SAMPLER_2D_ARRAY,
    UNSIGNED_INT_SAMPLER_2D = gl.UNSIGNED_INT_SAMPLER_2D,
    UNSIGNED_INT_SAMPLER_3D = gl.UNSIGNED_INT_SAMPLER_3D,
    UNSIGNED_INT_SAMPLER_CUBE = gl.UNSIGNED_INT_SAMPLER_CUBE,
    UNSIGNED_INT_SAMPLER_2D_ARRAY = gl.UNSIGNED_INT_SAMPLER_2D_ARRAY,
    UNSIGNED_INT = gl.UNSIGNED_INT,
    UNSIGNED_INT_VEC2 = gl.UNSIGNED_INT_VEC2,
    UNSIGNED_INT_VEC3 = gl.UNSIGNED_INT_VEC3,
    UNSIGNED_INT_VEC4 = gl.UNSIGNED_INT_VEC4,
    FLOAT = gl.FLOAT,
    FLOAT_VEC2 = gl.FLOAT_VEC2,	 
    FLOAT_VEC3 = gl.FLOAT_VEC3,	 
    FLOAT_VEC4 = gl.FLOAT_VEC4,
    FLOAT_MAT2 = gl.FLOAT_MAT2,	 
    FLOAT_MAT3 = gl.FLOAT_MAT3,	 
    FLOAT_MAT4 = gl.FLOAT_MAT4,	 
    FLOAT_MAT2x3 = gl.FLOAT_MAT2x3,
    FLOAT_MAT2x4 = gl.FLOAT_MAT2x4,
    FLOAT_MAT3x2 = gl.FLOAT_MAT3x2,
    FLOAT_MAT3x4 = gl.FLOAT_MAT3x4,
    FLOAT_MAT4x2 = gl.FLOAT_MAT4x2,
    FLOAT_MAT4x3 = gl.FLOAT_MAT4x3,
    SAMPLER_2D = gl.SAMPLER_2D,	 
    SAMPLER_3D = gl.SAMPLER_3D,
    SAMPLER_CUBE = gl.SAMPLER_CUBE,
    SAMPLER_2D_SHADOW = gl.SAMPLER_2D_SHADOW,
    SAMPLER_2D_ARRAY = gl.SAMPLER_2D_ARRAY,
    SAMPLER_2D_ARRAY_SHADOW = gl.SAMPLER_2D_ARRAY_SHADOW,
    SAMPLER_CUBE_SHADOW = gl.SAMPLER_CUBE_SHADOW
}

enum VertexAttribute {
    CURRENT_VERTEX_ATTRIB = gl.CURRENT_VERTEX_ATTRIB,
    VERTEX_ATTRIB_ARRAY_ENABLED = gl.VERTEX_ATTRIB_ARRAY_ENABLED,	 
    VERTEX_ATTRIB_ARRAY_SIZE = gl.VERTEX_ATTRIB_ARRAY_SIZE,
    VERTEX_ATTRIB_ARRAY_STRIDE = gl.VERTEX_ATTRIB_ARRAY_STRIDE,
    VERTEX_ATTRIB_ARRAY_TYPE = gl.VERTEX_ATTRIB_ARRAY_TYPE,
    VERTEX_ATTRIB_ARRAY_NORMALIZED = gl.VERTEX_ATTRIB_ARRAY_NORMALIZED,
    VERTEX_ATTRIB_ARRAY_POINTER = gl.VERTEX_ATTRIB_ARRAY_POINTER,
    VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
}